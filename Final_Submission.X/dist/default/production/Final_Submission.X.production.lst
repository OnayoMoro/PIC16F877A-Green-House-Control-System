

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 18 17:27:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F877A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  0088                     	;# 
   143  0089                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0088                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010E                     	;# 
   580  010F                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583                           
   584                           	psect	idataBANK0
   585  1D4C                     __pidataBANK0:	
   586                           
   587                           ;initializer for _table
   588  1D4C  3455               	retlw	85
   589  1D4D  3429               	retlw	41
   590  1D4E  3408               	retlw	8
   591  1D4F  3427               	retlw	39
   592  1D50  3402               	retlw	2
   593  1D51  3407               	retlw	7
   594  1D52  3422               	retlw	34
   595  1D53  3400               	retlw	0
   596                           
   597                           ;initializer for _night_ten_min
   598  1D54  3402               	retlw	2
   599                           
   600                           ;initializer for _night_one_max
   601  1D55  3401               	retlw	1
   602                           
   603                           ;initializer for _night_ten_max
   604  1D56  3402               	retlw	2
   605                           
   606                           ;initializer for _day_dec_min
   607  1D57  3405               	retlw	5
   608                           
   609                           ;initializer for _day_one_min
   610  1D58  3404               	retlw	4
   611                           
   612                           ;initializer for _day_ten_min
   613  1D59  3402               	retlw	2
   614                           
   615                           ;initializer for _day_dec_max
   616  1D5A  3405               	retlw	5
   617                           
   618                           ;initializer for _day_one_max
   619  1D5B  3405               	retlw	5
   620                           
   621                           ;initializer for _day_ten_max
   622  1D5C  3402               	retlw	2
   623                           
   624                           	psect	idataBANK1
   625  1D10                     __pidataBANK1:	
   626                           
   627                           ;initializer for _table2
   628  1D10  3430               	retlw	48
   629  1D11  3431               	retlw	49
   630  1D12  3432               	retlw	50
   631  1D13  3433               	retlw	51
   632  1D14  3434               	retlw	52
   633  1D15  3435               	retlw	53
   634  1D16  3436               	retlw	54
   635  1D17  3437               	retlw	55
   636  1D18  3438               	retlw	56
   637  1D19  3439               	retlw	57
   638  0009                     _PORTE	set	9
   639  0007                     _PORTCbits	set	7
   640  0007                     _PORTC	set	7
   641  0008                     _PORTD	set	8
   642  004A                     _RE2	set	74
   643  0048                     _RE0	set	72
   644  0034                     _RB4	set	52
   645  0035                     _RB5	set	53
   646  0030                     _RB0	set	48
   647  002A                     _RA2	set	42
   648  002B                     _RA3	set	43
   649  002C                     _RA4	set	44
   650  002D                     _RA5	set	45
   651  0089                     _TRISE	set	137
   652  0081                     _OPTION_REG	set	129
   653  0086                     _TRISB	set	134
   654  0087                     _TRISC	set	135
   655  0088                     _TRISD	set	136
   656  0085                     _TRISA	set	133
   657  009F                     _ADCON1	set	159
   658  0448                     _TRISE0	set	1096
   659  0434                     _TRISB4	set	1076
   660                           
   661                           	psect	strings
   662  1800                     __pstrings:	
   663  1800                     stringtab:	
   664  1800                     __stringtab:	
   665                           
   666                           ;	String table - string pointers are 2 bytes each
   667  1800  1BFF               	btfsc	btemp+1,7
   668  1801  280A               	ljmp	stringcode
   669  1802  1383               	bcf	3,7
   670  1803  187F               	btfsc	btemp+1,0
   671  1804  1783               	bsf	3,7
   672  1805  0800               	movf	0,w
   673  1806  0A84               	incf	4,f
   674  1807  1903               	skipnz
   675  1808  0AFF               	incf	btemp+1,f
   676  1809  0008               	return
   677  180A                     stringcode:	
   678  180A  087F               	movf	btemp+1,w
   679  180B  397F               	andlw	127
   680  180C  008A               	movwf	10
   681  180D  0804               	movf	4,w
   682  180E  0A84               	incf	4,f
   683  180F  1903               	skipnz
   684  1810  0AFF               	incf	btemp+1,f
   685  1811  0082               	movwf	2
   686  1812                     __stringbase:	
   687  1812                     __end_of__stringtab:	
   688                           
   689                           	psect	stringtext
   690  1000                     __pstringtext:	
   691  1000                     STR_22:	
   692  1000  3420               	retlw	32	;' '
   693  1001  3420               	retlw	32	;' '
   694  1002  3420               	retlw	32	;' '
   695  1003  3420               	retlw	32	;' '
   696  1004  3420               	retlw	32	;' '
   697  1005  3420               	retlw	32	;' '
   698  1006  3420               	retlw	32	;' '
   699  1007  3420               	retlw	32	;' '
   700  1008  3420               	retlw	32	;' '
   701  1009  3420               	retlw	32	;' '
   702  100A  3420               	retlw	32	;' '
   703  100B  3420               	retlw	32	;' '
   704  100C  3420               	retlw	32	;' '
   705  100D  3420               	retlw	32	;' '
   706  100E  3420               	retlw	32	;' '
   707  100F  3420               	retlw	32	;' '
   708  1010  3400               	retlw	0
   709  1011                     STR_40:	
   710  1011  3454               	retlw	84	;'T'
   711  1012  3465               	retlw	101	;'e'
   712  1013  346D               	retlw	109	;'m'
   713  1014  3470               	retlw	112	;'p'
   714  1015  3420               	retlw	32	;' '
   715  1016  3454               	retlw	84	;'T'
   716  1017  3468               	retlw	104	;'h'
   717  1018  3472               	retlw	114	;'r'
   718  1019  3465               	retlw	101	;'e'
   719  101A  3473               	retlw	115	;'s'
   720  101B  3468               	retlw	104	;'h'
   721  101C  346F               	retlw	111	;'o'
   722  101D  346C               	retlw	108	;'l'
   723  101E  3464               	retlw	100	;'d'
   724  101F  3400               	retlw	0
   725  1020                     STR_58:	
   726  1020  344E               	retlw	78	;'N'
   727  1021  3469               	retlw	105	;'i'
   728  1022  3467               	retlw	103	;'g'
   729  1023  3468               	retlw	104	;'h'
   730  1024  3474               	retlw	116	;'t'
   731  1025  3420               	retlw	32	;' '
   732  1026  3453               	retlw	83	;'S'
   733  1027  3465               	retlw	101	;'e'
   734  1028  3474               	retlw	116	;'t'
   735  1029  3474               	retlw	116	;'t'
   736  102A  3469               	retlw	105	;'i'
   737  102B  346E               	retlw	110	;'n'
   738  102C  3467               	retlw	103	;'g'
   739  102D  3473               	retlw	115	;'s'
   740  102E  3400               	retlw	0
   741  102F                     STR_21:	
   742  102F  3443               	retlw	67	;'C'
   743  1030  3468               	retlw	104	;'h'
   744  1031  3461               	retlw	97	;'a'
   745  1032  346E               	retlw	110	;'n'
   746  1033  3467               	retlw	103	;'g'
   747  1034  3465               	retlw	101	;'e'
   748  1035  3420               	retlw	32	;' '
   749  1036  3474               	retlw	116	;'t'
   750  1037  3469               	retlw	105	;'i'
   751  1038  346D               	retlw	109	;'m'
   752  1039  3465               	retlw	101	;'e'
   753  103A  342E               	retlw	46	;'.'
   754  103B  342E               	retlw	46	;'.'
   755  103C  342E               	retlw	46	;'.'
   756  103D  3400               	retlw	0
   757  103E                     STR_31:	
   758  103E  3443               	retlw	67	;'C'
   759  103F  3468               	retlw	104	;'h'
   760  1040  3461               	retlw	97	;'a'
   761  1041  346E               	retlw	110	;'n'
   762  1042  3467               	retlw	103	;'g'
   763  1043  3465               	retlw	101	;'e'
   764  1044  3420               	retlw	32	;' '
   765  1045  3464               	retlw	100	;'d'
   766  1046  3461               	retlw	97	;'a'
   767  1047  3474               	retlw	116	;'t'
   768  1048  3465               	retlw	101	;'e'
   769  1049  342E               	retlw	46	;'.'
   770  104A  342E               	retlw	46	;'.'
   771  104B  342E               	retlw	46	;'.'
   772  104C  3400               	retlw	0
   773  104D                     STR_20:	
   774  104D  3454               	retlw	84	;'T'
   775  104E  3469               	retlw	105	;'i'
   776  104F  346D               	retlw	109	;'m'
   777  1050  3465               	retlw	101	;'e'
   778  1051  3420               	retlw	32	;' '
   779  1052  3453               	retlw	83	;'S'
   780  1053  3465               	retlw	101	;'e'
   781  1054  3474               	retlw	116	;'t'
   782  1055  3474               	retlw	116	;'t'
   783  1056  3469               	retlw	105	;'i'
   784  1057  346E               	retlw	110	;'n'
   785  1058  3467               	retlw	103	;'g'
   786  1059  3473               	retlw	115	;'s'
   787  105A  3400               	retlw	0
   788  105B                     STR_30:	
   789  105B  3444               	retlw	68	;'D'
   790  105C  3461               	retlw	97	;'a'
   791  105D  3474               	retlw	116	;'t'
   792  105E  3465               	retlw	101	;'e'
   793  105F  3420               	retlw	32	;' '
   794  1060  3453               	retlw	83	;'S'
   795  1061  3465               	retlw	101	;'e'
   796  1062  3474               	retlw	116	;'t'
   797  1063  3474               	retlw	116	;'t'
   798  1064  3469               	retlw	105	;'i'
   799  1065  346E               	retlw	110	;'n'
   800  1066  3467               	retlw	103	;'g'
   801  1067  3473               	retlw	115	;'s'
   802  1068  3400               	retlw	0
   803  1069                     STR_43:	
   804  1069  3444               	retlw	68	;'D'
   805  106A  3461               	retlw	97	;'a'
   806  106B  3479               	retlw	121	;'y'
   807  106C  3420               	retlw	32	;' '
   808  106D  3453               	retlw	83	;'S'
   809  106E  3465               	retlw	101	;'e'
   810  106F  3474               	retlw	116	;'t'
   811  1070  3474               	retlw	116	;'t'
   812  1071  3469               	retlw	105	;'i'
   813  1072  346E               	retlw	110	;'n'
   814  1073  3467               	retlw	103	;'g'
   815  1074  3473               	retlw	115	;'s'
   816  1075  3400               	retlw	0
   817  1076                     STR_29:	
   818  1076  3453               	retlw	83	;'S'
   819  1077  3465               	retlw	101	;'e'
   820  1078  3463               	retlw	99	;'c'
   821  1079  346F               	retlw	111	;'o'
   822  107A  346E               	retlw	110	;'n'
   823  107B  3464               	retlw	100	;'d'
   824  107C  3473               	retlw	115	;'s'
   825  107D  3400               	retlw	0
   826  107E                     STR_17:	
   827  107E  3457               	retlw	87	;'W'
   828  107F  3465               	retlw	101	;'e'
   829  1080  3465               	retlw	101	;'e'
   830  1081  346B               	retlw	107	;'k'
   831  1082  343A               	retlw	58	;':'
   832  1083  3420               	retlw	32	;' '
   833  1084  3400               	retlw	0
   834  1085                     STR_23:	
   835  1085  344D               	retlw	77	;'M'
   836  1086  3469               	retlw	105	;'i'
   837  1087  346E               	retlw	110	;'n'
   838  1088  3475               	retlw	117	;'u'
   839  1089  3474               	retlw	116	;'t'
   840  108A  3465               	retlw	101	;'e'
   841  108B  3400               	retlw	0
   842  108C                     STR_78:	
   843  108C  3444               	retlw	68	;'D'
   844  108D  3461               	retlw	97	;'a'
   845  108E  3479               	retlw	121	;'y'
   846  108F  3420               	retlw	32	;' '
   847  1090  3420               	retlw	32	;' '
   848  1091  3400               	retlw	0
   849  1092                     STR_74:	
   850  1092  3448               	retlw	72	;'H'
   851  1093  3465               	retlw	101	;'e'
   852  1094  3461               	retlw	97	;'a'
   853  1095  3474               	retlw	116	;'t'
   854  1096  3420               	retlw	32	;' '
   855  1097  3400               	retlw	0
   856  1098                     STR_37:	
   857  1098  3454               	retlw	84	;'T'
   858  1099  3465               	retlw	101	;'e'
   859  109A  346D               	retlw	109	;'m'
   860  109B  3470               	retlw	112	;'p'
   861  109C  343A               	retlw	58	;':'
   862  109D  3400               	retlw	0
   863  109E                     STR_42:	
   864  109E  344E               	retlw	78	;'N'
   865  109F  3469               	retlw	105	;'i'
   866  10A0  3467               	retlw	103	;'g'
   867  10A1  3468               	retlw	104	;'h'
   868  10A2  3474               	retlw	116	;'t'
   869  10A3  3400               	retlw	0
   870  10A4                     STR_12:	
   871  10A4  3454               	retlw	84	;'T'
   872  10A5  3469               	retlw	105	;'i'
   873  10A6  346D               	retlw	109	;'m'
   874  10A7  3465               	retlw	101	;'e'
   875  10A8  343A               	retlw	58	;':'
   876  10A9  3400               	retlw	0
   877  10AA                     STR_8:	
   878  10AA  3444               	retlw	68	;'D'
   879  10AB  3461               	retlw	97	;'a'
   880  10AC  3474               	retlw	116	;'t'
   881  10AD  3465               	retlw	101	;'e'
   882  10AE  343A               	retlw	58	;':'
   883  10AF  3400               	retlw	0
   884  10B0                     STR_11:	
   885  10B0  3457               	retlw	87	;'W'
   886  10B1  3465               	retlw	101	;'e'
   887  10B2  3465               	retlw	101	;'e'
   888  10B3  346B               	retlw	107	;'k'
   889  10B4  343A               	retlw	58	;':'
   890  10B5  3400               	retlw	0
   891  10B6                     STR_34:	
   892  10B6  344D               	retlw	77	;'M'
   893  10B7  346F               	retlw	111	;'o'
   894  10B8  346E               	retlw	110	;'n'
   895  10B9  3474               	retlw	116	;'t'
   896  10BA  3468               	retlw	104	;'h'
   897  10BB  3400               	retlw	0
   898  10BC                     STR_75:	
   899  10BC  344F               	retlw	79	;'O'
   900  10BD  344B               	retlw	75	;'K'
   901  10BE  3420               	retlw	32	;' '
   902  10BF  3420               	retlw	32	;' '
   903  10C0  3400               	retlw	0
   904  10C1                     STR_46:	
   905  10C1  344D               	retlw	77	;'M'
   906  10C2  3469               	retlw	105	;'i'
   907  10C3  346E               	retlw	110	;'n'
   908  10C4  343A               	retlw	58	;':'
   909  10C5  3400               	retlw	0
   910  10C6                     STR_44:	
   911  10C6  344D               	retlw	77	;'M'
   912  10C7  3461               	retlw	97	;'a'
   913  10C8  3478               	retlw	120	;'x'
   914  10C9  343A               	retlw	58	;':'
   915  10CA  3400               	retlw	0
   916  10CB                     STR_73:	
   917  10CB  3443               	retlw	67	;'C'
   918  10CC  346F               	retlw	111	;'o'
   919  10CD  346F               	retlw	111	;'o'
   920  10CE  346C               	retlw	108	;'l'
   921  10CF  3400               	retlw	0
   922  10D0                     STR_35:	
   923  10D0  3457               	retlw	87	;'W'
   924  10D1  3465               	retlw	101	;'e'
   925  10D2  3465               	retlw	101	;'e'
   926  10D3  346B               	retlw	107	;'k'
   927  10D4  3400               	retlw	0
   928  10D5                     STR_36:	
   929  10D5  3459               	retlw	89	;'Y'
   930  10D6  3465               	retlw	101	;'e'
   931  10D7  3461               	retlw	97	;'a'
   932  10D8  3472               	retlw	114	;'r'
   933  10D9  3400               	retlw	0
   934  10DA                     STR_25:	
   935  10DA  3448               	retlw	72	;'H'
   936  10DB  346F               	retlw	111	;'o'
   937  10DC  3475               	retlw	117	;'u'
   938  10DD  3472               	retlw	114	;'r'
   939  10DE  3400               	retlw	0
   940  10DF                     STR_3:	
   941  10DF  3457               	retlw	87	;'W'
   942  10E0  3465               	retlw	101	;'e'
   943  10E1  3464               	retlw	100	;'d'
   944  10E2  3400               	retlw	0
   945  10E3                     STR_2:	
   946  10E3  3454               	retlw	84	;'T'
   947  10E4  3475               	retlw	117	;'u'
   948  10E5  3465               	retlw	101	;'e'
   949  10E6  3400               	retlw	0
   950  10E7                     STR_5:	
   951  10E7  3446               	retlw	70	;'F'
   952  10E8  3472               	retlw	114	;'r'
   953  10E9  3469               	retlw	105	;'i'
   954  10EA  3400               	retlw	0
   955  10EB                     STR_1:	
   956  10EB  344D               	retlw	77	;'M'
   957  10EC  346F               	retlw	111	;'o'
   958  10ED  346E               	retlw	110	;'n'
   959  10EE  3400               	retlw	0
   960  10EF                     STR_7:	
   961  10EF  3453               	retlw	83	;'S'
   962  10F0  3475               	retlw	117	;'u'
   963  10F1  346E               	retlw	110	;'n'
   964  10F2  3400               	retlw	0
   965  10F3                     STR_6:	
   966  10F3  3453               	retlw	83	;'S'
   967  10F4  3461               	retlw	97	;'a'
   968  10F5  3474               	retlw	116	;'t'
   969  10F6  3400               	retlw	0
   970  10F7                     STR_4:	
   971  10F7  3454               	retlw	84	;'T'
   972  10F8  3468               	retlw	104	;'h'
   973  10F9  3475               	retlw	117	;'u'
   974  10FA  3400               	retlw	0
   975  10FB                     STR_33:	
   976  10FB  3444               	retlw	68	;'D'
   977  10FC  3461               	retlw	97	;'a'
   978  10FD  3479               	retlw	121	;'y'
   979  10FE  3400               	retlw	0
   980  10FF                     STR_15:	
   981  10FF  342F               	retlw	47	;'/'
   982  1100  3420               	retlw	32	;' '
   983  1101  3400               	retlw	0
   984  1102                     STR_39:	
   985  1102  3443               	retlw	67	;'C'
   986  1103  3400               	retlw	0
   987  1104                     STR_9:	
   988  1104  342F               	retlw	47	;'/'
   989  1105  3400               	retlw	0
   990  1006                     
   991                           ; #config settings
   992  0000                     
   993                           	psect	cinit
   994  07DB                     start_initialization:	
   995  07DB                     __initialization:	
   996                           
   997                           ; Initialize objects allocated to BANK1
   998  07DB  1383               	bcf	3,7	;select IRP bank0
   999  07DC  30AA               	movlw	low (__pdataBANK1+10)
  1000  07DD  00FD               	movwf	btemp+-1
  1001  07DE  301D               	movlw	high __pidataBANK1
  1002  07DF  00FE               	movwf	btemp
  1003  07E0  3010               	movlw	low __pidataBANK1
  1004  07E1  00FF               	movwf	btemp+1
  1005  07E2  30A0               	movlw	low __pdataBANK1
  1006  07E3  0084               	movwf	4
  1007  07E4  160A  158A  253F  120A  118A  	fcall	init_ram0
  1008                           
  1009                           ; Initialize objects allocated to BANK0
  1010  07E9  306E               	movlw	low (__pdataBANK0+17)
  1011  07EA  00FD               	movwf	btemp+-1
  1012  07EB  301D               	movlw	high __pidataBANK0
  1013  07EC  00FE               	movwf	btemp
  1014  07ED  304C               	movlw	low __pidataBANK0
  1015  07EE  00FF               	movwf	btemp+1
  1016  07EF  305D               	movlw	low __pdataBANK0
  1017  07F0  0084               	movwf	4
  1018  07F1  160A  158A  253F  120A  118A  	fcall	init_ram0
  1019                           
  1020                           ; Clear objects allocated to BANK0
  1021  07F6  3020               	movlw	low __pbssBANK0
  1022  07F7  0084               	movwf	4
  1023  07F8  3044               	movlw	low (__pbssBANK0+36)
  1024  07F9  160A  158A  2508   	fcall	clear_ram0
  1025  07FC                     end_of_initialization:	
  1026                           ;End of C runtime variable initialization code
  1027                           
  1028  07FC                     __end_of__initialization:	
  1029  07FC  0183               	clrf	3
  1030  07FD  120A  118A  286B   	ljmp	_main	;jump to C main() function
  1031                           
  1032                           	psect	bssBANK0
  1033  0020                     __pbssBANK0:	
  1034  0020                     _table1:	
  1035  0020                     	ds	7
  1036  0027                     _temp_dec:	
  1037  0027                     	ds	2
  1038  0029                     _temp_one:	
  1039  0029                     	ds	2
  1040  002B                     _temp_ten:	
  1041  002B                     	ds	2
  1042  002D                     _buzz_count:	
  1043  002D                     	ds	2
  1044  002F                     _wd:	
  1045  002F                     	ds	2
  1046  0031                     read_byte@j:	
  1047  0031                     	ds	1
  1048  0032                     _temp_sec:	
  1049  0032                     	ds	1
  1050  0033                     _temp_d:	
  1051  0033                     	ds	1
  1052  0034                     _temp_p:	
  1053  0034                     	ds	1
  1054  0035                     _pass:	
  1055  0035                     	ds	1
  1056  0036                     _night_dec_min:	
  1057  0036                     	ds	1
  1058  0037                     _night_one_min:	
  1059  0037                     	ds	1
  1060  0038                     _night_dec_max:	
  1061  0038                     	ds	1
  1062  0039                     _shifen:	
  1063  0039                     	ds	1
  1064  003A                     _ge:	
  1065  003A                     	ds	1
  1066  003B                     _shi:	
  1067  003B                     	ds	1
  1068  003C                     _TX:	
  1069  003C                     	ds	1
  1070  003D                     _TZ:	
  1071  003D                     	ds	1
  1072  003E                     _THV:	
  1073  003E                     	ds	1
  1074  003F                     _TLV:	
  1075  003F                     	ds	1
  1076  0040                     _wkd:	
  1077  0040                     	ds	1
  1078  0041                     _OutputRC:	
  1079  0041                     	ds	1
  1080  0042                     _FirstRC:	
  1081  0042                     	ds	1
  1082  0043                     _SecondRC:	
  1083  0043                     	ds	1
  1084                           
  1085                           	psect	dataBANK0
  1086  005D                     __pdataBANK0:	
  1087  005D                     _table:	
  1088  005D                     	ds	8
  1089  0065                     _night_ten_min:	
  1090  0065                     	ds	1
  1091  0066                     _night_one_max:	
  1092  0066                     	ds	1
  1093  0067                     _night_ten_max:	
  1094  0067                     	ds	1
  1095  0068                     _day_dec_min:	
  1096  0068                     	ds	1
  1097  0069                     _day_one_min:	
  1098  0069                     	ds	1
  1099  006A                     _day_ten_min:	
  1100  006A                     	ds	1
  1101  006B                     _day_dec_max:	
  1102  006B                     	ds	1
  1103  006C                     _day_one_max:	
  1104  006C                     	ds	1
  1105  006D                     _day_ten_max:	
  1106  006D                     	ds	1
  1107                           
  1108                           	psect	dataBANK1
  1109  00A0                     __pdataBANK1:	
  1110  00A0                     _table2:	
  1111  00A0                     	ds	10
  1112                           
  1113                           	psect	inittext
  1114  1D3B                     init_fetch0:	
  1115                           ;	Called with low address in FSR and high address in W
  1116                           
  1117  1D3B  087E               	movf	126,w
  1118  1D3C  008A               	movwf	10
  1119  1D3D  087F               	movf	127,w
  1120  1D3E  0082               	movwf	2
  1121  1D3F                     init_ram0:	
  1122                           ;Called with:
  1123                           ;	high address of idata address in btemp 
  1124                           ;	low address of idata address in btemp+1 
  1125                           ;	low address of data in FSR
  1126                           ;	high address + 1 of data in btemp-1
  1127                           
  1128  1D3F  253B  160A  158A   	fcall	init_fetch0
  1129  1D42  0080               	movwf	0
  1130  1D43  0A84               	incf	4,f
  1131  1D44  0804               	movf	4,w
  1132  1D45  067D               	xorwf	125,w
  1133  1D46  1903               	btfsc	3,2
  1134  1D47  3400               	retlw	0
  1135  1D48  0AFF               	incf	127,f
  1136  1D49  1903               	btfsc	3,2
  1137  1D4A  0AFE               	incf	126,f
  1138  1D4B  2D3F               	goto	init_ram0
  1139                           
  1140                           	psect	clrtext
  1141  1D08                     clear_ram0:	
  1142                           ;	Called with FSR containing the base address, and
  1143                           ;	W with the last address+1
  1144                           
  1145  1D08  0064               	clrwdt	;clear the watchdog before getting into this loop
  1146  1D09                     clrloop0:	
  1147  1D09  0180               	clrf	0	;clear RAM location pointed to by FSR
  1148  1D0A  0A84               	incf	4,f	;increment pointer
  1149  1D0B  0604               	xorwf	4,w	;XOR with final address
  1150  1D0C  1903               	btfsc	3,2	;have we reached the end yet?
  1151  1D0D  3400               	retlw	0	;all done for this memory range, return
  1152  1D0E  0604               	xorwf	4,w	;XOR again to restore value
  1153  1D0F  2D09               	goto	clrloop0	;do the next byte
  1154                           
  1155                           	psect	cstackCOMMON
  1156  0070                     __pcstackCOMMON:	
  1157  0070                     ?_writechar:	
  1158  0070                     ?_InputPins:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_time_write_1:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_time_write_1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_time_read_1:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_time_read_1:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_delay_main:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_delay_main:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_set_day:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_set_night:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_temp_increment:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_temp_decrement:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_cool:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_heat:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_OK:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_temp_check_lower:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_temp_check_rise:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_delay_lcd:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ??_delay_lcd:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_writecmd_4line:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_lcd_init:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_initialisation:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_initialisation:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_OutputPins:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_button_reset:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ??_button_reset:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_ds1302_init:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_set_time_date:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_get_time:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_port_init:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ??_port_init:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_display_clock:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_clock_init:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_start_date:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_start_time:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_clock_setting:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_date_setting:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_buzzer_init:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ??_buzzer_init:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_delay_temp:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_display_temp:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_write_byte:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_read_byte:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_get_temp:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_temp_setting:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_temp_day:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_temp_night:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_main:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?___bmul:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?___lbdiv:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?___lbmod:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_reset:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?___wmul:	
  1312                           ; 2 bytes @ 0x0
  1313                           
  1314  0070                     ?___lwdiv:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317  0070                     delay_temp@y:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0070                     ___bmul@multiplicand:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ___lbdiv@divisor:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ___lbmod@divisor:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     delay_lcd@i:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     InputPins@RC:	
  1333                           ; 2 bytes @ 0x0
  1334                           
  1335  0070                     delay_main@i:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338  0070                     ___wmul@multiplier:	
  1339                           ; 2 bytes @ 0x0
  1340                           
  1341  0070                     ___lwdiv@divisor:	
  1342                           ; 2 bytes @ 0x0
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x0
  1346  0070                     	ds	1
  1347  0071                     ??_delay_temp:	
  1348  0071                     ??___bmul:	
  1349                           ; 1 bytes @ 0x1
  1350                           
  1351  0071                     ??___lbdiv:	
  1352                           ; 1 bytes @ 0x1
  1353                           
  1354  0071                     ??___lbmod:	
  1355                           ; 1 bytes @ 0x1
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x1
  1359  0071                     	ds	1
  1360  0072                     ??_writechar:	
  1361  0072                     ??_InputPins:	
  1362                           ; 1 bytes @ 0x2
  1363                           
  1364  0072                     ??_temp_increment:	
  1365                           ; 1 bytes @ 0x2
  1366                           
  1367  0072                     ??_temp_decrement:	
  1368                           ; 1 bytes @ 0x2
  1369                           
  1370  0072                     ??_writecmd_4line:	
  1371                           ; 1 bytes @ 0x2
  1372                           
  1373  0072                     writechar@x:	
  1374                           ; 1 bytes @ 0x2
  1375                           
  1376  0072                     writecmd_4line@x:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379  0072                     delay_temp@x:	
  1380                           ; 1 bytes @ 0x2
  1381                           
  1382  0072                     ___bmul@product:	
  1383                           ; 1 bytes @ 0x2
  1384                           
  1385  0072                     ___lbdiv@dividend:	
  1386                           ; 1 bytes @ 0x2
  1387                           
  1388  0072                     time_write_1@j:	
  1389                           ; 1 bytes @ 0x2
  1390                           
  1391  0072                     time_read_1@j:	
  1392                           ; 2 bytes @ 0x2
  1393                           
  1394  0072                     temp_decrement@end:	
  1395                           ; 2 bytes @ 0x2
  1396                           
  1397  0072                     ___wmul@multiplicand:	
  1398                           ; 2 bytes @ 0x2
  1399                           
  1400  0072                     ___lwdiv@dividend:	
  1401                           ; 2 bytes @ 0x2
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0x2
  1405  0072                     	ds	1
  1406  0073                     ?_display_val:	
  1407  0073                     ?_write_str:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410  0073                     ??_lcd_init:	
  1411                           ; 1 bytes @ 0x3
  1412                           
  1413  0073                     ??_OutputPins:	
  1414                           ; 1 bytes @ 0x3
  1415                           
  1416  0073                     delay_temp@z:	
  1417                           ; 1 bytes @ 0x3
  1418                           
  1419  0073                     ___bmul@multiplier:	
  1420                           ; 1 bytes @ 0x3
  1421                           
  1422  0073                     ___lbdiv@counter:	
  1423                           ; 1 bytes @ 0x3
  1424                           
  1425  0073                     write_str@array:	
  1426                           ; 1 bytes @ 0x3
  1427                           
  1428  0073                     display_val@i:	
  1429                           ; 2 bytes @ 0x3
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x3
  1433  0073                     	ds	1
  1434  0074                     ??_temp_check_lower:	
  1435  0074                     ??_temp_check_rise:	
  1436                           ; 1 bytes @ 0x4
  1437                           
  1438  0074                     ??_reset:	
  1439                           ; 1 bytes @ 0x4
  1440                           
  1441  0074                     ??_write_byte:	
  1442                           ; 1 bytes @ 0x4
  1443                           
  1444  0074                     ??_read_byte:	
  1445                           ; 1 bytes @ 0x4
  1446                           
  1447  0074                     ??___wmul:	
  1448                           ; 1 bytes @ 0x4
  1449                           
  1450  0074                     ??___lwdiv:	
  1451                           ; 1 bytes @ 0x4
  1452                           
  1453  0074                     time_write_1@time_tx:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456  0074                     time_read_1@time_rx:	
  1457                           ; 1 bytes @ 0x4
  1458                           
  1459  0074                     ___lbdiv@quotient:	
  1460                           ; 1 bytes @ 0x4
  1461                           
  1462  0074                     ___lbmod@dividend:	
  1463                           ; 1 bytes @ 0x4
  1464                           
  1465  0074                     ___wmul@product:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x4
  1470  0074                     	ds	1
  1471  0075                     ??_display_val:	
  1472  0075                     ??_write_str:	
  1473                           ; 1 bytes @ 0x5
  1474                           
  1475  0075                     ??_ds1302_init:	
  1476                           ; 1 bytes @ 0x5
  1477                           
  1478  0075                     ??_set_time_date:	
  1479                           ; 1 bytes @ 0x5
  1480                           
  1481  0075                     ??_get_time:	
  1482                           ; 1 bytes @ 0x5
  1483                           
  1484  0075                     reset@presence:	
  1485                           ; 1 bytes @ 0x5
  1486                           
  1487  0075                     read_byte@value:	
  1488                           ; 1 bytes @ 0x5
  1489                           
  1490  0075                     ___lbmod@counter:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     set_time_date@i:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496  0075                     ___lwdiv@quotient:	
  1497                           ; 2 bytes @ 0x5
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x5
  1501  0075                     	ds	1
  1502  0076                     write_byte@temp:	
  1503  0076                     read_byte@i:	
  1504                           ; 1 bytes @ 0x6
  1505                           
  1506  0076                     ___lbmod@rem:	
  1507                           ; 1 bytes @ 0x6
  1508                           
  1509  0076                     get_time@i:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x6
  1514  0076                     	ds	1
  1515  0077                     ??_clock_init:	
  1516  0077                     write_byte@val:	
  1517                           ; 1 bytes @ 0x7
  1518                           
  1519  0077                     ___lwdiv@counter:	
  1520                           ; 1 bytes @ 0x7
  1521                           
  1522  0077                     display_val@t:	
  1523                           ; 1 bytes @ 0x7
  1524                           
  1525                           
  1526                           ; 2 bytes @ 0x7
  1527  0077                     	ds	1
  1528  0078                     write_byte@i:	
  1529  0078                     temp_check_lower@temp_e:	
  1530                           ; 1 bytes @ 0x8
  1531                           
  1532  0078                     temp_check_rise@temp_e:	
  1533                           ; 1 bytes @ 0x8
  1534                           
  1535  0078                     write_str@p:	
  1536                           ; 1 bytes @ 0x8
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x8
  1540  0078                     	ds	1
  1541  0079                     ??_T:	
  1542                           
  1543                           ; 1 bytes @ 0x9
  1544  0079                     	ds	1
  1545  007A                     write_str@i:	
  1546                           
  1547                           ; 2 bytes @ 0xA
  1548  007A                     	ds	2
  1549  007C                     ??_D:	
  1550  007C                     ??_set_day:	
  1551                           ; 1 bytes @ 0xC
  1552                           
  1553  007C                     ??_set_night:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  007C                     ??_cool:	
  1557                           ; 1 bytes @ 0xC
  1558                           
  1559  007C                     ??_heat:	
  1560                           ; 1 bytes @ 0xC
  1561                           
  1562  007C                     ??_OK:	
  1563                           ; 1 bytes @ 0xC
  1564                           
  1565  007C                     ?_week:	
  1566                           ; 1 bytes @ 0xC
  1567                           
  1568  007C                     ??_start_date:	
  1569                           ; 1 bytes @ 0xC
  1570                           
  1571  007C                     ??_start_time:	
  1572                           ; 1 bytes @ 0xC
  1573                           
  1574  007C                     ??_display_temp:	
  1575                           ; 1 bytes @ 0xC
  1576                           
  1577  007C                     week@w:	
  1578                           ; 1 bytes @ 0xC
  1579                           
  1580  007C                     D@j:	
  1581                           ; 2 bytes @ 0xC
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0xC
  1585  007C                     	ds	2
  1586  007E                     ??_week:	
  1587  007E                     ??_clock_setting:	
  1588                           ; 1 bytes @ 0xE
  1589                           
  1590  007E                     ??_temp_setting:	
  1591                           ; 1 bytes @ 0xE
  1592                           
  1593  007E                     ??_main:	
  1594                           ; 1 bytes @ 0xE
  1595                           
  1596                           
  1597                           	psect	cstackBANK0
  1598  0044                     __pcstackBANK0:	
  1599                           ; 1 bytes @ 0xE
  1600                           
  1601  0044                     ?_T:	
  1602  0044                     ?_D:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0044                     ??_display_clock:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0044                     ??_get_temp:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0044                     ??_temp_day:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0044                     ??_temp_night:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0044                     start_date@i:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0044                     start_time@i:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0044                     D@D:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0044                     T@T:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0044                     set_day@min_max:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0044                     set_night@min_max:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635                           
  1636                           ; 2 bytes @ 0x0
  1637  0044                     	ds	2
  1638  0046                     display_clock@i:	
  1639  0046                     D@C:	
  1640                           ; 2 bytes @ 0x2
  1641                           
  1642  0046                     T@C:	
  1643                           ; 2 bytes @ 0x2
  1644                           
  1645                           
  1646                           ; 2 bytes @ 0x2
  1647  0046                     	ds	2
  1648  0048                     D@i:	
  1649  0048                     T@i:	
  1650                           ; 2 bytes @ 0x4
  1651                           
  1652                           
  1653                           ; 2 bytes @ 0x4
  1654  0048                     	ds	2
  1655  004A                     ??_date_setting:	
  1656  004A                     T@j:	
  1657                           ; 1 bytes @ 0x6
  1658                           
  1659                           
  1660                           ; 2 bytes @ 0x6
  1661  004A                     	ds	2
  1662  004C                     date_setting@a:	
  1663  004C                     T@j_261:	
  1664                           ; 1 bytes @ 0x8
  1665                           
  1666  004C                     temp_day@temp_max:	
  1667                           ; 2 bytes @ 0x8
  1668                           
  1669  004C                     temp_night@temp_max:	
  1670                           ; 2 bytes @ 0x8
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x8
  1674  004C                     	ds	1
  1675  004D                     date_setting@b:	
  1676                           
  1677                           ; 1 bytes @ 0x9
  1678  004D                     	ds	1
  1679  004E                     date_setting@y:	
  1680  004E                     T@j_262:	
  1681                           ; 1 bytes @ 0xA
  1682                           
  1683  004E                     temp_day@temp_min:	
  1684                           ; 2 bytes @ 0xA
  1685                           
  1686  004E                     temp_night@temp_min:	
  1687                           ; 2 bytes @ 0xA
  1688                           
  1689                           
  1690                           ; 2 bytes @ 0xA
  1691  004E                     	ds	1
  1692  004F                     date_setting@j:	
  1693                           
  1694                           ; 2 bytes @ 0xB
  1695  004F                     	ds	1
  1696  0050                     clock_setting@i:	
  1697  0050                     temp_day@temp:	
  1698                           ; 2 bytes @ 0xC
  1699                           
  1700  0050                     temp_night@temp:	
  1701                           ; 2 bytes @ 0xC
  1702                           
  1703                           
  1704                           ; 2 bytes @ 0xC
  1705  0050                     	ds	1
  1706  0051                     date_setting@j_241:	
  1707                           
  1708                           ; 2 bytes @ 0xD
  1709  0051                     	ds	2
  1710  0053                     date_setting@j_242:	
  1711                           
  1712                           ; 2 bytes @ 0xF
  1713  0053                     	ds	2
  1714  0055                     date_setting@j_243:	
  1715                           
  1716                           ; 2 bytes @ 0x11
  1717  0055                     	ds	2
  1718  0057                     date_setting@j_244:	
  1719                           
  1720                           ; 2 bytes @ 0x13
  1721  0057                     	ds	2
  1722  0059                     date_setting@j_245:	
  1723                           
  1724                           ; 2 bytes @ 0x15
  1725  0059                     	ds	2
  1726  005B                     date_setting@i:	
  1727                           
  1728                           ; 2 bytes @ 0x17
  1729  005B                     	ds	2
  1730                           
  1731                           	psect	maintext
  1732  006B                     __pmaintext:	
  1733 ;;
  1734 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1735 ;;
  1736 ;; *************** function _main *****************
  1737 ;; Defined at:
  1738 ;;		line 19 in file "ClimateControl.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : B00/0
  1749 ;;		On exit  : 300/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		_OutputPins
  1760 ;;		_button_reset
  1761 ;;		_buzzer_init
  1762 ;;		_clock_init
  1763 ;;		_clock_setting
  1764 ;;		_date_setting
  1765 ;;		_display_clock
  1766 ;;		_get_temp
  1767 ;;		_get_time
  1768 ;;		_initialisation
  1769 ;;		_lcd_init
  1770 ;;		_temp_day
  1771 ;;		_temp_night
  1772 ;;		_temp_setting
  1773 ;;		_write_str
  1774 ;;		_writecmd_4line
  1775 ;; This function is called by:
  1776 ;;		Startup code after reset
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _main
  1782  006B                     _main:	
  1783                           
  1784                           ;ClimateControl.c: 21:     buzzer_init();
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1788  006B  160A  158A  24F2  120A  118A  	fcall	_buzzer_init
  1789                           
  1790                           ;ClimateControl.c: 22:     clock_init();
  1791  0070  120A  158A  2000  120A  118A  	fcall	_clock_init
  1792                           
  1793                           ;ClimateControl.c: 23:     lcd_init();
  1794  0075  160A  158A  2597  120A  118A  	fcall	_lcd_init
  1795                           
  1796                           ;ClimateControl.c: 24:     initialisation ();
  1797  007A  160A  158A  2500  120A  118A  	fcall	_initialisation
  1798  007F                     l5670:	
  1799                           
  1800                           ;ClimateControl.c: 29:    {;ClimateControl.c: 30:        get_temp();
  1801  007F  160A  118A  2361  120A  118A  	fcall	_get_temp
  1802                           
  1803                           ;ClimateControl.c: 31:        get_time();
  1804  0084  160A  158A  270C  120A  118A  	fcall	_get_time
  1805                           
  1806                           ;ClimateControl.c: 32:        display_clock();
  1807  0089  120A  158A  23B1  120A  118A  	fcall	_display_clock
  1808                           
  1809                           ;ClimateControl.c: 35:        button_reset();
  1810  008E  160A  158A  24EE  120A  118A  	fcall	_button_reset
  1811                           
  1812                           ;ClimateControl.c: 38:        if (OutputPins(),FirstRC == 1 && SecondRC == 1){
  1813  0093  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1814  0098  0342               	decf	_FirstRC,w
  1815  0099  1D03               	btfss	3,2
  1816  009A  28AF               	goto	l5690
  1817  009B  0343               	decf	_SecondRC,w
  1818  009C  1D03               	btfss	3,2
  1819  009D  28AF               	goto	l5690
  1820                           
  1821                           ;ClimateControl.c: 39:            button_reset();
  1822  009E  160A  158A  24EE  120A  118A  	fcall	_button_reset
  1823                           
  1824                           ;ClimateControl.c: 40:            clock_setting();
  1825  00A3  120A  158A  2201  120A  118A  	fcall	_clock_setting
  1826                           
  1827                           ;ClimateControl.c: 41:            writecmd_4line(0x1);
  1828  00A8  3001               	movlw	1
  1829  00A9  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  1830                           
  1831                           ;ClimateControl.c: 42:        }
  1832  00AE  2907               	goto	l5728
  1833  00AF                     l5690:	
  1834  00AF  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1835  00B4  0342               	decf	_FirstRC,w
  1836  00B5  1D03               	btfss	3,2
  1837  00B6  28CC               	goto	l5702
  1838  00B7  3002               	movlw	2
  1839  00B8  0643               	xorwf	_SecondRC,w
  1840  00B9  1D03               	btfss	3,2
  1841  00BA  28CC               	goto	l5702
  1842                           
  1843                           ;ClimateControl.c: 45:            button_reset();
  1844  00BB  160A  158A  24EE  120A  118A  	fcall	_button_reset
  1845                           
  1846                           ;ClimateControl.c: 46:            date_setting();
  1847  00C0  120A  118A  23CA  120A  118A  	fcall	_date_setting
  1848                           
  1849                           ;ClimateControl.c: 47:            writecmd_4line(0x1);
  1850  00C5  3001               	movlw	1
  1851  00C6  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  1852                           
  1853                           ;ClimateControl.c: 48:        }
  1854  00CB  2907               	goto	l5728
  1855  00CC                     l5702:	
  1856  00CC  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1857  00D1  0342               	decf	_FirstRC,w
  1858  00D2  1D03               	btfss	3,2
  1859  00D3  28E9               	goto	l5714
  1860  00D4  3003               	movlw	3
  1861  00D5  0643               	xorwf	_SecondRC,w
  1862  00D6  1D03               	btfss	3,2
  1863  00D7  28E9               	goto	l5714
  1864                           
  1865                           ;ClimateControl.c: 51:            button_reset();
  1866  00D8  160A  158A  24EE  120A  118A  	fcall	_button_reset
  1867                           
  1868                           ;ClimateControl.c: 52:            temp_setting();
  1869  00DD  160A  118A  22F5  120A  118A  	fcall	_temp_setting
  1870                           
  1871                           ;ClimateControl.c: 53:            writecmd_4line(0x1);
  1872  00E2  3001               	movlw	1
  1873  00E3  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  1874                           
  1875                           ;ClimateControl.c: 54:        }
  1876  00E8  2907               	goto	l5728
  1877  00E9                     l5714:	
  1878  00E9  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1879  00EE  3004               	movlw	4
  1880  00EF  0642               	xorwf	_FirstRC,w
  1881  00F0  1D03               	btfss	3,2
  1882  00F1  2907               	goto	l5728
  1883  00F2  3004               	movlw	4
  1884  00F3  0643               	xorwf	_SecondRC,w
  1885  00F4  1D03               	btfss	3,2
  1886  00F5  2907               	goto	l5728
  1887                           
  1888                           ;ClimateControl.c: 57:            button_reset();
  1889  00F6  160A  158A  24EE  120A  118A  	fcall	_button_reset
  1890                           
  1891                           ;ClimateControl.c: 58:            if (buzz_count >=20){
  1892  00FB  3000               	movlw	0
  1893  00FC  022E               	subwf	_buzz_count+1,w
  1894  00FD  3014               	movlw	20
  1895  00FE  1903               	skipnz
  1896  00FF  022D               	subwf	_buzz_count,w
  1897  0100  1C03               	skipc
  1898  0101  2907               	goto	l5728
  1899                           
  1900                           ;ClimateControl.c: 59:                RE2 = 0;
  1901  0102  1109               	bcf	9,2	;volatile
  1902                           
  1903                           ;ClimateControl.c: 60:                pass = 1;
  1904  0103  01B5               	clrf	_pass
  1905  0104  0AB5               	incf	_pass,f
  1906                           
  1907                           ;ClimateControl.c: 61:                buzz_count = 0;
  1908  0105  01AD               	clrf	_buzz_count
  1909  0106  01AE               	clrf	_buzz_count+1
  1910  0107                     l5728:	
  1911                           
  1912                           ;ClimateControl.c: 73:        if (table1[1] > 0x29){
  1913  0107  302A               	movlw	42
  1914  0108  0221               	subwf	_table1+1,w
  1915  0109  1C03               	skipc
  1916  010A  293D               	goto	l5752
  1917                           
  1918                           ;ClimateControl.c: 75:            if (table1[2] >= 0x19){
  1919  010B  3019               	movlw	25
  1920  010C  0222               	subwf	_table1+2,w
  1921  010D  1C03               	skipc
  1922  010E  2924               	goto	l5738
  1923  010F                     l5732:	
  1924                           
  1925                           ;ClimateControl.c: 76:                 writecmd_4line(0x95);
  1926  010F  3095               	movlw	149
  1927  0110  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  1928                           
  1929                           ;ClimateControl.c: 77:                 write_str("Night");
  1930  0115  309E               	movlw	low (STR_42| (0+32768))
  1931  0116  00F3               	movwf	write_str@array
  1932  0117  3090               	movlw	high (STR_42| (0+32768))
  1933  0118  00F4               	movwf	write_str@array+1
  1934  0119  160A  118A  215E  120A  118A  	fcall	_write_str
  1935                           
  1936                           ;ClimateControl.c: 78:                 temp_night();
  1937  011E  160A  118A  2664  120A  118A  	fcall	_temp_night
  1938                           
  1939                           ;ClimateControl.c: 79:            }
  1940  0123  287F               	goto	l5670
  1941  0124                     l5738:	
  1942  0124  3006               	movlw	6
  1943  0125                     L1:	
  1944  0125  0222               	subwf	_table1+2,w
  1945  0126  1C03               	btfss	3,0
  1946  0127  290F               	goto	l5732
  1947                           
  1948                           ;ClimateControl.c: 88:                 writecmd_4line(0x95);
  1949                           
  1950                           ;ClimateControl.c: 83:                 write_str("Night");
  1951                           
  1952                           ;ClimateControl.c: 82:                 writecmd_4line(0x95);
  1953  0128  3095               	movlw	149
  1954  0129  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  1955                           
  1956                           ;ClimateControl.c: 89:                 write_str("Day  ");
  1957  012E  308C               	movlw	low (STR_78| (0+32768))
  1958  012F  00F3               	movwf	write_str@array
  1959  0130  3090               	movlw	high (STR_78| (0+32768))
  1960  0131  00F4               	movwf	write_str@array+1
  1961  0132  160A  118A  215E  120A  118A  	fcall	_write_str
  1962                           
  1963                           ;ClimateControl.c: 90:                 temp_day();
  1964  0137  160A  118A  259C  120A  118A  	fcall	_temp_day
  1965  013C  287F               	goto	l5670
  1966  013D                     l5752:	
  1967  013D  3030               	movlw	48
  1968  013E  025E               	subwf	_table+1,w
  1969  013F  1803               	skipnc
  1970  0140  287F               	goto	l5670
  1971                           
  1972                           ;ClimateControl.c: 97:            if (table1[2] >= 0x20){
  1973  0141  3020               	movlw	32
  1974  0142  0222               	subwf	_table1+2,w
  1975  0143  1803               	btfsc	3,0
  1976  0144  290F               	goto	l5732
  1977                           
  1978                           ;ClimateControl.c: 99:                 write_str("Night");
  1979                           
  1980                           ;ClimateControl.c: 98:                 writecmd_4line(0x95);
  1981  0145  3007               	movlw	7
  1982  0146  2925               	goto	L1
  1983  0147                     __end_of_main:	
  1984                           ;ClimateControl.c: 111:                 write_str("Day  ");
  1985                           
  1986                           ;ClimateControl.c: 110:                 writecmd_4line(0x95);
  1987                           
  1988                           ;ClimateControl.c: 105:                 write_str("Night");
  1989                           
  1990                           ;ClimateControl.c: 104:                 writecmd_4line(0x95);
  1991                           
  1992                           
  1993                           	psect	text1
  1994  12F5                     __ptext1:	
  1995 ;; *************** function _temp_setting *****************
  1996 ;; Defined at:
  1997 ;;		line 130 in file "temperature.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 300/0
  2008 ;;		On exit  : 300/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		_OutputPins
  2020 ;;		_button_reset
  2021 ;;		_set_day
  2022 ;;		_set_night
  2023 ;;		_write_str
  2024 ;;		_writecmd_4line
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _temp_setting
  2032  12F5                     _temp_setting:	
  2033                           
  2034                           ;temperature.c: 131:     writecmd_4line(0x1);
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _temp_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2038  12F5  3001               	movlw	1
  2039  12F6  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  2040                           
  2041                           ;temperature.c: 132:     writecmd_4line(0x80);
  2042  12FB  3080               	movlw	128
  2043  12FC  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  2044                           
  2045                           ;temperature.c: 133:     write_str("Temp Threshold");
  2046  1301  3011               	movlw	low (STR_40| (0+32768))
  2047  1302  00F3               	movwf	write_str@array
  2048  1303  3090               	movlw	high (STR_40| (0+32768))
  2049  1304  00F4               	movwf	write_str@array+1
  2050  1305  160A  118A  215E  160A  118A  	fcall	_write_str
  2051                           
  2052                           ;temperature.c: 134:     writecmd_4line(0x90);
  2053  130A  3090               	movlw	144
  2054  130B  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  2055                           
  2056                           ;temperature.c: 135:     write_str("Day");
  2057  1310  30FB               	movlw	low (STR_33| (0+32768))
  2058  1311  00F3               	movwf	write_str@array
  2059  1312  3090               	movlw	high (STR_33| (0+32768))
  2060  1313  00F4               	movwf	write_str@array+1
  2061  1314  160A  118A  215E  160A  118A  	fcall	_write_str
  2062                           
  2063                           ;temperature.c: 136:     writecmd_4line(0x88);
  2064  1319  3088               	movlw	136
  2065  131A  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  2066                           
  2067                           ;temperature.c: 137:     write_str("Night");
  2068  131F  309E               	movlw	low (STR_42| (0+32768))
  2069  1320  00F3               	movwf	write_str@array
  2070  1321  3090               	movlw	high (STR_42| (0+32768))
  2071  1322  00F4               	movwf	write_str@array+1
  2072  1323  160A  118A  215E  160A  118A  	fcall	_write_str
  2073  1328                     l5600:	
  2074                           
  2075                           ;temperature.c: 142:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2076  1328  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2077  132D  3002               	movlw	2
  2078  132E  0642               	xorwf	_FirstRC,w
  2079  132F  1903               	btfsc	3,2
  2080  1330  0343               	decf	_SecondRC,w
  2081  1331  1903               	btfsc	3,2
  2082  1332  0008               	return
  2083  1333  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2084  1338  3003               	movlw	3
  2085  1339  0642               	xorwf	_FirstRC,w
  2086  133A  1D03               	btfss	3,2
  2087  133B  2B4A               	goto	l5620
  2088  133C  0343               	decf	_SecondRC,w
  2089  133D  1D03               	btfss	3,2
  2090  133E  2B4A               	goto	l5620
  2091                           
  2092                           ;temperature.c: 148:             button_reset();
  2093  133F  160A  158A  24EE  160A  118A  	fcall	_button_reset
  2094                           
  2095                           ;temperature.c: 149:             set_day();
  2096  1344  120A  158A  257D  160A  118A  	fcall	_set_day
  2097                           
  2098                           ;temperature.c: 150:         }
  2099  1349  2B28               	goto	l5600
  2100  134A                     l5620:	
  2101  134A  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2102  134F  3004               	movlw	4
  2103  1350  0642               	xorwf	_FirstRC,w
  2104  1351  1D03               	btfss	3,2
  2105  1352  2B28               	goto	l5600
  2106  1353  0343               	decf	_SecondRC,w
  2107  1354  1D03               	btfss	3,2
  2108  1355  2B28               	goto	l5600
  2109                           
  2110                           ;temperature.c: 154:             button_reset();
  2111  1356  160A  158A  24EE  160A  118A  	fcall	_button_reset
  2112                           
  2113                           ;temperature.c: 155:             set_night();
  2114  135B  120A  118A  2147  160A  118A  	fcall	_set_night
  2115  1360  2B28               	goto	l5600
  2116  1361                     __end_of_temp_setting:	
  2117                           
  2118                           	psect	text2
  2119  0147                     __ptext2:	
  2120 ;; *************** function _set_night *****************
  2121 ;; Defined at:
  2122 ;;		line 286 in file "temperature.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  min_max         2    0[BANK0 ] unsigned int 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 300/0
  2133 ;;		On exit  : 300/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       2       0       0       0
  2138 ;;      Temps:          2       0       0       0       0
  2139 ;;      Totals:         2       2       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		_OutputPins
  2145 ;;		_button_reset
  2146 ;;		_temp_decrement
  2147 ;;		_temp_increment
  2148 ;;		_write_str
  2149 ;;		_writechar
  2150 ;;		_writecmd_4line
  2151 ;; This function is called by:
  2152 ;;		_temp_setting
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _set_night
  2158  0147                     _set_night:	
  2159                           
  2160                           ;temperature.c: 287:     writecmd_4line(0x1);
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _set_night: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2164  0147  3001               	movlw	1
  2165  0148  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2166                           
  2167                           ;temperature.c: 288:     writecmd_4line(0x80);
  2168  014D  3080               	movlw	128
  2169  014E  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2170                           
  2171                           ;temperature.c: 289:     write_str("Night Settings");
  2172  0153  3020               	movlw	low (STR_58| (0+32768))
  2173  0154  00F3               	movwf	write_str@array
  2174  0155  3090               	movlw	high (STR_58| (0+32768))
  2175  0156  00F4               	movwf	write_str@array+1
  2176  0157  160A  118A  215E  120A  118A  	fcall	_write_str
  2177                           
  2178                           ;temperature.c: 290:     writecmd_4line(0x90);
  2179  015C  3090               	movlw	144
  2180  015D  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2181                           
  2182                           ;temperature.c: 291:     write_str("Max:");
  2183  0162  30C6               	movlw	low (STR_44| (0+32768))
  2184  0163  00F3               	movwf	write_str@array
  2185  0164  3090               	movlw	high (STR_44| (0+32768))
  2186  0165  00F4               	movwf	write_str@array+1
  2187  0166  160A  118A  215E  120A  118A  	fcall	_write_str
  2188                           
  2189                           ;temperature.c: 292:     writechar(night_ten_max + '0');
  2190  016B  0867               	movf	_night_ten_max,w
  2191  016C  3E30               	addlw	48
  2192  016D  160A  158A  25AF  120A  118A  	fcall	_writechar
  2193                           
  2194                           ;temperature.c: 293:     writechar(night_one_max + '0');
  2195  0172  0866               	movf	_night_one_max,w
  2196  0173  3E30               	addlw	48
  2197  0174  160A  158A  25AF  120A  118A  	fcall	_writechar
  2198                           
  2199                           ;temperature.c: 294:     write_str(".");
  2200  0179  303C               	movlw	low ((STR_21+13)| (0+32768))
  2201  017A  00F3               	movwf	write_str@array
  2202  017B  3090               	movlw	high ((STR_21+13)| (0+32768))
  2203  017C  00F4               	movwf	write_str@array+1
  2204  017D  160A  118A  215E  120A  118A  	fcall	_write_str
  2205                           
  2206                           ;temperature.c: 295:     writechar(night_dec_max + '0');
  2207  0182  0838               	movf	_night_dec_max,w
  2208  0183  3E30               	addlw	48
  2209  0184  160A  158A  25AF  120A  118A  	fcall	_writechar
  2210                           
  2211                           ;temperature.c: 296:     writecmd_4line(0x88);
  2212  0189  3088               	movlw	136
  2213  018A  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2214                           
  2215                           ;temperature.c: 297:     write_str("Min:");
  2216  018F  30C1               	movlw	low (STR_46| (0+32768))
  2217  0190  00F3               	movwf	write_str@array
  2218  0191  3090               	movlw	high (STR_46| (0+32768))
  2219  0192  00F4               	movwf	write_str@array+1
  2220  0193  160A  118A  215E  120A  118A  	fcall	_write_str
  2221                           
  2222                           ;temperature.c: 298:     writechar(night_ten_min + '0');
  2223  0198  0865               	movf	_night_ten_min,w
  2224  0199  3E30               	addlw	48
  2225  019A  160A  158A  25AF  120A  118A  	fcall	_writechar
  2226                           
  2227                           ;temperature.c: 299:     writechar(night_one_min + '0');
  2228  019F  0837               	movf	_night_one_min,w
  2229  01A0  3E30               	addlw	48
  2230  01A1  160A  158A  25AF  120A  118A  	fcall	_writechar
  2231                           
  2232                           ;temperature.c: 300:     write_str(".");
  2233  01A6  303C               	movlw	low ((STR_21+13)| (0+32768))
  2234  01A7  00F3               	movwf	write_str@array
  2235  01A8  3090               	movlw	high ((STR_21+13)| (0+32768))
  2236  01A9  00F4               	movwf	write_str@array+1
  2237  01AA  160A  118A  215E  120A  118A  	fcall	_write_str
  2238                           
  2239                           ;temperature.c: 301:     writechar(night_dec_min + '0');
  2240  01AF  0836               	movf	_night_dec_min,w
  2241  01B0                     L2:	
  2242  01B0  3E30               	addlw	48
  2243  01B1  160A  158A  25AF  120A  118A  	fcall	_writechar
  2244                           
  2245                           ;temperature.c: 303:     unsigned int min_max = 0;
  2246  01B6  01C4               	clrf	set_night@min_max
  2247  01B7  01C5               	clrf	set_night@min_max+1
  2248  01B8                     l4596:	
  2249                           
  2250                           ;temperature.c: 307:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2251  01B8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2252  01BD  3002               	movlw	2
  2253  01BE  0642               	xorwf	_FirstRC,w
  2254  01BF  1D03               	btfss	3,2
  2255  01C0  29C8               	goto	l4608
  2256  01C1  0343               	decf	_SecondRC,w
  2257  01C2  1D03               	btfss	3,2
  2258  01C3  29C8               	goto	l4608
  2259                           
  2260                           ;temperature.c: 308:             button_reset();
  2261  01C4  160A  158A  24EE   	fcall	_button_reset
  2262  01C7  0008               	return
  2263  01C8                     l4608:	
  2264  01C8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2265  01CD  3003               	movlw	3
  2266  01CE  0642               	xorwf	_FirstRC,w
  2267  01CF  1D03               	btfss	3,2
  2268  01D0  2A10               	goto	l4634
  2269  01D1  0343               	decf	_SecondRC,w
  2270  01D2  1D03               	btfss	3,2
  2271  01D3  2A10               	goto	l4634
  2272                           
  2273                           ;temperature.c: 314:             button_reset();
  2274  01D4  160A  158A  24EE  120A  118A  	fcall	_button_reset
  2275                           
  2276                           ;temperature.c: 315:             writecmd_4line(0x90);
  2277  01D9  3090               	movlw	144
  2278  01DA  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2279                           
  2280                           ;temperature.c: 316:             write_str("          ");
  2281  01DF  3006               	movlw	low ((STR_22+6)| (0+32768))
  2282  01E0  00F3               	movwf	write_str@array
  2283  01E1  3090               	movlw	high ((STR_22+6)| (0+32768))
  2284  01E2  00F4               	movwf	write_str@array+1
  2285  01E3  160A  118A  215E  120A  118A  	fcall	_write_str
  2286                           
  2287                           ;temperature.c: 317:             writecmd_4line(0x90);
  2288  01E8  3090               	movlw	144
  2289  01E9  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2290                           
  2291                           ;temperature.c: 318:             write_str("Max:");
  2292  01EE  30C6               	movlw	low (STR_44| (0+32768))
  2293  01EF  00F3               	movwf	write_str@array
  2294  01F0  3090               	movlw	high (STR_44| (0+32768))
  2295  01F1  00F4               	movwf	write_str@array+1
  2296  01F2  160A  118A  215E  120A  118A  	fcall	_write_str
  2297                           
  2298                           ;temperature.c: 319:             writechar(night_ten_max + '0');
  2299  01F7  0867               	movf	_night_ten_max,w
  2300  01F8  3E30               	addlw	48
  2301  01F9  160A  158A  25AF  120A  118A  	fcall	_writechar
  2302                           
  2303                           ;temperature.c: 320:             writechar(night_one_max + '0');
  2304  01FE  0866               	movf	_night_one_max,w
  2305  01FF  3E30               	addlw	48
  2306  0200  160A  158A  25AF  120A  118A  	fcall	_writechar
  2307                           
  2308                           ;temperature.c: 321:             write_str(".");
  2309  0205  303C               	movlw	low ((STR_21+13)| (0+32768))
  2310  0206  00F3               	movwf	write_str@array
  2311  0207  3090               	movlw	high ((STR_21+13)| (0+32768))
  2312  0208  00F4               	movwf	write_str@array+1
  2313  0209  160A  118A  215E  120A  118A  	fcall	_write_str
  2314                           
  2315                           ;temperature.c: 322:             writechar(night_dec_max + '0');
  2316  020E  0838               	movf	_night_dec_max,w
  2317  020F  29B0               	goto	L2
  2318  0210                     l4634:	
  2319  0210  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2320  0215  3004               	movlw	4
  2321  0216  0642               	xorwf	_FirstRC,w
  2322  0217  1D03               	btfss	3,2
  2323  0218  2A62               	goto	l4660
  2324  0219  0343               	decf	_SecondRC,w
  2325  021A  1D03               	btfss	3,2
  2326  021B  2A62               	goto	l4660
  2327                           
  2328                           ;temperature.c: 330:             button_reset();
  2329  021C  160A  158A  24EE  120A  118A  	fcall	_button_reset
  2330                           
  2331                           ;temperature.c: 331:             writecmd_4line(0x88);
  2332  0221  3088               	movlw	136
  2333  0222  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2334                           
  2335                           ;temperature.c: 332:             write_str("          ");
  2336  0227  3006               	movlw	low ((STR_22+6)| (0+32768))
  2337  0228  00F3               	movwf	write_str@array
  2338  0229  3090               	movlw	high ((STR_22+6)| (0+32768))
  2339  022A  00F4               	movwf	write_str@array+1
  2340  022B  160A  118A  215E  120A  118A  	fcall	_write_str
  2341                           
  2342                           ;temperature.c: 333:             writecmd_4line(0x88);
  2343  0230  3088               	movlw	136
  2344  0231  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2345                           
  2346                           ;temperature.c: 334:             write_str("Min:");
  2347  0236  30C1               	movlw	low (STR_46| (0+32768))
  2348  0237  00F3               	movwf	write_str@array
  2349  0238  3090               	movlw	high (STR_46| (0+32768))
  2350  0239  00F4               	movwf	write_str@array+1
  2351  023A  160A  118A  215E  120A  118A  	fcall	_write_str
  2352                           
  2353                           ;temperature.c: 335:             writechar(night_ten_min + '0');
  2354  023F  0865               	movf	_night_ten_min,w
  2355  0240  3E30               	addlw	48
  2356  0241  160A  158A  25AF  120A  118A  	fcall	_writechar
  2357                           
  2358                           ;temperature.c: 336:             writechar(night_one_min + '0');
  2359  0246  0837               	movf	_night_one_min,w
  2360  0247  3E30               	addlw	48
  2361  0248  160A  158A  25AF  120A  118A  	fcall	_writechar
  2362                           
  2363                           ;temperature.c: 337:             write_str(".");
  2364  024D  303C               	movlw	low ((STR_21+13)| (0+32768))
  2365  024E  00F3               	movwf	write_str@array
  2366  024F  3090               	movlw	high ((STR_21+13)| (0+32768))
  2367  0250  00F4               	movwf	write_str@array+1
  2368  0251  160A  118A  215E  120A  118A  	fcall	_write_str
  2369                           
  2370                           ;temperature.c: 338:             writechar(night_dec_min + '0');
  2371  0256  0836               	movf	_night_dec_min,w
  2372  0257  3E30               	addlw	48
  2373  0258  160A  158A  25AF  120A  118A  	fcall	_writechar
  2374                           
  2375                           ;temperature.c: 340:             min_max = 1;
  2376  025D  3001               	movlw	1
  2377  025E  00C4               	movwf	set_night@min_max
  2378  025F  3000               	movlw	0
  2379  0260  00C5               	movwf	set_night@min_max+1
  2380                           
  2381                           ;temperature.c: 341:         }
  2382  0261  29B8               	goto	l4596
  2383  0262                     l4660:	
  2384  0262  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2385  0267  3004               	movlw	4
  2386  0268  0642               	xorwf	_FirstRC,w
  2387  0269  1D03               	btfss	3,2
  2388  026A  2B16               	goto	l4700
  2389  026B  3002               	movlw	2
  2390  026C  0643               	xorwf	_SecondRC,w
  2391  026D  1D03               	btfss	3,2
  2392  026E  2B16               	goto	l4700
  2393                           
  2394                           ;temperature.c: 345:             button_reset();
  2395  026F  160A  158A  24EE  120A  118A  	fcall	_button_reset
  2396                           
  2397                           ;temperature.c: 346:             if (min_max == 0){
  2398  0274  0844               	movf	set_night@min_max,w
  2399  0275  0445               	iorwf	set_night@min_max+1,w
  2400  0276  1D03               	btfss	3,2
  2401  0277  2AC5               	goto	l4684
  2402                           
  2403                           ;temperature.c: 348:                 temp_ten = night_ten_max; temp_one = night_one_max;
      +                           temp_dec = night_dec_max;
  2404  0278  0867               	movf	_night_ten_max,w
  2405  0279  00FC               	movwf	??_set_night
  2406  027A  01FD               	clrf	??_set_night+1
  2407  027B  087C               	movf	??_set_night,w
  2408  027C  00AB               	movwf	_temp_ten
  2409  027D  087D               	movf	??_set_night+1,w
  2410  027E  00AC               	movwf	_temp_ten+1
  2411  027F  0866               	movf	_night_one_max,w
  2412  0280  00FC               	movwf	??_set_night
  2413  0281  01FD               	clrf	??_set_night+1
  2414  0282  087C               	movf	??_set_night,w
  2415  0283  00A9               	movwf	_temp_one
  2416  0284  087D               	movf	??_set_night+1,w
  2417  0285  00AA               	movwf	_temp_one+1
  2418  0286  0838               	movf	_night_dec_max,w
  2419  0287  00FC               	movwf	??_set_night
  2420  0288  01FD               	clrf	??_set_night+1
  2421  0289  087C               	movf	??_set_night,w
  2422  028A  00A7               	movwf	_temp_dec
  2423  028B  087D               	movf	??_set_night+1,w
  2424  028C  00A8               	movwf	_temp_dec+1
  2425                           
  2426                           ;temperature.c: 350:                 temp_increment();
  2427  028D  160A  158A  26E1  120A  118A  	fcall	_temp_increment
  2428                           
  2429                           ;temperature.c: 352:                 night_ten_max = temp_ten; night_one_max = temp_one;
      +                           night_dec_max = temp_dec;
  2430  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0294  082B               	movf	_temp_ten,w
  2433  0295  00FC               	movwf	??_set_night
  2434  0296  087C               	movf	??_set_night,w
  2435  0297  00E7               	movwf	_night_ten_max
  2436  0298  0829               	movf	_temp_one,w
  2437  0299  00FC               	movwf	??_set_night
  2438  029A  087C               	movf	??_set_night,w
  2439  029B  00E6               	movwf	_night_one_max
  2440  029C  0827               	movf	_temp_dec,w
  2441  029D  00FC               	movwf	??_set_night
  2442  029E  087C               	movf	??_set_night,w
  2443  029F  00B8               	movwf	_night_dec_max
  2444                           
  2445                           ;temperature.c: 354:                 writecmd_4line(0x92);
  2446  02A0  3092               	movlw	146
  2447  02A1  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2448                           
  2449                           ;temperature.c: 355:                 writechar(night_ten_max + '0');
  2450  02A6  0867               	movf	_night_ten_max,w
  2451  02A7  3E30               	addlw	48
  2452  02A8  160A  158A  25AF  120A  118A  	fcall	_writechar
  2453                           
  2454                           ;temperature.c: 356:                 writechar(night_one_max + '0');
  2455  02AD  0866               	movf	_night_one_max,w
  2456  02AE  3E30               	addlw	48
  2457  02AF  160A  158A  25AF  120A  118A  	fcall	_writechar
  2458                           
  2459                           ;temperature.c: 357:                 write_str(".");
  2460  02B4  303C               	movlw	low ((STR_21+13)| (0+32768))
  2461  02B5  00F3               	movwf	write_str@array
  2462  02B6  3090               	movlw	high ((STR_21+13)| (0+32768))
  2463  02B7  00F4               	movwf	write_str@array+1
  2464  02B8  160A  118A  215E  120A  118A  	fcall	_write_str
  2465                           
  2466                           ;temperature.c: 358:                 writechar(night_dec_max + '0');
  2467  02BD  0838               	movf	_night_dec_max,w
  2468  02BE  3E30               	addlw	48
  2469  02BF  160A  158A  25AF  120A  118A  	fcall	_writechar
  2470                           
  2471                           ;temperature.c: 359:             }
  2472  02C4  29B8               	goto	l4596
  2473  02C5                     l4684:	
  2474  02C5  0344               	decf	set_night@min_max,w
  2475  02C6  0445               	iorwf	set_night@min_max+1,w
  2476  02C7  1D03               	btfss	3,2
  2477  02C8  29B8               	goto	l4596
  2478                           
  2479                           ;temperature.c: 362:                 temp_ten = night_ten_min; temp_one = night_one_min;
      +                           temp_dec = night_dec_min;
  2480  02C9  0865               	movf	_night_ten_min,w
  2481  02CA  00FC               	movwf	??_set_night
  2482  02CB  01FD               	clrf	??_set_night+1
  2483  02CC  087C               	movf	??_set_night,w
  2484  02CD  00AB               	movwf	_temp_ten
  2485  02CE  087D               	movf	??_set_night+1,w
  2486  02CF  00AC               	movwf	_temp_ten+1
  2487  02D0  0837               	movf	_night_one_min,w
  2488  02D1  00FC               	movwf	??_set_night
  2489  02D2  01FD               	clrf	??_set_night+1
  2490  02D3  087C               	movf	??_set_night,w
  2491  02D4  00A9               	movwf	_temp_one
  2492  02D5  087D               	movf	??_set_night+1,w
  2493  02D6  00AA               	movwf	_temp_one+1
  2494  02D7  0836               	movf	_night_dec_min,w
  2495  02D8  00FC               	movwf	??_set_night
  2496  02D9  01FD               	clrf	??_set_night+1
  2497  02DA  087C               	movf	??_set_night,w
  2498  02DB  00A7               	movwf	_temp_dec
  2499  02DC  087D               	movf	??_set_night+1,w
  2500  02DD  00A8               	movwf	_temp_dec+1
  2501                           
  2502                           ;temperature.c: 364:                 temp_increment();
  2503  02DE  160A  158A  26E1  120A  118A  	fcall	_temp_increment
  2504                           
  2505                           ;temperature.c: 366:                 night_ten_min = temp_ten; night_one_min = temp_one;
      +                           night_dec_min = temp_dec;
  2506  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2507  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2508  02E5  082B               	movf	_temp_ten,w
  2509  02E6  00FC               	movwf	??_set_night
  2510  02E7  087C               	movf	??_set_night,w
  2511  02E8  00E5               	movwf	_night_ten_min
  2512  02E9  0829               	movf	_temp_one,w
  2513  02EA  00FC               	movwf	??_set_night
  2514  02EB  087C               	movf	??_set_night,w
  2515  02EC  00B7               	movwf	_night_one_min
  2516  02ED  0827               	movf	_temp_dec,w
  2517  02EE  00FC               	movwf	??_set_night
  2518  02EF  087C               	movf	??_set_night,w
  2519  02F0  00B6               	movwf	_night_dec_min
  2520                           
  2521                           ;temperature.c: 368:                 writecmd_4line(0x8A);
  2522  02F1  308A               	movlw	138
  2523  02F2  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2524                           
  2525                           ;temperature.c: 369:                 writechar(night_ten_min + '0');
  2526  02F7  0865               	movf	_night_ten_min,w
  2527  02F8  3E30               	addlw	48
  2528  02F9  160A  158A  25AF  120A  118A  	fcall	_writechar
  2529                           
  2530                           ;temperature.c: 370:                 writechar(night_one_min + '0');
  2531  02FE  0837               	movf	_night_one_min,w
  2532  02FF  3E30               	addlw	48
  2533  0300  160A  158A  25AF  120A  118A  	fcall	_writechar
  2534                           
  2535                           ;temperature.c: 371:                 write_str(".");
  2536  0305  303C               	movlw	low ((STR_21+13)| (0+32768))
  2537  0306  00F3               	movwf	write_str@array
  2538  0307  3090               	movlw	high ((STR_21+13)| (0+32768))
  2539  0308  00F4               	movwf	write_str@array+1
  2540  0309  160A  118A  215E  120A  118A  	fcall	_write_str
  2541                           
  2542                           ;temperature.c: 372:                 writechar(night_dec_min + '0');
  2543  030E  0836               	movf	_night_dec_min,w
  2544  030F  3E30               	addlw	48
  2545  0310  160A  158A  25AF  120A  118A  	fcall	_writechar
  2546  0315  29B8               	goto	l4596
  2547  0316                     l4700:	
  2548  0316  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2549  031B  3003               	movlw	3
  2550  031C  0642               	xorwf	_FirstRC,w
  2551  031D  1D03               	btfss	3,2
  2552  031E  29B8               	goto	l4596
  2553  031F  3002               	movlw	2
  2554  0320  0643               	xorwf	_SecondRC,w
  2555  0321  1D03               	btfss	3,2
  2556  0322  29B8               	goto	l4596
  2557                           
  2558                           ;temperature.c: 378:             button_reset();
  2559  0323  160A  158A  24EE  120A  118A  	fcall	_button_reset
  2560                           
  2561                           ;temperature.c: 379:             if (min_max == 0){
  2562  0328  0844               	movf	set_night@min_max,w
  2563  0329  0445               	iorwf	set_night@min_max+1,w
  2564  032A  1D03               	btfss	3,2
  2565  032B  2B79               	goto	l4724
  2566                           
  2567                           ;temperature.c: 381:                 temp_ten = night_ten_max; temp_one = night_one_max;
      +                           temp_dec = night_dec_max;
  2568  032C  0867               	movf	_night_ten_max,w
  2569  032D  00FC               	movwf	??_set_night
  2570  032E  01FD               	clrf	??_set_night+1
  2571  032F  087C               	movf	??_set_night,w
  2572  0330  00AB               	movwf	_temp_ten
  2573  0331  087D               	movf	??_set_night+1,w
  2574  0332  00AC               	movwf	_temp_ten+1
  2575  0333  0866               	movf	_night_one_max,w
  2576  0334  00FC               	movwf	??_set_night
  2577  0335  01FD               	clrf	??_set_night+1
  2578  0336  087C               	movf	??_set_night,w
  2579  0337  00A9               	movwf	_temp_one
  2580  0338  087D               	movf	??_set_night+1,w
  2581  0339  00AA               	movwf	_temp_one+1
  2582  033A  0838               	movf	_night_dec_max,w
  2583  033B  00FC               	movwf	??_set_night
  2584  033C  01FD               	clrf	??_set_night+1
  2585  033D  087C               	movf	??_set_night,w
  2586  033E  00A7               	movwf	_temp_dec
  2587  033F  087D               	movf	??_set_night+1,w
  2588  0340  00A8               	movwf	_temp_dec+1
  2589                           
  2590                           ;temperature.c: 383:                 temp_decrement();
  2591  0341  160A  118A  22A7  120A  118A  	fcall	_temp_decrement
  2592                           
  2593                           ;temperature.c: 385:                 night_ten_max = temp_ten; night_one_max = temp_one;
      +                           night_dec_max = temp_dec;
  2594  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0348  082B               	movf	_temp_ten,w
  2597  0349  00FC               	movwf	??_set_night
  2598  034A  087C               	movf	??_set_night,w
  2599  034B  00E7               	movwf	_night_ten_max
  2600  034C  0829               	movf	_temp_one,w
  2601  034D  00FC               	movwf	??_set_night
  2602  034E  087C               	movf	??_set_night,w
  2603  034F  00E6               	movwf	_night_one_max
  2604  0350  0827               	movf	_temp_dec,w
  2605  0351  00FC               	movwf	??_set_night
  2606  0352  087C               	movf	??_set_night,w
  2607  0353  00B8               	movwf	_night_dec_max
  2608                           
  2609                           ;temperature.c: 387:                 writecmd_4line(0x92);
  2610  0354  3092               	movlw	146
  2611  0355  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2612                           
  2613                           ;temperature.c: 388:                 writechar(night_ten_max + '0');
  2614  035A  0867               	movf	_night_ten_max,w
  2615  035B  3E30               	addlw	48
  2616  035C  160A  158A  25AF  120A  118A  	fcall	_writechar
  2617                           
  2618                           ;temperature.c: 389:                 writechar(night_one_max + '0');
  2619  0361  0866               	movf	_night_one_max,w
  2620  0362  3E30               	addlw	48
  2621  0363  160A  158A  25AF  120A  118A  	fcall	_writechar
  2622                           
  2623                           ;temperature.c: 390:                 write_str(".");
  2624  0368  303C               	movlw	low ((STR_21+13)| (0+32768))
  2625  0369  00F3               	movwf	write_str@array
  2626  036A  3090               	movlw	high ((STR_21+13)| (0+32768))
  2627  036B  00F4               	movwf	write_str@array+1
  2628  036C  160A  118A  215E  120A  118A  	fcall	_write_str
  2629                           
  2630                           ;temperature.c: 391:                 writechar(night_dec_max + '0');
  2631  0371  0838               	movf	_night_dec_max,w
  2632  0372  3E30               	addlw	48
  2633  0373  160A  158A  25AF  120A  118A  	fcall	_writechar
  2634                           
  2635                           ;temperature.c: 392:             }
  2636  0378  29B8               	goto	l4596
  2637  0379                     l4724:	
  2638  0379  0344               	decf	set_night@min_max,w
  2639  037A  0445               	iorwf	set_night@min_max+1,w
  2640  037B  1D03               	btfss	3,2
  2641  037C  29B8               	goto	l4596
  2642                           
  2643                           ;temperature.c: 395:                 temp_ten = night_ten_min; temp_one = night_one_min;
      +                           temp_dec = night_dec_min;
  2644  037D  0865               	movf	_night_ten_min,w
  2645  037E  00FC               	movwf	??_set_night
  2646  037F  01FD               	clrf	??_set_night+1
  2647  0380  087C               	movf	??_set_night,w
  2648  0381  00AB               	movwf	_temp_ten
  2649  0382  087D               	movf	??_set_night+1,w
  2650  0383  00AC               	movwf	_temp_ten+1
  2651  0384  0837               	movf	_night_one_min,w
  2652  0385  00FC               	movwf	??_set_night
  2653  0386  01FD               	clrf	??_set_night+1
  2654  0387  087C               	movf	??_set_night,w
  2655  0388  00A9               	movwf	_temp_one
  2656  0389  087D               	movf	??_set_night+1,w
  2657  038A  00AA               	movwf	_temp_one+1
  2658  038B  0836               	movf	_night_dec_min,w
  2659  038C  00FC               	movwf	??_set_night
  2660  038D  01FD               	clrf	??_set_night+1
  2661  038E  087C               	movf	??_set_night,w
  2662  038F  00A7               	movwf	_temp_dec
  2663  0390  087D               	movf	??_set_night+1,w
  2664  0391  00A8               	movwf	_temp_dec+1
  2665                           
  2666                           ;temperature.c: 397:                 temp_decrement();
  2667  0392  160A  118A  22A7  120A  118A  	fcall	_temp_decrement
  2668                           
  2669                           ;temperature.c: 399:                 night_ten_min = temp_ten; night_one_min = temp_one;
      +                           night_dec_min = temp_dec;
  2670  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0399  082B               	movf	_temp_ten,w
  2673  039A  00FC               	movwf	??_set_night
  2674  039B  087C               	movf	??_set_night,w
  2675  039C  00E5               	movwf	_night_ten_min
  2676  039D  0829               	movf	_temp_one,w
  2677  039E  00FC               	movwf	??_set_night
  2678  039F  087C               	movf	??_set_night,w
  2679  03A0  00B7               	movwf	_night_one_min
  2680  03A1  0827               	movf	_temp_dec,w
  2681  03A2  00FC               	movwf	??_set_night
  2682  03A3  087C               	movf	??_set_night,w
  2683  03A4  00B6               	movwf	_night_dec_min
  2684                           
  2685                           ;temperature.c: 401:                 writecmd_4line(0x8A);
  2686  03A5  308A               	movlw	138
  2687  03A6  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  2688                           
  2689                           ;temperature.c: 402:                 writechar(night_ten_min + '0');
  2690  03AB  0865               	movf	_night_ten_min,w
  2691  03AC  3E30               	addlw	48
  2692  03AD  160A  158A  25AF  120A  118A  	fcall	_writechar
  2693                           
  2694                           ;temperature.c: 403:                 writechar(night_one_min + '0');
  2695  03B2  0837               	movf	_night_one_min,w
  2696  03B3  3E30               	addlw	48
  2697  03B4  160A  158A  25AF  120A  118A  	fcall	_writechar
  2698                           
  2699                           ;temperature.c: 404:                 write_str(".");
  2700  03B9  303C               	movlw	low ((STR_21+13)| (0+32768))
  2701  03BA  00F3               	movwf	write_str@array
  2702  03BB  3090               	movlw	high ((STR_21+13)| (0+32768))
  2703  03BC  00F4               	movwf	write_str@array+1
  2704  03BD  160A  118A  215E  120A  118A  	fcall	_write_str
  2705                           
  2706                           ;temperature.c: 405:                 writechar(night_dec_min + '0');
  2707  03C2  0836               	movf	_night_dec_min,w
  2708  03C3  3E30               	addlw	48
  2709  03C4  160A  158A  25AF  120A  118A  	fcall	_writechar
  2710  03C9  29B8               	goto	l4596
  2711  03CA                     __end_of_set_night:	
  2712                           
  2713                           	psect	text3
  2714  0D7D                     __ptext3:	
  2715 ;; *************** function _set_day *****************
  2716 ;; Defined at:
  2717 ;;		line 160 in file "temperature.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  min_max         2    0[BANK0 ] unsigned int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 300/0
  2728 ;;		On exit  : 300/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0       2       0       0       0
  2733 ;;      Temps:          2       0       0       0       0
  2734 ;;      Totals:         2       2       0       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		_OutputPins
  2740 ;;		_button_reset
  2741 ;;		_temp_decrement
  2742 ;;		_temp_increment
  2743 ;;		_write_str
  2744 ;;		_writechar
  2745 ;;		_writecmd_4line
  2746 ;; This function is called by:
  2747 ;;		_temp_setting
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _set_day
  2753  0D7D                     _set_day:	
  2754                           
  2755                           ;temperature.c: 161:     writecmd_4line(0x1);
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _set_day: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2759  0D7D  3001               	movlw	1
  2760  0D7E  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2761                           
  2762                           ;temperature.c: 162:     writecmd_4line(0x80);
  2763  0D83  3080               	movlw	128
  2764  0D84  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2765                           
  2766                           ;temperature.c: 163:     write_str("Day Settings");
  2767  0D89  3069               	movlw	low (STR_43| (0+32768))
  2768  0D8A  00F3               	movwf	write_str@array
  2769  0D8B  3090               	movlw	high (STR_43| (0+32768))
  2770  0D8C  00F4               	movwf	write_str@array+1
  2771  0D8D  160A  118A  215E  120A  158A  	fcall	_write_str
  2772                           
  2773                           ;temperature.c: 164:     writecmd_4line(0x90);
  2774  0D92  3090               	movlw	144
  2775  0D93  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2776                           
  2777                           ;temperature.c: 165:     write_str("Max:");
  2778  0D98  30C6               	movlw	low (STR_44| (0+32768))
  2779  0D99  00F3               	movwf	write_str@array
  2780  0D9A  3090               	movlw	high (STR_44| (0+32768))
  2781  0D9B  00F4               	movwf	write_str@array+1
  2782  0D9C  160A  118A  215E  120A  158A  	fcall	_write_str
  2783                           
  2784                           ;temperature.c: 166:     writechar(day_ten_max + '0');
  2785  0DA1  086D               	movf	_day_ten_max,w
  2786  0DA2  3E30               	addlw	48
  2787  0DA3  160A  158A  25AF  120A  158A  	fcall	_writechar
  2788                           
  2789                           ;temperature.c: 167:     writechar(day_one_max + '0');
  2790  0DA8  086C               	movf	_day_one_max,w
  2791  0DA9  3E30               	addlw	48
  2792  0DAA  160A  158A  25AF  120A  158A  	fcall	_writechar
  2793                           
  2794                           ;temperature.c: 168:     write_str(".");
  2795  0DAF  303C               	movlw	low ((STR_21+13)| (0+32768))
  2796  0DB0  00F3               	movwf	write_str@array
  2797  0DB1  3090               	movlw	high ((STR_21+13)| (0+32768))
  2798  0DB2  00F4               	movwf	write_str@array+1
  2799  0DB3  160A  118A  215E  120A  158A  	fcall	_write_str
  2800                           
  2801                           ;temperature.c: 169:     writechar(day_dec_max + '0');
  2802  0DB8  086B               	movf	_day_dec_max,w
  2803  0DB9  3E30               	addlw	48
  2804  0DBA  160A  158A  25AF  120A  158A  	fcall	_writechar
  2805                           
  2806                           ;temperature.c: 170:     writecmd_4line(0x88);
  2807  0DBF  3088               	movlw	136
  2808  0DC0  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2809                           
  2810                           ;temperature.c: 171:     write_str("Min:");
  2811  0DC5  30C1               	movlw	low (STR_46| (0+32768))
  2812  0DC6  00F3               	movwf	write_str@array
  2813  0DC7  3090               	movlw	high (STR_46| (0+32768))
  2814  0DC8  00F4               	movwf	write_str@array+1
  2815  0DC9  160A  118A  215E  120A  158A  	fcall	_write_str
  2816                           
  2817                           ;temperature.c: 172:     writechar(day_ten_min + '0');
  2818  0DCE  086A               	movf	_day_ten_min,w
  2819  0DCF  3E30               	addlw	48
  2820  0DD0  160A  158A  25AF  120A  158A  	fcall	_writechar
  2821                           
  2822                           ;temperature.c: 173:     writechar(day_one_min + '0');
  2823  0DD5  0869               	movf	_day_one_min,w
  2824  0DD6  3E30               	addlw	48
  2825  0DD7  160A  158A  25AF  120A  158A  	fcall	_writechar
  2826                           
  2827                           ;temperature.c: 174:     write_str(".");
  2828  0DDC  303C               	movlw	low ((STR_21+13)| (0+32768))
  2829  0DDD  00F3               	movwf	write_str@array
  2830  0DDE  3090               	movlw	high ((STR_21+13)| (0+32768))
  2831  0DDF  00F4               	movwf	write_str@array+1
  2832  0DE0  160A  118A  215E  120A  158A  	fcall	_write_str
  2833                           
  2834                           ;temperature.c: 175:     writechar(day_dec_min + '0');
  2835  0DE5  0868               	movf	_day_dec_min,w
  2836  0DE6                     L3:	
  2837  0DE6  3E30               	addlw	48
  2838  0DE7  160A  158A  25AF  120A  158A  	fcall	_writechar
  2839                           
  2840                           ;temperature.c: 177:     unsigned int min_max = 0;
  2841  0DEC  01C4               	clrf	set_day@min_max
  2842  0DED  01C5               	clrf	set_day@min_max+1
  2843  0DEE                     l4430:	
  2844                           
  2845                           ;temperature.c: 182:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2846  0DEE  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2847  0DF3  3002               	movlw	2
  2848  0DF4  0642               	xorwf	_FirstRC,w
  2849  0DF5  1D03               	btfss	3,2
  2850  0DF6  2DFE               	goto	l4442
  2851  0DF7  0343               	decf	_SecondRC,w
  2852  0DF8  1D03               	btfss	3,2
  2853  0DF9  2DFE               	goto	l4442
  2854                           
  2855                           ;temperature.c: 183:             button_reset();
  2856  0DFA  160A  158A  24EE   	fcall	_button_reset
  2857  0DFD  0008               	return
  2858  0DFE                     l4442:	
  2859  0DFE  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2860  0E03  3003               	movlw	3
  2861  0E04  0642               	xorwf	_FirstRC,w
  2862  0E05  1D03               	btfss	3,2
  2863  0E06  2E46               	goto	l4468
  2864  0E07  0343               	decf	_SecondRC,w
  2865  0E08  1D03               	btfss	3,2
  2866  0E09  2E46               	goto	l4468
  2867                           
  2868                           ;temperature.c: 189:             button_reset();
  2869  0E0A  160A  158A  24EE  120A  158A  	fcall	_button_reset
  2870                           
  2871                           ;temperature.c: 190:             writecmd_4line(0x90);
  2872  0E0F  3090               	movlw	144
  2873  0E10  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2874                           
  2875                           ;temperature.c: 191:             write_str("          ");
  2876  0E15  3006               	movlw	low ((STR_22+6)| (0+32768))
  2877  0E16  00F3               	movwf	write_str@array
  2878  0E17  3090               	movlw	high ((STR_22+6)| (0+32768))
  2879  0E18  00F4               	movwf	write_str@array+1
  2880  0E19  160A  118A  215E  120A  158A  	fcall	_write_str
  2881                           
  2882                           ;temperature.c: 192:             writecmd_4line(0x90);
  2883  0E1E  3090               	movlw	144
  2884  0E1F  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2885                           
  2886                           ;temperature.c: 193:             write_str("Max:");
  2887  0E24  30C6               	movlw	low (STR_44| (0+32768))
  2888  0E25  00F3               	movwf	write_str@array
  2889  0E26  3090               	movlw	high (STR_44| (0+32768))
  2890  0E27  00F4               	movwf	write_str@array+1
  2891  0E28  160A  118A  215E  120A  158A  	fcall	_write_str
  2892                           
  2893                           ;temperature.c: 194:             writechar(day_ten_max + '0');
  2894  0E2D  086D               	movf	_day_ten_max,w
  2895  0E2E  3E30               	addlw	48
  2896  0E2F  160A  158A  25AF  120A  158A  	fcall	_writechar
  2897                           
  2898                           ;temperature.c: 195:             writechar(day_one_max + '0');
  2899  0E34  086C               	movf	_day_one_max,w
  2900  0E35  3E30               	addlw	48
  2901  0E36  160A  158A  25AF  120A  158A  	fcall	_writechar
  2902                           
  2903                           ;temperature.c: 196:             write_str(".");
  2904  0E3B  303C               	movlw	low ((STR_21+13)| (0+32768))
  2905  0E3C  00F3               	movwf	write_str@array
  2906  0E3D  3090               	movlw	high ((STR_21+13)| (0+32768))
  2907  0E3E  00F4               	movwf	write_str@array+1
  2908  0E3F  160A  118A  215E  120A  158A  	fcall	_write_str
  2909                           
  2910                           ;temperature.c: 197:             writechar(day_dec_max + '0');
  2911  0E44  086B               	movf	_day_dec_max,w
  2912  0E45  2DE6               	goto	L3
  2913  0E46                     l4468:	
  2914  0E46  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2915  0E4B  3004               	movlw	4
  2916  0E4C  0642               	xorwf	_FirstRC,w
  2917  0E4D  1D03               	btfss	3,2
  2918  0E4E  2E98               	goto	l4494
  2919  0E4F  0343               	decf	_SecondRC,w
  2920  0E50  1D03               	btfss	3,2
  2921  0E51  2E98               	goto	l4494
  2922                           
  2923                           ;temperature.c: 205:             button_reset();
  2924  0E52  160A  158A  24EE  120A  158A  	fcall	_button_reset
  2925                           
  2926                           ;temperature.c: 206:             writecmd_4line(0x88);
  2927  0E57  3088               	movlw	136
  2928  0E58  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2929                           
  2930                           ;temperature.c: 207:             write_str("          ");
  2931  0E5D  3006               	movlw	low ((STR_22+6)| (0+32768))
  2932  0E5E  00F3               	movwf	write_str@array
  2933  0E5F  3090               	movlw	high ((STR_22+6)| (0+32768))
  2934  0E60  00F4               	movwf	write_str@array+1
  2935  0E61  160A  118A  215E  120A  158A  	fcall	_write_str
  2936                           
  2937                           ;temperature.c: 208:             writecmd_4line(0x88);
  2938  0E66  3088               	movlw	136
  2939  0E67  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  2940                           
  2941                           ;temperature.c: 209:             write_str("Min:");
  2942  0E6C  30C1               	movlw	low (STR_46| (0+32768))
  2943  0E6D  00F3               	movwf	write_str@array
  2944  0E6E  3090               	movlw	high (STR_46| (0+32768))
  2945  0E6F  00F4               	movwf	write_str@array+1
  2946  0E70  160A  118A  215E  120A  158A  	fcall	_write_str
  2947                           
  2948                           ;temperature.c: 210:             writechar(day_ten_min + '0');
  2949  0E75  086A               	movf	_day_ten_min,w
  2950  0E76  3E30               	addlw	48
  2951  0E77  160A  158A  25AF  120A  158A  	fcall	_writechar
  2952                           
  2953                           ;temperature.c: 211:             writechar(day_one_min + '0');
  2954  0E7C  0869               	movf	_day_one_min,w
  2955  0E7D  3E30               	addlw	48
  2956  0E7E  160A  158A  25AF  120A  158A  	fcall	_writechar
  2957                           
  2958                           ;temperature.c: 212:             write_str(".");
  2959  0E83  303C               	movlw	low ((STR_21+13)| (0+32768))
  2960  0E84  00F3               	movwf	write_str@array
  2961  0E85  3090               	movlw	high ((STR_21+13)| (0+32768))
  2962  0E86  00F4               	movwf	write_str@array+1
  2963  0E87  160A  118A  215E  120A  158A  	fcall	_write_str
  2964                           
  2965                           ;temperature.c: 213:             writechar(day_dec_min + '0');
  2966  0E8C  0868               	movf	_day_dec_min,w
  2967  0E8D  3E30               	addlw	48
  2968  0E8E  160A  158A  25AF  120A  158A  	fcall	_writechar
  2969                           
  2970                           ;temperature.c: 215:             min_max = 1;
  2971  0E93  3001               	movlw	1
  2972  0E94  00C4               	movwf	set_day@min_max
  2973  0E95  3000               	movlw	0
  2974  0E96  00C5               	movwf	set_day@min_max+1
  2975                           
  2976                           ;temperature.c: 216:         }
  2977  0E97  2DEE               	goto	l4430
  2978  0E98                     l4494:	
  2979  0E98  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2980  0E9D  3004               	movlw	4
  2981  0E9E  0642               	xorwf	_FirstRC,w
  2982  0E9F  1D03               	btfss	3,2
  2983  0EA0  2F4C               	goto	l4534
  2984  0EA1  3002               	movlw	2
  2985  0EA2  0643               	xorwf	_SecondRC,w
  2986  0EA3  1D03               	btfss	3,2
  2987  0EA4  2F4C               	goto	l4534
  2988                           
  2989                           ;temperature.c: 220:             button_reset();
  2990  0EA5  160A  158A  24EE  120A  158A  	fcall	_button_reset
  2991                           
  2992                           ;temperature.c: 221:             if (min_max == 0){
  2993  0EAA  0844               	movf	set_day@min_max,w
  2994  0EAB  0445               	iorwf	set_day@min_max+1,w
  2995  0EAC  1D03               	btfss	3,2
  2996  0EAD  2EFB               	goto	l4518
  2997                           
  2998                           ;temperature.c: 223:                 temp_ten = day_ten_max; temp_one = day_one_max; tem
      +                          p_dec = day_dec_max;
  2999  0EAE  086D               	movf	_day_ten_max,w
  3000  0EAF  00FC               	movwf	??_set_day
  3001  0EB0  01FD               	clrf	??_set_day+1
  3002  0EB1  087C               	movf	??_set_day,w
  3003  0EB2  00AB               	movwf	_temp_ten
  3004  0EB3  087D               	movf	??_set_day+1,w
  3005  0EB4  00AC               	movwf	_temp_ten+1
  3006  0EB5  086C               	movf	_day_one_max,w
  3007  0EB6  00FC               	movwf	??_set_day
  3008  0EB7  01FD               	clrf	??_set_day+1
  3009  0EB8  087C               	movf	??_set_day,w
  3010  0EB9  00A9               	movwf	_temp_one
  3011  0EBA  087D               	movf	??_set_day+1,w
  3012  0EBB  00AA               	movwf	_temp_one+1
  3013  0EBC  086B               	movf	_day_dec_max,w
  3014  0EBD  00FC               	movwf	??_set_day
  3015  0EBE  01FD               	clrf	??_set_day+1
  3016  0EBF  087C               	movf	??_set_day,w
  3017  0EC0  00A7               	movwf	_temp_dec
  3018  0EC1  087D               	movf	??_set_day+1,w
  3019  0EC2  00A8               	movwf	_temp_dec+1
  3020                           
  3021                           ;temperature.c: 225:                 temp_increment();
  3022  0EC3  160A  158A  26E1  120A  158A  	fcall	_temp_increment
  3023                           
  3024                           ;temperature.c: 227:                 day_ten_max = temp_ten; day_one_max = temp_one; day
      +                          _dec_max = temp_dec;
  3025  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0ECA  082B               	movf	_temp_ten,w
  3028  0ECB  00FC               	movwf	??_set_day
  3029  0ECC  087C               	movf	??_set_day,w
  3030  0ECD  00ED               	movwf	_day_ten_max
  3031  0ECE  0829               	movf	_temp_one,w
  3032  0ECF  00FC               	movwf	??_set_day
  3033  0ED0  087C               	movf	??_set_day,w
  3034  0ED1  00EC               	movwf	_day_one_max
  3035  0ED2  0827               	movf	_temp_dec,w
  3036  0ED3  00FC               	movwf	??_set_day
  3037  0ED4  087C               	movf	??_set_day,w
  3038  0ED5  00EB               	movwf	_day_dec_max
  3039                           
  3040                           ;temperature.c: 229:                 writecmd_4line(0x92);
  3041  0ED6  3092               	movlw	146
  3042  0ED7  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  3043                           
  3044                           ;temperature.c: 230:                 writechar(day_ten_max + '0');
  3045  0EDC  086D               	movf	_day_ten_max,w
  3046  0EDD  3E30               	addlw	48
  3047  0EDE  160A  158A  25AF  120A  158A  	fcall	_writechar
  3048                           
  3049                           ;temperature.c: 231:                 writechar(day_one_max + '0');
  3050  0EE3  086C               	movf	_day_one_max,w
  3051  0EE4  3E30               	addlw	48
  3052  0EE5  160A  158A  25AF  120A  158A  	fcall	_writechar
  3053                           
  3054                           ;temperature.c: 232:                 write_str(".");
  3055  0EEA  303C               	movlw	low ((STR_21+13)| (0+32768))
  3056  0EEB  00F3               	movwf	write_str@array
  3057  0EEC  3090               	movlw	high ((STR_21+13)| (0+32768))
  3058  0EED  00F4               	movwf	write_str@array+1
  3059  0EEE  160A  118A  215E  120A  158A  	fcall	_write_str
  3060                           
  3061                           ;temperature.c: 233:                 writechar(day_dec_max + '0');
  3062  0EF3  086B               	movf	_day_dec_max,w
  3063  0EF4  3E30               	addlw	48
  3064  0EF5  160A  158A  25AF  120A  158A  	fcall	_writechar
  3065                           
  3066                           ;temperature.c: 234:             }
  3067  0EFA  2DEE               	goto	l4430
  3068  0EFB                     l4518:	
  3069  0EFB  0344               	decf	set_day@min_max,w
  3070  0EFC  0445               	iorwf	set_day@min_max+1,w
  3071  0EFD  1D03               	btfss	3,2
  3072  0EFE  2DEE               	goto	l4430
  3073                           
  3074                           ;temperature.c: 237:                 temp_ten = day_ten_min; temp_one = day_one_min; tem
      +                          p_dec = day_dec_min;
  3075  0EFF  086A               	movf	_day_ten_min,w
  3076  0F00  00FC               	movwf	??_set_day
  3077  0F01  01FD               	clrf	??_set_day+1
  3078  0F02  087C               	movf	??_set_day,w
  3079  0F03  00AB               	movwf	_temp_ten
  3080  0F04  087D               	movf	??_set_day+1,w
  3081  0F05  00AC               	movwf	_temp_ten+1
  3082  0F06  0869               	movf	_day_one_min,w
  3083  0F07  00FC               	movwf	??_set_day
  3084  0F08  01FD               	clrf	??_set_day+1
  3085  0F09  087C               	movf	??_set_day,w
  3086  0F0A  00A9               	movwf	_temp_one
  3087  0F0B  087D               	movf	??_set_day+1,w
  3088  0F0C  00AA               	movwf	_temp_one+1
  3089  0F0D  0868               	movf	_day_dec_min,w
  3090  0F0E  00FC               	movwf	??_set_day
  3091  0F0F  01FD               	clrf	??_set_day+1
  3092  0F10  087C               	movf	??_set_day,w
  3093  0F11  00A7               	movwf	_temp_dec
  3094  0F12  087D               	movf	??_set_day+1,w
  3095  0F13  00A8               	movwf	_temp_dec+1
  3096                           
  3097                           ;temperature.c: 239:                 temp_increment();
  3098  0F14  160A  158A  26E1  120A  158A  	fcall	_temp_increment
  3099                           
  3100                           ;temperature.c: 241:                 day_ten_min = temp_ten; day_one_min = temp_one; day
      +                          _dec_min = temp_dec;
  3101  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0F1B  082B               	movf	_temp_ten,w
  3104  0F1C  00FC               	movwf	??_set_day
  3105  0F1D  087C               	movf	??_set_day,w
  3106  0F1E  00EA               	movwf	_day_ten_min
  3107  0F1F  0829               	movf	_temp_one,w
  3108  0F20  00FC               	movwf	??_set_day
  3109  0F21  087C               	movf	??_set_day,w
  3110  0F22  00E9               	movwf	_day_one_min
  3111  0F23  0827               	movf	_temp_dec,w
  3112  0F24  00FC               	movwf	??_set_day
  3113  0F25  087C               	movf	??_set_day,w
  3114  0F26  00E8               	movwf	_day_dec_min
  3115                           
  3116                           ;temperature.c: 243:                 writecmd_4line(0x8A);
  3117  0F27  308A               	movlw	138
  3118  0F28  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  3119                           
  3120                           ;temperature.c: 244:                 writechar(day_ten_min + '0');
  3121  0F2D  086A               	movf	_day_ten_min,w
  3122  0F2E  3E30               	addlw	48
  3123  0F2F  160A  158A  25AF  120A  158A  	fcall	_writechar
  3124                           
  3125                           ;temperature.c: 245:                 writechar(day_one_min + '0');
  3126  0F34  0869               	movf	_day_one_min,w
  3127  0F35  3E30               	addlw	48
  3128  0F36  160A  158A  25AF  120A  158A  	fcall	_writechar
  3129                           
  3130                           ;temperature.c: 246:                 write_str(".");
  3131  0F3B  303C               	movlw	low ((STR_21+13)| (0+32768))
  3132  0F3C  00F3               	movwf	write_str@array
  3133  0F3D  3090               	movlw	high ((STR_21+13)| (0+32768))
  3134  0F3E  00F4               	movwf	write_str@array+1
  3135  0F3F  160A  118A  215E  120A  158A  	fcall	_write_str
  3136                           
  3137                           ;temperature.c: 247:                 writechar(day_dec_min + '0');
  3138  0F44  0868               	movf	_day_dec_min,w
  3139  0F45  3E30               	addlw	48
  3140  0F46  160A  158A  25AF  120A  158A  	fcall	_writechar
  3141  0F4B  2DEE               	goto	l4430
  3142  0F4C                     l4534:	
  3143  0F4C  160A  118A  2260  120A  158A  	fcall	_OutputPins
  3144  0F51  3003               	movlw	3
  3145  0F52  0642               	xorwf	_FirstRC,w
  3146  0F53  1D03               	btfss	3,2
  3147  0F54  2DEE               	goto	l4430
  3148  0F55  3002               	movlw	2
  3149  0F56  0643               	xorwf	_SecondRC,w
  3150  0F57  1D03               	btfss	3,2
  3151  0F58  2DEE               	goto	l4430
  3152                           
  3153                           ;temperature.c: 253:             button_reset();
  3154  0F59  160A  158A  24EE  120A  158A  	fcall	_button_reset
  3155                           
  3156                           ;temperature.c: 254:             if (min_max == 0){
  3157  0F5E  0844               	movf	set_day@min_max,w
  3158  0F5F  0445               	iorwf	set_day@min_max+1,w
  3159  0F60  1D03               	btfss	3,2
  3160  0F61  2FAF               	goto	l4558
  3161                           
  3162                           ;temperature.c: 256:                 temp_ten = day_ten_max; temp_one = day_one_max; tem
      +                          p_dec = day_dec_max;
  3163  0F62  086D               	movf	_day_ten_max,w
  3164  0F63  00FC               	movwf	??_set_day
  3165  0F64  01FD               	clrf	??_set_day+1
  3166  0F65  087C               	movf	??_set_day,w
  3167  0F66  00AB               	movwf	_temp_ten
  3168  0F67  087D               	movf	??_set_day+1,w
  3169  0F68  00AC               	movwf	_temp_ten+1
  3170  0F69  086C               	movf	_day_one_max,w
  3171  0F6A  00FC               	movwf	??_set_day
  3172  0F6B  01FD               	clrf	??_set_day+1
  3173  0F6C  087C               	movf	??_set_day,w
  3174  0F6D  00A9               	movwf	_temp_one
  3175  0F6E  087D               	movf	??_set_day+1,w
  3176  0F6F  00AA               	movwf	_temp_one+1
  3177  0F70  086B               	movf	_day_dec_max,w
  3178  0F71  00FC               	movwf	??_set_day
  3179  0F72  01FD               	clrf	??_set_day+1
  3180  0F73  087C               	movf	??_set_day,w
  3181  0F74  00A7               	movwf	_temp_dec
  3182  0F75  087D               	movf	??_set_day+1,w
  3183  0F76  00A8               	movwf	_temp_dec+1
  3184                           
  3185                           ;temperature.c: 258:                 temp_decrement();
  3186  0F77  160A  118A  22A7  120A  158A  	fcall	_temp_decrement
  3187                           
  3188                           ;temperature.c: 260:                 day_ten_max = temp_ten; day_one_max = temp_one; day
      +                          _dec_max = temp_dec;
  3189  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0F7E  082B               	movf	_temp_ten,w
  3192  0F7F  00FC               	movwf	??_set_day
  3193  0F80  087C               	movf	??_set_day,w
  3194  0F81  00ED               	movwf	_day_ten_max
  3195  0F82  0829               	movf	_temp_one,w
  3196  0F83  00FC               	movwf	??_set_day
  3197  0F84  087C               	movf	??_set_day,w
  3198  0F85  00EC               	movwf	_day_one_max
  3199  0F86  0827               	movf	_temp_dec,w
  3200  0F87  00FC               	movwf	??_set_day
  3201  0F88  087C               	movf	??_set_day,w
  3202  0F89  00EB               	movwf	_day_dec_max
  3203                           
  3204                           ;temperature.c: 262:                 writecmd_4line(0x92);
  3205  0F8A  3092               	movlw	146
  3206  0F8B  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  3207                           
  3208                           ;temperature.c: 263:                 writechar(day_ten_max + '0');
  3209  0F90  086D               	movf	_day_ten_max,w
  3210  0F91  3E30               	addlw	48
  3211  0F92  160A  158A  25AF  120A  158A  	fcall	_writechar
  3212                           
  3213                           ;temperature.c: 264:                 writechar(day_one_max + '0');
  3214  0F97  086C               	movf	_day_one_max,w
  3215  0F98  3E30               	addlw	48
  3216  0F99  160A  158A  25AF  120A  158A  	fcall	_writechar
  3217                           
  3218                           ;temperature.c: 265:                 write_str(".");
  3219  0F9E  303C               	movlw	low ((STR_21+13)| (0+32768))
  3220  0F9F  00F3               	movwf	write_str@array
  3221  0FA0  3090               	movlw	high ((STR_21+13)| (0+32768))
  3222  0FA1  00F4               	movwf	write_str@array+1
  3223  0FA2  160A  118A  215E  120A  158A  	fcall	_write_str
  3224                           
  3225                           ;temperature.c: 266:                 writechar(day_dec_max + '0');
  3226  0FA7  086B               	movf	_day_dec_max,w
  3227  0FA8  3E30               	addlw	48
  3228  0FA9  160A  158A  25AF  120A  158A  	fcall	_writechar
  3229                           
  3230                           ;temperature.c: 267:             }
  3231  0FAE  2DEE               	goto	l4430
  3232  0FAF                     l4558:	
  3233  0FAF  0344               	decf	set_day@min_max,w
  3234  0FB0  0445               	iorwf	set_day@min_max+1,w
  3235  0FB1  1D03               	btfss	3,2
  3236  0FB2  2DEE               	goto	l4430
  3237                           
  3238                           ;temperature.c: 270:                 temp_ten = day_ten_min; temp_one = day_one_min; tem
      +                          p_dec = day_dec_min;
  3239  0FB3  086A               	movf	_day_ten_min,w
  3240  0FB4  00FC               	movwf	??_set_day
  3241  0FB5  01FD               	clrf	??_set_day+1
  3242  0FB6  087C               	movf	??_set_day,w
  3243  0FB7  00AB               	movwf	_temp_ten
  3244  0FB8  087D               	movf	??_set_day+1,w
  3245  0FB9  00AC               	movwf	_temp_ten+1
  3246  0FBA  0869               	movf	_day_one_min,w
  3247  0FBB  00FC               	movwf	??_set_day
  3248  0FBC  01FD               	clrf	??_set_day+1
  3249  0FBD  087C               	movf	??_set_day,w
  3250  0FBE  00A9               	movwf	_temp_one
  3251  0FBF  087D               	movf	??_set_day+1,w
  3252  0FC0  00AA               	movwf	_temp_one+1
  3253  0FC1  0868               	movf	_day_dec_min,w
  3254  0FC2  00FC               	movwf	??_set_day
  3255  0FC3  01FD               	clrf	??_set_day+1
  3256  0FC4  087C               	movf	??_set_day,w
  3257  0FC5  00A7               	movwf	_temp_dec
  3258  0FC6  087D               	movf	??_set_day+1,w
  3259  0FC7  00A8               	movwf	_temp_dec+1
  3260                           
  3261                           ;temperature.c: 272:                 temp_decrement();
  3262  0FC8  160A  118A  22A7  120A  158A  	fcall	_temp_decrement
  3263                           
  3264                           ;temperature.c: 274:                 day_ten_min = temp_ten; day_one_min = temp_one; day
      +                          _dec_min = temp_dec;
  3265  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0FCF  082B               	movf	_temp_ten,w
  3268  0FD0  00FC               	movwf	??_set_day
  3269  0FD1  087C               	movf	??_set_day,w
  3270  0FD2  00EA               	movwf	_day_ten_min
  3271  0FD3  0829               	movf	_temp_one,w
  3272  0FD4  00FC               	movwf	??_set_day
  3273  0FD5  087C               	movf	??_set_day,w
  3274  0FD6  00E9               	movwf	_day_one_min
  3275  0FD7  0827               	movf	_temp_dec,w
  3276  0FD8  00FC               	movwf	??_set_day
  3277  0FD9  087C               	movf	??_set_day,w
  3278  0FDA  00E8               	movwf	_day_dec_min
  3279                           
  3280                           ;temperature.c: 276:                 writecmd_4line(0x8A);
  3281  0FDB  308A               	movlw	138
  3282  0FDC  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  3283                           
  3284                           ;temperature.c: 277:                 writechar(day_ten_min + '0');
  3285  0FE1  086A               	movf	_day_ten_min,w
  3286  0FE2  3E30               	addlw	48
  3287  0FE3  160A  158A  25AF  120A  158A  	fcall	_writechar
  3288                           
  3289                           ;temperature.c: 278:                 writechar(day_one_min + '0');
  3290  0FE8  0869               	movf	_day_one_min,w
  3291  0FE9  3E30               	addlw	48
  3292  0FEA  160A  158A  25AF  120A  158A  	fcall	_writechar
  3293                           
  3294                           ;temperature.c: 279:                 write_str(".");
  3295  0FEF  303C               	movlw	low ((STR_21+13)| (0+32768))
  3296  0FF0  00F3               	movwf	write_str@array
  3297  0FF1  3090               	movlw	high ((STR_21+13)| (0+32768))
  3298  0FF2  00F4               	movwf	write_str@array+1
  3299  0FF3  160A  118A  215E  120A  158A  	fcall	_write_str
  3300                           
  3301                           ;temperature.c: 280:                 writechar(day_dec_min + '0');
  3302  0FF8  0868               	movf	_day_dec_min,w
  3303  0FF9  3E30               	addlw	48
  3304  0FFA  160A  158A  25AF  120A  158A  	fcall	_writechar
  3305  0FFF  2DEE               	goto	l4430
  3306  1000                     __end_of_set_day:	
  3307                           
  3308                           	psect	text4
  3309  1EE1                     __ptext4:	
  3310 ;; *************** function _temp_increment *****************
  3311 ;; Defined at:
  3312 ;;		line 411 in file "temperature.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 300/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         0       0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		_delay_main
  3335 ;; This function is called by:
  3336 ;;		_set_day
  3337 ;;		_set_night
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _temp_increment
  3343  1EE1                     _temp_increment:	
  3344                           
  3345                           ;temperature.c: 413:     if (temp_ten != 4){
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _temp_increment: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3349  1EE1  3004               	movlw	4
  3350  1EE2  062B               	xorwf	_temp_ten,w
  3351  1EE3  042C               	iorwf	_temp_ten+1,w
  3352  1EE4  1903               	btfsc	3,2
  3353  1EE5  2EFA               	goto	l3806
  3354                           
  3355                           ;temperature.c: 416:         if (temp_dec == 9){
  3356  1EE6  3009               	movlw	9
  3357  1EE7  0627               	xorwf	_temp_dec,w
  3358  1EE8  0428               	iorwf	_temp_dec+1,w
  3359  1EE9  1D03               	btfss	3,2
  3360  1EEA  2F05               	goto	l3812
  3361                           
  3362                           ;temperature.c: 417:             temp_dec = 0;
  3363  1EEB  01A7               	clrf	_temp_dec
  3364  1EEC  01A8               	clrf	_temp_dec+1
  3365                           
  3366                           ;temperature.c: 420:             if (temp_one == 9){
  3367  1EED  3009               	movlw	9
  3368  1EEE  0629               	xorwf	_temp_one,w
  3369  1EEF  042A               	iorwf	_temp_one+1,w
  3370  1EF0  1D03               	btfss	3,2
  3371  1EF1  2EFE               	goto	l3808
  3372                           
  3373                           ;temperature.c: 421:                 temp_one = 0;
  3374  1EF2  01A9               	clrf	_temp_one
  3375  1EF3  01AA               	clrf	_temp_one+1
  3376                           
  3377                           ;temperature.c: 424:                 temp_ten++;
  3378  1EF4  3001               	movlw	1
  3379  1EF5  07AB               	addwf	_temp_ten,f
  3380  1EF6  1803               	skipnc
  3381  1EF7  0AAC               	incf	_temp_ten+1,f
  3382  1EF8  3000               	movlw	0
  3383  1EF9  07AC               	addwf	_temp_ten+1,f
  3384  1EFA                     l3806:	
  3385                           
  3386                           ;temperature.c: 425:                 delay_main();
  3387  1EFA  160A  158A  256F   	fcall	_delay_main
  3388                           
  3389                           ;temperature.c: 426:             }
  3390  1EFD  0008               	return
  3391  1EFE                     l3808:	
  3392                           
  3393                           ;temperature.c: 428:                 temp_one++;
  3394  1EFE  3001               	movlw	1
  3395  1EFF  07A9               	addwf	_temp_one,f
  3396  1F00  1803               	skipnc
  3397  1F01  0AAA               	incf	_temp_one+1,f
  3398  1F02  3000               	movlw	0
  3399  1F03  07AA               	addwf	_temp_one+1,f
  3400  1F04  2EFA               	goto	l3806
  3401  1F05                     l3812:	
  3402                           
  3403                           ;temperature.c: 433:             temp_dec++;
  3404  1F05  3001               	movlw	1
  3405  1F06  07A7               	addwf	_temp_dec,f
  3406  1F07  1803               	skipnc
  3407  1F08  0AA8               	incf	_temp_dec+1,f
  3408  1F09  3000               	movlw	0
  3409  1F0A  07A8               	addwf	_temp_dec+1,f
  3410  1F0B  2EFA               	goto	l3806
  3411  1F0C                     __end_of_temp_increment:	
  3412                           
  3413                           	psect	text5
  3414  12A7                     __ptext5:	
  3415 ;; *************** function _temp_decrement *****************
  3416 ;; Defined at:
  3417 ;;		line 442 in file "temperature.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  end             2    2[COMMON] unsigned int 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 300/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         0       0       0       0       0
  3432 ;;      Locals:         2       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0
  3434 ;;      Totals:         2       0       0       0       0
  3435 ;;Total ram usage:        2 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    1
  3438 ;; This function calls:
  3439 ;;		_delay_main
  3440 ;; This function is called by:
  3441 ;;		_set_day
  3442 ;;		_set_night
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _temp_decrement
  3448  12A7                     _temp_decrement:	
  3449                           
  3450                           ;temperature.c: 443:     unsigned int end = 0;
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _temp_decrement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3454  12A7  01F2               	clrf	temp_decrement@end
  3455  12A8  01F3               	clrf	temp_decrement@end+1
  3456                           
  3457                           ;temperature.c: 445:     if (temp_ten == 1){
  3458  12A9  032B               	decf	_temp_ten,w
  3459  12AA  042C               	iorwf	_temp_ten+1,w
  3460  12AB  1D03               	btfss	3,2
  3461  12AC  2AC8               	goto	l3832
  3462                           
  3463                           ;temperature.c: 446:         end++;
  3464  12AD  3001               	movlw	1
  3465  12AE  07F2               	addwf	temp_decrement@end,f
  3466  12AF  1803               	skipnc
  3467  12B0  0AF3               	incf	temp_decrement@end+1,f
  3468  12B1  3000               	movlw	0
  3469  12B2  07F3               	addwf	temp_decrement@end+1,f
  3470                           
  3471                           ;temperature.c: 447:         if (temp_one == 5){
  3472  12B3  3005               	movlw	5
  3473  12B4  0629               	xorwf	_temp_one,w
  3474  12B5  042A               	iorwf	_temp_one+1,w
  3475  12B6  1D03               	btfss	3,2
  3476  12B7  2AC8               	goto	l3832
  3477                           
  3478                           ;temperature.c: 448:             end++;
  3479  12B8  3001               	movlw	1
  3480  12B9  07F2               	addwf	temp_decrement@end,f
  3481  12BA  1803               	skipnc
  3482  12BB  0AF3               	incf	temp_decrement@end+1,f
  3483  12BC  3000               	movlw	0
  3484  12BD  07F3               	addwf	temp_decrement@end+1,f
  3485                           
  3486                           ;temperature.c: 449:             if (temp_dec == 0){
  3487  12BE  0827               	movf	_temp_dec,w
  3488  12BF  0428               	iorwf	_temp_dec+1,w
  3489  12C0  1D03               	btfss	3,2
  3490  12C1  2AC8               	goto	l3832
  3491                           
  3492                           ;temperature.c: 450:                 end++;
  3493  12C2  3001               	movlw	1
  3494  12C3  07F2               	addwf	temp_decrement@end,f
  3495  12C4  1803               	skipnc
  3496  12C5  0AF3               	incf	temp_decrement@end+1,f
  3497  12C6  3000               	movlw	0
  3498  12C7  07F3               	addwf	temp_decrement@end+1,f
  3499  12C8                     l3832:	
  3500                           
  3501                           ;temperature.c: 455:     if (end != 3){
  3502  12C8  3003               	movlw	3
  3503  12C9  0672               	xorwf	temp_decrement@end,w
  3504  12CA  0473               	iorwf	temp_decrement@end+1,w
  3505  12CB  1903               	btfsc	3,2
  3506  12CC  2AE3               	goto	l3842
  3507                           
  3508                           ;temperature.c: 458:         if (temp_dec == 0){
  3509  12CD  0827               	movf	_temp_dec,w
  3510  12CE  0428               	iorwf	_temp_dec+1,w
  3511  12CF  1D03               	btfss	3,2
  3512  12D0  2AEE               	goto	l3848
  3513                           
  3514                           ;temperature.c: 459:             temp_dec = 9;
  3515  12D1  3009               	movlw	9
  3516  12D2  00A7               	movwf	_temp_dec
  3517  12D3  3000               	movlw	0
  3518  12D4  00A8               	movwf	_temp_dec+1
  3519                           
  3520                           ;temperature.c: 462:             if (temp_one == 0){
  3521  12D5  0829               	movf	_temp_one,w
  3522  12D6  042A               	iorwf	_temp_one+1,w
  3523  12D7  1D03               	btfss	3,2
  3524  12D8  2AE7               	goto	l3844
  3525                           
  3526                           ;temperature.c: 463:                 temp_one = 9;
  3527  12D9  3009               	movlw	9
  3528  12DA  00A9               	movwf	_temp_one
  3529  12DB  3000               	movlw	0
  3530  12DC  00AA               	movwf	_temp_one+1
  3531                           
  3532                           ;temperature.c: 466:                 temp_ten--;
  3533  12DD  3001               	movlw	1
  3534  12DE  02AB               	subwf	_temp_ten,f
  3535  12DF  3000               	movlw	0
  3536  12E0  1C03               	skipc
  3537  12E1  03AC               	decf	_temp_ten+1,f
  3538  12E2  02AC               	subwf	_temp_ten+1,f
  3539  12E3                     l3842:	
  3540                           
  3541                           ;temperature.c: 467:                 delay_main();
  3542  12E3  160A  158A  256F   	fcall	_delay_main
  3543                           
  3544                           ;temperature.c: 468:             }
  3545  12E6  0008               	return
  3546  12E7                     l3844:	
  3547                           
  3548                           ;temperature.c: 470:                 temp_one--;
  3549  12E7  3001               	movlw	1
  3550  12E8  02A9               	subwf	_temp_one,f
  3551  12E9  3000               	movlw	0
  3552  12EA  1C03               	skipc
  3553  12EB  03AA               	decf	_temp_one+1,f
  3554  12EC  02AA               	subwf	_temp_one+1,f
  3555  12ED  2AE3               	goto	l3842
  3556  12EE                     l3848:	
  3557                           
  3558                           ;temperature.c: 475:             temp_dec--;
  3559  12EE  3001               	movlw	1
  3560  12EF  02A7               	subwf	_temp_dec,f
  3561  12F0  3000               	movlw	0
  3562  12F1  1C03               	skipc
  3563  12F2  03A8               	decf	_temp_dec+1,f
  3564  12F3  02A8               	subwf	_temp_dec+1,f
  3565  12F4  2AE3               	goto	l3842
  3566  12F5                     __end_of_temp_decrement:	
  3567                           
  3568                           	psect	text6
  3569  1664                     __ptext6:	
  3570 ;; *************** function _temp_night *****************
  3571 ;; Defined at:
  3572 ;;		line 502 in file "temperature.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  temp            2   12[BANK0 ] unsigned int 
  3577 ;;  temp_min        2   10[BANK0 ] unsigned int 
  3578 ;;  temp_max        2    8[BANK0 ] unsigned int 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 300/0
  3585 ;;		On exit  : 300/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       6       0       0       0
  3590 ;;      Temps:          0       8       0       0       0
  3591 ;;      Totals:         0      14       0       0       0
  3592 ;;Total ram usage:       14 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    4
  3595 ;; This function calls:
  3596 ;;		_OK
  3597 ;;		___wmul
  3598 ;;		_cool
  3599 ;;		_heat
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _temp_night
  3607  1664                     _temp_night:	
  3608                           
  3609                           ;temperature.c: 503:     unsigned int temp = shi*100 + ge*10 + shifen;
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _temp_night: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613  1664  083B               	movf	_shi,w
  3614  1665  00C4               	movwf	??_temp_night
  3615  1666  01C5               	clrf	??_temp_night+1
  3616  1667  0844               	movf	??_temp_night,w
  3617  1668  00F0               	movwf	___wmul@multiplier
  3618  1669  0845               	movf	??_temp_night+1,w
  3619  166A  00F1               	movwf	___wmul@multiplier+1
  3620  166B  3064               	movlw	100
  3621  166C  00F2               	movwf	___wmul@multiplicand
  3622  166D  3000               	movlw	0
  3623  166E  00F3               	movwf	___wmul@multiplicand+1
  3624  166F  160A  118A  2107  160A  118A  	fcall	___wmul
  3625  1674  0870               	movf	?___wmul,w
  3626  1675  00C6               	movwf	??_temp_night+2
  3627  1676  0871               	movf	?___wmul+1,w
  3628  1677  00C7               	movwf	??_temp_night+3
  3629  1678  083A               	movf	_ge,w
  3630  1679  00C8               	movwf	??_temp_night+4
  3631  167A  01C9               	clrf	??_temp_night+5
  3632  167B  0848               	movf	??_temp_night+4,w
  3633  167C  00F0               	movwf	___wmul@multiplier
  3634  167D  0849               	movf	??_temp_night+5,w
  3635  167E  00F1               	movwf	___wmul@multiplier+1
  3636  167F  300A               	movlw	10
  3637  1680  00F2               	movwf	___wmul@multiplicand
  3638  1681  3000               	movlw	0
  3639  1682  00F3               	movwf	___wmul@multiplicand+1
  3640  1683  160A  118A  2107  160A  118A  	fcall	___wmul
  3641  1688  0870               	movf	?___wmul,w
  3642  1689  0746               	addwf	??_temp_night+2,w
  3643  168A  00CA               	movwf	??_temp_night+6
  3644  168B  0871               	movf	?___wmul+1,w
  3645  168C  1803               	skipnc
  3646  168D  0A71               	incf	?___wmul+1,w
  3647  168E  0747               	addwf	??_temp_night+3,w
  3648  168F  00CB               	movwf	??_temp_night+7
  3649  1690  0839               	movf	_shifen,w
  3650  1691  074A               	addwf	??_temp_night+6,w
  3651  1692  00D0               	movwf	temp_night@temp
  3652  1693  3000               	movlw	0
  3653  1694  1803               	skipnc
  3654  1695  3001               	movlw	1
  3655  1696  074B               	addwf	??_temp_night+7,w
  3656  1697  00D1               	movwf	temp_night@temp+1
  3657                           
  3658                           ;temperature.c: 504:     unsigned int temp_max = night_ten_max*100 + night_one_max*10 + 
      +                          night_dec_max;
  3659  1698  0867               	movf	_night_ten_max,w
  3660  1699  00C4               	movwf	??_temp_night
  3661  169A  01C5               	clrf	??_temp_night+1
  3662  169B  0844               	movf	??_temp_night,w
  3663  169C  00F0               	movwf	___wmul@multiplier
  3664  169D  0845               	movf	??_temp_night+1,w
  3665  169E  00F1               	movwf	___wmul@multiplier+1
  3666  169F  3064               	movlw	100
  3667  16A0  00F2               	movwf	___wmul@multiplicand
  3668  16A1  3000               	movlw	0
  3669  16A2  00F3               	movwf	___wmul@multiplicand+1
  3670  16A3  160A  118A  2107  160A  118A  	fcall	___wmul
  3671  16A8  0870               	movf	?___wmul,w
  3672  16A9  00C6               	movwf	??_temp_night+2
  3673  16AA  0871               	movf	?___wmul+1,w
  3674  16AB  00C7               	movwf	??_temp_night+3
  3675  16AC  0866               	movf	_night_one_max,w
  3676  16AD  00C8               	movwf	??_temp_night+4
  3677  16AE  01C9               	clrf	??_temp_night+5
  3678  16AF  0848               	movf	??_temp_night+4,w
  3679  16B0  00F0               	movwf	___wmul@multiplier
  3680  16B1  0849               	movf	??_temp_night+5,w
  3681  16B2  00F1               	movwf	___wmul@multiplier+1
  3682  16B3  300A               	movlw	10
  3683  16B4  00F2               	movwf	___wmul@multiplicand
  3684  16B5  3000               	movlw	0
  3685  16B6  00F3               	movwf	___wmul@multiplicand+1
  3686  16B7  160A  118A  2107  160A  118A  	fcall	___wmul
  3687  16BC  0870               	movf	?___wmul,w
  3688  16BD  0746               	addwf	??_temp_night+2,w
  3689  16BE  00CA               	movwf	??_temp_night+6
  3690  16BF  0871               	movf	?___wmul+1,w
  3691  16C0  1803               	skipnc
  3692  16C1  0A71               	incf	?___wmul+1,w
  3693  16C2  0747               	addwf	??_temp_night+3,w
  3694  16C3  00CB               	movwf	??_temp_night+7
  3695  16C4  0838               	movf	_night_dec_max,w
  3696  16C5  074A               	addwf	??_temp_night+6,w
  3697  16C6  00CC               	movwf	temp_night@temp_max
  3698  16C7  3000               	movlw	0
  3699  16C8  1803               	skipnc
  3700  16C9  3001               	movlw	1
  3701  16CA  074B               	addwf	??_temp_night+7,w
  3702  16CB  00CD               	movwf	temp_night@temp_max+1
  3703                           
  3704                           ;temperature.c: 505:     unsigned int temp_min = night_ten_min*100 + night_one_min*10 + 
      +                          night_dec_min;
  3705  16CC  0865               	movf	_night_ten_min,w
  3706  16CD  00C4               	movwf	??_temp_night
  3707  16CE  01C5               	clrf	??_temp_night+1
  3708  16CF  0844               	movf	??_temp_night,w
  3709  16D0  00F0               	movwf	___wmul@multiplier
  3710  16D1  0845               	movf	??_temp_night+1,w
  3711  16D2  00F1               	movwf	___wmul@multiplier+1
  3712  16D3  3064               	movlw	100
  3713  16D4  00F2               	movwf	___wmul@multiplicand
  3714  16D5  3000               	movlw	0
  3715  16D6  00F3               	movwf	___wmul@multiplicand+1
  3716  16D7  160A  118A  2107  160A  118A  	fcall	___wmul
  3717  16DC  0870               	movf	?___wmul,w
  3718  16DD  00C6               	movwf	??_temp_night+2
  3719  16DE  0871               	movf	?___wmul+1,w
  3720  16DF  00C7               	movwf	??_temp_night+3
  3721  16E0  0837               	movf	_night_one_min,w
  3722  16E1  00C8               	movwf	??_temp_night+4
  3723  16E2  01C9               	clrf	??_temp_night+5
  3724  16E3  0848               	movf	??_temp_night+4,w
  3725  16E4  00F0               	movwf	___wmul@multiplier
  3726  16E5  0849               	movf	??_temp_night+5,w
  3727  16E6  00F1               	movwf	___wmul@multiplier+1
  3728  16E7  300A               	movlw	10
  3729  16E8  00F2               	movwf	___wmul@multiplicand
  3730  16E9  3000               	movlw	0
  3731  16EA  00F3               	movwf	___wmul@multiplicand+1
  3732  16EB  160A  118A  2107  160A  118A  	fcall	___wmul
  3733  16F0  0870               	movf	?___wmul,w
  3734  16F1  0746               	addwf	??_temp_night+2,w
  3735  16F2  00CA               	movwf	??_temp_night+6
  3736  16F3  0871               	movf	?___wmul+1,w
  3737  16F4  1803               	skipnc
  3738  16F5  0A71               	incf	?___wmul+1,w
  3739  16F6  0747               	addwf	??_temp_night+3,w
  3740  16F7  00CB               	movwf	??_temp_night+7
  3741  16F8  0836               	movf	_night_dec_min,w
  3742  16F9  074A               	addwf	??_temp_night+6,w
  3743  16FA  00CE               	movwf	temp_night@temp_min
  3744  16FB  3000               	movlw	0
  3745  16FC  1803               	skipnc
  3746  16FD  3001               	movlw	1
  3747  16FE  074B               	addwf	??_temp_night+7,w
  3748  16FF  00CF               	movwf	temp_night@temp_min+1
  3749                           
  3750                           ;temperature.c: 506:     if (temp > temp_max){
  3751  1700  0851               	movf	temp_night@temp+1,w
  3752  1701  024D               	subwf	temp_night@temp_max+1,w
  3753  1702  1D03               	skipz
  3754  1703  2F06               	goto	u5745
  3755  1704  0850               	movf	temp_night@temp,w
  3756  1705  024C               	subwf	temp_night@temp_max,w
  3757  1706                     u5745:	
  3758  1706  1803               	skipnc
  3759  1707  2F0C               	goto	l5652
  3760                           
  3761                           ;temperature.c: 507:         cool();
  3762  1708  160A  158A  25E9   	fcall	_cool
  3763                           
  3764                           ;temperature.c: 508:     }
  3765  170B  0008               	return
  3766  170C                     l5652:	
  3767  170C  084F               	movf	temp_night@temp_min+1,w
  3768  170D  0251               	subwf	temp_night@temp+1,w
  3769  170E  1D03               	skipz
  3770  170F  2F12               	goto	u5755
  3771  1710  084E               	movf	temp_night@temp_min,w
  3772  1711  0250               	subwf	temp_night@temp,w
  3773  1712                     u5755:	
  3774  1712  1803               	skipnc
  3775  1713  2F18               	goto	l5656
  3776                           
  3777                           ;temperature.c: 510:         heat();
  3778  1714  160A  158A  2607   	fcall	_heat
  3779                           
  3780                           ;temperature.c: 511:     }
  3781  1717  0008               	return
  3782  1718                     l5656:	
  3783  1718  0851               	movf	temp_night@temp+1,w
  3784  1719  024D               	subwf	temp_night@temp_max+1,w
  3785  171A  1D03               	skipz
  3786  171B  2F1E               	goto	u5765
  3787  171C  0850               	movf	temp_night@temp,w
  3788  171D  024C               	subwf	temp_night@temp_max,w
  3789  171E                     u5765:	
  3790  171E  1C03               	skipc
  3791  171F  0008               	return
  3792                           
  3793                           ;temperature.c: 513:         if (temp >= temp_min){
  3794  1720  084F               	movf	temp_night@temp_min+1,w
  3795  1721  0251               	subwf	temp_night@temp+1,w
  3796  1722  1D03               	skipz
  3797  1723  2F26               	goto	u5775
  3798  1724  084E               	movf	temp_night@temp_min,w
  3799  1725  0250               	subwf	temp_night@temp,w
  3800  1726                     u5775:	
  3801  1726  1C03               	skipc
  3802  1727  0008               	return
  3803                           
  3804                           ;temperature.c: 514:             OK();
  3805  1728  160A  158A  255D   	fcall	_OK
  3806  172B  0008               	return
  3807  172C                     __end_of_temp_night:	
  3808                           
  3809                           	psect	text7
  3810  159C                     __ptext7:	
  3811 ;; *************** function _temp_day *****************
  3812 ;; Defined at:
  3813 ;;		line 485 in file "temperature.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  temp            2   12[BANK0 ] unsigned int 
  3818 ;;  temp_min        2   10[BANK0 ] unsigned int 
  3819 ;;  temp_max        2    8[BANK0 ] unsigned int 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 300/0
  3826 ;;		On exit  : 300/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       0       0       0       0
  3830 ;;      Locals:         0       6       0       0       0
  3831 ;;      Temps:          0       8       0       0       0
  3832 ;;      Totals:         0      14       0       0       0
  3833 ;;Total ram usage:       14 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    4
  3836 ;; This function calls:
  3837 ;;		_OK
  3838 ;;		___wmul
  3839 ;;		_cool
  3840 ;;		_heat
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _temp_day
  3848  159C                     _temp_day:	
  3849                           
  3850                           ;temperature.c: 486:     unsigned int temp = shi*100 + ge*10 + shifen;
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _temp_day: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3854  159C  083B               	movf	_shi,w
  3855  159D  00C4               	movwf	??_temp_day
  3856  159E  01C5               	clrf	??_temp_day+1
  3857  159F  0844               	movf	??_temp_day,w
  3858  15A0  00F0               	movwf	___wmul@multiplier
  3859  15A1  0845               	movf	??_temp_day+1,w
  3860  15A2  00F1               	movwf	___wmul@multiplier+1
  3861  15A3  3064               	movlw	100
  3862  15A4  00F2               	movwf	___wmul@multiplicand
  3863  15A5  3000               	movlw	0
  3864  15A6  00F3               	movwf	___wmul@multiplicand+1
  3865  15A7  160A  118A  2107  160A  118A  	fcall	___wmul
  3866  15AC  0870               	movf	?___wmul,w
  3867  15AD  00C6               	movwf	??_temp_day+2
  3868  15AE  0871               	movf	?___wmul+1,w
  3869  15AF  00C7               	movwf	??_temp_day+3
  3870  15B0  083A               	movf	_ge,w
  3871  15B1  00C8               	movwf	??_temp_day+4
  3872  15B2  01C9               	clrf	??_temp_day+5
  3873  15B3  0848               	movf	??_temp_day+4,w
  3874  15B4  00F0               	movwf	___wmul@multiplier
  3875  15B5  0849               	movf	??_temp_day+5,w
  3876  15B6  00F1               	movwf	___wmul@multiplier+1
  3877  15B7  300A               	movlw	10
  3878  15B8  00F2               	movwf	___wmul@multiplicand
  3879  15B9  3000               	movlw	0
  3880  15BA  00F3               	movwf	___wmul@multiplicand+1
  3881  15BB  160A  118A  2107  160A  118A  	fcall	___wmul
  3882  15C0  0870               	movf	?___wmul,w
  3883  15C1  0746               	addwf	??_temp_day+2,w
  3884  15C2  00CA               	movwf	??_temp_day+6
  3885  15C3  0871               	movf	?___wmul+1,w
  3886  15C4  1803               	skipnc
  3887  15C5  0A71               	incf	?___wmul+1,w
  3888  15C6  0747               	addwf	??_temp_day+3,w
  3889  15C7  00CB               	movwf	??_temp_day+7
  3890  15C8  0839               	movf	_shifen,w
  3891  15C9  074A               	addwf	??_temp_day+6,w
  3892  15CA  00D0               	movwf	temp_day@temp
  3893  15CB  3000               	movlw	0
  3894  15CC  1803               	skipnc
  3895  15CD  3001               	movlw	1
  3896  15CE  074B               	addwf	??_temp_day+7,w
  3897  15CF  00D1               	movwf	temp_day@temp+1
  3898                           
  3899                           ;temperature.c: 487:     unsigned int temp_max = day_ten_max*100 + day_one_max*10 + day_
      +                          dec_max;
  3900  15D0  086D               	movf	_day_ten_max,w
  3901  15D1  00C4               	movwf	??_temp_day
  3902  15D2  01C5               	clrf	??_temp_day+1
  3903  15D3  0844               	movf	??_temp_day,w
  3904  15D4  00F0               	movwf	___wmul@multiplier
  3905  15D5  0845               	movf	??_temp_day+1,w
  3906  15D6  00F1               	movwf	___wmul@multiplier+1
  3907  15D7  3064               	movlw	100
  3908  15D8  00F2               	movwf	___wmul@multiplicand
  3909  15D9  3000               	movlw	0
  3910  15DA  00F3               	movwf	___wmul@multiplicand+1
  3911  15DB  160A  118A  2107  160A  118A  	fcall	___wmul
  3912  15E0  0870               	movf	?___wmul,w
  3913  15E1  00C6               	movwf	??_temp_day+2
  3914  15E2  0871               	movf	?___wmul+1,w
  3915  15E3  00C7               	movwf	??_temp_day+3
  3916  15E4  086C               	movf	_day_one_max,w
  3917  15E5  00C8               	movwf	??_temp_day+4
  3918  15E6  01C9               	clrf	??_temp_day+5
  3919  15E7  0848               	movf	??_temp_day+4,w
  3920  15E8  00F0               	movwf	___wmul@multiplier
  3921  15E9  0849               	movf	??_temp_day+5,w
  3922  15EA  00F1               	movwf	___wmul@multiplier+1
  3923  15EB  300A               	movlw	10
  3924  15EC  00F2               	movwf	___wmul@multiplicand
  3925  15ED  3000               	movlw	0
  3926  15EE  00F3               	movwf	___wmul@multiplicand+1
  3927  15EF  160A  118A  2107  160A  118A  	fcall	___wmul
  3928  15F4  0870               	movf	?___wmul,w
  3929  15F5  0746               	addwf	??_temp_day+2,w
  3930  15F6  00CA               	movwf	??_temp_day+6
  3931  15F7  0871               	movf	?___wmul+1,w
  3932  15F8  1803               	skipnc
  3933  15F9  0A71               	incf	?___wmul+1,w
  3934  15FA  0747               	addwf	??_temp_day+3,w
  3935  15FB  00CB               	movwf	??_temp_day+7
  3936  15FC  086B               	movf	_day_dec_max,w
  3937  15FD  074A               	addwf	??_temp_day+6,w
  3938  15FE  00CC               	movwf	temp_day@temp_max
  3939  15FF  3000               	movlw	0
  3940  1600  1803               	skipnc
  3941  1601  3001               	movlw	1
  3942  1602  074B               	addwf	??_temp_day+7,w
  3943  1603  00CD               	movwf	temp_day@temp_max+1
  3944                           
  3945                           ;temperature.c: 488:     unsigned int temp_min = day_ten_min*100 + day_one_min*10 + day_
      +                          dec_min;
  3946  1604  086A               	movf	_day_ten_min,w
  3947  1605  00C4               	movwf	??_temp_day
  3948  1606  01C5               	clrf	??_temp_day+1
  3949  1607  0844               	movf	??_temp_day,w
  3950  1608  00F0               	movwf	___wmul@multiplier
  3951  1609  0845               	movf	??_temp_day+1,w
  3952  160A  00F1               	movwf	___wmul@multiplier+1
  3953  160B  3064               	movlw	100
  3954  160C  00F2               	movwf	___wmul@multiplicand
  3955  160D  3000               	movlw	0
  3956  160E  00F3               	movwf	___wmul@multiplicand+1
  3957  160F  160A  118A  2107  160A  118A  	fcall	___wmul
  3958  1614  0870               	movf	?___wmul,w
  3959  1615  00C6               	movwf	??_temp_day+2
  3960  1616  0871               	movf	?___wmul+1,w
  3961  1617  00C7               	movwf	??_temp_day+3
  3962  1618  0869               	movf	_day_one_min,w
  3963  1619  00C8               	movwf	??_temp_day+4
  3964  161A  01C9               	clrf	??_temp_day+5
  3965  161B  0848               	movf	??_temp_day+4,w
  3966  161C  00F0               	movwf	___wmul@multiplier
  3967  161D  0849               	movf	??_temp_day+5,w
  3968  161E  00F1               	movwf	___wmul@multiplier+1
  3969  161F  300A               	movlw	10
  3970  1620  00F2               	movwf	___wmul@multiplicand
  3971  1621  3000               	movlw	0
  3972  1622  00F3               	movwf	___wmul@multiplicand+1
  3973  1623  160A  118A  2107  160A  118A  	fcall	___wmul
  3974  1628  0870               	movf	?___wmul,w
  3975  1629  0746               	addwf	??_temp_day+2,w
  3976  162A  00CA               	movwf	??_temp_day+6
  3977  162B  0871               	movf	?___wmul+1,w
  3978  162C  1803               	skipnc
  3979  162D  0A71               	incf	?___wmul+1,w
  3980  162E  0747               	addwf	??_temp_day+3,w
  3981  162F  00CB               	movwf	??_temp_day+7
  3982  1630  0868               	movf	_day_dec_min,w
  3983  1631  074A               	addwf	??_temp_day+6,w
  3984  1632  00CE               	movwf	temp_day@temp_min
  3985  1633  3000               	movlw	0
  3986  1634  1803               	skipnc
  3987  1635  3001               	movlw	1
  3988  1636  074B               	addwf	??_temp_day+7,w
  3989  1637  00CF               	movwf	temp_day@temp_min+1
  3990                           
  3991                           ;temperature.c: 489:     if (temp > temp_max){
  3992  1638  0851               	movf	temp_day@temp+1,w
  3993  1639  024D               	subwf	temp_day@temp_max+1,w
  3994  163A  1D03               	skipz
  3995  163B  2E3E               	goto	u5705
  3996  163C  0850               	movf	temp_day@temp,w
  3997  163D  024C               	subwf	temp_day@temp_max,w
  3998  163E                     u5705:	
  3999  163E  1803               	skipnc
  4000  163F  2E44               	goto	l5636
  4001                           
  4002                           ;temperature.c: 490:         cool();
  4003  1640  160A  158A  25E9   	fcall	_cool
  4004                           
  4005                           ;temperature.c: 491:     }
  4006  1643  0008               	return
  4007  1644                     l5636:	
  4008  1644  084F               	movf	temp_day@temp_min+1,w
  4009  1645  0251               	subwf	temp_day@temp+1,w
  4010  1646  1D03               	skipz
  4011  1647  2E4A               	goto	u5715
  4012  1648  084E               	movf	temp_day@temp_min,w
  4013  1649  0250               	subwf	temp_day@temp,w
  4014  164A                     u5715:	
  4015  164A  1803               	skipnc
  4016  164B  2E50               	goto	l5640
  4017                           
  4018                           ;temperature.c: 493:         heat();
  4019  164C  160A  158A  2607   	fcall	_heat
  4020                           
  4021                           ;temperature.c: 494:     }
  4022  164F  0008               	return
  4023  1650                     l5640:	
  4024  1650  0851               	movf	temp_day@temp+1,w
  4025  1651  024D               	subwf	temp_day@temp_max+1,w
  4026  1652  1D03               	skipz
  4027  1653  2E56               	goto	u5725
  4028  1654  0850               	movf	temp_day@temp,w
  4029  1655  024C               	subwf	temp_day@temp_max,w
  4030  1656                     u5725:	
  4031  1656  1C03               	skipc
  4032  1657  0008               	return
  4033                           
  4034                           ;temperature.c: 496:         if (temp >= temp_min){
  4035  1658  084F               	movf	temp_day@temp_min+1,w
  4036  1659  0251               	subwf	temp_day@temp+1,w
  4037  165A  1D03               	skipz
  4038  165B  2E5E               	goto	u5735
  4039  165C  084E               	movf	temp_day@temp_min,w
  4040  165D  0250               	subwf	temp_day@temp,w
  4041  165E                     u5735:	
  4042  165E  1C03               	skipc
  4043  165F  0008               	return
  4044                           
  4045                           ;temperature.c: 497:             OK();
  4046  1660  160A  158A  255D   	fcall	_OK
  4047  1663  0008               	return
  4048  1664                     __end_of_temp_day:	
  4049                           
  4050                           	psect	text8
  4051  1E07                     __ptext8:	
  4052 ;; *************** function _heat *****************
  4053 ;; Defined at:
  4054 ;;		line 528 in file "temperature.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 300/0
  4065 ;;		On exit  : 300/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0
  4071 ;;      Totals:         0       0       0       0       0
  4072 ;;Total ram usage:        0 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    3
  4075 ;; This function calls:
  4076 ;;		_temp_check_rise
  4077 ;;		_write_str
  4078 ;;		_writecmd_4line
  4079 ;; This function is called by:
  4080 ;;		_temp_day
  4081 ;;		_temp_night
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _heat
  4087  1E07                     _heat:	
  4088                           
  4089                           ;temperature.c: 529:     writecmd_4line(0x9E);
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _heat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4093  1E07  309E               	movlw	158
  4094  1E08  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  4095                           
  4096                           ;temperature.c: 530:     write_str("Heat ");
  4097  1E0D  3092               	movlw	low (STR_74| (0+32768))
  4098  1E0E  00F3               	movwf	write_str@array
  4099  1E0F  3090               	movlw	high (STR_74| (0+32768))
  4100  1E10  00F4               	movwf	write_str@array+1
  4101  1E11  160A  118A  215E  160A  158A  	fcall	_write_str
  4102                           
  4103                           ;temperature.c: 531:     temp_check_rise();
  4104  1E16  160A  118A  221A  160A  158A  	fcall	_temp_check_rise
  4105                           
  4106                           ;temperature.c: 532:     if (buzz_count == 20 && pass == 0){
  4107  1E1B  3014               	movlw	20
  4108  1E1C  062D               	xorwf	_buzz_count,w
  4109  1E1D  042E               	iorwf	_buzz_count+1,w
  4110  1E1E  1D03               	btfss	3,2
  4111  1E1F  0008               	return
  4112  1E20  0835               	movf	_pass,w
  4113  1E21  1D03               	btfss	3,2
  4114  1E22  0008               	return
  4115                           
  4116                           ;temperature.c: 533:         RE2 = 1;
  4117  1E23  1509               	bsf	9,2	;volatile
  4118  1E24  0008               	return
  4119  1E25                     __end_of_heat:	
  4120                           
  4121                           	psect	text9
  4122  121A                     __ptext9:	
  4123 ;; *************** function _temp_check_rise *****************
  4124 ;; Defined at:
  4125 ;;		line 565 in file "temperature.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  temp_e          1    8[COMMON] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 300/0
  4136 ;;		On exit  : 300/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       0       0       0       0
  4140 ;;      Locals:         1       0       0       0       0
  4141 ;;      Temps:          4       0       0       0       0
  4142 ;;      Totals:         5       0       0       0       0
  4143 ;;Total ram usage:        5 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    1
  4146 ;; This function calls:
  4147 ;;		___bmul
  4148 ;; This function is called by:
  4149 ;;		_heat
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _temp_check_rise
  4155  121A                     _temp_check_rise:	
  4156                           
  4157                           ;temperature.c: 566:     if (temp_sec%2 == 0){
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _temp_check_rise: [wreg+status,2+status,0+pclath+cstack]
  4161  121A  1832               	btfsc	_temp_sec,0
  4162  121B  2A35               	goto	l686
  4163                           
  4164                           ;temperature.c: 567:         temp_p = shi*100 + ge*10 + shifen;
  4165  121C  300A               	movlw	10
  4166  121D  00F4               	movwf	??_temp_check_rise
  4167  121E  0874               	movf	??_temp_check_rise,w
  4168  121F  00F0               	movwf	___bmul@multiplicand
  4169  1220  083A               	movf	_ge,w
  4170  1221  160A  158A  252A  160A  118A  	fcall	___bmul
  4171  1226  00F5               	movwf	??_temp_check_rise+1
  4172  1227  3064               	movlw	100
  4173  1228  00F6               	movwf	??_temp_check_rise+2
  4174  1229  0876               	movf	??_temp_check_rise+2,w
  4175  122A  00F0               	movwf	___bmul@multiplicand
  4176  122B  083B               	movf	_shi,w
  4177  122C  160A  158A  252A   	fcall	___bmul
  4178  122F  0775               	addwf	??_temp_check_rise+1,w
  4179  1230  0739               	addwf	_shifen,w
  4180  1231  00F7               	movwf	??_temp_check_rise+3
  4181  1232  0877               	movf	??_temp_check_rise+3,w
  4182  1233  00B4               	movwf	_temp_p
  4183                           
  4184                           ;temperature.c: 568:     }
  4185  1234  0008               	return
  4186  1235                     l686:	
  4187                           ;temperature.c: 569:     else if (temp_sec%2 != 0){
  4188                           
  4189  1235  1C32               	btfss	_temp_sec,0
  4190  1236  0008               	return
  4191                           
  4192                           ;temperature.c: 570:         unsigned char temp_e = shi*100 + ge*10 + shifen;
  4193  1237  300A               	movlw	10
  4194  1238  00F4               	movwf	??_temp_check_rise
  4195  1239  0874               	movf	??_temp_check_rise,w
  4196  123A  00F0               	movwf	___bmul@multiplicand
  4197  123B  083A               	movf	_ge,w
  4198  123C  160A  158A  252A  160A  118A  	fcall	___bmul
  4199  1241  00F5               	movwf	??_temp_check_rise+1
  4200  1242  3064               	movlw	100
  4201  1243  00F6               	movwf	??_temp_check_rise+2
  4202  1244  0876               	movf	??_temp_check_rise+2,w
  4203  1245  00F0               	movwf	___bmul@multiplicand
  4204  1246  083B               	movf	_shi,w
  4205  1247  160A  158A  252A  160A  118A  	fcall	___bmul
  4206  124C  0775               	addwf	??_temp_check_rise+1,w
  4207  124D  0739               	addwf	_shifen,w
  4208  124E  00F7               	movwf	??_temp_check_rise+3
  4209  124F  0877               	movf	??_temp_check_rise+3,w
  4210  1250  00F8               	movwf	temp_check_rise@temp_e
  4211                           
  4212                           ;temperature.c: 571:         if (temp_p < temp_e){
  4213  1251  0878               	movf	temp_check_rise@temp_e,w
  4214  1252  0234               	subwf	_temp_p,w
  4215  1253  1803               	skipnc
  4216  1254  2A59               	goto	l3886
  4217                           
  4218                           ;temperature.c: 572:             buzz_count = 0;
  4219  1255  01AD               	clrf	_buzz_count
  4220  1256  01AE               	clrf	_buzz_count+1
  4221                           
  4222                           ;temperature.c: 573:             RE2 = 0;
  4223  1257  1109               	bcf	9,2	;volatile
  4224                           
  4225                           ;temperature.c: 574:         }
  4226  1258  0008               	return
  4227  1259                     l3886:	
  4228                           
  4229                           ;temperature.c: 576:             buzz_count++;
  4230  1259  3001               	movlw	1
  4231  125A  07AD               	addwf	_buzz_count,f
  4232  125B  1803               	skipnc
  4233  125C  0AAE               	incf	_buzz_count+1,f
  4234  125D  3000               	movlw	0
  4235  125E  07AE               	addwf	_buzz_count+1,f
  4236                           
  4237                           ;temperature.c: 578:         }
  4238  125F  0008               	return
  4239  1260                     __end_of_temp_check_rise:	
  4240                           
  4241                           	psect	text10
  4242  1DE9                     __ptext10:	
  4243 ;; *************** function _cool *****************
  4244 ;; Defined at:
  4245 ;;		line 519 in file "temperature.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 300/0
  4256 ;;		On exit  : 300/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4259 ;;      Params:         0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    3
  4266 ;; This function calls:
  4267 ;;		_temp_check_lower
  4268 ;;		_write_str
  4269 ;;		_writecmd_4line
  4270 ;; This function is called by:
  4271 ;;		_temp_day
  4272 ;;		_temp_night
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _cool
  4278  1DE9                     _cool:	
  4279                           
  4280                           ;temperature.c: 520:     writecmd_4line(0x9E);
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _cool: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4284  1DE9  309E               	movlw	158
  4285  1DEA  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  4286                           
  4287                           ;temperature.c: 521:     write_str("Cool");
  4288  1DEF  30CB               	movlw	low (STR_73| (0+32768))
  4289  1DF0  00F3               	movwf	write_str@array
  4290  1DF1  3090               	movlw	high (STR_73| (0+32768))
  4291  1DF2  00F4               	movwf	write_str@array+1
  4292  1DF3  160A  118A  215E  160A  158A  	fcall	_write_str
  4293                           
  4294                           ;temperature.c: 522:     temp_check_lower();
  4295  1DF8  160A  118A  21D4  160A  158A  	fcall	_temp_check_lower
  4296                           
  4297                           ;temperature.c: 523:     if (buzz_count == 20 && pass == 0){
  4298  1DFD  3014               	movlw	20
  4299  1DFE  062D               	xorwf	_buzz_count,w
  4300  1DFF  042E               	iorwf	_buzz_count+1,w
  4301  1E00  1D03               	btfss	3,2
  4302  1E01  0008               	return
  4303  1E02  0835               	movf	_pass,w
  4304  1E03  1D03               	btfss	3,2
  4305  1E04  0008               	return
  4306                           
  4307                           ;temperature.c: 524:         RE2 = 1;
  4308  1E05  1509               	bsf	9,2	;volatile
  4309  1E06  0008               	return
  4310  1E07                     __end_of_cool:	
  4311                           
  4312                           	psect	text11
  4313  11D4                     __ptext11:	
  4314 ;; *************** function _temp_check_lower *****************
  4315 ;; Defined at:
  4316 ;;		line 545 in file "temperature.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  temp_e          1    8[COMMON] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 300/0
  4327 ;;		On exit  : 300/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         0       0       0       0       0
  4331 ;;      Locals:         1       0       0       0       0
  4332 ;;      Temps:          4       0       0       0       0
  4333 ;;      Totals:         5       0       0       0       0
  4334 ;;Total ram usage:        5 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    1
  4337 ;; This function calls:
  4338 ;;		___bmul
  4339 ;; This function is called by:
  4340 ;;		_cool
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _temp_check_lower
  4346  11D4                     _temp_check_lower:	
  4347                           
  4348                           ;temperature.c: 547:     if (temp_sec%2 == 0){
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _temp_check_lower: [wreg+status,2+status,0+pclath+cstack]
  4352  11D4  1832               	btfsc	_temp_sec,0
  4353  11D5  29EF               	goto	l676
  4354                           
  4355                           ;temperature.c: 548:         temp_p = shi*100 + ge*10 + shifen;
  4356  11D6  300A               	movlw	10
  4357  11D7  00F4               	movwf	??_temp_check_lower
  4358  11D8  0874               	movf	??_temp_check_lower,w
  4359  11D9  00F0               	movwf	___bmul@multiplicand
  4360  11DA  083A               	movf	_ge,w
  4361  11DB  160A  158A  252A  160A  118A  	fcall	___bmul
  4362  11E0  00F5               	movwf	??_temp_check_lower+1
  4363  11E1  3064               	movlw	100
  4364  11E2  00F6               	movwf	??_temp_check_lower+2
  4365  11E3  0876               	movf	??_temp_check_lower+2,w
  4366  11E4  00F0               	movwf	___bmul@multiplicand
  4367  11E5  083B               	movf	_shi,w
  4368  11E6  160A  158A  252A   	fcall	___bmul
  4369  11E9  0775               	addwf	??_temp_check_lower+1,w
  4370  11EA  0739               	addwf	_shifen,w
  4371  11EB  00F7               	movwf	??_temp_check_lower+3
  4372  11EC  0877               	movf	??_temp_check_lower+3,w
  4373  11ED  00B4               	movwf	_temp_p
  4374                           
  4375                           ;temperature.c: 549:     }
  4376  11EE  0008               	return
  4377  11EF                     l676:	
  4378                           ;temperature.c: 550:     else if (temp_sec%2 != 0){
  4379                           
  4380  11EF  1C32               	btfss	_temp_sec,0
  4381  11F0  0008               	return
  4382                           
  4383                           ;temperature.c: 551:         unsigned char temp_e = shi*100 + ge*10 + shifen;
  4384  11F1  300A               	movlw	10
  4385  11F2  00F4               	movwf	??_temp_check_lower
  4386  11F3  0874               	movf	??_temp_check_lower,w
  4387  11F4  00F0               	movwf	___bmul@multiplicand
  4388  11F5  083A               	movf	_ge,w
  4389  11F6  160A  158A  252A  160A  118A  	fcall	___bmul
  4390  11FB  00F5               	movwf	??_temp_check_lower+1
  4391  11FC  3064               	movlw	100
  4392  11FD  00F6               	movwf	??_temp_check_lower+2
  4393  11FE  0876               	movf	??_temp_check_lower+2,w
  4394  11FF  00F0               	movwf	___bmul@multiplicand
  4395  1200  083B               	movf	_shi,w
  4396  1201  160A  158A  252A  160A  118A  	fcall	___bmul
  4397  1206  0775               	addwf	??_temp_check_lower+1,w
  4398  1207  0739               	addwf	_shifen,w
  4399  1208  00F7               	movwf	??_temp_check_lower+3
  4400  1209  0877               	movf	??_temp_check_lower+3,w
  4401  120A  00F8               	movwf	temp_check_lower@temp_e
  4402                           
  4403                           ;temperature.c: 552:         if (temp_p > temp_e){
  4404  120B  0834               	movf	_temp_p,w
  4405  120C  0278               	subwf	temp_check_lower@temp_e,w
  4406  120D  1803               	skipnc
  4407  120E  2A13               	goto	l3868
  4408                           
  4409                           ;temperature.c: 553:                 buzz_count = 0;
  4410  120F  01AD               	clrf	_buzz_count
  4411  1210  01AE               	clrf	_buzz_count+1
  4412                           
  4413                           ;temperature.c: 554:                 RE2 = 0;
  4414  1211  1109               	bcf	9,2	;volatile
  4415                           
  4416                           ;temperature.c: 555:         }
  4417  1212  0008               	return
  4418  1213                     l3868:	
  4419                           
  4420                           ;temperature.c: 557:            buzz_count++;
  4421  1213  3001               	movlw	1
  4422  1214  07AD               	addwf	_buzz_count,f
  4423  1215  1803               	skipnc
  4424  1216  0AAE               	incf	_buzz_count+1,f
  4425  1217  3000               	movlw	0
  4426  1218  07AE               	addwf	_buzz_count+1,f
  4427                           
  4428                           ;temperature.c: 558:         }
  4429  1219  0008               	return
  4430  121A                     __end_of_temp_check_lower:	
  4431                           
  4432                           	psect	text12
  4433  1107                     __ptext12:	
  4434 ;; *************** function ___wmul *****************
  4435 ;; Defined at:
  4436 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  multiplier      2    0[COMMON] unsigned int 
  4439 ;;  multiplicand    2    2[COMMON] unsigned int 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  product         2    4[COMMON] unsigned int 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2    0[COMMON] unsigned int 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 300/0
  4448 ;;		On exit  : 300/0
  4449 ;;		Unchanged: 300/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         4       0       0       0       0
  4452 ;;      Locals:         2       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0
  4454 ;;      Totals:         6       0       0       0       0
  4455 ;;Total ram usage:        6 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_temp_day
  4461 ;;		_temp_night
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function ___wmul
  4467  1107                     ___wmul:	
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4471  1107  01F4               	clrf	___wmul@product
  4472  1108  01F5               	clrf	___wmul@product+1
  4473  1109                     l4776:	
  4474  1109  1C70               	btfss	___wmul@multiplier,0
  4475  110A  2911               	goto	l946
  4476  110B  0872               	movf	___wmul@multiplicand,w
  4477  110C  07F4               	addwf	___wmul@product,f
  4478  110D  1803               	skipnc
  4479  110E  0AF5               	incf	___wmul@product+1,f
  4480  110F  0873               	movf	___wmul@multiplicand+1,w
  4481  1110  07F5               	addwf	___wmul@product+1,f
  4482  1111                     l946:	
  4483  1111  3001               	movlw	1
  4484  1112                     u4385:	
  4485  1112  1003               	clrc
  4486  1113  0DF2               	rlf	___wmul@multiplicand,f
  4487  1114  0DF3               	rlf	___wmul@multiplicand+1,f
  4488  1115  3EFF               	addlw	-1
  4489  1116  1D03               	skipz
  4490  1117  2912               	goto	u4385
  4491  1118  3001               	movlw	1
  4492  1119                     u4395:	
  4493  1119  1003               	clrc
  4494  111A  0CF1               	rrf	___wmul@multiplier+1,f
  4495  111B  0CF0               	rrf	___wmul@multiplier,f
  4496  111C  3EFF               	addlw	-1
  4497  111D  1D03               	skipz
  4498  111E  2919               	goto	u4395
  4499  111F  0870               	movf	___wmul@multiplier,w
  4500  1120  0471               	iorwf	___wmul@multiplier+1,w
  4501  1121  1D03               	btfss	3,2
  4502  1122  2909               	goto	l4776
  4503  1123  0875               	movf	___wmul@product+1,w
  4504  1124  00F1               	movwf	?___wmul+1
  4505  1125  0874               	movf	___wmul@product,w
  4506  1126  00F0               	movwf	?___wmul
  4507  1127  0008               	return
  4508  1128                     __end_of___wmul:	
  4509                           
  4510                           	psect	text13
  4511  1D5D                     __ptext13:	
  4512 ;; *************** function _OK *****************
  4513 ;; Defined at:
  4514 ;;		line 537 in file "temperature.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 300/0
  4525 ;;		On exit  : 300/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4528 ;;      Params:         0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0
  4531 ;;      Totals:         0       0       0       0       0
  4532 ;;Total ram usage:        0 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    3
  4535 ;; This function calls:
  4536 ;;		_write_str
  4537 ;;		_writecmd_4line
  4538 ;; This function is called by:
  4539 ;;		_temp_day
  4540 ;;		_temp_night
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _OK
  4546  1D5D                     _OK:	
  4547                           
  4548                           ;temperature.c: 538:     writecmd_4line(0x9E);
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4552  1D5D  309E               	movlw	158
  4553  1D5E  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  4554                           
  4555                           ;temperature.c: 539:     write_str("OK  ");
  4556  1D63  30BC               	movlw	low (STR_75| (0+32768))
  4557  1D64  00F3               	movwf	write_str@array
  4558  1D65  3090               	movlw	high (STR_75| (0+32768))
  4559  1D66  00F4               	movwf	write_str@array+1
  4560  1D67  160A  118A  215E   	fcall	_write_str
  4561                           
  4562                           ;temperature.c: 540:     buzz_count = 0;
  4563  1D6A  01AD               	clrf	_buzz_count
  4564  1D6B  01AE               	clrf	_buzz_count+1
  4565                           
  4566                           ;temperature.c: 541:     pass = 0;
  4567  1D6C  01B5               	clrf	_pass
  4568                           
  4569                           ;temperature.c: 542:     RE2 = 0;
  4570  1D6D  1109               	bcf	9,2	;volatile
  4571  1D6E  0008               	return
  4572  1D6F                     __end_of_OK:	
  4573                           
  4574                           	psect	text14
  4575  1D97                     __ptext14:	
  4576 ;; *************** function _lcd_init *****************
  4577 ;; Defined at:
  4578 ;;		line 53 in file "lcd.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 300/0
  4589 ;;		On exit  : 300/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4592 ;;      Params:         0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0
  4595 ;;      Totals:         0       0       0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    2
  4599 ;; This function calls:
  4600 ;;		_writecmd_4line
  4601 ;; This function is called by:
  4602 ;;		_main
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function _lcd_init
  4608  1D97                     _lcd_init:	
  4609                           
  4610                           ;lcd.c: 56:     ADCON1=0X07;
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4614  1D97  3007               	movlw	7
  4615  1D98  1683               	bsf	3,5	;RP0=1, select bank1
  4616  1D99  009F               	movwf	31	;volatile
  4617                           
  4618                           ;lcd.c: 57:     TRISA=0X00;
  4619  1D9A  0185               	clrf	5	;volatile
  4620                           
  4621                           ;lcd.c: 58:     TRISD=0X00;
  4622  1D9B  0188               	clrf	8	;volatile
  4623                           
  4624                           ;lcd.c: 59:     RA2 = 1;
  4625  1D9C  1283               	bcf	3,5	;RP0=0, select bank0
  4626  1D9D  1505               	bsf	5,2	;volatile
  4627                           
  4628                           ;lcd.c: 62:     writecmd_4line(0x0e);
  4629  1D9E  300E               	movlw	14
  4630  1D9F  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  4631                           
  4632                           ;lcd.c: 63:     writecmd_4line(0x1);
  4633  1DA4  3001               	movlw	1
  4634  1DA5  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  4635                           
  4636                           ;lcd.c: 64:     writecmd_4line(0x38);
  4637  1DAA  3038               	movlw	56
  4638  1DAB  160A  158A  25CB   	fcall	_writecmd_4line
  4639  1DAE  0008               	return
  4640  1DAF                     __end_of_lcd_init:	
  4641                           
  4642                           	psect	text15
  4643  1D00                     __ptext15:	
  4644 ;; *************** function _initialisation *****************
  4645 ;; Defined at:
  4646 ;;		line 4 in file "button_press.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2
  4655 ;; Tracked objects:
  4656 ;;		On entry : 300/0
  4657 ;;		On exit  : 300/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _initialisation
  4675  1D00                     _initialisation:	
  4676                           
  4677                           ;button_press.c: 5:     ADCON1 = 0X07;
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _initialisation: [wreg+status,2]
  4681  1D00  3007               	movlw	7
  4682  1D01  1683               	bsf	3,5	;RP0=1, select bank1
  4683  1D02  009F               	movwf	31	;volatile
  4684                           
  4685                           ;button_press.c: 6:     TRISC = 0xF0;
  4686  1D03  30F0               	movlw	240
  4687  1D04  0087               	movwf	7	;volatile
  4688                           
  4689                           ;button_press.c: 7:     PORTC = 0x00;
  4690  1D05  1283               	bcf	3,5	;RP0=0, select bank0
  4691  1D06  0187               	clrf	7	;volatile
  4692  1D07  0008               	return
  4693  1D08                     __end_of_initialisation:	
  4694                           
  4695                           	psect	text16
  4696  1F0C                     __ptext16:	
  4697 ;; *************** function _get_time *****************
  4698 ;; Defined at:
  4699 ;;		line 52 in file "clock_source.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  i               2    6[COMMON] int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 300/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4713 ;;      Params:         0       0       0       0       0
  4714 ;;      Locals:         2       0       0       0       0
  4715 ;;      Temps:          1       0       0       0       0
  4716 ;;      Totals:         3       0       0       0       0
  4717 ;;Total ram usage:        3 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    1
  4720 ;; This function calls:
  4721 ;;		_time_read_1
  4722 ;;		_time_write_1
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _get_time
  4730  1F0C                     _get_time:	
  4731                           
  4732                           ;clock_source.c: 53:    int i;;clock_source.c: 54:    RB5=1;
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4736  1F0C  1283               	bcf	3,5	;RP0=0, select bank0
  4737  1F0D  1303               	bcf	3,6	;RP1=0, select bank0
  4738  1F0E  1686               	bsf	6,5	;volatile
  4739                           
  4740                           ;clock_source.c: 55:    time_write_1(0xbf);
  4741  1F0F  30BF               	movlw	191
  4742  1F10  160A  158A  2669  160A  158A  	fcall	_time_write_1
  4743                           
  4744                           ;clock_source.c: 56:    for(i=0;i<7;i++)
  4745  1F15  01F6               	clrf	get_time@i
  4746  1F16  01F7               	clrf	get_time@i+1
  4747  1F17                     l4884:	
  4748                           
  4749                           ;clock_source.c: 57:     {;clock_source.c: 58:         table1[i]=time_read_1();
  4750  1F17  160A  158A  2767  160A  158A  	fcall	_time_read_1
  4751  1F1C  00F5               	movwf	??_get_time
  4752  1F1D  0876               	movf	get_time@i,w
  4753  1F1E  3E20               	addlw	(low (_table1| 0))& (0+255)
  4754  1F1F  0084               	movwf	4
  4755  1F20  0875               	movf	??_get_time,w
  4756  1F21  1383               	bcf	3,7	;select IRP bank0
  4757  1F22  0080               	movwf	0
  4758                           
  4759                           ;clock_source.c: 59:     }
  4760  1F23  3001               	movlw	1
  4761  1F24  07F6               	addwf	get_time@i,f
  4762  1F25  1803               	skipnc
  4763  1F26  0AF7               	incf	get_time@i+1,f
  4764  1F27  3000               	movlw	0
  4765  1F28  07F7               	addwf	get_time@i+1,f
  4766  1F29  0877               	movf	get_time@i+1,w
  4767  1F2A  3A80               	xorlw	128
  4768  1F2B  00FF               	movwf	127
  4769  1F2C  3080               	movlw	128
  4770  1F2D  027F               	subwf	127,w
  4771  1F2E  1D03               	skipz
  4772  1F2F  2F32               	goto	u4555
  4773  1F30  3007               	movlw	7
  4774  1F31  0276               	subwf	get_time@i,w
  4775  1F32                     u4555:	
  4776  1F32  1C03               	skipc
  4777  1F33  2F17               	goto	l4884
  4778                           
  4779                           ;clock_source.c: 60:     RB5=0;
  4780  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  4781  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  4782  1F36  1286               	bcf	6,5	;volatile
  4783  1F37  0008               	return
  4784  1F38                     __end_of_get_time:	
  4785                           
  4786                           	psect	text17
  4787  1F67                     __ptext17:	
  4788 ;; *************** function _time_read_1 *****************
  4789 ;; Defined at:
  4790 ;;		line 83 in file "clock_source.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  j               2    2[COMMON] int 
  4795 ;;  time_rx         1    4[COMMON] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      unsigned char 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, btemp+1
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 300/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         0       0       0       0       0
  4806 ;;      Locals:         3       0       0       0       0
  4807 ;;      Temps:          2       0       0       0       0
  4808 ;;      Totals:         5       0       0       0       0
  4809 ;;Total ram usage:        5 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_get_time
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _time_read_1
  4820  1F67                     _time_read_1:	
  4821                           
  4822                           ;clock_source.c: 84:    unsigned char time_rx=0;
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  4826  1F67  01F4               	clrf	time_read_1@time_rx
  4827                           
  4828                           ;clock_source.c: 85:    int j;;clock_source.c: 86:    TRISB4=1;
  4829  1F68  1683               	bsf	3,5	;RP0=1, select bank1
  4830  1F69  1303               	bcf	3,6	;RP1=0, select bank1
  4831  1F6A  1606               	bsf	6,4	;volatile
  4832                           
  4833                           ;clock_source.c: 87:    for(j=0;j<8;j++)
  4834  1F6B  01F2               	clrf	time_read_1@j
  4835  1F6C  01F3               	clrf	time_read_1@j+1
  4836  1F6D                     l211:	
  4837                           
  4838                           ;clock_source.c: 88:    {;clock_source.c: 89:         RB0=0;
  4839  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4840  1F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4841  1F6F  1006               	bcf	6,0	;volatile
  4842                           
  4843                           ;clock_source.c: 90:         time_rx=time_rx>>1;
  4844  1F70  0874               	movf	time_read_1@time_rx,w
  4845  1F71  00F0               	movwf	??_time_read_1
  4846  1F72  1003               	clrc
  4847  1F73  0C70               	rrf	??_time_read_1,w
  4848  1F74  00F1               	movwf	??_time_read_1+1
  4849  1F75  0871               	movf	??_time_read_1+1,w
  4850  1F76  00F4               	movwf	time_read_1@time_rx
  4851                           
  4852                           ;clock_source.c: 91:         if(RB4)time_rx=time_rx|0x80;
  4853  1F77  1E06               	btfss	6,4	;volatile
  4854  1F78  2F7E               	goto	l3954
  4855  1F79  0874               	movf	time_read_1@time_rx,w
  4856  1F7A  3880               	iorlw	128
  4857  1F7B  00F0               	movwf	??_time_read_1
  4858  1F7C  0870               	movf	??_time_read_1,w
  4859  1F7D  00F4               	movwf	time_read_1@time_rx
  4860  1F7E                     l3954:	
  4861                           
  4862                           ;clock_source.c: 93:        RB0=1;
  4863  1F7E  1406               	bsf	6,0	;volatile
  4864                           
  4865                           ;clock_source.c: 94:     }
  4866  1F7F  3001               	movlw	1
  4867  1F80  07F2               	addwf	time_read_1@j,f
  4868  1F81  1803               	skipnc
  4869  1F82  0AF3               	incf	time_read_1@j+1,f
  4870  1F83  3000               	movlw	0
  4871  1F84  07F3               	addwf	time_read_1@j+1,f
  4872  1F85  0873               	movf	time_read_1@j+1,w
  4873  1F86  3A80               	xorlw	128
  4874  1F87  00FF               	movwf	127
  4875  1F88  3080               	movlw	128
  4876  1F89  027F               	subwf	127,w
  4877  1F8A  1D03               	skipz
  4878  1F8B  2F8E               	goto	u3475
  4879  1F8C  3008               	movlw	8
  4880  1F8D  0272               	subwf	time_read_1@j,w
  4881  1F8E                     u3475:	
  4882  1F8E  1C03               	skipc
  4883  1F8F  2F6D               	goto	l211
  4884                           
  4885                           ;clock_source.c: 95:     TRISB4=0;
  4886  1F90  1683               	bsf	3,5	;RP0=1, select bank1
  4887  1F91  1303               	bcf	3,6	;RP1=0, select bank1
  4888  1F92  1206               	bcf	6,4	;volatile
  4889                           
  4890                           ;clock_source.c: 96:     RB0=0;
  4891  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  4892  1F94  1006               	bcf	6,0	;volatile
  4893                           
  4894                           ;clock_source.c: 97:     return(time_rx);
  4895  1F95  0874               	movf	time_read_1@time_rx,w
  4896  1F96  0008               	return
  4897  1F97                     __end_of_time_read_1:	
  4898                           
  4899                           	psect	text18
  4900  1361                     __ptext18:	
  4901 ;; *************** function _get_temp *****************
  4902 ;; Defined at:
  4903 ;;		line 105 in file "temperature.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 300/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4917 ;;      Params:         0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0
  4919 ;;      Temps:          0       4       0       0       0
  4920 ;;      Totals:         0       4       0       0       0
  4921 ;;Total ram usage:        4 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    4
  4924 ;; This function calls:
  4925 ;;		___lbdiv
  4926 ;;		___lbmod
  4927 ;;		___lwdiv
  4928 ;;		_display_temp
  4929 ;;		_read_byte
  4930 ;;		_reset
  4931 ;;		_write_byte
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _get_temp
  4939  1361                     _get_temp:	
  4940                           
  4941                           ;temperature.c: 106: TRISE0 =1;
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4945  1361  1683               	bsf	3,5	;RP0=1, select bank1
  4946  1362  1409               	bsf	9,0	;volatile
  4947                           
  4948                           ;temperature.c: 107: reset();
  4949  1363  160A  158A  2797  160A  118A  	fcall	_reset
  4950                           
  4951                           ;temperature.c: 108: write_byte(0XCC);
  4952  1368  30CC               	movlw	204
  4953  1369  160A  118A  2128  160A  118A  	fcall	_write_byte
  4954                           
  4955                           ;temperature.c: 109: write_byte(0X44);
  4956  136E  3044               	movlw	68
  4957  136F  160A  118A  2128  160A  118A  	fcall	_write_byte
  4958                           
  4959                           ;temperature.c: 110: display_temp();
  4960  1374  160A  158A  27CB  160A  118A  	fcall	_display_temp
  4961                           
  4962                           ;temperature.c: 111: reset();
  4963  1379  160A  158A  2797  160A  118A  	fcall	_reset
  4964                           
  4965                           ;temperature.c: 112: write_byte(0XCC);
  4966  137E  30CC               	movlw	204
  4967  137F  160A  118A  2128  160A  118A  	fcall	_write_byte
  4968                           
  4969                           ;temperature.c: 113: write_byte(0XBE);
  4970  1384  30BE               	movlw	190
  4971  1385  160A  118A  2128  160A  118A  	fcall	_write_byte
  4972                           
  4973                           ;temperature.c: 114: TLV=read_byte();
  4974  138A  160A  158A  2738  160A  118A  	fcall	_read_byte
  4975  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4976  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4977  1391  00C4               	movwf	??_get_temp
  4978  1392  0844               	movf	??_get_temp,w
  4979  1393  00BF               	movwf	_TLV
  4980                           
  4981                           ;temperature.c: 115: THV=read_byte();
  4982  1394  160A  158A  2738  160A  118A  	fcall	_read_byte
  4983  1399  1283               	bcf	3,5	;RP0=0, select bank0
  4984  139A  1303               	bcf	3,6	;RP1=0, select bank0
  4985  139B  00C4               	movwf	??_get_temp
  4986  139C  0844               	movf	??_get_temp,w
  4987  139D  00BE               	movwf	_THV
  4988                           
  4989                           ;temperature.c: 116: TRISE0 =1;
  4990  139E  1683               	bsf	3,5	;RP0=1, select bank1
  4991  139F  1409               	bsf	9,0	;volatile
  4992                           
  4993                           ;temperature.c: 117: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4994  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  4995  13A1  083E               	movf	_THV,w
  4996  13A2  00C4               	movwf	??_get_temp
  4997  13A3  3004               	movlw	4
  4998  13A4                     u5575:	
  4999  13A4  1003               	clrc
  5000  13A5  0DC4               	rlf	??_get_temp,f
  5001  13A6  3EFF               	addlw	-1
  5002  13A7  1D03               	skipz
  5003  13A8  2BA4               	goto	u5575
  5004  13A9  303F               	movlw	63
  5005  13AA  0544               	andwf	??_get_temp,w
  5006  13AB  00C5               	movwf	??_get_temp+1
  5007  13AC  083F               	movf	_TLV,w
  5008  13AD  00C6               	movwf	??_get_temp+2
  5009  13AE  3004               	movlw	4
  5010  13AF                     u5585:	
  5011  13AF  1003               	clrc
  5012  13B0  0CC6               	rrf	??_get_temp+2,f
  5013  13B1  3EFF               	addlw	-1
  5014  13B2  1D03               	skipz
  5015  13B3  2BAF               	goto	u5585
  5016  13B4  0846               	movf	??_get_temp+2,w
  5017  13B5  0445               	iorwf	??_get_temp+1,w
  5018  13B6  00C7               	movwf	??_get_temp+3
  5019  13B7  0847               	movf	??_get_temp+3,w
  5020  13B8  00BD               	movwf	_TZ
  5021                           
  5022                           ;temperature.c: 118: TX=TLV<<4;
  5023  13B9  083F               	movf	_TLV,w
  5024  13BA  00C4               	movwf	??_get_temp
  5025  13BB  3003               	movlw	3
  5026  13BC                     u5595:	
  5027  13BC  1003               	clrc
  5028  13BD  0DC4               	rlf	??_get_temp,f
  5029  13BE  3EFF               	addlw	-1
  5030  13BF  1D03               	skipz
  5031  13C0  2BBC               	goto	u5595
  5032  13C1  1003               	clrc
  5033  13C2  0D44               	rlf	??_get_temp,w
  5034  13C3  00C5               	movwf	??_get_temp+1
  5035  13C4  0845               	movf	??_get_temp+1,w
  5036  13C5  00BC               	movwf	_TX
  5037                           
  5038                           ;temperature.c: 119: ge=TZ%10;
  5039  13C6  300A               	movlw	10
  5040  13C7  00C4               	movwf	??_get_temp
  5041  13C8  0844               	movf	??_get_temp,w
  5042  13C9  00F0               	movwf	___lbmod@divisor
  5043  13CA  083D               	movf	_TZ,w
  5044  13CB  160A  158A  2646  160A  118A  	fcall	___lbmod
  5045  13D0  00C5               	movwf	??_get_temp+1
  5046  13D1  0845               	movf	??_get_temp+1,w
  5047  13D2  00BA               	movwf	_ge
  5048                           
  5049                           ;temperature.c: 120: shi=TZ/10;
  5050  13D3  300A               	movlw	10
  5051  13D4  00C4               	movwf	??_get_temp
  5052  13D5  0844               	movf	??_get_temp,w
  5053  13D6  00F0               	movwf	___lbdiv@divisor
  5054  13D7  083D               	movf	_TZ,w
  5055  13D8  160A  158A  2625  160A  118A  	fcall	___lbdiv
  5056  13DD  00C5               	movwf	??_get_temp+1
  5057  13DE  0845               	movf	??_get_temp+1,w
  5058  13DF  00BB               	movwf	_shi
  5059                           
  5060                           ;temperature.c: 121: wd=0;
  5061  13E0  01AF               	clrf	_wd
  5062  13E1  01B0               	clrf	_wd+1
  5063                           
  5064                           ;temperature.c: 122: if (TX & 0x80) wd=wd+5000;
  5065  13E2  1FBC               	btfss	_TX,7
  5066  13E3  2BEC               	goto	l5574
  5067  13E4  082F               	movf	_wd,w
  5068  13E5  3E88               	addlw	136
  5069  13E6  00AF               	movwf	_wd
  5070  13E7  0830               	movf	_wd+1,w
  5071  13E8  1803               	skipnc
  5072  13E9  3E01               	addlw	1
  5073  13EA  3E13               	addlw	19
  5074  13EB  00B0               	movwf	_wd+1
  5075  13EC                     l5574:	
  5076                           
  5077                           ;temperature.c: 123: if (TX & 0x40) wd=wd+2500;
  5078  13EC  1F3C               	btfss	_TX,6
  5079  13ED  2BF6               	goto	l5578
  5080  13EE  082F               	movf	_wd,w
  5081  13EF  3EC4               	addlw	196
  5082  13F0  00AF               	movwf	_wd
  5083  13F1  0830               	movf	_wd+1,w
  5084  13F2  1803               	skipnc
  5085  13F3  3E01               	addlw	1
  5086  13F4  3E09               	addlw	9
  5087  13F5  00B0               	movwf	_wd+1
  5088  13F6                     l5578:	
  5089                           
  5090                           ;temperature.c: 124: if (TX & 0x20) wd=wd+1250;
  5091  13F6  1EBC               	btfss	_TX,5
  5092  13F7  2C00               	goto	l5582
  5093  13F8  082F               	movf	_wd,w
  5094  13F9  3EE2               	addlw	226
  5095  13FA  00AF               	movwf	_wd
  5096  13FB  0830               	movf	_wd+1,w
  5097  13FC  1803               	skipnc
  5098  13FD  3E01               	addlw	1
  5099  13FE  3E04               	addlw	4
  5100  13FF  00B0               	movwf	_wd+1
  5101  1400                     l5582:	
  5102                           
  5103                           ;temperature.c: 125: if (TX & 0x10) wd=wd+625;
  5104  1400  1E3C               	btfss	_TX,4
  5105  1401  2C0A               	goto	l5586
  5106  1402  082F               	movf	_wd,w
  5107  1403  3E71               	addlw	113
  5108  1404  00AF               	movwf	_wd
  5109  1405  0830               	movf	_wd+1,w
  5110  1406  1803               	skipnc
  5111  1407  3E01               	addlw	1
  5112  1408  3E02               	addlw	2
  5113  1409  00B0               	movwf	_wd+1
  5114  140A                     l5586:	
  5115                           
  5116                           ;temperature.c: 126: shifen=wd/1000;
  5117  140A  30E8               	movlw	232
  5118  140B  00F0               	movwf	___lwdiv@divisor
  5119  140C  3003               	movlw	3
  5120  140D  00F1               	movwf	___lwdiv@divisor+1
  5121  140E  0830               	movf	_wd+1,w
  5122  140F  00F3               	movwf	___lwdiv@dividend+1
  5123  1410  082F               	movf	_wd,w
  5124  1411  00F2               	movwf	___lwdiv@dividend
  5125  1412  160A  118A  2198   	fcall	___lwdiv
  5126  1415  0870               	movf	?___lwdiv,w
  5127  1416  00C4               	movwf	??_get_temp
  5128  1417  0844               	movf	??_get_temp,w
  5129  1418  00B9               	movwf	_shifen
  5130                           
  5131                           ;temperature.c: 127: __nop();
  5132  1419  0000               	nop
  5133  141A  0008               	return
  5134  141B                     __end_of_get_temp:	
  5135                           
  5136                           	psect	text19
  5137  1128                     __ptext19:	
  5138 ;; *************** function _write_byte *****************
  5139 ;; Defined at:
  5140 ;;		line 53 in file "temperature.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  val             1    wreg     unsigned char 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  val             1    7[COMMON] unsigned char 
  5145 ;;  i               1    8[COMMON] unsigned char 
  5146 ;;  temp            1    6[COMMON] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0, pclath, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/100
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5156 ;;      Params:         0       0       0       0       0
  5157 ;;      Locals:         3       0       0       0       0
  5158 ;;      Temps:          2       0       0       0       0
  5159 ;;      Totals:         5       0       0       0       0
  5160 ;;Total ram usage:        5 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    1
  5163 ;; This function calls:
  5164 ;;		_delay_temp
  5165 ;; This function is called by:
  5166 ;;		_get_temp
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           
  5171                           ;psect for function _write_byte
  5172  1128                     _write_byte:	
  5173                           
  5174                           ;incstack = 0
  5175                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  5176                           ;write_byte@val stored from wreg
  5177  1128  00F7               	movwf	write_byte@val
  5178                           
  5179                           ;temperature.c: 54:  unsigned char i;;temperature.c: 55:  unsigned char temp;;temperatur
      +                          e.c: 56:  for(i=8;i>0;i--)
  5180  1129  3008               	movlw	8
  5181  112A  00F4               	movwf	??_write_byte
  5182  112B  0874               	movf	??_write_byte,w
  5183  112C  00F8               	movwf	write_byte@i
  5184  112D                     l4322:	
  5185                           
  5186                           ;temperature.c: 57:  {;temperature.c: 58:    temp=val&0x01;
  5187  112D  0877               	movf	write_byte@val,w
  5188  112E  3901               	andlw	1
  5189  112F  00F4               	movwf	??_write_byte
  5190  1130  0874               	movf	??_write_byte,w
  5191  1131  00F6               	movwf	write_byte@temp
  5192                           
  5193                           ;temperature.c: 59:    RE0 = 0; TRISE0 = 0;
  5194  1132  1283               	bcf	3,5	;RP0=0, select bank0
  5195  1133  1303               	bcf	3,6	;RP1=0, select bank0
  5196  1134  1009               	bcf	9,0	;volatile
  5197  1135  1683               	bsf	3,5	;RP0=1, select bank1
  5198  1136  1009               	bcf	9,0	;volatile
  5199                           
  5200                           ;temperature.c: 60:    __nop();
  5201  1137  0000               	nop
  5202                           
  5203                           ;temperature.c: 61:    __nop();
  5204  1138  0000               	nop
  5205                           
  5206                           ;temperature.c: 62:    __nop();
  5207  1139  0000               	nop
  5208                           
  5209                           ;temperature.c: 63:    __nop();
  5210  113A  0000               	nop
  5211                           
  5212                           ;temperature.c: 64:    __nop();
  5213  113B  0000               	nop
  5214                           
  5215                           ;temperature.c: 65:    if(temp==1) TRISE0 =1;
  5216  113C  0376               	decf	write_byte@temp,w
  5217  113D  1D03               	btfss	3,2
  5218  113E  2942               	goto	l4342
  5219  113F  1683               	bsf	3,5	;RP0=1, select bank1
  5220  1140  1303               	bcf	3,6	;RP1=0, select bank1
  5221  1141  1409               	bsf	9,0	;volatile
  5222  1142                     l4342:	
  5223                           
  5224                           ;temperature.c: 66:    delay_temp(2,7);
  5225  1142  3007               	movlw	7
  5226  1143  00F4               	movwf	??_write_byte
  5227  1144  0874               	movf	??_write_byte,w
  5228  1145  00F0               	movwf	delay_temp@y
  5229  1146  3002               	movlw	2
  5230  1147  120A  118A  2003  160A  118A  	fcall	_delay_temp
  5231                           
  5232                           ;temperature.c: 67:    TRISE0 =1;
  5233  114C  1683               	bsf	3,5	;RP0=1, select bank1
  5234  114D  1303               	bcf	3,6	;RP1=0, select bank1
  5235  114E  1409               	bsf	9,0	;volatile
  5236                           
  5237                           ;temperature.c: 68:    __nop();
  5238  114F  0000               	nop
  5239                           
  5240                           ;temperature.c: 69:    __nop();
  5241  1150  0000               	nop
  5242                           
  5243                           ;temperature.c: 70:    val=val>>1;
  5244  1151  0877               	movf	write_byte@val,w
  5245  1152  00F4               	movwf	??_write_byte
  5246  1153  1003               	clrc
  5247  1154  0C74               	rrf	??_write_byte,w
  5248  1155  00F5               	movwf	??_write_byte+1
  5249  1156  0875               	movf	??_write_byte+1,w
  5250  1157  00F7               	movwf	write_byte@val
  5251                           
  5252                           ;temperature.c: 71:   }
  5253  1158  3001               	movlw	1
  5254  1159  02F8               	subwf	write_byte@i,f
  5255  115A  0878               	movf	write_byte@i,w
  5256  115B  1903               	btfsc	3,2
  5257  115C  0008               	return
  5258  115D  292D               	goto	l4322
  5259  115E                     __end_of_write_byte:	
  5260                           
  5261                           	psect	text20
  5262  1F97                     __ptext20:	
  5263 ;; *************** function _reset *****************
  5264 ;; Defined at:
  5265 ;;		line 37 in file "temperature.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  presence        1    5[COMMON] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2  546[None  ] int 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 200/100
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5279 ;;      Params:         0       0       0       0       0
  5280 ;;      Locals:         1       0       0       0       0
  5281 ;;      Temps:          1       0       0       0       0
  5282 ;;      Totals:         2       0       0       0       0
  5283 ;;Total ram usage:        2 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    1
  5286 ;; This function calls:
  5287 ;;		_delay_temp
  5288 ;; This function is called by:
  5289 ;;		_get_temp
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function _reset
  5295  1F97                     _reset:	
  5296                           
  5297                           ;temperature.c: 38:   unsigned char presence=1;
  5298                           
  5299                           ;incstack = 0
  5300                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  5301  1F97  01F5               	clrf	reset@presence
  5302  1F98  0AF5               	incf	reset@presence,f
  5303  1F99                     l4314:	
  5304                           ;temperature.c: 39:   while(presence)
  5305                           
  5306                           
  5307                           ;temperature.c: 39:   while(presence)
  5308  1F99  0875               	movf	reset@presence,w
  5309  1F9A  1903               	btfsc	3,2
  5310  1F9B  0008               	return
  5311                           
  5312                           ;temperature.c: 40:   {;temperature.c: 41:     RE0 = 0; TRISE0 = 0 ;
  5313  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
  5314  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
  5315  1F9E  1009               	bcf	9,0	;volatile
  5316  1F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5317  1FA0  1009               	bcf	9,0	;volatile
  5318                           
  5319                           ;temperature.c: 42:     delay_temp(2,70);
  5320  1FA1  3046               	movlw	70
  5321  1FA2  00F4               	movwf	??_reset
  5322  1FA3  0874               	movf	??_reset,w
  5323  1FA4  00F0               	movwf	delay_temp@y
  5324  1FA5  3002               	movlw	2
  5325  1FA6  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5326                           
  5327                           ;temperature.c: 43:     TRISE0 =1;
  5328  1FAB  1683               	bsf	3,5	;RP0=1, select bank1
  5329  1FAC  1303               	bcf	3,6	;RP1=0, select bank1
  5330  1FAD  1409               	bsf	9,0	;volatile
  5331                           
  5332                           ;temperature.c: 44:     delay_temp(2,8);
  5333  1FAE  3008               	movlw	8
  5334  1FAF  00F4               	movwf	??_reset
  5335  1FB0  0874               	movf	??_reset,w
  5336  1FB1  00F0               	movwf	delay_temp@y
  5337  1FB2  3002               	movlw	2
  5338  1FB3  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5339                           
  5340                           ;temperature.c: 45:     if(RE0==1) presence=1;
  5341  1FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5342  1FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5343  1FBA  1C09               	btfss	9,0	;volatile
  5344  1FBB  2FBF               	goto	l4310
  5345  1FBC  01F5               	clrf	reset@presence
  5346  1FBD  0AF5               	incf	reset@presence,f
  5347  1FBE  2FC0               	goto	l4312
  5348  1FBF                     l4310:	
  5349  1FBF  01F5               	clrf	reset@presence
  5350  1FC0                     l4312:	
  5351                           
  5352                           ;temperature.c: 47:     delay_temp(2,60);
  5353  1FC0  303C               	movlw	60
  5354  1FC1  00F4               	movwf	??_reset
  5355  1FC2  0874               	movf	??_reset,w
  5356  1FC3  00F0               	movwf	delay_temp@y
  5357  1FC4  3002               	movlw	2
  5358  1FC5  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5359  1FCA  2F99               	goto	l4314
  5360  1FCB                     __end_of_reset:	
  5361                           
  5362                           	psect	text21
  5363  1F38                     __ptext21:	
  5364 ;; *************** function _read_byte *****************
  5365 ;; Defined at:
  5366 ;;		line 76 in file "temperature.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  i               1    6[COMMON] unsigned char 
  5371 ;;  value           1    5[COMMON] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0
  5383 ;;      Temps:          1       0       0       0       0
  5384 ;;      Totals:         3       0       0       0       0
  5385 ;;Total ram usage:        3 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    1
  5388 ;; This function calls:
  5389 ;;		_delay_temp
  5390 ;; This function is called by:
  5391 ;;		_get_temp
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _read_byte
  5397  1F38                     _read_byte:	
  5398                           
  5399                           ;temperature.c: 77:  unsigned char i;;temperature.c: 78:  unsigned char value=0;
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  5403  1F38  01F5               	clrf	read_byte@value
  5404                           
  5405                           ;temperature.c: 79:  static char j;;temperature.c: 80:  for(i=8;i>0;i--)
  5406  1F39  3008               	movlw	8
  5407  1F3A  00F4               	movwf	??_read_byte
  5408  1F3B  0874               	movf	??_read_byte,w
  5409  1F3C  00F6               	movwf	read_byte@i
  5410  1F3D                     l4364:	
  5411                           
  5412                           ;temperature.c: 81:  {;temperature.c: 82:    value>>=1;
  5413  1F3D  1003               	clrc
  5414  1F3E  0CF5               	rrf	read_byte@value,f
  5415                           
  5416                           ;temperature.c: 83:    RE0 = 0; TRISE0 = 0;
  5417  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  5418  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  5419  1F41  1009               	bcf	9,0	;volatile
  5420  1F42  1683               	bsf	3,5	;RP0=1, select bank1
  5421  1F43  1009               	bcf	9,0	;volatile
  5422                           
  5423                           ;temperature.c: 84:    __nop();
  5424  1F44  0000               	nop
  5425                           
  5426                           ;temperature.c: 85:    __nop();
  5427  1F45  0000               	nop
  5428                           
  5429                           ;temperature.c: 86:    __nop();
  5430  1F46  0000               	nop
  5431                           
  5432                           ;temperature.c: 87:    __nop();
  5433  1F47  0000               	nop
  5434                           
  5435                           ;temperature.c: 88:    __nop();
  5436  1F48  0000               	nop
  5437                           
  5438                           ;temperature.c: 89:    __nop();
  5439  1F49  0000               	nop
  5440                           
  5441                           ;temperature.c: 90:    TRISE0 =1;
  5442  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5443  1F4B  1303               	bcf	3,6	;RP1=0, select bank1
  5444  1F4C  1409               	bsf	9,0	;volatile
  5445                           
  5446                           ;temperature.c: 91:    __nop();
  5447  1F4D  0000               	nop
  5448                           
  5449                           ;temperature.c: 92:    __nop();
  5450  1F4E  0000               	nop
  5451                           
  5452                           ;temperature.c: 93:    __nop();
  5453  1F4F  0000               	nop
  5454                           
  5455                           ;temperature.c: 94:    __nop();
  5456  1F50  0000               	nop
  5457                           
  5458                           ;temperature.c: 95:    __nop();
  5459  1F51  0000               	nop
  5460                           
  5461                           ;temperature.c: 97:    if(RE0 == 1) value|=0x80;
  5462  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  5463  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  5464  1F54  1809               	btfsc	9,0	;volatile
  5465  1F55  17F5               	bsf	read_byte@value,7
  5466                           
  5467                           ;temperature.c: 98:    delay_temp(2,7);
  5468  1F56  3007               	movlw	7
  5469  1F57  00F4               	movwf	??_read_byte
  5470  1F58  0874               	movf	??_read_byte,w
  5471  1F59  00F0               	movwf	delay_temp@y
  5472  1F5A  3002               	movlw	2
  5473  1F5B  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5474                           
  5475                           ;temperature.c: 99:   }
  5476  1F60  3001               	movlw	1
  5477  1F61  02F6               	subwf	read_byte@i,f
  5478  1F62  0876               	movf	read_byte@i,w
  5479  1F63  1D03               	btfss	3,2
  5480  1F64  2F3D               	goto	l4364
  5481                           
  5482                           ;temperature.c: 100:   return(value);
  5483  1F65  0875               	movf	read_byte@value,w
  5484  1F66  0008               	return
  5485  1F67                     __end_of_read_byte:	
  5486                           
  5487                           	psect	text22
  5488  0003                     __ptext22:	
  5489 ;; *************** function _delay_temp *****************
  5490 ;; Defined at:
  5491 ;;		line 13 in file "temperature.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  x               1    wreg     unsigned char 
  5494 ;;  y               1    0[COMMON] unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  x               1    2[COMMON] unsigned char 
  5497 ;;  z               1    3[COMMON] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/100
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5507 ;;      Params:         1       0       0       0       0
  5508 ;;      Locals:         2       0       0       0       0
  5509 ;;      Temps:          1       0       0       0       0
  5510 ;;      Totals:         4       0       0       0       0
  5511 ;;Total ram usage:        4 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_reset
  5517 ;;		_write_byte
  5518 ;;		_read_byte
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           
  5523                           ;psect for function _delay_temp
  5524  0003                     _delay_temp:	
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  5528                           ;delay_temp@x stored from wreg
  5529  0003  00F2               	movwf	delay_temp@x
  5530  0004                     l537:	
  5531                           ;temperature.c: 14:   unsigned char z;;temperature.c: 15:   do{
  5532                           
  5533                           
  5534                           ;temperature.c: 16:       z=y;
  5535  0004  0870               	movf	delay_temp@y,w
  5536  0005  00F1               	movwf	??_delay_temp
  5537  0006  0871               	movf	??_delay_temp,w
  5538  0007  00F3               	movwf	delay_temp@z
  5539  0008                     l3790:	
  5540  0008  3001               	movlw	1
  5541  0009  02F3               	subwf	delay_temp@z,f
  5542  000A  1D03               	btfss	3,2
  5543  000B  2808               	goto	l3790
  5544                           
  5545                           ;temperature.c: 18:      }while(--x);
  5546  000C  3001               	movlw	1
  5547  000D  02F2               	subwf	delay_temp@x,f
  5548  000E  1903               	btfsc	3,2
  5549  000F  0008               	return
  5550  0010  2804               	goto	l537
  5551  0011                     __end_of_delay_temp:	
  5552                           
  5553                           	psect	text23
  5554  1FCB                     __ptext23:	
  5555 ;; *************** function _display_temp *****************
  5556 ;; Defined at:
  5557 ;;		line 23 in file "temperature.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/100
  5568 ;;		On exit  : 300/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5571 ;;      Params:         0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    3
  5578 ;; This function calls:
  5579 ;;		_write_str
  5580 ;;		_writechar
  5581 ;;		_writecmd_4line
  5582 ;; This function is called by:
  5583 ;;		_get_temp
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function _display_temp
  5589  1FCB                     _display_temp:	
  5590                           
  5591                           ;temperature.c: 25:     writecmd_4line(0x98);
  5592                           
  5593                           ;incstack = 0
  5594                           ; Regs used in _display_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5595  1FCB  3098               	movlw	152
  5596  1FCC  160A  158A  25CB  160A  158A  	fcall	_writecmd_4line
  5597                           
  5598                           ;temperature.c: 26:     write_str("Temp:");
  5599  1FD1  3098               	movlw	low (STR_37| (0+32768))
  5600  1FD2  00F3               	movwf	write_str@array
  5601  1FD3  3090               	movlw	high (STR_37| (0+32768))
  5602  1FD4  00F4               	movwf	write_str@array+1
  5603  1FD5  160A  118A  215E  160A  158A  	fcall	_write_str
  5604                           
  5605                           ;temperature.c: 27:     writechar(shi + '0');
  5606  1FDA  083B               	movf	_shi,w
  5607  1FDB  3E30               	addlw	48
  5608  1FDC  160A  158A  25AF  160A  158A  	fcall	_writechar
  5609                           
  5610                           ;temperature.c: 28:     writechar(ge + '0');
  5611  1FE1  083A               	movf	_ge,w
  5612  1FE2  3E30               	addlw	48
  5613  1FE3  160A  158A  25AF  160A  158A  	fcall	_writechar
  5614                           
  5615                           ;temperature.c: 29:     write_str(".");
  5616  1FE8  303C               	movlw	low ((STR_21+13)| (0+32768))
  5617  1FE9  00F3               	movwf	write_str@array
  5618  1FEA  3090               	movlw	high ((STR_21+13)| (0+32768))
  5619  1FEB  00F4               	movwf	write_str@array+1
  5620  1FEC  160A  118A  215E  160A  158A  	fcall	_write_str
  5621                           
  5622                           ;temperature.c: 30:     writechar(shifen + '0');
  5623  1FF1  0839               	movf	_shifen,w
  5624  1FF2  3E30               	addlw	48
  5625  1FF3  160A  158A  25AF  160A  158A  	fcall	_writechar
  5626                           
  5627                           ;temperature.c: 31:     write_str("C");
  5628  1FF8  3002               	movlw	low (STR_39| (0+32768))
  5629  1FF9  00F3               	movwf	write_str@array
  5630  1FFA  3091               	movlw	high (STR_39| (0+32768))
  5631  1FFB  00F4               	movwf	write_str@array+1
  5632  1FFC  160A  118A  215E   	fcall	_write_str
  5633  1FFF  0008               	return
  5634  2000                     __end_of_display_temp:	
  5635                           
  5636                           	psect	text24
  5637  1198                     __ptext24:	
  5638 ;; *************** function ___lwdiv *****************
  5639 ;; Defined at:
  5640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  divisor         2    0[COMMON] unsigned int 
  5643 ;;  dividend        2    2[COMMON] unsigned int 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  quotient        2    5[COMMON] unsigned int 
  5646 ;;  counter         1    7[COMMON] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  2    0[COMMON] unsigned int 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 300/0
  5653 ;;		On exit  : 300/0
  5654 ;;		Unchanged: 300/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5656 ;;      Params:         4       0       0       0       0
  5657 ;;      Locals:         3       0       0       0       0
  5658 ;;      Temps:          1       0       0       0       0
  5659 ;;      Totals:         8       0       0       0       0
  5660 ;;Total ram usage:        8 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_get_temp
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function ___lwdiv
  5671  1198                     ___lwdiv:	
  5672                           
  5673                           ;incstack = 0
  5674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5675  1198  01F5               	clrf	___lwdiv@quotient
  5676  1199  01F6               	clrf	___lwdiv@quotient+1
  5677  119A  0870               	movf	___lwdiv@divisor,w
  5678  119B  0471               	iorwf	___lwdiv@divisor+1,w
  5679  119C  1903               	btfsc	3,2
  5680  119D  29CF               	goto	l4852
  5681  119E  01F7               	clrf	___lwdiv@counter
  5682  119F  0AF7               	incf	___lwdiv@counter,f
  5683  11A0                     l4840:	
  5684  11A0  1BF1               	btfsc	___lwdiv@divisor+1,7
  5685  11A1  29AE               	goto	l4842
  5686  11A2  3001               	movlw	1
  5687  11A3                     u4495:	
  5688  11A3  1003               	clrc
  5689  11A4  0DF0               	rlf	___lwdiv@divisor,f
  5690  11A5  0DF1               	rlf	___lwdiv@divisor+1,f
  5691  11A6  3EFF               	addlw	-1
  5692  11A7  1D03               	skipz
  5693  11A8  29A3               	goto	u4495
  5694  11A9  3001               	movlw	1
  5695  11AA  00F4               	movwf	??___lwdiv
  5696  11AB  0874               	movf	??___lwdiv,w
  5697  11AC  07F7               	addwf	___lwdiv@counter,f
  5698  11AD  29A0               	goto	l4840
  5699  11AE                     l4842:	
  5700  11AE  3001               	movlw	1
  5701  11AF                     u4515:	
  5702  11AF  1003               	clrc
  5703  11B0  0DF5               	rlf	___lwdiv@quotient,f
  5704  11B1  0DF6               	rlf	___lwdiv@quotient+1,f
  5705  11B2  3EFF               	addlw	-1
  5706  11B3  1D03               	skipz
  5707  11B4  29AF               	goto	u4515
  5708  11B5  0871               	movf	___lwdiv@divisor+1,w
  5709  11B6  0273               	subwf	___lwdiv@dividend+1,w
  5710  11B7  1D03               	skipz
  5711  11B8  29BB               	goto	u4525
  5712  11B9  0870               	movf	___lwdiv@divisor,w
  5713  11BA  0272               	subwf	___lwdiv@dividend,w
  5714  11BB                     u4525:	
  5715  11BB  1C03               	skipc
  5716  11BC  29C4               	goto	l4848
  5717  11BD  0870               	movf	___lwdiv@divisor,w
  5718  11BE  02F2               	subwf	___lwdiv@dividend,f
  5719  11BF  0871               	movf	___lwdiv@divisor+1,w
  5720  11C0  1C03               	skipc
  5721  11C1  03F3               	decf	___lwdiv@dividend+1,f
  5722  11C2  02F3               	subwf	___lwdiv@dividend+1,f
  5723  11C3  1475               	bsf	___lwdiv@quotient,0
  5724  11C4                     l4848:	
  5725  11C4  3001               	movlw	1
  5726  11C5                     u4535:	
  5727  11C5  1003               	clrc
  5728  11C6  0CF1               	rrf	___lwdiv@divisor+1,f
  5729  11C7  0CF0               	rrf	___lwdiv@divisor,f
  5730  11C8  3EFF               	addlw	-1
  5731  11C9  1D03               	skipz
  5732  11CA  29C5               	goto	u4535
  5733  11CB  3001               	movlw	1
  5734  11CC  02F7               	subwf	___lwdiv@counter,f
  5735  11CD  1D03               	btfss	3,2
  5736  11CE  29AE               	goto	l4842
  5737  11CF                     l4852:	
  5738  11CF  0876               	movf	___lwdiv@quotient+1,w
  5739  11D0  00F1               	movwf	?___lwdiv+1
  5740  11D1  0875               	movf	___lwdiv@quotient,w
  5741  11D2  00F0               	movwf	?___lwdiv
  5742  11D3  0008               	return
  5743  11D4                     __end_of___lwdiv:	
  5744                           
  5745                           	psect	text25
  5746  1E46                     __ptext25:	
  5747 ;; *************** function ___lbmod *****************
  5748 ;; Defined at:
  5749 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dividend        1    wreg     unsigned char 
  5752 ;;  divisor         1    0[COMMON] unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  dividend        1    4[COMMON] unsigned char 
  5755 ;;  rem             1    6[COMMON] unsigned char 
  5756 ;;  counter         1    5[COMMON] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      unsigned char 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 300/0
  5763 ;;		On exit  : 300/0
  5764 ;;		Unchanged: 300/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         1       0       0       0       0
  5767 ;;      Locals:         3       0       0       0       0
  5768 ;;      Temps:          3       0       0       0       0
  5769 ;;      Totals:         7       0       0       0       0
  5770 ;;Total ram usage:        7 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_get_temp
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function ___lbmod
  5781  1E46                     ___lbmod:	
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5785                           ;___lbmod@dividend stored from wreg
  5786  1E46  00F4               	movwf	___lbmod@dividend
  5787  1E47  3008               	movlw	8
  5788  1E48  00F1               	movwf	??___lbmod
  5789  1E49  0871               	movf	??___lbmod,w
  5790  1E4A  00F5               	movwf	___lbmod@counter
  5791  1E4B  01F6               	clrf	___lbmod@rem
  5792  1E4C                     l4818:	
  5793  1E4C  0874               	movf	___lbmod@dividend,w
  5794  1E4D  00F1               	movwf	??___lbmod
  5795  1E4E  3007               	movlw	7
  5796  1E4F                     u4455:	
  5797  1E4F  1003               	clrc
  5798  1E50  0CF1               	rrf	??___lbmod,f
  5799  1E51  3EFF               	addlw	-1
  5800  1E52  1D03               	skipz
  5801  1E53  2E4F               	goto	u4455
  5802  1E54  0876               	movf	___lbmod@rem,w
  5803  1E55  00F2               	movwf	??___lbmod+1
  5804  1E56  0772               	addwf	??___lbmod+1,w
  5805  1E57  0471               	iorwf	??___lbmod,w
  5806  1E58  00F3               	movwf	??___lbmod+2
  5807  1E59  0873               	movf	??___lbmod+2,w
  5808  1E5A  00F6               	movwf	___lbmod@rem
  5809  1E5B  1003               	clrc
  5810  1E5C  0DF4               	rlf	___lbmod@dividend,f
  5811  1E5D  0870               	movf	___lbmod@divisor,w
  5812  1E5E  0276               	subwf	___lbmod@rem,w
  5813  1E5F  1C03               	skipc
  5814  1E60  2E63               	goto	l1156
  5815  1E61  0870               	movf	___lbmod@divisor,w
  5816  1E62  02F6               	subwf	___lbmod@rem,f
  5817  1E63                     l1156:	
  5818  1E63  3001               	movlw	1
  5819  1E64  02F5               	subwf	___lbmod@counter,f
  5820  1E65  1D03               	btfss	3,2
  5821  1E66  2E4C               	goto	l4818
  5822  1E67  0876               	movf	___lbmod@rem,w
  5823  1E68  0008               	return
  5824  1E69                     __end_of___lbmod:	
  5825                           
  5826                           	psect	text26
  5827  1E25                     __ptext26:	
  5828 ;; *************** function ___lbdiv *****************
  5829 ;; Defined at:
  5830 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  dividend        1    wreg     unsigned char 
  5833 ;;  divisor         1    0[COMMON] unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  dividend        1    2[COMMON] unsigned char 
  5836 ;;  quotient        1    4[COMMON] unsigned char 
  5837 ;;  counter         1    3[COMMON] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      unsigned char 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 300/0
  5844 ;;		On exit  : 300/0
  5845 ;;		Unchanged: 300/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5847 ;;      Params:         1       0       0       0       0
  5848 ;;      Locals:         3       0       0       0       0
  5849 ;;      Temps:          1       0       0       0       0
  5850 ;;      Totals:         5       0       0       0       0
  5851 ;;Total ram usage:        5 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_get_temp
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           
  5861                           ;psect for function ___lbdiv
  5862  1E25                     ___lbdiv:	
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5866                           ;___lbdiv@dividend stored from wreg
  5867  1E25  00F2               	movwf	___lbdiv@dividend
  5868  1E26  01F4               	clrf	___lbdiv@quotient
  5869  1E27  0870               	movf	___lbdiv@divisor,w
  5870  1E28  1903               	btfsc	3,2
  5871  1E29  2E44               	goto	l4810
  5872  1E2A  01F3               	clrf	___lbdiv@counter
  5873  1E2B  0AF3               	incf	___lbdiv@counter,f
  5874  1E2C                     l4798:	
  5875  1E2C  1BF0               	btfsc	___lbdiv@divisor,7
  5876  1E2D  2E35               	goto	l4800
  5877  1E2E  1003               	clrc
  5878  1E2F  0DF0               	rlf	___lbdiv@divisor,f
  5879  1E30  3001               	movlw	1
  5880  1E31  00F1               	movwf	??___lbdiv
  5881  1E32  0871               	movf	??___lbdiv,w
  5882  1E33  07F3               	addwf	___lbdiv@counter,f
  5883  1E34  2E2C               	goto	l4798
  5884  1E35                     l4800:	
  5885  1E35  1003               	clrc
  5886  1E36  0DF4               	rlf	___lbdiv@quotient,f
  5887  1E37  0870               	movf	___lbdiv@divisor,w
  5888  1E38  0272               	subwf	___lbdiv@dividend,w
  5889  1E39  1C03               	skipc
  5890  1E3A  2E3F               	goto	L4
  5891  1E3B  0870               	movf	___lbdiv@divisor,w
  5892  1E3C  02F2               	subwf	___lbdiv@dividend,f
  5893  1E3D  1474               	bsf	___lbdiv@quotient,0
  5894  1E3E  1003               	clrc
  5895  1E3F                     L4:	
  5896  1E3F  0CF0               	rrf	___lbdiv@divisor,f
  5897  1E40  3001               	movlw	1
  5898  1E41  02F3               	subwf	___lbdiv@counter,f
  5899  1E42  1D03               	btfss	3,2
  5900  1E43  2E35               	goto	l4800
  5901  1E44                     l4810:	
  5902  1E44  0874               	movf	___lbdiv@quotient,w
  5903  1E45  0008               	return
  5904  1E46                     __end_of___lbdiv:	
  5905                           
  5906                           	psect	text27
  5907  0BB1                     __ptext27:	
  5908 ;; *************** function _display_clock *****************
  5909 ;; Defined at:
  5910 ;;		line 110 in file "clock_source.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;		None
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  i               2    2[BANK0 ] int 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 300/0
  5921 ;;		On exit  : 300/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5924 ;;      Params:         0       0       0       0       0
  5925 ;;      Locals:         0       2       0       0       0
  5926 ;;      Temps:          0       2       0       0       0
  5927 ;;      Totals:         0       4       0       0       0
  5928 ;;Total ram usage:        4 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    4
  5931 ;; This function calls:
  5932 ;;		_week
  5933 ;;		_write_str
  5934 ;;		_writechar
  5935 ;;		_writecmd_4line
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _display_clock
  5943  0BB1                     _display_clock:	
  5944                           
  5945                           ;clock_source.c: 111:     int i;;clock_source.c: 114:     writecmd_4line(0x80);
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _display_clock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5949  0BB1  3080               	movlw	128
  5950  0BB2  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  5951                           
  5952                           ;clock_source.c: 115:     write_str("Date:");
  5953  0BB7  30AA               	movlw	low (STR_8| (0+32768))
  5954  0BB8  00F3               	movwf	write_str@array
  5955  0BB9  3090               	movlw	high (STR_8| (0+32768))
  5956  0BBA  00F4               	movwf	write_str@array+1
  5957  0BBB  160A  118A  215E  120A  158A  	fcall	_write_str
  5958                           
  5959                           ;clock_source.c: 118:     i=table1[3]&0xf0;
  5960  0BC0  0823               	movf	_table1+3,w
  5961  0BC1  39F0               	andlw	240
  5962  0BC2  00C4               	movwf	??_display_clock
  5963  0BC3  01C5               	clrf	??_display_clock+1
  5964  0BC4  0844               	movf	??_display_clock,w
  5965  0BC5  00C6               	movwf	display_clock@i
  5966  0BC6  0845               	movf	??_display_clock+1,w
  5967  0BC7  00C7               	movwf	display_clock@i+1
  5968                           
  5969                           ;clock_source.c: 119:     i=i>>4;
  5970  0BC8  0E46               	swapf	display_clock@i,w
  5971  0BC9  390F               	andlw	15
  5972  0BCA  00C6               	movwf	display_clock@i
  5973  0BCB  0E47               	swapf	display_clock@i+1,w
  5974  0BCC  39F0               	andlw	240
  5975  0BCD  04C6               	iorwf	display_clock@i,f
  5976  0BCE  0E47               	swapf	display_clock@i+1,w
  5977  0BCF  390F               	andlw	15
  5978  0BD0  00C7               	movwf	display_clock@i+1
  5979  0BD1  30F0               	movlw	240
  5980  0BD2  1DC7               	btfss	display_clock@i+1,3
  5981  0BD3  3000               	movlw	0
  5982  0BD4  04C7               	iorwf	display_clock@i+1,f
  5983                           
  5984                           ;clock_source.c: 120:     writechar(i + '0');
  5985  0BD5  0846               	movf	display_clock@i,w
  5986  0BD6  3E30               	addlw	48
  5987  0BD7  160A  158A  25AF  120A  158A  	fcall	_writechar
  5988                           
  5989                           ;clock_source.c: 121:     i=i<<4;
  5990  0BDC  0847               	movf	display_clock@i+1,w
  5991  0BDD  00C5               	movwf	??_display_clock+1
  5992  0BDE  0846               	movf	display_clock@i,w
  5993  0BDF  00C4               	movwf	??_display_clock
  5994  0BE0  0EC4               	swapf	??_display_clock,f
  5995  0BE1  0EC5               	swapf	??_display_clock+1,f
  5996  0BE2  30F0               	movlw	240
  5997  0BE3  05C5               	andwf	??_display_clock+1,f
  5998  0BE4  0844               	movf	??_display_clock,w
  5999  0BE5  390F               	andlw	15
  6000  0BE6  04C5               	iorwf	??_display_clock+1,f
  6001  0BE7  30F0               	movlw	240
  6002  0BE8  05C4               	andwf	??_display_clock,f
  6003  0BE9  0844               	movf	??_display_clock,w
  6004  0BEA  00C6               	movwf	display_clock@i
  6005  0BEB  0845               	movf	??_display_clock+1,w
  6006  0BEC  00C7               	movwf	display_clock@i+1
  6007                           
  6008                           ;clock_source.c: 122:     i = table1[3]&0x0f;
  6009  0BED  0823               	movf	_table1+3,w
  6010  0BEE  390F               	andlw	15
  6011  0BEF  00C4               	movwf	??_display_clock
  6012  0BF0  01C5               	clrf	??_display_clock+1
  6013  0BF1  0844               	movf	??_display_clock,w
  6014  0BF2  00C6               	movwf	display_clock@i
  6015  0BF3  0845               	movf	??_display_clock+1,w
  6016  0BF4  00C7               	movwf	display_clock@i+1
  6017                           
  6018                           ;clock_source.c: 123:     writechar(i + '0');
  6019  0BF5  0846               	movf	display_clock@i,w
  6020  0BF6  3E30               	addlw	48
  6021  0BF7  160A  158A  25AF  120A  158A  	fcall	_writechar
  6022                           
  6023                           ;clock_source.c: 124:     write_str("/");
  6024  0BFC  3004               	movlw	low (STR_9| (0+32768))
  6025  0BFD  00F3               	movwf	write_str@array
  6026  0BFE  3091               	movlw	high (STR_9| (0+32768))
  6027  0BFF  00F4               	movwf	write_str@array+1
  6028  0C00  160A  118A  215E  120A  158A  	fcall	_write_str
  6029                           
  6030                           ;clock_source.c: 127:     i=table1[4]&0xf0;
  6031  0C05  0824               	movf	_table1+4,w
  6032  0C06  39F0               	andlw	240
  6033  0C07  00C4               	movwf	??_display_clock
  6034  0C08  01C5               	clrf	??_display_clock+1
  6035  0C09  0844               	movf	??_display_clock,w
  6036  0C0A  00C6               	movwf	display_clock@i
  6037  0C0B  0845               	movf	??_display_clock+1,w
  6038  0C0C  00C7               	movwf	display_clock@i+1
  6039                           
  6040                           ;clock_source.c: 128:     i=i>>4;
  6041  0C0D  0E46               	swapf	display_clock@i,w
  6042  0C0E  390F               	andlw	15
  6043  0C0F  00C6               	movwf	display_clock@i
  6044  0C10  0E47               	swapf	display_clock@i+1,w
  6045  0C11  39F0               	andlw	240
  6046  0C12  04C6               	iorwf	display_clock@i,f
  6047  0C13  0E47               	swapf	display_clock@i+1,w
  6048  0C14  390F               	andlw	15
  6049  0C15  00C7               	movwf	display_clock@i+1
  6050  0C16  30F0               	movlw	240
  6051  0C17  1DC7               	btfss	display_clock@i+1,3
  6052  0C18  3000               	movlw	0
  6053  0C19  04C7               	iorwf	display_clock@i+1,f
  6054                           
  6055                           ;clock_source.c: 129:     writechar(i + '0');
  6056  0C1A  0846               	movf	display_clock@i,w
  6057  0C1B  3E30               	addlw	48
  6058  0C1C  160A  158A  25AF  120A  158A  	fcall	_writechar
  6059                           
  6060                           ;clock_source.c: 130:     i=i<<4;
  6061  0C21  0847               	movf	display_clock@i+1,w
  6062  0C22  00C5               	movwf	??_display_clock+1
  6063  0C23  0846               	movf	display_clock@i,w
  6064  0C24  00C4               	movwf	??_display_clock
  6065  0C25  0EC4               	swapf	??_display_clock,f
  6066  0C26  0EC5               	swapf	??_display_clock+1,f
  6067  0C27  30F0               	movlw	240
  6068  0C28  05C5               	andwf	??_display_clock+1,f
  6069  0C29  0844               	movf	??_display_clock,w
  6070  0C2A  390F               	andlw	15
  6071  0C2B  04C5               	iorwf	??_display_clock+1,f
  6072  0C2C  30F0               	movlw	240
  6073  0C2D  05C4               	andwf	??_display_clock,f
  6074  0C2E  0844               	movf	??_display_clock,w
  6075  0C2F  00C6               	movwf	display_clock@i
  6076  0C30  0845               	movf	??_display_clock+1,w
  6077  0C31  00C7               	movwf	display_clock@i+1
  6078                           
  6079                           ;clock_source.c: 131:     i = table1[4]&0x0f;
  6080  0C32  0824               	movf	_table1+4,w
  6081  0C33  390F               	andlw	15
  6082  0C34  00C4               	movwf	??_display_clock
  6083  0C35  01C5               	clrf	??_display_clock+1
  6084  0C36  0844               	movf	??_display_clock,w
  6085  0C37  00C6               	movwf	display_clock@i
  6086  0C38  0845               	movf	??_display_clock+1,w
  6087  0C39  00C7               	movwf	display_clock@i+1
  6088                           
  6089                           ;clock_source.c: 132:     writechar(i + '0');
  6090  0C3A  0846               	movf	display_clock@i,w
  6091  0C3B  3E30               	addlw	48
  6092  0C3C  160A  158A  25AF  120A  158A  	fcall	_writechar
  6093                           
  6094                           ;clock_source.c: 133:     write_str("/");
  6095  0C41  3004               	movlw	low (STR_9| (0+32768))
  6096  0C42  00F3               	movwf	write_str@array
  6097  0C43  3091               	movlw	high (STR_9| (0+32768))
  6098  0C44  00F4               	movwf	write_str@array+1
  6099  0C45  160A  118A  215E  120A  158A  	fcall	_write_str
  6100                           
  6101                           ;clock_source.c: 136:     i=table1[6]&0xf0;
  6102  0C4A  0826               	movf	_table1+6,w
  6103  0C4B  39F0               	andlw	240
  6104  0C4C  00C4               	movwf	??_display_clock
  6105  0C4D  01C5               	clrf	??_display_clock+1
  6106  0C4E  0844               	movf	??_display_clock,w
  6107  0C4F  00C6               	movwf	display_clock@i
  6108  0C50  0845               	movf	??_display_clock+1,w
  6109  0C51  00C7               	movwf	display_clock@i+1
  6110                           
  6111                           ;clock_source.c: 137:     i=i>>4;
  6112  0C52  0E46               	swapf	display_clock@i,w
  6113  0C53  390F               	andlw	15
  6114  0C54  00C6               	movwf	display_clock@i
  6115  0C55  0E47               	swapf	display_clock@i+1,w
  6116  0C56  39F0               	andlw	240
  6117  0C57  04C6               	iorwf	display_clock@i,f
  6118  0C58  0E47               	swapf	display_clock@i+1,w
  6119  0C59  390F               	andlw	15
  6120  0C5A  00C7               	movwf	display_clock@i+1
  6121  0C5B  30F0               	movlw	240
  6122  0C5C  1DC7               	btfss	display_clock@i+1,3
  6123  0C5D  3000               	movlw	0
  6124  0C5E  04C7               	iorwf	display_clock@i+1,f
  6125                           
  6126                           ;clock_source.c: 138:     writechar(i + '0');
  6127  0C5F  0846               	movf	display_clock@i,w
  6128  0C60  3E30               	addlw	48
  6129  0C61  160A  158A  25AF  120A  158A  	fcall	_writechar
  6130                           
  6131                           ;clock_source.c: 139:     i=i<<4;
  6132  0C66  0847               	movf	display_clock@i+1,w
  6133  0C67  00C5               	movwf	??_display_clock+1
  6134  0C68  0846               	movf	display_clock@i,w
  6135  0C69  00C4               	movwf	??_display_clock
  6136  0C6A  0EC4               	swapf	??_display_clock,f
  6137  0C6B  0EC5               	swapf	??_display_clock+1,f
  6138  0C6C  30F0               	movlw	240
  6139  0C6D  05C5               	andwf	??_display_clock+1,f
  6140  0C6E  0844               	movf	??_display_clock,w
  6141  0C6F  390F               	andlw	15
  6142  0C70  04C5               	iorwf	??_display_clock+1,f
  6143  0C71  30F0               	movlw	240
  6144  0C72  05C4               	andwf	??_display_clock,f
  6145  0C73  0844               	movf	??_display_clock,w
  6146  0C74  00C6               	movwf	display_clock@i
  6147  0C75  0845               	movf	??_display_clock+1,w
  6148  0C76  00C7               	movwf	display_clock@i+1
  6149                           
  6150                           ;clock_source.c: 140:     i = table1[6]&0x0f;
  6151  0C77  0826               	movf	_table1+6,w
  6152  0C78  390F               	andlw	15
  6153  0C79  00C4               	movwf	??_display_clock
  6154  0C7A  01C5               	clrf	??_display_clock+1
  6155  0C7B  0844               	movf	??_display_clock,w
  6156  0C7C  00C6               	movwf	display_clock@i
  6157  0C7D  0845               	movf	??_display_clock+1,w
  6158  0C7E  00C7               	movwf	display_clock@i+1
  6159                           
  6160                           ;clock_source.c: 141:     writechar(i + '0');
  6161  0C7F  0846               	movf	display_clock@i,w
  6162  0C80  3E30               	addlw	48
  6163  0C81  160A  158A  25AF  120A  158A  	fcall	_writechar
  6164                           
  6165                           ;clock_source.c: 144:     writecmd_4line(0x90);
  6166  0C86  3090               	movlw	144
  6167  0C87  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  6168                           
  6169                           ;clock_source.c: 145:     write_str("Week:");
  6170  0C8C  30B0               	movlw	low (STR_11| (0+32768))
  6171  0C8D  00F3               	movwf	write_str@array
  6172  0C8E  3090               	movlw	high (STR_11| (0+32768))
  6173  0C8F  00F4               	movwf	write_str@array+1
  6174  0C90  160A  118A  215E  120A  158A  	fcall	_write_str
  6175                           
  6176                           ;clock_source.c: 146:     wkd = (table1[5]);
  6177  0C95  0825               	movf	_table1+5,w
  6178  0C96  00C4               	movwf	??_display_clock
  6179  0C97  0844               	movf	??_display_clock,w
  6180  0C98  00C0               	movwf	_wkd
  6181                           
  6182                           ;clock_source.c: 147:     week(table1[5]);
  6183  0C99  0825               	movf	_table1+5,w
  6184  0C9A  00C4               	movwf	??_display_clock
  6185  0C9B  01C5               	clrf	??_display_clock+1
  6186  0C9C  0844               	movf	??_display_clock,w
  6187  0C9D  00FC               	movwf	week@w
  6188  0C9E  0845               	movf	??_display_clock+1,w
  6189  0C9F  00FD               	movwf	week@w+1
  6190  0CA0  120A  118A  2011  120A  158A  	fcall	_week
  6191                           
  6192                           ;clock_source.c: 150:     writecmd_4line(0x88);
  6193  0CA5  3088               	movlw	136
  6194  0CA6  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  6195                           
  6196                           ;clock_source.c: 151:     write_str("Time:");
  6197  0CAB  30A4               	movlw	low (STR_12| (0+32768))
  6198  0CAC  00F3               	movwf	write_str@array
  6199  0CAD  3090               	movlw	high (STR_12| (0+32768))
  6200  0CAE  00F4               	movwf	write_str@array+1
  6201  0CAF  160A  118A  215E  120A  158A  	fcall	_write_str
  6202                           
  6203                           ;clock_source.c: 154:     i=table1[2]&0xf0;
  6204  0CB4  0822               	movf	_table1+2,w
  6205  0CB5  39F0               	andlw	240
  6206  0CB6  00C4               	movwf	??_display_clock
  6207  0CB7  01C5               	clrf	??_display_clock+1
  6208  0CB8  0844               	movf	??_display_clock,w
  6209  0CB9  00C6               	movwf	display_clock@i
  6210  0CBA  0845               	movf	??_display_clock+1,w
  6211  0CBB  00C7               	movwf	display_clock@i+1
  6212                           
  6213                           ;clock_source.c: 155:     i=i>>4;
  6214  0CBC  0E46               	swapf	display_clock@i,w
  6215  0CBD  390F               	andlw	15
  6216  0CBE  00C6               	movwf	display_clock@i
  6217  0CBF  0E47               	swapf	display_clock@i+1,w
  6218  0CC0  39F0               	andlw	240
  6219  0CC1  04C6               	iorwf	display_clock@i,f
  6220  0CC2  0E47               	swapf	display_clock@i+1,w
  6221  0CC3  390F               	andlw	15
  6222  0CC4  00C7               	movwf	display_clock@i+1
  6223  0CC5  30F0               	movlw	240
  6224  0CC6  1DC7               	btfss	display_clock@i+1,3
  6225  0CC7  3000               	movlw	0
  6226  0CC8  04C7               	iorwf	display_clock@i+1,f
  6227                           
  6228                           ;clock_source.c: 156:     writechar(i + '0');
  6229  0CC9  0846               	movf	display_clock@i,w
  6230  0CCA  3E30               	addlw	48
  6231  0CCB  160A  158A  25AF  120A  158A  	fcall	_writechar
  6232                           
  6233                           ;clock_source.c: 157:     i=i<<4;
  6234  0CD0  0847               	movf	display_clock@i+1,w
  6235  0CD1  00C5               	movwf	??_display_clock+1
  6236  0CD2  0846               	movf	display_clock@i,w
  6237  0CD3  00C4               	movwf	??_display_clock
  6238  0CD4  0EC4               	swapf	??_display_clock,f
  6239  0CD5  0EC5               	swapf	??_display_clock+1,f
  6240  0CD6  30F0               	movlw	240
  6241  0CD7  05C5               	andwf	??_display_clock+1,f
  6242  0CD8  0844               	movf	??_display_clock,w
  6243  0CD9  390F               	andlw	15
  6244  0CDA  04C5               	iorwf	??_display_clock+1,f
  6245  0CDB  30F0               	movlw	240
  6246  0CDC  05C4               	andwf	??_display_clock,f
  6247  0CDD  0844               	movf	??_display_clock,w
  6248  0CDE  00C6               	movwf	display_clock@i
  6249  0CDF  0845               	movf	??_display_clock+1,w
  6250  0CE0  00C7               	movwf	display_clock@i+1
  6251                           
  6252                           ;clock_source.c: 158:     i = table1[2]&0x0f;
  6253  0CE1  0822               	movf	_table1+2,w
  6254  0CE2  390F               	andlw	15
  6255  0CE3  00C4               	movwf	??_display_clock
  6256  0CE4  01C5               	clrf	??_display_clock+1
  6257  0CE5  0844               	movf	??_display_clock,w
  6258  0CE6  00C6               	movwf	display_clock@i
  6259  0CE7  0845               	movf	??_display_clock+1,w
  6260  0CE8  00C7               	movwf	display_clock@i+1
  6261                           
  6262                           ;clock_source.c: 159:     writechar(i +'0');
  6263  0CE9  0846               	movf	display_clock@i,w
  6264  0CEA  3E30               	addlw	48
  6265  0CEB  160A  158A  25AF  120A  158A  	fcall	_writechar
  6266                           
  6267                           ;clock_source.c: 160:     write_str(":");
  6268  0CF0  30A8               	movlw	low ((STR_12+4)| (0+32768))
  6269  0CF1  00F3               	movwf	write_str@array
  6270  0CF2  3090               	movlw	high ((STR_12+4)| (0+32768))
  6271  0CF3  00F4               	movwf	write_str@array+1
  6272  0CF4  160A  118A  215E  120A  158A  	fcall	_write_str
  6273                           
  6274                           ;clock_source.c: 163:     i=table1[1]&0xf0;
  6275  0CF9  0821               	movf	_table1+1,w
  6276  0CFA  39F0               	andlw	240
  6277  0CFB  00C4               	movwf	??_display_clock
  6278  0CFC  01C5               	clrf	??_display_clock+1
  6279  0CFD  0844               	movf	??_display_clock,w
  6280  0CFE  00C6               	movwf	display_clock@i
  6281  0CFF  0845               	movf	??_display_clock+1,w
  6282  0D00  00C7               	movwf	display_clock@i+1
  6283                           
  6284                           ;clock_source.c: 164:     i=i>>4;
  6285  0D01  0E46               	swapf	display_clock@i,w
  6286  0D02  390F               	andlw	15
  6287  0D03  00C6               	movwf	display_clock@i
  6288  0D04  0E47               	swapf	display_clock@i+1,w
  6289  0D05  39F0               	andlw	240
  6290  0D06  04C6               	iorwf	display_clock@i,f
  6291  0D07  0E47               	swapf	display_clock@i+1,w
  6292  0D08  390F               	andlw	15
  6293  0D09  00C7               	movwf	display_clock@i+1
  6294  0D0A  30F0               	movlw	240
  6295  0D0B  1DC7               	btfss	display_clock@i+1,3
  6296  0D0C  3000               	movlw	0
  6297  0D0D  04C7               	iorwf	display_clock@i+1,f
  6298                           
  6299                           ;clock_source.c: 165:     writechar(i + '0');
  6300  0D0E  0846               	movf	display_clock@i,w
  6301  0D0F  3E30               	addlw	48
  6302  0D10  160A  158A  25AF  120A  158A  	fcall	_writechar
  6303                           
  6304                           ;clock_source.c: 166:     i=i<<4;
  6305  0D15  0847               	movf	display_clock@i+1,w
  6306  0D16  00C5               	movwf	??_display_clock+1
  6307  0D17  0846               	movf	display_clock@i,w
  6308  0D18  00C4               	movwf	??_display_clock
  6309  0D19  0EC4               	swapf	??_display_clock,f
  6310  0D1A  0EC5               	swapf	??_display_clock+1,f
  6311  0D1B  30F0               	movlw	240
  6312  0D1C  05C5               	andwf	??_display_clock+1,f
  6313  0D1D  0844               	movf	??_display_clock,w
  6314  0D1E  390F               	andlw	15
  6315  0D1F  04C5               	iorwf	??_display_clock+1,f
  6316  0D20  30F0               	movlw	240
  6317  0D21  05C4               	andwf	??_display_clock,f
  6318  0D22  0844               	movf	??_display_clock,w
  6319  0D23  00C6               	movwf	display_clock@i
  6320  0D24  0845               	movf	??_display_clock+1,w
  6321  0D25  00C7               	movwf	display_clock@i+1
  6322                           
  6323                           ;clock_source.c: 167:     i = table1[1]&0x0f;
  6324  0D26  0821               	movf	_table1+1,w
  6325  0D27  390F               	andlw	15
  6326  0D28  00C4               	movwf	??_display_clock
  6327  0D29  01C5               	clrf	??_display_clock+1
  6328  0D2A  0844               	movf	??_display_clock,w
  6329  0D2B  00C6               	movwf	display_clock@i
  6330  0D2C  0845               	movf	??_display_clock+1,w
  6331  0D2D  00C7               	movwf	display_clock@i+1
  6332                           
  6333                           ;clock_source.c: 168:     writechar(i +'0');
  6334  0D2E  0846               	movf	display_clock@i,w
  6335  0D2F  3E30               	addlw	48
  6336  0D30  160A  158A  25AF  120A  158A  	fcall	_writechar
  6337                           
  6338                           ;clock_source.c: 169:     write_str(":");
  6339  0D35  30A8               	movlw	low ((STR_12+4)| (0+32768))
  6340  0D36  00F3               	movwf	write_str@array
  6341  0D37  3090               	movlw	high ((STR_12+4)| (0+32768))
  6342  0D38  00F4               	movwf	write_str@array+1
  6343  0D39  160A  118A  215E  120A  158A  	fcall	_write_str
  6344                           
  6345                           ;clock_source.c: 172:     i=table1[0]&0xf0;
  6346  0D3E  0820               	movf	_table1,w
  6347  0D3F  39F0               	andlw	240
  6348  0D40  00C4               	movwf	??_display_clock
  6349  0D41  01C5               	clrf	??_display_clock+1
  6350  0D42  0844               	movf	??_display_clock,w
  6351  0D43  00C6               	movwf	display_clock@i
  6352  0D44  0845               	movf	??_display_clock+1,w
  6353  0D45  00C7               	movwf	display_clock@i+1
  6354                           
  6355                           ;clock_source.c: 173:     i=i>>4;
  6356  0D46  0E46               	swapf	display_clock@i,w
  6357  0D47  390F               	andlw	15
  6358  0D48  00C6               	movwf	display_clock@i
  6359  0D49  0E47               	swapf	display_clock@i+1,w
  6360  0D4A  39F0               	andlw	240
  6361  0D4B  04C6               	iorwf	display_clock@i,f
  6362  0D4C  0E47               	swapf	display_clock@i+1,w
  6363  0D4D  390F               	andlw	15
  6364  0D4E  00C7               	movwf	display_clock@i+1
  6365  0D4F  30F0               	movlw	240
  6366  0D50  1DC7               	btfss	display_clock@i+1,3
  6367  0D51  3000               	movlw	0
  6368  0D52  04C7               	iorwf	display_clock@i+1,f
  6369                           
  6370                           ;clock_source.c: 174:     writechar(i + '0');
  6371  0D53  0846               	movf	display_clock@i,w
  6372  0D54  3E30               	addlw	48
  6373  0D55  160A  158A  25AF  120A  158A  	fcall	_writechar
  6374                           
  6375                           ;clock_source.c: 175:     i=i<<4;
  6376  0D5A  0847               	movf	display_clock@i+1,w
  6377  0D5B  00C5               	movwf	??_display_clock+1
  6378  0D5C  0846               	movf	display_clock@i,w
  6379  0D5D  00C4               	movwf	??_display_clock
  6380  0D5E  0EC4               	swapf	??_display_clock,f
  6381  0D5F  0EC5               	swapf	??_display_clock+1,f
  6382  0D60  30F0               	movlw	240
  6383  0D61  05C5               	andwf	??_display_clock+1,f
  6384  0D62  0844               	movf	??_display_clock,w
  6385  0D63  390F               	andlw	15
  6386  0D64  04C5               	iorwf	??_display_clock+1,f
  6387  0D65  30F0               	movlw	240
  6388  0D66  05C4               	andwf	??_display_clock,f
  6389  0D67  0844               	movf	??_display_clock,w
  6390  0D68  00C6               	movwf	display_clock@i
  6391  0D69  0845               	movf	??_display_clock+1,w
  6392  0D6A  00C7               	movwf	display_clock@i+1
  6393                           
  6394                           ;clock_source.c: 176:     i = table1[0]&0x0f;
  6395  0D6B  0820               	movf	_table1,w
  6396  0D6C  390F               	andlw	15
  6397  0D6D  00C4               	movwf	??_display_clock
  6398  0D6E  01C5               	clrf	??_display_clock+1
  6399  0D6F  0844               	movf	??_display_clock,w
  6400  0D70  00C6               	movwf	display_clock@i
  6401  0D71  0845               	movf	??_display_clock+1,w
  6402  0D72  00C7               	movwf	display_clock@i+1
  6403                           
  6404                           ;clock_source.c: 177:     temp_sec = i;
  6405  0D73  0846               	movf	display_clock@i,w
  6406  0D74  00C4               	movwf	??_display_clock
  6407  0D75  0844               	movf	??_display_clock,w
  6408  0D76  00B2               	movwf	_temp_sec
  6409                           
  6410                           ;clock_source.c: 178:     writechar(i +'0');
  6411  0D77  0846               	movf	display_clock@i,w
  6412  0D78  3E30               	addlw	48
  6413  0D79  160A  158A  25AF   	fcall	_writechar
  6414  0D7C  0008               	return
  6415  0D7D                     __end_of_display_clock:	
  6416                           
  6417                           	psect	text28
  6418  03CA                     __ptext28:	
  6419 ;; *************** function _date_setting *****************
  6420 ;; Defined at:
  6421 ;;		line 365 in file "clock_source.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  j               2   15[BANK0 ] int 
  6426 ;;  j               2   13[BANK0 ] int 
  6427 ;;  j               2   21[BANK0 ] int 
  6428 ;;  j               2   19[BANK0 ] int 
  6429 ;;  j               2   17[BANK0 ] int 
  6430 ;;  j               2   11[BANK0 ] int 
  6431 ;;  y               1   10[BANK0 ] unsigned char 
  6432 ;;  b               1    9[BANK0 ] unsigned char 
  6433 ;;  a               1    8[BANK0 ] unsigned char 
  6434 ;;  i               2   23[BANK0 ] int 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 300/0
  6441 ;;		On exit  : 300/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6444 ;;      Params:         0       0       0       0       0
  6445 ;;      Locals:         0      17       0       0       0
  6446 ;;      Temps:          0       2       0       0       0
  6447 ;;      Totals:         0      19       0       0       0
  6448 ;;Total ram usage:       19 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		_D
  6453 ;;		_OutputPins
  6454 ;;		___bmul
  6455 ;;		_button_reset
  6456 ;;		_delay_main
  6457 ;;		_display_val
  6458 ;;		_set_time_date
  6459 ;;		_start_date
  6460 ;;		_week
  6461 ;;		_write_str
  6462 ;;		_writecmd_4line
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           
  6469                           ;psect for function _date_setting
  6470  03CA                     _date_setting:	
  6471                           
  6472                           ;clock_source.c: 367:     writecmd_4line(0x1);
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in _date_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6476  03CA  3001               	movlw	1
  6477  03CB  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6478                           
  6479                           ;clock_source.c: 368:     writecmd_4line(0x80);
  6480  03D0  3080               	movlw	128
  6481  03D1  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6482                           
  6483                           ;clock_source.c: 369:     write_str("Date Settings");
  6484  03D6  305B               	movlw	low (STR_30| (0+32768))
  6485  03D7  00F3               	movwf	write_str@array
  6486  03D8  3090               	movlw	high (STR_30| (0+32768))
  6487  03D9  00F4               	movwf	write_str@array+1
  6488  03DA  160A  118A  215E  120A  118A  	fcall	_write_str
  6489                           
  6490                           ;clock_source.c: 370:     writecmd_4line(0x90);
  6491  03DF  3090               	movlw	144
  6492  03E0  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6493                           
  6494                           ;clock_source.c: 371:     start_date();
  6495  03E5  160A  118A  272C  120A  118A  	fcall	_start_date
  6496                           
  6497                           ;clock_source.c: 372:     week(wkd);
  6498  03EA  0840               	movf	_wkd,w
  6499  03EB  00CA               	movwf	??_date_setting
  6500  03EC  01CB               	clrf	??_date_setting+1
  6501  03ED  084A               	movf	??_date_setting,w
  6502  03EE  00FC               	movwf	week@w
  6503  03EF  084B               	movf	??_date_setting+1,w
  6504  03F0  00FD               	movwf	week@w+1
  6505  03F1  120A  118A  2011  120A  118A  	fcall	_week
  6506                           
  6507                           ;clock_source.c: 373:     writecmd_4line(0x98);
  6508  03F6  3098               	movlw	152
  6509  03F7  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6510                           
  6511                           ;clock_source.c: 374:     write_str("Change date...");
  6512  03FC  303E               	movlw	low (STR_31| (0+32768))
  6513  03FD  00F3               	movwf	write_str@array
  6514  03FE  3090               	movlw	high (STR_31| (0+32768))
  6515  03FF  00F4               	movwf	write_str@array+1
  6516  0400  160A  118A  215E  120A  118A  	fcall	_write_str
  6517                           
  6518                           ;clock_source.c: 375:     int i=3;
  6519  0405  3003               	movlw	3
  6520  0406  00DB               	movwf	date_setting@i
  6521  0407  3000               	movlw	0
  6522  0408  00DC               	movwf	date_setting@i+1
  6523  0409                     l5138:	
  6524                           
  6525                           ;clock_source.c: 380:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  6526  0409  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6527  040E  3002               	movlw	2
  6528  040F  0642               	xorwf	_FirstRC,w
  6529  0410  1903               	btfsc	3,2
  6530  0411  0343               	decf	_SecondRC,w
  6531  0412  1903               	btfsc	3,2
  6532  0413  0008               	return
  6533  0414  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6534  0419  3002               	movlw	2
  6535  041A  0642               	xorwf	_FirstRC,w
  6536  041B  1D03               	btfss	3,2
  6537  041C  2C29               	goto	l5162
  6538  041D  3002               	movlw	2
  6539  041E  0643               	xorwf	_SecondRC,w
  6540  041F  1D03               	btfss	3,2
  6541  0420  2C29               	goto	l5162
  6542                           
  6543                           ;clock_source.c: 386:             table[5] = wkd;
  6544  0421  0840               	movf	_wkd,w
  6545  0422  00CA               	movwf	??_date_setting
  6546  0423  084A               	movf	??_date_setting,w
  6547  0424  00E2               	movwf	_table+5
  6548                           
  6549                           ;clock_source.c: 387:             set_time_date();
  6550  0425  160A  158A  268F   	fcall	_set_time_date
  6551  0428  0008               	return
  6552  0429                     l5162:	
  6553  0429  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6554  042E  3004               	movlw	4
  6555  042F  0642               	xorwf	_FirstRC,w
  6556  0430  1D03               	btfss	3,2
  6557  0431  2CA5               	goto	l5192
  6558  0432  0343               	decf	_SecondRC,w
  6559  0433  1D03               	btfss	3,2
  6560  0434  2CA5               	goto	l5192
  6561                           
  6562                           ;clock_source.c: 393:             button_reset();
  6563  0435  160A  158A  24EE  120A  118A  	fcall	_button_reset
  6564                           
  6565                           ;clock_source.c: 395:             if (i != 6){
  6566  043A  3006               	movlw	6
  6567  043B  065B               	xorwf	date_setting@i,w
  6568  043C  045C               	iorwf	date_setting@i+1,w
  6569  043D  1903               	btfsc	3,2
  6570  043E  2C83               	goto	l5186
  6571                           
  6572                           ;clock_source.c: 396:                 i++;
  6573  043F  3001               	movlw	1
  6574  0440  07DB               	addwf	date_setting@i,f
  6575  0441  1803               	skipnc
  6576  0442  0ADC               	incf	date_setting@i+1,f
  6577  0443  3000               	movlw	0
  6578  0444                     L8:	
  6579  0444  07DC               	addwf	date_setting@i+1,f
  6580                           
  6581                           ;clock_source.c: 397:                 if (i == 5){
  6582  0445  3005               	movlw	5
  6583  0446  065B               	xorwf	date_setting@i,w
  6584  0447  045C               	iorwf	date_setting@i+1,w
  6585  0448  1D03               	btfss	3,2
  6586  0449  2C61               	goto	l5180
  6587                           
  6588                           ;clock_source.c: 398:                     D('w','0',i);
  6589  044A  3077               	movlw	119
  6590  044B                     L5:	
  6591  044B  00C4               	movwf	D@D
  6592  044C  3000               	movlw	0
  6593  044D  00C5               	movwf	D@D+1
  6594  044E  3030               	movlw	48
  6595  044F  00C6               	movwf	D@C
  6596  0450  3000               	movlw	0
  6597  0451  00C7               	movwf	D@C+1
  6598  0452  085C               	movf	date_setting@i+1,w
  6599  0453  00C9               	movwf	D@i+1
  6600  0454  085B               	movf	date_setting@i,w
  6601  0455  00C8               	movwf	D@i
  6602  0456  160A  118A  241B  120A  118A  	fcall	_D
  6603  045B                     l5178:	
  6604                           
  6605                           ;clock_source.c: 399:                     delay_main();
  6606  045B  160A  158A  256F  120A  118A  	fcall	_delay_main
  6607                           
  6608                           ;clock_source.c: 400:                 }
  6609  0460  2C09               	goto	l5138
  6610  0461                     l5180:	
  6611  0461  3004               	movlw	4
  6612  0462  065B               	xorwf	date_setting@i,w
  6613  0463  045C               	iorwf	date_setting@i+1,w
  6614  0464  1D03               	btfss	3,2
  6615  0465  2C09               	goto	l5138
  6616                           
  6617                           ;clock_source.c: 402:                     D('m','0',i);
  6618  0466  306D               	movlw	109
  6619  0467  00C4               	movwf	D@D
  6620  0468  3000               	movlw	0
  6621  0469  00C5               	movwf	D@D+1
  6622  046A  3030               	movlw	48
  6623  046B  00C6               	movwf	D@C
  6624  046C  3000               	movlw	0
  6625  046D  00C7               	movwf	D@C+1
  6626  046E  085C               	movf	date_setting@i+1,w
  6627  046F  00C9               	movwf	D@i+1
  6628  0470  085B               	movf	date_setting@i,w
  6629  0471  00C8               	movwf	D@i
  6630  0472  160A  118A  241B  120A  118A  	fcall	_D
  6631                           
  6632                           ;clock_source.c: 403:                     display_val(i);
  6633  0477  1283               	bcf	3,5	;RP0=0, select bank0
  6634  0478  1303               	bcf	3,6	;RP1=0, select bank0
  6635  0479  085C               	movf	date_setting@i+1,w
  6636  047A  00F4               	movwf	display_val@i+1
  6637  047B  085B               	movf	date_setting@i,w
  6638  047C  00F3               	movwf	display_val@i
  6639  047D  120A  158A  200E  120A  118A  	fcall	_display_val
  6640  0482  2C5B               	goto	l5178
  6641  0483                     l5186:	
  6642  0483  3006               	movlw	6
  6643  0484  065B               	xorwf	date_setting@i,w
  6644  0485  045C               	iorwf	date_setting@i+1,w
  6645  0486  1D03               	btfss	3,2
  6646  0487  2C09               	goto	l5138
  6647                           
  6648                           ;clock_source.c: 408:                 D('y','0',i);
  6649  0488  3079               	movlw	121
  6650  0489  00C4               	movwf	D@D
  6651  048A  3000               	movlw	0
  6652  048B  00C5               	movwf	D@D+1
  6653  048C  3030               	movlw	48
  6654  048D  00C6               	movwf	D@C
  6655  048E  3000               	movlw	0
  6656  048F  00C7               	movwf	D@C+1
  6657  0490  085C               	movf	date_setting@i+1,w
  6658  0491  00C9               	movwf	D@i+1
  6659  0492  085B               	movf	date_setting@i,w
  6660  0493  00C8               	movwf	D@i
  6661  0494  160A  118A  241B  120A  118A  	fcall	_D
  6662                           
  6663                           ;clock_source.c: 409:                 display_val(i);
  6664  0499  1283               	bcf	3,5	;RP0=0, select bank0
  6665  049A  1303               	bcf	3,6	;RP1=0, select bank0
  6666  049B  085C               	movf	date_setting@i+1,w
  6667  049C  00F4               	movwf	display_val@i+1
  6668  049D  085B               	movf	date_setting@i,w
  6669  049E  00F3               	movwf	display_val@i
  6670  049F  120A  158A  200E  120A  118A  	fcall	_display_val
  6671  04A4  2C5B               	goto	l5178
  6672  04A5                     l5192:	
  6673                           ;clock_source.c: 412:         }
  6674                           
  6675  04A5  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6676  04AA  3003               	movlw	3
  6677  04AB  0642               	xorwf	_FirstRC,w
  6678  04AC  1D03               	btfss	3,2
  6679  04AD  2CC8               	goto	l5222
  6680  04AE  0343               	decf	_SecondRC,w
  6681  04AF  1D03               	btfss	3,2
  6682  04B0  2CC8               	goto	l5222
  6683                           
  6684                           ;clock_source.c: 416:             button_reset();
  6685  04B1  160A  158A  24EE  120A  118A  	fcall	_button_reset
  6686                           
  6687                           ;clock_source.c: 418:             if (i != 3){
  6688  04B6  3003               	movlw	3
  6689  04B7  065B               	xorwf	date_setting@i,w
  6690  04B8  045C               	iorwf	date_setting@i+1,w
  6691  04B9  1903               	btfsc	3,2
  6692  04BA  2CC1               	goto	l5216
  6693                           
  6694                           ;clock_source.c: 419:                 i--;
  6695  04BB  30FF               	movlw	255
  6696  04BC  07DB               	addwf	date_setting@i,f
  6697  04BD  1803               	skipnc
  6698  04BE  0ADC               	incf	date_setting@i+1,f
  6699  04BF  30FF               	movlw	255
  6700  04C0  2C44               	goto	L8
  6701  04C1                     l5216:	
  6702                           ;clock_source.c: 420:                 if (i == 5){
  6703                           
  6704  04C1  3003               	movlw	3
  6705  04C2  065B               	xorwf	date_setting@i,w
  6706  04C3  045C               	iorwf	date_setting@i+1,w
  6707  04C4  1D03               	btfss	3,2
  6708  04C5  2C09               	goto	l5138
  6709                           
  6710                           ;clock_source.c: 431:                 D('d','0',i);
  6711  04C6  3064               	movlw	100
  6712  04C7  2C4B               	goto	L5
  6713  04C8                     l5222:	
  6714  04C8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6715  04CD  3003               	movlw	3
  6716  04CE  0642               	xorwf	_FirstRC,w
  6717  04CF  1D03               	btfss	3,2
  6718  04D0  2DC2               	goto	l5300
  6719  04D1  3002               	movlw	2
  6720  04D2  0643               	xorwf	_SecondRC,w
  6721  04D3  1D03               	btfss	3,2
  6722  04D4  2DC2               	goto	l5300
  6723                           
  6724                           ;clock_source.c: 438:             button_reset();
  6725  04D5  160A  158A  24EE  120A  118A  	fcall	_button_reset
  6726                           
  6727                           ;clock_source.c: 441:             if (i == 3){
  6728  04DA  3003               	movlw	3
  6729  04DB  065B               	xorwf	date_setting@i,w
  6730  04DC  045C               	iorwf	date_setting@i+1,w
  6731  04DD  1D03               	btfss	3,2
  6732  04DE  2CF1               	goto	l5234
  6733                           
  6734                           ;clock_source.c: 442:                 D('d','d',i);
  6735  04DF  3064               	movlw	100
  6736  04E0  00C4               	movwf	D@D
  6737  04E1  3000               	movlw	0
  6738  04E2  00C5               	movwf	D@D+1
  6739  04E3  3064               	movlw	100
  6740  04E4  00C6               	movwf	D@C
  6741  04E5  3000               	movlw	0
  6742  04E6  00C7               	movwf	D@C+1
  6743  04E7  085C               	movf	date_setting@i+1,w
  6744  04E8  00C9               	movwf	D@i+1
  6745  04E9  085B               	movf	date_setting@i,w
  6746  04EA  00C8               	movwf	D@i
  6747  04EB  160A  118A  241B  120A  118A  	fcall	_D
  6748                           
  6749                           ;clock_source.c: 443:             }
  6750  04F0  2C09               	goto	l5138
  6751  04F1                     l5234:	
  6752  04F1  3005               	movlw	5
  6753  04F2  065B               	xorwf	date_setting@i,w
  6754  04F3  045C               	iorwf	date_setting@i+1,w
  6755  04F4  1D03               	btfss	3,2
  6756  04F5  2D14               	goto	l5248
  6757                           
  6758                           ;clock_source.c: 448:                 if (wkd != 1){
  6759  04F6  0340               	decf	_wkd,w
  6760  04F7  1903               	btfsc	3,2
  6761  04F8  2C5B               	goto	l5178
  6762                           
  6763                           ;clock_source.c: 449:                     wkd--;
  6764  04F9  3001               	movlw	1
  6765  04FA  02C0               	subwf	_wkd,f
  6766                           
  6767                           ;clock_source.c: 450:                     writecmd_4line(0x8B);
  6768  04FB  308B               	movlw	139
  6769  04FC  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6770                           
  6771                           ;clock_source.c: 451:                     week(wkd);
  6772  0501  0840               	movf	_wkd,w
  6773  0502  00CA               	movwf	??_date_setting
  6774  0503  01CB               	clrf	??_date_setting+1
  6775  0504  084A               	movf	??_date_setting,w
  6776  0505  00FC               	movwf	week@w
  6777  0506  084B               	movf	??_date_setting+1,w
  6778  0507  00FD               	movwf	week@w+1
  6779  0508  120A  118A  2011  120A  118A  	fcall	_week
  6780                           
  6781                           ;clock_source.c: 452:                     writecmd_4line(0x8B);
  6782  050D  308B               	movlw	139
  6783  050E  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  6784  0513  2C5B               	goto	l5178
  6785  0514                     l5248:	
  6786  0514  3004               	movlw	4
  6787  0515  065B               	xorwf	date_setting@i,w
  6788  0516  045C               	iorwf	date_setting@i+1,w
  6789  0517  1D03               	btfss	3,2
  6790  0518  2D2B               	goto	l5252
  6791                           
  6792                           ;clock_source.c: 459:                 D('m','d',i);
  6793  0519  306D               	movlw	109
  6794  051A  00C4               	movwf	D@D
  6795  051B  3000               	movlw	0
  6796  051C  00C5               	movwf	D@D+1
  6797  051D  3064               	movlw	100
  6798  051E  00C6               	movwf	D@C
  6799  051F  3000               	movlw	0
  6800  0520  00C7               	movwf	D@C+1
  6801  0521  085C               	movf	date_setting@i+1,w
  6802  0522  00C9               	movwf	D@i+1
  6803  0523  085B               	movf	date_setting@i,w
  6804  0524  00C8               	movwf	D@i
  6805  0525  160A  118A  241B  120A  118A  	fcall	_D
  6806                           
  6807                           ;clock_source.c: 460:             }
  6808  052A  2C09               	goto	l5138
  6809  052B                     l5252:	
  6810  052B  3006               	movlw	6
  6811  052C  065B               	xorwf	date_setting@i,w
  6812  052D  045C               	iorwf	date_setting@i+1,w
  6813  052E  1D03               	btfss	3,2
  6814  052F  2C09               	goto	l5138
  6815                           
  6816                           ;clock_source.c: 464:                 D('0','1',i);;
  6817  0530  3030               	movlw	48
  6818  0531  00C4               	movwf	D@D
  6819  0532  3000               	movlw	0
  6820  0533  00C5               	movwf	D@D+1
  6821  0534  3031               	movlw	49
  6822  0535  00C6               	movwf	D@C
  6823  0536  3000               	movlw	0
  6824  0537  00C7               	movwf	D@C+1
  6825  0538  085C               	movf	date_setting@i+1,w
  6826  0539  00C9               	movwf	D@i+1
  6827  053A  085B               	movf	date_setting@i,w
  6828  053B  00C8               	movwf	D@i
  6829  053C  160A  118A  241B  120A  118A  	fcall	_D
  6830                           
  6831                           ;clock_source.c: 465:                 if (table[i] != 0x00){
  6832  0541  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0542  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0543  085B               	movf	date_setting@i,w
  6835  0544  3E5D               	addlw	(low (_table| 0))& (0+255)
  6836  0545  0084               	movwf	4
  6837  0546  1383               	bcf	3,7	;select IRP bank0
  6838  0547  0800               	movf	0,w
  6839  0548  1903               	btfsc	3,2
  6840  0549  2DB6               	goto	l5292
  6841                           
  6842                           ;clock_source.c: 466:                     if (table[i] == 0x10 || table[i] == 0x20
  6843  054A  085B               	movf	date_setting@i,w
  6844  054B  3E5D               	addlw	(low (_table| 0))& (0+255)
  6845  054C  0084               	movwf	4
  6846  054D  3010               	movlw	16
  6847  054E  0600               	xorwf	0,w
  6848  054F  1903               	btfsc	3,2
  6849  0550  2D89               	goto	l5276
  6850  0551  085B               	movf	date_setting@i,w
  6851  0552  3E5D               	addlw	(low (_table| 0))& (0+255)
  6852  0553  0084               	movwf	4
  6853  0554  3020               	movlw	32
  6854  0555  0600               	xorwf	0,w
  6855  0556  1903               	btfsc	3,2
  6856  0557  2D89               	goto	l5276
  6857  0558  085B               	movf	date_setting@i,w
  6858  0559  3E5D               	addlw	(low (_table| 0))& (0+255)
  6859  055A  0084               	movwf	4
  6860  055B  3030               	movlw	48
  6861  055C  0600               	xorwf	0,w
  6862  055D  1903               	btfsc	3,2
  6863  055E  2D89               	goto	l5276
  6864  055F  085B               	movf	date_setting@i,w
  6865  0560  3E5D               	addlw	(low (_table| 0))& (0+255)
  6866  0561  0084               	movwf	4
  6867  0562  3040               	movlw	64
  6868  0563  0600               	xorwf	0,w
  6869  0564  1903               	btfsc	3,2
  6870  0565  2D89               	goto	l5276
  6871  0566  085B               	movf	date_setting@i,w
  6872  0567  3E5D               	addlw	(low (_table| 0))& (0+255)
  6873  0568  0084               	movwf	4
  6874  0569  3050               	movlw	80
  6875  056A  0600               	xorwf	0,w
  6876  056B  1903               	btfsc	3,2
  6877  056C  2D89               	goto	l5276
  6878  056D  085B               	movf	date_setting@i,w
  6879  056E  3E5D               	addlw	(low (_table| 0))& (0+255)
  6880  056F  0084               	movwf	4
  6881  0570  3060               	movlw	96
  6882  0571  0600               	xorwf	0,w
  6883  0572  1903               	btfsc	3,2
  6884  0573  2D89               	goto	l5276
  6885  0574  085B               	movf	date_setting@i,w
  6886  0575  3E5D               	addlw	(low (_table| 0))& (0+255)
  6887  0576  0084               	movwf	4
  6888  0577  3070               	movlw	112
  6889  0578  0600               	xorwf	0,w
  6890  0579  1903               	btfsc	3,2
  6891  057A  2D89               	goto	l5276
  6892  057B  085B               	movf	date_setting@i,w
  6893  057C  3E5D               	addlw	(low (_table| 0))& (0+255)
  6894  057D  0084               	movwf	4
  6895  057E  3080               	movlw	128
  6896  057F  0600               	xorwf	0,w
  6897  0580  1903               	btfsc	3,2
  6898  0581  2D89               	goto	l5276
  6899  0582  085B               	movf	date_setting@i,w
  6900  0583  3E5D               	addlw	(low (_table| 0))& (0+255)
  6901  0584  0084               	movwf	4
  6902  0585  3090               	movlw	144
  6903  0586  0600               	xorwf	0,w
  6904  0587  1D03               	btfss	3,2
  6905  0588  2DB1               	goto	l5290
  6906  0589                     l5276:	
  6907                           
  6908                           ;clock_source.c: 471:                         || table[i] == 0x100){;clock_source.c: 472
      +                          :                         for (int j=0; j<6; j++){
  6909  0589  01CF               	clrf	date_setting@j
  6910  058A  01D0               	clrf	date_setting@j+1
  6911  058B                     l5278:	
  6912  058B  0850               	movf	date_setting@j+1,w
  6913  058C  3A80               	xorlw	128
  6914  058D  00FF               	movwf	127
  6915  058E  3080               	movlw	128
  6916  058F  027F               	subwf	127,w
  6917  0590  1D03               	skipz
  6918  0591  2D94               	goto	u5135
  6919  0592  3006               	movlw	6
  6920  0593  024F               	subwf	date_setting@j,w
  6921  0594                     u5135:	
  6922  0594  1803               	btfsc	3,0
  6923  0595  2DA5               	goto	l5288
  6924                           
  6925                           ;clock_source.c: 473:                             table[i]--;
  6926  0596  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0597  1303               	bcf	3,6	;RP1=0, select bank0
  6928  0598  085B               	movf	date_setting@i,w
  6929  0599  3E5D               	addlw	(low (_table| 0))& (0+255)
  6930  059A  0084               	movwf	4
  6931  059B  3001               	movlw	1
  6932  059C  1383               	bcf	3,7	;select IRP bank0
  6933  059D  0280               	subwf	0,f
  6934                           
  6935                           ;clock_source.c: 474:                         }
  6936  059E  3001               	movlw	1
  6937  059F  07CF               	addwf	date_setting@j,f
  6938  05A0  1803               	skipnc
  6939  05A1  0AD0               	incf	date_setting@j+1,f
  6940  05A2  3000               	movlw	0
  6941  05A3  07D0               	addwf	date_setting@j+1,f
  6942  05A4  2D8B               	goto	l5278
  6943  05A5                     l5288:	
  6944                           
  6945                           ;clock_source.c: 475:                         display_val(i);
  6946  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6947  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6948  05A7  085C               	movf	date_setting@i+1,w
  6949  05A8  00F4               	movwf	display_val@i+1
  6950  05A9  085B               	movf	date_setting@i,w
  6951  05AA  00F3               	movwf	display_val@i
  6952  05AB  120A  158A  200E  120A  118A  	fcall	_display_val
  6953                           
  6954                           ;clock_source.c: 477:                     }
  6955  05B0  2C09               	goto	l5138
  6956  05B1                     l5290:	
  6957                           
  6958                           ;clock_source.c: 479:                         table[i]--;
  6959  05B1  085B               	movf	date_setting@i,w
  6960  05B2  3E5D               	addlw	(low (_table| 0))& (0+255)
  6961  05B3  0084               	movwf	4
  6962  05B4  3001               	movlw	1
  6963  05B5  0280               	subwf	0,f
  6964  05B6                     l5292:	
  6965                           
  6966                           ;clock_source.c: 480:                         display_val(i);
  6967  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  6968  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  6969  05B8  085C               	movf	date_setting@i+1,w
  6970  05B9  00F4               	movwf	display_val@i+1
  6971  05BA  085B               	movf	date_setting@i,w
  6972  05BB  00F3               	movwf	display_val@i
  6973  05BC  120A  158A  200E  120A  118A  	fcall	_display_val
  6974  05C1  2C5B               	goto	l5178
  6975  05C2                     l5300:	
  6976  05C2  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6977  05C7  3004               	movlw	4
  6978  05C8  0642               	xorwf	_FirstRC,w
  6979  05C9  1D03               	btfss	3,2
  6980  05CA  2C09               	goto	l5138
  6981  05CB  3002               	movlw	2
  6982  05CC  0643               	xorwf	_SecondRC,w
  6983  05CD  1D03               	btfss	3,2
  6984  05CE  2C09               	goto	l5138
  6985                           
  6986                           ;clock_source.c: 493:             button_reset();
  6987  05CF  160A  158A  24EE  120A  118A  	fcall	_button_reset
  6988                           
  6989                           ;clock_source.c: 496:             if (i == 3){
  6990  05D4  3003               	movlw	3
  6991  05D5  065B               	xorwf	date_setting@i,w
  6992  05D6  045C               	iorwf	date_setting@i+1,w
  6993  05D7  1D03               	btfss	3,2
  6994  05D8  2EF3               	goto	l5438
  6995                           
  6996                           ;clock_source.c: 497:                 display_val(i);
  6997  05D9  085C               	movf	date_setting@i+1,w
  6998  05DA  00F4               	movwf	display_val@i+1
  6999  05DB  085B               	movf	date_setting@i,w
  7000  05DC  00F3               	movwf	display_val@i
  7001  05DD  120A  158A  200E  120A  118A  	fcall	_display_val
  7002                           
  7003                           ;clock_source.c: 500:                 if (table[4] == 0x02){
  7004  05E2  3002               	movlw	2
  7005  05E3  0661               	xorwf	_table+4,w
  7006  05E4  1D03               	btfss	3,2
  7007  05E5  2EB8               	goto	l5406
  7008                           
  7009                           ;clock_source.c: 504:                     unsigned char a = (table[6]&0xF0)>>4;
  7010  05E6  0863               	movf	_table+6,w
  7011  05E7  00CA               	movwf	??_date_setting
  7012  05E8  3004               	movlw	4
  7013  05E9                     u5185:	
  7014  05E9  1003               	clrc
  7015  05EA  0CCA               	rrf	??_date_setting,f
  7016  05EB  3EFF               	addlw	-1
  7017  05EC  1D03               	skipz
  7018  05ED  2DE9               	goto	u5185
  7019  05EE  084A               	movf	??_date_setting,w
  7020  05EF  390F               	andlw	15
  7021  05F0  00CB               	movwf	??_date_setting+1
  7022  05F1  084B               	movf	??_date_setting+1,w
  7023  05F2  00CC               	movwf	date_setting@a
  7024                           
  7025                           ;clock_source.c: 505:                     unsigned char b = (table[6]&0x0F);
  7026  05F3  0863               	movf	_table+6,w
  7027  05F4  390F               	andlw	15
  7028  05F5  00CA               	movwf	??_date_setting
  7029  05F6  084A               	movf	??_date_setting,w
  7030  05F7  00CD               	movwf	date_setting@b
  7031                           
  7032                           ;clock_source.c: 506:                     unsigned char y = a*10 + b;
  7033  05F8  300A               	movlw	10
  7034  05F9  00CA               	movwf	??_date_setting
  7035  05FA  084A               	movf	??_date_setting,w
  7036  05FB  00F0               	movwf	___bmul@multiplicand
  7037  05FC  084C               	movf	date_setting@a,w
  7038  05FD  160A  158A  252A  120A  118A  	fcall	___bmul
  7039  0602  074D               	addwf	date_setting@b,w
  7040  0603  00CB               	movwf	??_date_setting+1
  7041  0604  084B               	movf	??_date_setting+1,w
  7042  0605  00CE               	movwf	date_setting@y
  7043                           
  7044                           ;clock_source.c: 507:                     if (y%4 == 0){
  7045  0606  084E               	movf	date_setting@y,w
  7046  0607  3903               	andlw	3
  7047  0608  1D03               	btfss	3,2
  7048  0609  2E62               	goto	l5362
  7049                           
  7050                           ;clock_source.c: 509:                         if (table[3] == 0x30 || table[3] == 0x31){
  7051  060A  3030               	movlw	48
  7052  060B  0660               	xorwf	_table+3,w
  7053  060C  1903               	btfsc	3,2
  7054  060D  2E12               	goto	l5326
  7055  060E  3031               	movlw	49
  7056  060F  0660               	xorwf	_table+3,w
  7057  0610  1D03               	btfss	3,2
  7058  0611  2E24               	goto	l5332
  7059  0612                     l5326:	
  7060                           
  7061                           ;clock_source.c: 510:                             table[3] = 0x29;
  7062  0612  3029               	movlw	41
  7063  0613  00CA               	movwf	??_date_setting
  7064  0614  084A               	movf	??_date_setting,w
  7065  0615  00E0               	movwf	_table+3
  7066                           
  7067                           ;clock_source.c: 511:                             display_val(i);
  7068  0616  085C               	movf	date_setting@i+1,w
  7069  0617  00F4               	movwf	display_val@i+1
  7070  0618  085B               	movf	date_setting@i,w
  7071  0619  00F3               	movwf	display_val@i
  7072  061A  120A  158A  200E  120A  118A  	fcall	_display_val
  7073                           
  7074                           ;clock_source.c: 512:                             delay_main();
  7075  061F  160A  158A  256F  120A  118A  	fcall	_delay_main
  7076  0624                     l5332:	
  7077                           
  7078                           ;clock_source.c: 515:                         if (table[i] == 0x09 || table[i] == 0x19){
  7079  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7080  0625  1303               	bcf	3,6	;RP1=0, select bank0
  7081  0626  085B               	movf	date_setting@i,w
  7082  0627  3E5D               	addlw	(low (_table| 0))& (0+255)
  7083  0628  0084               	movwf	4
  7084  0629  3009               	movlw	9
  7085  062A  1383               	bcf	3,7	;select IRP bank0
  7086  062B  0600               	xorwf	0,w
  7087  062C  1903               	btfsc	3,2
  7088  062D  2E35               	goto	l5336
  7089  062E  085B               	movf	date_setting@i,w
  7090  062F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7091  0630  0084               	movwf	4
  7092  0631  3019               	movlw	25
  7093  0632  0600               	xorwf	0,w
  7094  0633  1D03               	btfss	3,2
  7095  0634  2E53               	goto	l5352
  7096  0635                     l5336:	
  7097                           
  7098                           ;clock_source.c: 516:                             for (int j=0; j<7; j++){
  7099  0635  01D1               	clrf	date_setting@j_241
  7100  0636  01D2               	clrf	date_setting@j_241+1
  7101  0637                     l5338:	
  7102  0637  0852               	movf	date_setting@j_241+1,w
  7103  0638  3A80               	xorlw	128
  7104  0639  00FF               	movwf	127
  7105  063A  3080               	movlw	128
  7106  063B  027F               	subwf	127,w
  7107  063C  1D03               	skipz
  7108  063D  2E40               	goto	u5245
  7109  063E  3007               	movlw	7
  7110  063F  0251               	subwf	date_setting@j_241,w
  7111  0640                     u5245:	
  7112  0640  1803               	btfsc	3,0
  7113  0641  2DB6               	goto	l5292
  7114                           
  7115                           ;clock_source.c: 517:                                 table[i]++;
  7116  0642  3001               	movlw	1
  7117  0643  1283               	bcf	3,5	;RP0=0, select bank0
  7118  0644  1303               	bcf	3,6	;RP1=0, select bank0
  7119  0645  00CA               	movwf	??_date_setting
  7120  0646  085B               	movf	date_setting@i,w
  7121  0647  3E5D               	addlw	(low (_table| 0))& (0+255)
  7122  0648  0084               	movwf	4
  7123  0649  084A               	movf	??_date_setting,w
  7124  064A  1383               	bcf	3,7	;select IRP bank0
  7125  064B  0780               	addwf	0,f
  7126                           
  7127                           ;clock_source.c: 518:                             }
  7128  064C  3001               	movlw	1
  7129  064D  07D1               	addwf	date_setting@j_241,f
  7130  064E  1803               	skipnc
  7131  064F  0AD2               	incf	date_setting@j_241+1,f
  7132  0650  3000               	movlw	0
  7133  0651  07D2               	addwf	date_setting@j_241+1,f
  7134  0652  2E37               	goto	l5338
  7135  0653                     l5352:	
  7136  0653  085B               	movf	date_setting@i,w
  7137  0654  3E5D               	addlw	(low (_table| 0))& (0+255)
  7138  0655  0084               	movwf	4
  7139  0656  3029               	movlw	41
  7140  0657                     L6:	
  7141  0657  0600               	xorwf	0,w
  7142  0658  1903               	btfsc	3,2
  7143  0659  2C5B               	goto	l5178
  7144  065A                     l5354:	
  7145                           
  7146                           ;clock_source.c: 523:                             table[i]++;
  7147  065A  3001               	movlw	1
  7148  065B  00CA               	movwf	??_date_setting
  7149  065C  085B               	movf	date_setting@i,w
  7150  065D  3E5D               	addlw	(low (_table| 0))& (0+255)
  7151  065E  0084               	movwf	4
  7152  065F  084A               	movf	??_date_setting,w
  7153  0660  0780               	addwf	0,f
  7154  0661  2DB6               	goto	l5292
  7155  0662                     l5362:	
  7156  0662  0863               	movf	_table+6,w
  7157  0663  3903               	andlw	3
  7158  0664  1903               	btfsc	3,2
  7159  0665  2C09               	goto	l5138
  7160                           
  7161                           ;clock_source.c: 535:                         if (table[3] == 0x30 || table[3] == 0x31 |
      +                          | table[3] == 0x29){
  7162  0666  3030               	movlw	48
  7163  0667  0660               	xorwf	_table+3,w
  7164  0668  1903               	btfsc	3,2
  7165  0669  2E72               	goto	l5370
  7166  066A  3031               	movlw	49
  7167  066B  0660               	xorwf	_table+3,w
  7168  066C  1903               	btfsc	3,2
  7169  066D  2E72               	goto	l5370
  7170  066E  3029               	movlw	41
  7171  066F  0660               	xorwf	_table+3,w
  7172  0670  1D03               	btfss	3,2
  7173  0671  2E84               	goto	l5376
  7174  0672                     l5370:	
  7175                           
  7176                           ;clock_source.c: 536:                             table[3] = 0x28;
  7177  0672  3028               	movlw	40
  7178  0673  00CA               	movwf	??_date_setting
  7179  0674  084A               	movf	??_date_setting,w
  7180  0675  00E0               	movwf	_table+3
  7181                           
  7182                           ;clock_source.c: 537:                             display_val(i);
  7183  0676  085C               	movf	date_setting@i+1,w
  7184  0677  00F4               	movwf	display_val@i+1
  7185  0678  085B               	movf	date_setting@i,w
  7186  0679  00F3               	movwf	display_val@i
  7187  067A  120A  158A  200E  120A  118A  	fcall	_display_val
  7188                           
  7189                           ;clock_source.c: 538:                             delay_main();
  7190  067F  160A  158A  256F  120A  118A  	fcall	_delay_main
  7191  0684                     l5376:	
  7192                           
  7193                           ;clock_source.c: 541:                         if (table[i] == 0x09 || table[i] == 0x19){
  7194  0684  1283               	bcf	3,5	;RP0=0, select bank0
  7195  0685  1303               	bcf	3,6	;RP1=0, select bank0
  7196  0686  085B               	movf	date_setting@i,w
  7197  0687  3E5D               	addlw	(low (_table| 0))& (0+255)
  7198  0688  0084               	movwf	4
  7199  0689  3009               	movlw	9
  7200  068A  1383               	bcf	3,7	;select IRP bank0
  7201  068B  0600               	xorwf	0,w
  7202  068C  1903               	btfsc	3,2
  7203  068D  2E95               	goto	l5380
  7204  068E  085B               	movf	date_setting@i,w
  7205  068F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7206  0690  0084               	movwf	4
  7207  0691  3019               	movlw	25
  7208  0692  0600               	xorwf	0,w
  7209  0693  1D03               	btfss	3,2
  7210  0694  2EB3               	goto	l5396
  7211  0695                     l5380:	
  7212                           
  7213                           ;clock_source.c: 542:                             for (int j=0; j<7; j++){
  7214  0695  01D3               	clrf	date_setting@j_242
  7215  0696  01D4               	clrf	date_setting@j_242+1
  7216  0697                     l5382:	
  7217  0697  0854               	movf	date_setting@j_242+1,w
  7218  0698  3A80               	xorlw	128
  7219  0699  00FF               	movwf	127
  7220  069A  3080               	movlw	128
  7221  069B  027F               	subwf	127,w
  7222  069C  1D03               	skipz
  7223  069D  2EA0               	goto	u5325
  7224  069E  3007               	movlw	7
  7225  069F  0253               	subwf	date_setting@j_242,w
  7226  06A0                     u5325:	
  7227  06A0  1803               	btfsc	3,0
  7228  06A1  2DB6               	goto	l5292
  7229                           
  7230                           ;clock_source.c: 543:                                 table[i]++;
  7231  06A2  3001               	movlw	1
  7232  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  7233  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  7234  06A5  00CA               	movwf	??_date_setting
  7235  06A6  085B               	movf	date_setting@i,w
  7236  06A7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7237  06A8  0084               	movwf	4
  7238  06A9  084A               	movf	??_date_setting,w
  7239  06AA  1383               	bcf	3,7	;select IRP bank0
  7240  06AB  0780               	addwf	0,f
  7241                           
  7242                           ;clock_source.c: 544:                             }
  7243  06AC  3001               	movlw	1
  7244  06AD  07D3               	addwf	date_setting@j_242,f
  7245  06AE  1803               	skipnc
  7246  06AF  0AD4               	incf	date_setting@j_242+1,f
  7247  06B0  3000               	movlw	0
  7248  06B1  07D4               	addwf	date_setting@j_242+1,f
  7249  06B2  2E97               	goto	l5382
  7250  06B3                     l5396:	
  7251  06B3  085B               	movf	date_setting@i,w
  7252  06B4  3E5D               	addlw	(low (_table| 0))& (0+255)
  7253  06B5  0084               	movwf	4
  7254  06B6  3028               	movlw	40
  7255  06B7  2E57               	goto	L6
  7256  06B8                     l5406:	
  7257  06B8  085B               	movf	date_setting@i,w
  7258  06B9  3E5D               	addlw	(low (_table| 0))& (0+255)
  7259  06BA  0084               	movwf	4
  7260  06BB  3031               	movlw	49
  7261  06BC  1383               	bcf	3,7	;select IRP bank0
  7262  06BD  0600               	xorwf	0,w
  7263  06BE  1903               	btfsc	3,2
  7264  06BF  2C5B               	goto	l5178
  7265                           
  7266                           ;clock_source.c: 560:                     if (table[i] == 0x09 || table[i] == 0x19 || ta
      +                          ble[i] == 0x29){
  7267  06C0  085B               	movf	date_setting@i,w
  7268  06C1  3E5D               	addlw	(low (_table| 0))& (0+255)
  7269  06C2  0084               	movwf	4
  7270  06C3  3009               	movlw	9
  7271  06C4  0600               	xorwf	0,w
  7272  06C5  1903               	btfsc	3,2
  7273  06C6  2ED5               	goto	l5414
  7274  06C7  085B               	movf	date_setting@i,w
  7275  06C8  3E5D               	addlw	(low (_table| 0))& (0+255)
  7276  06C9  0084               	movwf	4
  7277  06CA  3019               	movlw	25
  7278  06CB  0600               	xorwf	0,w
  7279  06CC  1903               	btfsc	3,2
  7280  06CD  2ED5               	goto	l5414
  7281  06CE  085B               	movf	date_setting@i,w
  7282  06CF  3E5D               	addlw	(low (_table| 0))& (0+255)
  7283  06D0  0084               	movwf	4
  7284  06D1  3029               	movlw	41
  7285  06D2  0600               	xorwf	0,w
  7286  06D3  1D03               	btfss	3,2
  7287  06D4  2E5A               	goto	l5354
  7288  06D5                     l5414:	
  7289                           
  7290                           ;clock_source.c: 561:                         for (int j=0; j<7; j++){
  7291  06D5  01D5               	clrf	date_setting@j_243
  7292  06D6  01D6               	clrf	date_setting@j_243+1
  7293  06D7                     l5416:	
  7294  06D7  0856               	movf	date_setting@j_243+1,w
  7295  06D8  3A80               	xorlw	128
  7296  06D9  00FF               	movwf	127
  7297  06DA  3080               	movlw	128
  7298  06DB  027F               	subwf	127,w
  7299  06DC  1D03               	skipz
  7300  06DD  2EE0               	goto	u5385
  7301  06DE  3007               	movlw	7
  7302  06DF  0255               	subwf	date_setting@j_243,w
  7303  06E0                     u5385:	
  7304  06E0  1803               	btfsc	3,0
  7305  06E1  2DB6               	goto	l5292
  7306                           
  7307                           ;clock_source.c: 562:                             table[i]++;
  7308  06E2  3001               	movlw	1
  7309  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  7310  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  7311  06E5  00CA               	movwf	??_date_setting
  7312  06E6  085B               	movf	date_setting@i,w
  7313  06E7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7314  06E8  0084               	movwf	4
  7315  06E9  084A               	movf	??_date_setting,w
  7316  06EA  1383               	bcf	3,7	;select IRP bank0
  7317  06EB  0780               	addwf	0,f
  7318                           
  7319                           ;clock_source.c: 563:                         }
  7320  06EC  3001               	movlw	1
  7321  06ED  07D5               	addwf	date_setting@j_243,f
  7322  06EE  1803               	skipnc
  7323  06EF  0AD6               	incf	date_setting@j_243+1,f
  7324  06F0  3000               	movlw	0
  7325  06F1  07D6               	addwf	date_setting@j_243+1,f
  7326  06F2  2ED7               	goto	l5416
  7327  06F3                     l5438:	
  7328  06F3  3005               	movlw	5
  7329  06F4  065B               	xorwf	date_setting@i,w
  7330  06F5  045C               	iorwf	date_setting@i+1,w
  7331  06F6  1D03               	btfss	3,2
  7332  06F7  2F19               	goto	l5452
  7333                           
  7334                           ;clock_source.c: 580:                 if (wkd != 7){
  7335  06F8  3007               	movlw	7
  7336  06F9  0640               	xorwf	_wkd,w
  7337  06FA  1903               	btfsc	3,2
  7338  06FB  2C5B               	goto	l5178
  7339                           
  7340                           ;clock_source.c: 581:                     wkd++;
  7341  06FC  3001               	movlw	1
  7342  06FD  00CA               	movwf	??_date_setting
  7343  06FE  084A               	movf	??_date_setting,w
  7344  06FF  07C0               	addwf	_wkd,f
  7345                           
  7346                           ;clock_source.c: 582:                     writecmd_4line(0x8B);
  7347  0700  308B               	movlw	139
  7348  0701  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  7349                           
  7350                           ;clock_source.c: 583:                     week(wkd);
  7351  0706  0840               	movf	_wkd,w
  7352  0707  00CA               	movwf	??_date_setting
  7353  0708  01CB               	clrf	??_date_setting+1
  7354  0709  084A               	movf	??_date_setting,w
  7355  070A  00FC               	movwf	week@w
  7356  070B  084B               	movf	??_date_setting+1,w
  7357  070C  00FD               	movwf	week@w+1
  7358  070D  120A  118A  2011  120A  118A  	fcall	_week
  7359                           
  7360                           ;clock_source.c: 584:                     writecmd_4line(0x8B);
  7361  0712  308B               	movlw	139
  7362  0713  160A  158A  25CB  120A  118A  	fcall	_writecmd_4line
  7363  0718  2C5B               	goto	l5178
  7364  0719                     l5452:	
  7365  0719  3004               	movlw	4
  7366  071A  065B               	xorwf	date_setting@i,w
  7367  071B  045C               	iorwf	date_setting@i+1,w
  7368  071C  1D03               	btfss	3,2
  7369  071D  2F5E               	goto	l5486
  7370                           
  7371                           ;clock_source.c: 591:                 D('m','1',i);
  7372  071E  306D               	movlw	109
  7373  071F  00C4               	movwf	D@D
  7374  0720  3000               	movlw	0
  7375  0721  00C5               	movwf	D@D+1
  7376  0722  3031               	movlw	49
  7377  0723  00C6               	movwf	D@C
  7378  0724  3000               	movlw	0
  7379  0725  00C7               	movwf	D@C+1
  7380  0726  085C               	movf	date_setting@i+1,w
  7381  0727  00C9               	movwf	D@i+1
  7382  0728  085B               	movf	date_setting@i,w
  7383  0729  00C8               	movwf	D@i
  7384  072A  160A  118A  241B  120A  118A  	fcall	_D
  7385                           
  7386                           ;clock_source.c: 592:                 if (table[i] != 0x12){
  7387  072F  1283               	bcf	3,5	;RP0=0, select bank0
  7388  0730  1303               	bcf	3,6	;RP1=0, select bank0
  7389  0731  085B               	movf	date_setting@i,w
  7390  0732  3E5D               	addlw	(low (_table| 0))& (0+255)
  7391  0733  0084               	movwf	4
  7392  0734  3012               	movlw	18
  7393  0735  1383               	bcf	3,7	;select IRP bank0
  7394  0736  0600               	xorwf	0,w
  7395  0737  1903               	btfsc	3,2
  7396  0738  2DB6               	goto	l5292
  7397                           
  7398                           ;clock_source.c: 593:                     if (table[i] == 9){
  7399  0739  085B               	movf	date_setting@i,w
  7400  073A  3E5D               	addlw	(low (_table| 0))& (0+255)
  7401  073B  0084               	movwf	4
  7402  073C  3009               	movlw	9
  7403  073D  0600               	xorwf	0,w
  7404  073E  1D03               	btfss	3,2
  7405  073F  2E5A               	goto	l5354
  7406                           
  7407                           ;clock_source.c: 594:                         for (int j=0; j<7; j++){
  7408  0740  01D7               	clrf	date_setting@j_244
  7409  0741  01D8               	clrf	date_setting@j_244+1
  7410  0742                     l5462:	
  7411  0742  0858               	movf	date_setting@j_244+1,w
  7412  0743  3A80               	xorlw	128
  7413  0744  00FF               	movwf	127
  7414  0745  3080               	movlw	128
  7415  0746  027F               	subwf	127,w
  7416  0747  1D03               	skipz
  7417  0748  2F4B               	goto	u5445
  7418  0749  3007               	movlw	7
  7419  074A  0257               	subwf	date_setting@j_244,w
  7420  074B                     u5445:	
  7421  074B  1803               	btfsc	3,0
  7422  074C  2DB6               	goto	l5292
  7423                           
  7424                           ;clock_source.c: 595:                             table[i]++;
  7425  074D  3001               	movlw	1
  7426  074E  1283               	bcf	3,5	;RP0=0, select bank0
  7427  074F  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0750  00CA               	movwf	??_date_setting
  7429  0751  085B               	movf	date_setting@i,w
  7430  0752  3E5D               	addlw	(low (_table| 0))& (0+255)
  7431  0753  0084               	movwf	4
  7432  0754  084A               	movf	??_date_setting,w
  7433  0755  1383               	bcf	3,7	;select IRP bank0
  7434  0756  0780               	addwf	0,f
  7435                           
  7436                           ;clock_source.c: 596:                         }
  7437  0757  3001               	movlw	1
  7438  0758  07D7               	addwf	date_setting@j_244,f
  7439  0759  1803               	skipnc
  7440  075A  0AD8               	incf	date_setting@j_244+1,f
  7441  075B  3000               	movlw	0
  7442  075C  07D8               	addwf	date_setting@j_244+1,f
  7443  075D  2F42               	goto	l5462
  7444  075E                     l5486:	
  7445  075E  3006               	movlw	6
  7446  075F  065B               	xorwf	date_setting@i,w
  7447  0760  045C               	iorwf	date_setting@i+1,w
  7448  0761  1D03               	btfss	3,2
  7449  0762  2C09               	goto	l5138
  7450                           
  7451                           ;clock_source.c: 614:                 D('0','1',i);
  7452  0763  3030               	movlw	48
  7453  0764  00C4               	movwf	D@D
  7454  0765  3000               	movlw	0
  7455  0766  00C5               	movwf	D@D+1
  7456  0767  3031               	movlw	49
  7457  0768  00C6               	movwf	D@C
  7458  0769  3000               	movlw	0
  7459  076A  00C7               	movwf	D@C+1
  7460  076B  085C               	movf	date_setting@i+1,w
  7461  076C  00C9               	movwf	D@i+1
  7462  076D  085B               	movf	date_setting@i,w
  7463  076E  00C8               	movwf	D@i
  7464  076F  160A  118A  241B  120A  118A  	fcall	_D
  7465                           
  7466                           ;clock_source.c: 615:                 if (table[i] != 0x99){
  7467  0774  1283               	bcf	3,5	;RP0=0, select bank0
  7468  0775  1303               	bcf	3,6	;RP1=0, select bank0
  7469  0776  085B               	movf	date_setting@i,w
  7470  0777  3E5D               	addlw	(low (_table| 0))& (0+255)
  7471  0778  0084               	movwf	4
  7472  0779  3099               	movlw	153
  7473  077A  1383               	bcf	3,7	;select IRP bank0
  7474  077B  0600               	xorwf	0,w
  7475  077C  1903               	btfsc	3,2
  7476  077D  2DB6               	goto	l5292
  7477                           
  7478                           ;clock_source.c: 616:                     if (table[i] == 0x9 || table[i] == 0x19
  7479  077E  085B               	movf	date_setting@i,w
  7480  077F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7481  0780  0084               	movwf	4
  7482  0781  3009               	movlw	9
  7483  0782  0600               	xorwf	0,w
  7484  0783  1903               	btfsc	3,2
  7485  0784  2FBD               	goto	l5510
  7486  0785  085B               	movf	date_setting@i,w
  7487  0786  3E5D               	addlw	(low (_table| 0))& (0+255)
  7488  0787  0084               	movwf	4
  7489  0788  3019               	movlw	25
  7490  0789  0600               	xorwf	0,w
  7491  078A  1903               	btfsc	3,2
  7492  078B  2FBD               	goto	l5510
  7493  078C  085B               	movf	date_setting@i,w
  7494  078D  3E5D               	addlw	(low (_table| 0))& (0+255)
  7495  078E  0084               	movwf	4
  7496  078F  3029               	movlw	41
  7497  0790  0600               	xorwf	0,w
  7498  0791  1903               	btfsc	3,2
  7499  0792  2FBD               	goto	l5510
  7500  0793  085B               	movf	date_setting@i,w
  7501  0794  3E5D               	addlw	(low (_table| 0))& (0+255)
  7502  0795  0084               	movwf	4
  7503  0796  3039               	movlw	57
  7504  0797  0600               	xorwf	0,w
  7505  0798  1903               	btfsc	3,2
  7506  0799  2FBD               	goto	l5510
  7507  079A  085B               	movf	date_setting@i,w
  7508  079B  3E5D               	addlw	(low (_table| 0))& (0+255)
  7509  079C  0084               	movwf	4
  7510  079D  3049               	movlw	73
  7511  079E  0600               	xorwf	0,w
  7512  079F  1903               	btfsc	3,2
  7513  07A0  2FBD               	goto	l5510
  7514  07A1  085B               	movf	date_setting@i,w
  7515  07A2  3E5D               	addlw	(low (_table| 0))& (0+255)
  7516  07A3  0084               	movwf	4
  7517  07A4  3059               	movlw	89
  7518  07A5  0600               	xorwf	0,w
  7519  07A6  1903               	btfsc	3,2
  7520  07A7  2FBD               	goto	l5510
  7521  07A8  085B               	movf	date_setting@i,w
  7522  07A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  7523  07AA  0084               	movwf	4
  7524  07AB  3069               	movlw	105
  7525  07AC  0600               	xorwf	0,w
  7526  07AD  1903               	btfsc	3,2
  7527  07AE  2FBD               	goto	l5510
  7528  07AF  085B               	movf	date_setting@i,w
  7529  07B0  3E5D               	addlw	(low (_table| 0))& (0+255)
  7530  07B1  0084               	movwf	4
  7531  07B2  3079               	movlw	121
  7532  07B3  0600               	xorwf	0,w
  7533  07B4  1903               	btfsc	3,2
  7534  07B5  2FBD               	goto	l5510
  7535  07B6  085B               	movf	date_setting@i,w
  7536  07B7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7537  07B8  0084               	movwf	4
  7538  07B9  3089               	movlw	137
  7539  07BA  0600               	xorwf	0,w
  7540  07BB  1D03               	btfss	3,2
  7541  07BC  2E5A               	goto	l5354
  7542  07BD                     l5510:	
  7543                           
  7544                           ;clock_source.c: 620:                         || table[i] == 0x89){;clock_source.c: 621:
      +                                                   for (int j=0; j<7; j++){
  7545  07BD  01D9               	clrf	date_setting@j_245
  7546  07BE  01DA               	clrf	date_setting@j_245+1
  7547  07BF                     l5512:	
  7548  07BF  085A               	movf	date_setting@j_245+1,w
  7549  07C0  3A80               	xorlw	128
  7550  07C1  00FF               	movwf	127
  7551  07C2  3080               	movlw	128
  7552  07C3  027F               	subwf	127,w
  7553  07C4  1D03               	skipz
  7554  07C5  2FC8               	goto	u5565
  7555  07C6  3007               	movlw	7
  7556  07C7  0259               	subwf	date_setting@j_245,w
  7557  07C8                     u5565:	
  7558  07C8  1803               	btfsc	3,0
  7559  07C9  2DB6               	goto	l5292
  7560                           
  7561                           ;clock_source.c: 622:                             table[i]++;
  7562  07CA  3001               	movlw	1
  7563  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  7564  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  7565  07CD  00CA               	movwf	??_date_setting
  7566  07CE  085B               	movf	date_setting@i,w
  7567  07CF  3E5D               	addlw	(low (_table| 0))& (0+255)
  7568  07D0  0084               	movwf	4
  7569  07D1  084A               	movf	??_date_setting,w
  7570  07D2  1383               	bcf	3,7	;select IRP bank0
  7571  07D3  0780               	addwf	0,f
  7572                           
  7573                           ;clock_source.c: 623:                         }
  7574  07D4  3001               	movlw	1
  7575  07D5  07D9               	addwf	date_setting@j_245,f
  7576  07D6  1803               	skipnc
  7577  07D7  0ADA               	incf	date_setting@j_245+1,f
  7578  07D8  3000               	movlw	0
  7579  07D9  07DA               	addwf	date_setting@j_245+1,f
  7580  07DA  2FBF               	goto	l5512
  7581  07DB                     __end_of_date_setting:	
  7582                           
  7583                           	psect	text29
  7584  0011                     __ptext29:	
  7585 ;; *************** function _week *****************
  7586 ;; Defined at:
  7587 ;;		line 8 in file "clock_source.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  w               2   12[COMMON] unsigned int 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 300/0
  7598 ;;		On exit  : 300/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         2       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0
  7604 ;;      Totals:         2       0       0       0       0
  7605 ;;Total ram usage:        2 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    3
  7608 ;; This function calls:
  7609 ;;		_write_str
  7610 ;; This function is called by:
  7611 ;;		_display_clock
  7612 ;;		_date_setting
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function _week
  7618  0011                     _week:	
  7619                           
  7620                           ;clock_source.c: 9:     if (w == 1)
  7621                           
  7622                           ;incstack = 0
  7623                           ; Regs used in _week: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7624  0011  037C               	decf	week@w,w
  7625  0012  047D               	iorwf	week@w+1,w
  7626  0013  1D03               	btfss	3,2
  7627  0014  281D               	goto	l3894
  7628                           
  7629                           ;clock_source.c: 10:         write_str("Mon");
  7630  0015  30EB               	movlw	low (STR_1| (0+32768))
  7631  0016  00F3               	movwf	write_str@array
  7632  0017  3090               	movlw	high (STR_1| (0+32768))
  7633  0018  00F4               	movwf	write_str@array+1
  7634  0019  160A  118A  215E   	fcall	_write_str
  7635  001C  0008               	return
  7636  001D                     l3894:	
  7637  001D  3002               	movlw	2
  7638  001E  067C               	xorwf	week@w,w
  7639  001F  047D               	iorwf	week@w+1,w
  7640  0020  1D03               	btfss	3,2
  7641  0021  282A               	goto	l3898
  7642                           
  7643                           ;clock_source.c: 12:         write_str("Tue");
  7644  0022  30E3               	movlw	low (STR_2| (0+32768))
  7645  0023  00F3               	movwf	write_str@array
  7646  0024  3090               	movlw	high (STR_2| (0+32768))
  7647  0025  00F4               	movwf	write_str@array+1
  7648  0026  160A  118A  215E   	fcall	_write_str
  7649  0029  0008               	return
  7650  002A                     l3898:	
  7651  002A  3003               	movlw	3
  7652  002B  067C               	xorwf	week@w,w
  7653  002C  047D               	iorwf	week@w+1,w
  7654  002D  1D03               	btfss	3,2
  7655  002E  2837               	goto	l3902
  7656                           
  7657                           ;clock_source.c: 14:         write_str("Wed");
  7658  002F  30DF               	movlw	low (STR_3| (0+32768))
  7659  0030  00F3               	movwf	write_str@array
  7660  0031  3090               	movlw	high (STR_3| (0+32768))
  7661  0032  00F4               	movwf	write_str@array+1
  7662  0033  160A  118A  215E   	fcall	_write_str
  7663  0036  0008               	return
  7664  0037                     l3902:	
  7665  0037  3004               	movlw	4
  7666  0038  067C               	xorwf	week@w,w
  7667  0039  047D               	iorwf	week@w+1,w
  7668  003A  1D03               	btfss	3,2
  7669  003B  2844               	goto	l3906
  7670                           
  7671                           ;clock_source.c: 16:         write_str("Thu");
  7672  003C  30F7               	movlw	low (STR_4| (0+32768))
  7673  003D  00F3               	movwf	write_str@array
  7674  003E  3090               	movlw	high (STR_4| (0+32768))
  7675  003F  00F4               	movwf	write_str@array+1
  7676  0040  160A  118A  215E   	fcall	_write_str
  7677  0043  0008               	return
  7678  0044                     l3906:	
  7679  0044  3005               	movlw	5
  7680  0045  067C               	xorwf	week@w,w
  7681  0046  047D               	iorwf	week@w+1,w
  7682  0047  1D03               	btfss	3,2
  7683  0048  2851               	goto	l3910
  7684                           
  7685                           ;clock_source.c: 18:         write_str("Fri");
  7686  0049  30E7               	movlw	low (STR_5| (0+32768))
  7687  004A  00F3               	movwf	write_str@array
  7688  004B  3090               	movlw	high (STR_5| (0+32768))
  7689  004C  00F4               	movwf	write_str@array+1
  7690  004D  160A  118A  215E   	fcall	_write_str
  7691  0050  0008               	return
  7692  0051                     l3910:	
  7693  0051  3006               	movlw	6
  7694  0052  067C               	xorwf	week@w,w
  7695  0053  047D               	iorwf	week@w+1,w
  7696  0054  1D03               	btfss	3,2
  7697  0055  285E               	goto	l3914
  7698                           
  7699                           ;clock_source.c: 20:         write_str("Sat");
  7700  0056  30F3               	movlw	low (STR_6| (0+32768))
  7701  0057  00F3               	movwf	write_str@array
  7702  0058  3090               	movlw	high (STR_6| (0+32768))
  7703  0059  00F4               	movwf	write_str@array+1
  7704  005A  160A  118A  215E   	fcall	_write_str
  7705  005D  0008               	return
  7706  005E                     l3914:	
  7707  005E  3007               	movlw	7
  7708  005F  067C               	xorwf	week@w,w
  7709  0060  047D               	iorwf	week@w+1,w
  7710  0061  1D03               	btfss	3,2
  7711  0062  0008               	return
  7712                           
  7713                           ;clock_source.c: 22:         write_str("Sun");
  7714  0063  30EF               	movlw	low (STR_7| (0+32768))
  7715  0064  00F3               	movwf	write_str@array
  7716  0065  3090               	movlw	high (STR_7| (0+32768))
  7717  0066  00F4               	movwf	write_str@array+1
  7718  0067  160A  118A  215E   	fcall	_write_str
  7719  006A  0008               	return
  7720  006B                     __end_of_week:	
  7721                           
  7722                           	psect	text30
  7723  172C                     __ptext30:	
  7724 ;; *************** function _start_date *****************
  7725 ;; Defined at:
  7726 ;;		line 189 in file "clock_source.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  i               2    0[BANK0 ] int 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 300/0
  7737 ;;		On exit  : 300/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7740 ;;      Params:         0       0       0       0       0
  7741 ;;      Locals:         0       2       0       0       0
  7742 ;;      Temps:          2       0       0       0       0
  7743 ;;      Totals:         2       2       0       0       0
  7744 ;;Total ram usage:        4 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    3
  7747 ;; This function calls:
  7748 ;;		_write_str
  7749 ;;		_writechar
  7750 ;;		_writecmd_4line
  7751 ;; This function is called by:
  7752 ;;		_date_setting
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           
  7757                           ;psect for function _start_date
  7758  172C                     _start_date:	
  7759                           
  7760                           ;clock_source.c: 190:     int i;;clock_source.c: 193:     i=table[3]&0xf0;
  7761                           
  7762                           ;incstack = 0
  7763                           ; Regs used in _start_date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7764  172C  0860               	movf	_table+3,w
  7765  172D  39F0               	andlw	240
  7766  172E  00FC               	movwf	??_start_date
  7767  172F  01FD               	clrf	??_start_date+1
  7768  1730  087C               	movf	??_start_date,w
  7769  1731  00C4               	movwf	start_date@i
  7770  1732  087D               	movf	??_start_date+1,w
  7771  1733  00C5               	movwf	start_date@i+1
  7772                           
  7773                           ;clock_source.c: 194:     i=i>>4;
  7774  1734  0E44               	swapf	start_date@i,w
  7775  1735  390F               	andlw	15
  7776  1736  00C4               	movwf	start_date@i
  7777  1737  0E45               	swapf	start_date@i+1,w
  7778  1738  39F0               	andlw	240
  7779  1739  04C4               	iorwf	start_date@i,f
  7780  173A  0E45               	swapf	start_date@i+1,w
  7781  173B  390F               	andlw	15
  7782  173C  00C5               	movwf	start_date@i+1
  7783  173D  30F0               	movlw	240
  7784  173E  1DC5               	btfss	start_date@i+1,3
  7785  173F  3000               	movlw	0
  7786  1740  04C5               	iorwf	start_date@i+1,f
  7787                           
  7788                           ;clock_source.c: 195:     writechar(i + '0');
  7789  1741  0844               	movf	start_date@i,w
  7790  1742  3E30               	addlw	48
  7791  1743  160A  158A  25AF  160A  118A  	fcall	_writechar
  7792                           
  7793                           ;clock_source.c: 196:     i=i<<4;
  7794  1748  0845               	movf	start_date@i+1,w
  7795  1749  00FD               	movwf	??_start_date+1
  7796  174A  0844               	movf	start_date@i,w
  7797  174B  00FC               	movwf	??_start_date
  7798  174C  0EFC               	swapf	??_start_date,f
  7799  174D  0EFD               	swapf	??_start_date+1,f
  7800  174E  30F0               	movlw	240
  7801  174F  05FD               	andwf	??_start_date+1,f
  7802  1750  087C               	movf	??_start_date,w
  7803  1751  390F               	andlw	15
  7804  1752  04FD               	iorwf	??_start_date+1,f
  7805  1753  30F0               	movlw	240
  7806  1754  05FC               	andwf	??_start_date,f
  7807  1755  087C               	movf	??_start_date,w
  7808  1756  00C4               	movwf	start_date@i
  7809  1757  087D               	movf	??_start_date+1,w
  7810  1758  00C5               	movwf	start_date@i+1
  7811                           
  7812                           ;clock_source.c: 197:     i = table[3]&0x0f;
  7813  1759  0860               	movf	_table+3,w
  7814  175A  390F               	andlw	15
  7815  175B  00FC               	movwf	??_start_date
  7816  175C  01FD               	clrf	??_start_date+1
  7817  175D  087C               	movf	??_start_date,w
  7818  175E  00C4               	movwf	start_date@i
  7819  175F  087D               	movf	??_start_date+1,w
  7820  1760  00C5               	movwf	start_date@i+1
  7821                           
  7822                           ;clock_source.c: 198:     writechar(i + '0');
  7823  1761  0844               	movf	start_date@i,w
  7824  1762  3E30               	addlw	48
  7825  1763  160A  158A  25AF  160A  118A  	fcall	_writechar
  7826                           
  7827                           ;clock_source.c: 199:     write_str("/ ");
  7828  1768  30FF               	movlw	low (STR_15| (0+32768))
  7829  1769  00F3               	movwf	write_str@array
  7830  176A  3090               	movlw	high (STR_15| (0+32768))
  7831  176B  00F4               	movwf	write_str@array+1
  7832  176C  160A  118A  215E  160A  118A  	fcall	_write_str
  7833                           
  7834                           ;clock_source.c: 202:     i=table[4]&0xf0;
  7835  1771  0861               	movf	_table+4,w
  7836  1772  39F0               	andlw	240
  7837  1773  00FC               	movwf	??_start_date
  7838  1774  01FD               	clrf	??_start_date+1
  7839  1775  087C               	movf	??_start_date,w
  7840  1776  00C4               	movwf	start_date@i
  7841  1777  087D               	movf	??_start_date+1,w
  7842  1778  00C5               	movwf	start_date@i+1
  7843                           
  7844                           ;clock_source.c: 203:     i=i>>4;
  7845  1779  0E44               	swapf	start_date@i,w
  7846  177A  390F               	andlw	15
  7847  177B  00C4               	movwf	start_date@i
  7848  177C  0E45               	swapf	start_date@i+1,w
  7849  177D  39F0               	andlw	240
  7850  177E  04C4               	iorwf	start_date@i,f
  7851  177F  0E45               	swapf	start_date@i+1,w
  7852  1780  390F               	andlw	15
  7853  1781  00C5               	movwf	start_date@i+1
  7854  1782  30F0               	movlw	240
  7855  1783  1DC5               	btfss	start_date@i+1,3
  7856  1784  3000               	movlw	0
  7857  1785  04C5               	iorwf	start_date@i+1,f
  7858                           
  7859                           ;clock_source.c: 204:     writechar(i + '0');
  7860  1786  0844               	movf	start_date@i,w
  7861  1787  3E30               	addlw	48
  7862  1788  160A  158A  25AF  160A  118A  	fcall	_writechar
  7863                           
  7864                           ;clock_source.c: 205:     i=i<<4;
  7865  178D  0845               	movf	start_date@i+1,w
  7866  178E  00FD               	movwf	??_start_date+1
  7867  178F  0844               	movf	start_date@i,w
  7868  1790  00FC               	movwf	??_start_date
  7869  1791  0EFC               	swapf	??_start_date,f
  7870  1792  0EFD               	swapf	??_start_date+1,f
  7871  1793  30F0               	movlw	240
  7872  1794  05FD               	andwf	??_start_date+1,f
  7873  1795  087C               	movf	??_start_date,w
  7874  1796  390F               	andlw	15
  7875  1797  04FD               	iorwf	??_start_date+1,f
  7876  1798  30F0               	movlw	240
  7877  1799  05FC               	andwf	??_start_date,f
  7878  179A  087C               	movf	??_start_date,w
  7879  179B  00C4               	movwf	start_date@i
  7880  179C  087D               	movf	??_start_date+1,w
  7881  179D  00C5               	movwf	start_date@i+1
  7882                           
  7883                           ;clock_source.c: 206:     i = table[4]&0x0f;
  7884  179E  0861               	movf	_table+4,w
  7885  179F  390F               	andlw	15
  7886  17A0  00FC               	movwf	??_start_date
  7887  17A1  01FD               	clrf	??_start_date+1
  7888  17A2  087C               	movf	??_start_date,w
  7889  17A3  00C4               	movwf	start_date@i
  7890  17A4  087D               	movf	??_start_date+1,w
  7891  17A5  00C5               	movwf	start_date@i+1
  7892                           
  7893                           ;clock_source.c: 207:     writechar(i + '0');
  7894  17A6  0844               	movf	start_date@i,w
  7895  17A7  3E30               	addlw	48
  7896  17A8  160A  158A  25AF  160A  118A  	fcall	_writechar
  7897                           
  7898                           ;clock_source.c: 208:     write_str("/ ");
  7899  17AD  30FF               	movlw	low (STR_15| (0+32768))
  7900  17AE  00F3               	movwf	write_str@array
  7901  17AF  3090               	movlw	high (STR_15| (0+32768))
  7902  17B0  00F4               	movwf	write_str@array+1
  7903  17B1  160A  118A  215E  160A  118A  	fcall	_write_str
  7904                           
  7905                           ;clock_source.c: 211:     i=table[6]&0xf0;
  7906  17B6  0863               	movf	_table+6,w
  7907  17B7  39F0               	andlw	240
  7908  17B8  00FC               	movwf	??_start_date
  7909  17B9  01FD               	clrf	??_start_date+1
  7910  17BA  087C               	movf	??_start_date,w
  7911  17BB  00C4               	movwf	start_date@i
  7912  17BC  087D               	movf	??_start_date+1,w
  7913  17BD  00C5               	movwf	start_date@i+1
  7914                           
  7915                           ;clock_source.c: 212:     i=i>>4;
  7916  17BE  0E44               	swapf	start_date@i,w
  7917  17BF  390F               	andlw	15
  7918  17C0  00C4               	movwf	start_date@i
  7919  17C1  0E45               	swapf	start_date@i+1,w
  7920  17C2  39F0               	andlw	240
  7921  17C3  04C4               	iorwf	start_date@i,f
  7922  17C4  0E45               	swapf	start_date@i+1,w
  7923  17C5  390F               	andlw	15
  7924  17C6  00C5               	movwf	start_date@i+1
  7925  17C7  30F0               	movlw	240
  7926  17C8  1DC5               	btfss	start_date@i+1,3
  7927  17C9  3000               	movlw	0
  7928  17CA  04C5               	iorwf	start_date@i+1,f
  7929                           
  7930                           ;clock_source.c: 213:     writechar(i + '0');
  7931  17CB  0844               	movf	start_date@i,w
  7932  17CC  3E30               	addlw	48
  7933  17CD  160A  158A  25AF  160A  118A  	fcall	_writechar
  7934                           
  7935                           ;clock_source.c: 214:     i=i<<4;
  7936  17D2  0845               	movf	start_date@i+1,w
  7937  17D3  00FD               	movwf	??_start_date+1
  7938  17D4  0844               	movf	start_date@i,w
  7939  17D5  00FC               	movwf	??_start_date
  7940  17D6  0EFC               	swapf	??_start_date,f
  7941  17D7  0EFD               	swapf	??_start_date+1,f
  7942  17D8  30F0               	movlw	240
  7943  17D9  05FD               	andwf	??_start_date+1,f
  7944  17DA  087C               	movf	??_start_date,w
  7945  17DB  390F               	andlw	15
  7946  17DC  04FD               	iorwf	??_start_date+1,f
  7947  17DD  30F0               	movlw	240
  7948  17DE  05FC               	andwf	??_start_date,f
  7949  17DF  087C               	movf	??_start_date,w
  7950  17E0  00C4               	movwf	start_date@i
  7951  17E1  087D               	movf	??_start_date+1,w
  7952  17E2  00C5               	movwf	start_date@i+1
  7953                           
  7954                           ;clock_source.c: 215:     i = table[6]&0x0f;
  7955  17E3  0863               	movf	_table+6,w
  7956  17E4  390F               	andlw	15
  7957  17E5  00FC               	movwf	??_start_date
  7958  17E6  01FD               	clrf	??_start_date+1
  7959  17E7  087C               	movf	??_start_date,w
  7960  17E8  00C4               	movwf	start_date@i
  7961  17E9  087D               	movf	??_start_date+1,w
  7962  17EA  00C5               	movwf	start_date@i+1
  7963                           
  7964                           ;clock_source.c: 216:     writechar(i + '0');
  7965  17EB  0844               	movf	start_date@i,w
  7966  17EC  3E30               	addlw	48
  7967  17ED  160A  158A  25AF  160A  118A  	fcall	_writechar
  7968                           
  7969                           ;clock_source.c: 219:     writecmd_4line(0x88);
  7970  17F2  3088               	movlw	136
  7971  17F3  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  7972                           
  7973                           ;clock_source.c: 220:     write_str("Week: ");
  7974  17F8  307E               	movlw	low (STR_17| (0+32768))
  7975  17F9  00F3               	movwf	write_str@array
  7976  17FA  3090               	movlw	high (STR_17| (0+32768))
  7977  17FB  00F4               	movwf	write_str@array+1
  7978  17FC  160A  118A  215E   	fcall	_write_str
  7979  17FF  0008               	return
  7980  1800                     __end_of_start_date:	
  7981                           
  7982                           	psect	text31
  7983  1D2A                     __ptext31:	
  7984 ;; *************** function ___bmul *****************
  7985 ;; Defined at:
  7986 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  multiplier      1    wreg     unsigned char 
  7989 ;;  multiplicand    1    0[COMMON] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  multiplier      1    3[COMMON] unsigned char 
  7992 ;;  product         1    2[COMMON] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      unsigned char 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 300/0
  7999 ;;		On exit  : 300/0
  8000 ;;		Unchanged: 300/0
  8001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8002 ;;      Params:         1       0       0       0       0
  8003 ;;      Locals:         2       0       0       0       0
  8004 ;;      Temps:          1       0       0       0       0
  8005 ;;      Totals:         4       0       0       0       0
  8006 ;;Total ram usage:        4 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_date_setting
  8012 ;;		_temp_check_lower
  8013 ;;		_temp_check_rise
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           
  8018                           ;psect for function ___bmul
  8019  1D2A                     ___bmul:	
  8020                           
  8021                           ;incstack = 0
  8022                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8023                           ;___bmul@multiplier stored from wreg
  8024  1D2A  00F3               	movwf	___bmul@multiplier
  8025  1D2B  01F2               	clrf	___bmul@product
  8026  1D2C                     l3672:	
  8027  1D2C  1C73               	btfss	___bmul@multiplier,0
  8028  1D2D  2D32               	goto	l3676
  8029  1D2E  0870               	movf	___bmul@multiplicand,w
  8030  1D2F  00F1               	movwf	??___bmul
  8031  1D30  0871               	movf	??___bmul,w
  8032  1D31  07F2               	addwf	___bmul@product,f
  8033  1D32                     l3676:	
  8034  1D32  1003               	clrc
  8035  1D33  0DF0               	rlf	___bmul@multiplicand,f
  8036  1D34  1003               	clrc
  8037  1D35  0CF3               	rrf	___bmul@multiplier,f
  8038  1D36  0873               	movf	___bmul@multiplier,w
  8039  1D37  1D03               	btfss	3,2
  8040  1D38  2D2C               	goto	l3672
  8041  1D39  0872               	movf	___bmul@product,w
  8042  1D3A  0008               	return
  8043  1D3B                     __end_of___bmul:	
  8044                           
  8045                           	psect	text32
  8046  141B                     __ptext32:	
  8047 ;; *************** function _D *****************
  8048 ;; Defined at:
  8049 ;;		line 642 in file "clock_source.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  D               2    0[BANK0 ] PTR unsigned char 
  8052 ;;		 -> RAM(512), RAM(512), RAM(512), RAM(512), 
  8053 ;;		 -> RAM(512), 
  8054 ;;  C               2    2[BANK0 ] PTR unsigned char 
  8055 ;;		 -> RAM(512), RAM(512), RAM(512), 
  8056 ;;  i               2    4[BANK0 ] unsigned int 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  j               2   12[COMMON] int 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 300/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8068 ;;      Params:         0       6       0       0       0
  8069 ;;      Locals:         2       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0
  8071 ;;      Totals:         2       6       0       0       0
  8072 ;;Total ram usage:        8 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    3
  8075 ;; This function calls:
  8076 ;;		_delay_main
  8077 ;;		_display_val
  8078 ;;		_write_str
  8079 ;;		_writecmd_4line
  8080 ;; This function is called by:
  8081 ;;		_date_setting
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           
  8086                           ;psect for function _D
  8087  141B                     _D:	
  8088                           
  8089                           ;clock_source.c: 644:     if (C == '0'){
  8090                           
  8091                           ;incstack = 0
  8092                           ; Regs used in _D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8093  141B  3030               	movlw	48
  8094  141C  0646               	xorwf	D@C,w
  8095  141D  0447               	iorwf	D@C+1,w
  8096  141E  1D03               	btfss	3,2
  8097  141F  2C7C               	goto	l4248
  8098                           
  8099                           ;clock_source.c: 645:         writecmd_4line(0x98);
  8100  1420  3098               	movlw	152
  8101  1421  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  8102                           
  8103                           ;clock_source.c: 646:         write_str("                ");
  8104  1426  3000               	movlw	low (STR_22| (0+32768))
  8105  1427  00F3               	movwf	write_str@array
  8106  1428  3090               	movlw	high (STR_22| (0+32768))
  8107  1429  00F4               	movwf	write_str@array+1
  8108  142A  160A  118A  215E  160A  118A  	fcall	_write_str
  8109                           
  8110                           ;clock_source.c: 647:         writecmd_4line(0x98);
  8111  142F  3098               	movlw	152
  8112  1430  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  8113                           
  8114                           ;clock_source.c: 649:         if (D == 'd'){
  8115  1435  3064               	movlw	100
  8116  1436  0644               	xorwf	D@D,w
  8117  1437  0445               	iorwf	D@D+1,w
  8118  1438  1D03               	btfss	3,2
  8119  1439  2C50               	goto	l4234
  8120                           
  8121                           ;clock_source.c: 650:             write_str("Day");
  8122  143A  30FB               	movlw	low (STR_33| (0+32768))
  8123  143B  00F3               	movwf	write_str@array
  8124  143C  3090               	movlw	high (STR_33| (0+32768))
  8125  143D  00F4               	movwf	write_str@array+1
  8126  143E  160A  118A  215E  160A  118A  	fcall	_write_str
  8127                           
  8128                           ;clock_source.c: 651:             if (C == '0'){
  8129  1443  3030               	movlw	48
  8130  1444  0646               	xorwf	D@C,w
  8131  1445  0447               	iorwf	D@C+1,w
  8132  1446  1D03               	btfss	3,2
  8133  1447  2C7C               	goto	l4248
  8134                           
  8135                           ;clock_source.c: 652:                 display_val(i);
  8136  1448  0849               	movf	D@i+1,w
  8137  1449  00F4               	movwf	display_val@i+1
  8138  144A  0848               	movf	D@i,w
  8139  144B  00F3               	movwf	display_val@i
  8140  144C  120A  158A  200E   	fcall	_display_val
  8141  144F  0008               	return
  8142  1450                     l4234:	
  8143  1450  306D               	movlw	109
  8144  1451  0644               	xorwf	D@D,w
  8145  1452  0445               	iorwf	D@D+1,w
  8146  1453  1D03               	btfss	3,2
  8147  1454  2C59               	goto	l4238
  8148                           
  8149                           ;clock_source.c: 657:             write_str("Month");
  8150  1455  30B6               	movlw	low (STR_34| (0+32768))
  8151  1456  00F3               	movwf	write_str@array
  8152  1457  3090               	movlw	high (STR_34| (0+32768))
  8153  1458  2C76               	goto	L9
  8154  1459                     l4238:	
  8155                           ;clock_source.c: 658:         }
  8156                           
  8157  1459  3077               	movlw	119
  8158  145A  0644               	xorwf	D@D,w
  8159  145B  0445               	iorwf	D@D+1,w
  8160  145C  1D03               	btfss	3,2
  8161  145D  2C6E               	goto	l4244
  8162                           
  8163                           ;clock_source.c: 660:             write_str("Week");
  8164  145E  30D0               	movlw	low (STR_35| (0+32768))
  8165  145F  00F3               	movwf	write_str@array
  8166  1460  3090               	movlw	high (STR_35| (0+32768))
  8167  1461  00F4               	movwf	write_str@array+1
  8168  1462  160A  118A  215E  160A  118A  	fcall	_write_str
  8169                           
  8170                           ;clock_source.c: 661:             writecmd_4line(0x8B);
  8171  1467  308B               	movlw	139
  8172  1468  160A  158A  25CB  160A  118A  	fcall	_writecmd_4line
  8173                           
  8174                           ;clock_source.c: 662:         }
  8175  146D  2C7C               	goto	l4248
  8176  146E                     l4244:	
  8177  146E  3079               	movlw	121
  8178  146F  0644               	xorwf	D@D,w
  8179  1470  0445               	iorwf	D@D+1,w
  8180  1471  1D03               	btfss	3,2
  8181  1472  2C7C               	goto	l4248
  8182                           
  8183                           ;clock_source.c: 664:             write_str("Year");
  8184  1473  30D5               	movlw	low (STR_36| (0+32768))
  8185  1474  00F3               	movwf	write_str@array
  8186  1475  3090               	movlw	high (STR_36| (0+32768))
  8187  1476                     L9:	
  8188  1476  00F4               	movwf	write_str@array+1
  8189  1477  160A  118A  215E  160A  118A  	fcall	_write_str
  8190  147C                     l4248:	
  8191                           
  8192                           ;clock_source.c: 669:     if (D == 'd' || D == 'm' && C == 'd'){
  8193  147C  3064               	movlw	100
  8194  147D  0644               	xorwf	D@D,w
  8195  147E  0445               	iorwf	D@D+1,w
  8196  147F  1903               	btfsc	3,2
  8197  1480  2C8B               	goto	l4254
  8198  1481  306D               	movlw	109
  8199  1482  0644               	xorwf	D@D,w
  8200  1483  0445               	iorwf	D@D+1,w
  8201  1484  1D03               	btfss	3,2
  8202  1485  0008               	return
  8203  1486  3064               	movlw	100
  8204  1487  0646               	xorwf	D@C,w
  8205  1488  0447               	iorwf	D@C+1,w
  8206  1489  1D03               	btfss	3,2
  8207  148A  0008               	return
  8208  148B                     l4254:	
  8209                           
  8210                           ;clock_source.c: 670:         if (table[i] != 0x01){
  8211  148B  0848               	movf	D@i,w
  8212  148C  3E5D               	addlw	(low (_table| 0))& (0+255)
  8213  148D  0084               	movwf	4
  8214  148E  1383               	bcf	3,7	;select IRP bank0
  8215  148F  0300               	decf	0,w
  8216  1490  1903               	btfsc	3,2
  8217  1491  2CC2               	goto	l4274
  8218                           
  8219                           ;clock_source.c: 671:             if (table[i] == 0x10 || table[i] == 0x20 || table[i] =
      +                          = 0x30){
  8220  1492  0848               	movf	D@i,w
  8221  1493  3E5D               	addlw	(low (_table| 0))& (0+255)
  8222  1494  0084               	movwf	4
  8223  1495  3010               	movlw	16
  8224  1496  0600               	xorwf	0,w
  8225  1497  1903               	btfsc	3,2
  8226  1498  2CA7               	goto	l4262
  8227  1499  0848               	movf	D@i,w
  8228  149A  3E5D               	addlw	(low (_table| 0))& (0+255)
  8229  149B  0084               	movwf	4
  8230  149C  3020               	movlw	32
  8231  149D  0600               	xorwf	0,w
  8232  149E  1903               	btfsc	3,2
  8233  149F  2CA7               	goto	l4262
  8234  14A0  0848               	movf	D@i,w
  8235  14A1  3E5D               	addlw	(low (_table| 0))& (0+255)
  8236  14A2  0084               	movwf	4
  8237  14A3  3030               	movlw	48
  8238  14A4  0600               	xorwf	0,w
  8239  14A5  1D03               	btfss	3,2
  8240  14A6  2CD1               	goto	l4278
  8241  14A7                     l4262:	
  8242                           
  8243                           ;clock_source.c: 672:                 for (int j=0; j<7; j++){
  8244  14A7  01FC               	clrf	D@j
  8245  14A8  01FD               	clrf	D@j+1
  8246  14A9                     l4268:	
  8247                           
  8248                           ;clock_source.c: 673:                     table[i]--;
  8249  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  8250  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  8251  14AB  0848               	movf	D@i,w
  8252  14AC  3E5D               	addlw	(low (_table| 0))& (0+255)
  8253  14AD  0084               	movwf	4
  8254  14AE  3001               	movlw	1
  8255  14AF  1383               	bcf	3,7	;select IRP bank0
  8256  14B0  0280               	subwf	0,f
  8257                           
  8258                           ;clock_source.c: 674:                 }
  8259  14B1  3001               	movlw	1
  8260  14B2  07FC               	addwf	D@j,f
  8261  14B3  1803               	skipnc
  8262  14B4  0AFD               	incf	D@j+1,f
  8263  14B5  3000               	movlw	0
  8264  14B6  07FD               	addwf	D@j+1,f
  8265  14B7  087D               	movf	D@j+1,w
  8266  14B8  3A80               	xorlw	128
  8267  14B9  00FF               	movwf	127
  8268  14BA  3080               	movlw	128
  8269  14BB  027F               	subwf	127,w
  8270  14BC  1D03               	skipz
  8271  14BD  2CC0               	goto	u3985
  8272  14BE  3007               	movlw	7
  8273  14BF  027C               	subwf	D@j,w
  8274  14C0                     u3985:	
  8275  14C0  1C03               	skipc
  8276  14C1  2CA9               	goto	l4268
  8277  14C2                     l4274:	
  8278                           
  8279                           ;clock_source.c: 675:                 display_val(i);
  8280  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  8281  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  8282  14C4  0849               	movf	D@i+1,w
  8283  14C5  00F4               	movwf	display_val@i+1
  8284  14C6  0848               	movf	D@i,w
  8285  14C7  00F3               	movwf	display_val@i
  8286  14C8  120A  158A  200E  160A  118A  	fcall	_display_val
  8287                           
  8288                           ;clock_source.c: 676:                 delay_main();
  8289  14CD  160A  158A  256F   	fcall	_delay_main
  8290                           
  8291                           ;clock_source.c: 677:             }
  8292  14D0  0008               	return
  8293  14D1                     l4278:	
  8294                           
  8295                           ;clock_source.c: 679:                 table[i]--;
  8296  14D1  0848               	movf	D@i,w
  8297  14D2  3E5D               	addlw	(low (_table| 0))& (0+255)
  8298  14D3  0084               	movwf	4
  8299  14D4  3001               	movlw	1
  8300  14D5  0280               	subwf	0,f
  8301  14D6  2CC2               	goto	l4274
  8302  14D7                     __end_of_D:	
  8303                           
  8304                           	psect	text33
  8305  0A01                     __ptext33:	
  8306 ;; *************** function _clock_setting *****************
  8307 ;; Defined at:
  8308 ;;		line 252 in file "clock_source.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  i               2   12[BANK0 ] int 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 300/0
  8319 ;;		On exit  : 300/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8322 ;;      Params:         0       0       0       0       0
  8323 ;;      Locals:         0       2       0       0       0
  8324 ;;      Temps:          0       0       0       0       0
  8325 ;;      Totals:         0       2       0       0       0
  8326 ;;Total ram usage:        2 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    4
  8329 ;; This function calls:
  8330 ;;		_OutputPins
  8331 ;;		_T
  8332 ;;		_button_reset
  8333 ;;		_delay_main
  8334 ;;		_set_time_date
  8335 ;;		_start_time
  8336 ;;		_write_str
  8337 ;;		_writecmd_4line
  8338 ;; This function is called by:
  8339 ;;		_main
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function _clock_setting
  8345  0A01                     _clock_setting:	
  8346                           
  8347                           ;clock_source.c: 253:     writecmd_4line(0x1);
  8348                           
  8349                           ;incstack = 0
  8350                           ; Regs used in _clock_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8351  0A01  3001               	movlw	1
  8352  0A02  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8353                           
  8354                           ;clock_source.c: 254:     writecmd_4line(0x80);
  8355  0A07  3080               	movlw	128
  8356  0A08  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8357                           
  8358                           ;clock_source.c: 255:     write_str("Time Settings");
  8359  0A0D  304D               	movlw	low (STR_20| (0+32768))
  8360  0A0E  00F3               	movwf	write_str@array
  8361  0A0F  3090               	movlw	high (STR_20| (0+32768))
  8362  0A10  00F4               	movwf	write_str@array+1
  8363  0A11  160A  118A  215E  120A  158A  	fcall	_write_str
  8364                           
  8365                           ;clock_source.c: 256:     writecmd_4line(0x90);
  8366  0A16  3090               	movlw	144
  8367  0A17  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8368                           
  8369                           ;clock_source.c: 257:     start_time();
  8370  0A1C  160A  118A  24D7  120A  158A  	fcall	_start_time
  8371                           
  8372                           ;clock_source.c: 258:     writecmd_4line(0x88);
  8373  0A21  3088               	movlw	136
  8374  0A22  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8375                           
  8376                           ;clock_source.c: 259:     write_str("Change time...");
  8377  0A27  302F               	movlw	low (STR_21| (0+32768))
  8378  0A28  00F3               	movwf	write_str@array
  8379  0A29  3090               	movlw	high (STR_21| (0+32768))
  8380  0A2A  00F4               	movwf	write_str@array+1
  8381  0A2B  160A  118A  215E  120A  158A  	fcall	_write_str
  8382                           
  8383                           ;clock_source.c: 260:     int i=0;
  8384  0A30  01D0               	clrf	clock_setting@i
  8385  0A31  01D1               	clrf	clock_setting@i+1
  8386  0A32                     l5000:	
  8387                           
  8388                           ;clock_source.c: 265:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  8389  0A32  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8390  0A37  3002               	movlw	2
  8391  0A38  0642               	xorwf	_FirstRC,w
  8392  0A39  1903               	btfsc	3,2
  8393  0A3A  0343               	decf	_SecondRC,w
  8394  0A3B  1903               	btfsc	3,2
  8395  0A3C  0008               	return
  8396  0A3D  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8397  0A42  3002               	movlw	2
  8398  0A43  0642               	xorwf	_FirstRC,w
  8399  0A44  1D03               	btfss	3,2
  8400  0A45  2A4E               	goto	l5022
  8401  0A46  3002               	movlw	2
  8402  0A47  0643               	xorwf	_SecondRC,w
  8403  0A48  1D03               	btfss	3,2
  8404  0A49  2A4E               	goto	l5022
  8405                           
  8406                           ;clock_source.c: 269:             set_time_date();
  8407  0A4A  160A  158A  268F   	fcall	_set_time_date
  8408  0A4D  0008               	return
  8409  0A4E                     l5022:	
  8410  0A4E  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8411  0A53  3003               	movlw	3
  8412  0A54  0642               	xorwf	_FirstRC,w
  8413  0A55  1D03               	btfss	3,2
  8414  0A56  2AC8               	goto	l5054
  8415  0A57  0343               	decf	_SecondRC,w
  8416  0A58  1D03               	btfss	3,2
  8417  0A59  2AC8               	goto	l5054
  8418                           
  8419                           ;clock_source.c: 274:             button_reset();
  8420  0A5A  160A  158A  24EE  120A  158A  	fcall	_button_reset
  8421                           
  8422                           ;clock_source.c: 276:             if (i != 2){
  8423  0A5F  3002               	movlw	2
  8424  0A60  0650               	xorwf	clock_setting@i,w
  8425  0A61  0451               	iorwf	clock_setting@i+1,w
  8426  0A62  1903               	btfsc	3,2
  8427  0A63  2AA3               	goto	l5044
  8428                           
  8429                           ;clock_source.c: 277:                 i++;
  8430  0A64  3001               	movlw	1
  8431  0A65  07D0               	addwf	clock_setting@i,f
  8432  0A66  1803               	skipnc
  8433  0A67  0AD1               	incf	clock_setting@i+1,f
  8434  0A68  3000               	movlw	0
  8435  0A69                     L11:	
  8436  0A69  07D1               	addwf	clock_setting@i+1,f
  8437                           
  8438                           ;clock_source.c: 278:                 if (i == 1 ){
  8439  0A6A  0350               	decf	clock_setting@i,w
  8440  0A6B  0451               	iorwf	clock_setting@i+1,w
  8441  0A6C  1D03               	btfss	3,2
  8442  0A6D  2A32               	goto	l5000
  8443                           
  8444                           ;clock_source.c: 279:                     writecmd_4line(0x88);
  8445  0A6E  3088               	movlw	136
  8446  0A6F  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8447                           
  8448                           ;clock_source.c: 280:                     write_str("                ");
  8449  0A74  3000               	movlw	low (STR_22| (0+32768))
  8450  0A75  00F3               	movwf	write_str@array
  8451  0A76  3090               	movlw	high (STR_22| (0+32768))
  8452  0A77  00F4               	movwf	write_str@array+1
  8453  0A78  160A  118A  215E  120A  158A  	fcall	_write_str
  8454                           
  8455                           ;clock_source.c: 281:                     writecmd_4line(0x88);
  8456  0A7D  3088               	movlw	136
  8457  0A7E  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8458                           
  8459                           ;clock_source.c: 282:                     write_str("Minute");
  8460  0A83  3085               	movlw	low (STR_23| (0+32768))
  8461  0A84  00F3               	movwf	write_str@array
  8462  0A85  3090               	movlw	high (STR_23| (0+32768))
  8463  0A86  00F4               	movwf	write_str@array+1
  8464  0A87  160A  118A  215E  120A  158A  	fcall	_write_str
  8465                           
  8466                           ;clock_source.c: 283:                     T('m','0',i);
  8467  0A8C  306D               	movlw	109
  8468  0A8D                     L10:	
  8469  0A8D  00C4               	movwf	T@T
  8470  0A8E  3000               	movlw	0
  8471  0A8F  00C5               	movwf	T@T+1
  8472  0A90  3030               	movlw	48
  8473  0A91  00C6               	movwf	T@C
  8474  0A92  3000               	movlw	0
  8475  0A93  00C7               	movwf	T@C+1
  8476  0A94  0851               	movf	clock_setting@i+1,w
  8477  0A95  00C9               	movwf	T@i+1
  8478  0A96  0850               	movf	clock_setting@i,w
  8479  0A97  00C8               	movwf	T@i
  8480  0A98  120A  158A  20A3  120A  158A  	fcall	_T
  8481                           
  8482                           ;clock_source.c: 284:                     delay_main();
  8483  0A9D  160A  158A  256F  120A  158A  	fcall	_delay_main
  8484  0AA2  2A32               	goto	l5000
  8485  0AA3                     l5044:	
  8486  0AA3  3002               	movlw	2
  8487  0AA4  0650               	xorwf	clock_setting@i,w
  8488  0AA5  0451               	iorwf	clock_setting@i+1,w
  8489  0AA6  1D03               	btfss	3,2
  8490  0AA7  2A32               	goto	l5000
  8491                           
  8492                           ;clock_source.c: 288:                 writecmd_4line(0x88);
  8493  0AA8  3088               	movlw	136
  8494  0AA9  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8495                           
  8496                           ;clock_source.c: 289:                 write_str("                ");
  8497  0AAE  3000               	movlw	low (STR_22| (0+32768))
  8498  0AAF  00F3               	movwf	write_str@array
  8499  0AB0  3090               	movlw	high (STR_22| (0+32768))
  8500  0AB1  00F4               	movwf	write_str@array+1
  8501  0AB2  160A  118A  215E  120A  158A  	fcall	_write_str
  8502                           
  8503                           ;clock_source.c: 290:                 writecmd_4line(0x88);
  8504  0AB7  3088               	movlw	136
  8505  0AB8  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8506                           
  8507                           ;clock_source.c: 291:                 write_str("Hour");
  8508  0ABD  30DA               	movlw	low (STR_25| (0+32768))
  8509  0ABE  00F3               	movwf	write_str@array
  8510  0ABF  3090               	movlw	high (STR_25| (0+32768))
  8511  0AC0  00F4               	movwf	write_str@array+1
  8512  0AC1  160A  118A  215E  120A  158A  	fcall	_write_str
  8513                           
  8514                           ;clock_source.c: 292:                 T('h','0',i);
  8515  0AC6  3068               	movlw	104
  8516  0AC7  2A8D               	goto	L10
  8517  0AC8                     l5054:	
  8518  0AC8  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8519  0ACD  3004               	movlw	4
  8520  0ACE  0642               	xorwf	_FirstRC,w
  8521  0ACF  1D03               	btfss	3,2
  8522  0AD0  2B07               	goto	l5086
  8523  0AD1  0343               	decf	_SecondRC,w
  8524  0AD2  1D03               	btfss	3,2
  8525  0AD3  2B07               	goto	l5086
  8526                           
  8527                           ;clock_source.c: 298:             button_reset();
  8528  0AD4  160A  158A  24EE  120A  158A  	fcall	_button_reset
  8529                           
  8530                           ;clock_source.c: 300:             if (i != 0){
  8531  0AD9  0850               	movf	clock_setting@i,w
  8532  0ADA  0451               	iorwf	clock_setting@i+1,w
  8533  0ADB  1903               	btfsc	3,2
  8534  0ADC  2AE3               	goto	l5076
  8535                           
  8536                           ;clock_source.c: 301:                 i--;
  8537  0ADD  30FF               	movlw	255
  8538  0ADE  07D0               	addwf	clock_setting@i,f
  8539  0ADF  1803               	skipnc
  8540  0AE0  0AD1               	incf	clock_setting@i+1,f
  8541  0AE1  30FF               	movlw	255
  8542  0AE2  2A69               	goto	L11
  8543  0AE3                     l5076:	
  8544                           ;clock_source.c: 307:                     T('m','0',i);
  8545                           
  8546                           ;clock_source.c: 306:                     write_str("Minute");
  8547                           
  8548                           ;clock_source.c: 305:                     writecmd_4line(0x88);
  8549                           
  8550                           ;clock_source.c: 304:                     write_str("                ");
  8551                           
  8552                           ;clock_source.c: 303:                     writecmd_4line(0x88);
  8553                           
  8554                           ;clock_source.c: 302:                 if (i == 1){
  8555                           
  8556  0AE3  0850               	movf	clock_setting@i,w
  8557  0AE4  0451               	iorwf	clock_setting@i+1,w
  8558  0AE5  1D03               	btfss	3,2
  8559  0AE6  2A32               	goto	l5000
  8560                           
  8561                           ;clock_source.c: 312:                 writecmd_4line(0x88);
  8562  0AE7  3088               	movlw	136
  8563  0AE8  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8564                           
  8565                           ;clock_source.c: 313:                 write_str("                ");
  8566  0AED  3000               	movlw	low (STR_22| (0+32768))
  8567  0AEE  00F3               	movwf	write_str@array
  8568  0AEF  3090               	movlw	high (STR_22| (0+32768))
  8569  0AF0  00F4               	movwf	write_str@array+1
  8570  0AF1  160A  118A  215E  120A  158A  	fcall	_write_str
  8571                           
  8572                           ;clock_source.c: 314:                 writecmd_4line(0x88);
  8573  0AF6  3088               	movlw	136
  8574  0AF7  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  8575                           
  8576                           ;clock_source.c: 315:                 write_str("Seconds");
  8577  0AFC  3076               	movlw	low (STR_29| (0+32768))
  8578  0AFD  00F3               	movwf	write_str@array
  8579  0AFE  3090               	movlw	high (STR_29| (0+32768))
  8580  0AFF  00F4               	movwf	write_str@array+1
  8581  0B00  160A  118A  215E  120A  158A  	fcall	_write_str
  8582                           
  8583                           ;clock_source.c: 316:                 T('s','0',i);
  8584  0B05  3073               	movlw	115
  8585  0B06  2A8D               	goto	L10
  8586  0B07                     l5086:	
  8587                           ;clock_source.c: 319:         }
  8588                           
  8589  0B07  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8590  0B0C  3003               	movlw	3
  8591  0B0D  0642               	xorwf	_FirstRC,w
  8592  0B0E  1D03               	btfss	3,2
  8593  0B0F  2B5C               	goto	l5106
  8594  0B10  3002               	movlw	2
  8595  0B11  0643               	xorwf	_SecondRC,w
  8596  0B12  1D03               	btfss	3,2
  8597  0B13  2B5C               	goto	l5106
  8598                           
  8599                           ;clock_source.c: 323:             button_reset();
  8600  0B14  160A  158A  24EE  120A  158A  	fcall	_button_reset
  8601                           
  8602                           ;clock_source.c: 326:             if (i == 0){
  8603  0B19  0850               	movf	clock_setting@i,w
  8604  0B1A  0451               	iorwf	clock_setting@i+1,w
  8605  0B1B  1D03               	btfss	3,2
  8606  0B1C  2B2F               	goto	l5098
  8607                           
  8608                           ;clock_source.c: 327:                 T('s','d',i);
  8609  0B1D  3073               	movlw	115
  8610  0B1E  00C4               	movwf	T@T
  8611  0B1F  3000               	movlw	0
  8612  0B20  00C5               	movwf	T@T+1
  8613  0B21  3064               	movlw	100
  8614  0B22  00C6               	movwf	T@C
  8615  0B23  3000               	movlw	0
  8616  0B24  00C7               	movwf	T@C+1
  8617  0B25  0851               	movf	clock_setting@i+1,w
  8618  0B26  00C9               	movwf	T@i+1
  8619  0B27  0850               	movf	clock_setting@i,w
  8620  0B28  00C8               	movwf	T@i
  8621  0B29  120A  158A  20A3  120A  158A  	fcall	_T
  8622                           
  8623                           ;clock_source.c: 328:             }
  8624  0B2E  2A32               	goto	l5000
  8625  0B2F                     l5098:	
  8626  0B2F  0350               	decf	clock_setting@i,w
  8627  0B30  0451               	iorwf	clock_setting@i+1,w
  8628  0B31  1D03               	btfss	3,2
  8629  0B32  2B45               	goto	l5102
  8630                           
  8631                           ;clock_source.c: 332:                 T('m','d',i);
  8632  0B33  306D               	movlw	109
  8633  0B34  00C4               	movwf	T@T
  8634  0B35  3000               	movlw	0
  8635  0B36  00C5               	movwf	T@T+1
  8636  0B37  3064               	movlw	100
  8637  0B38  00C6               	movwf	T@C
  8638  0B39  3000               	movlw	0
  8639  0B3A  00C7               	movwf	T@C+1
  8640  0B3B  0851               	movf	clock_setting@i+1,w
  8641  0B3C  00C9               	movwf	T@i+1
  8642  0B3D  0850               	movf	clock_setting@i,w
  8643  0B3E  00C8               	movwf	T@i
  8644  0B3F  120A  158A  20A3  120A  158A  	fcall	_T
  8645                           
  8646                           ;clock_source.c: 333:             }
  8647  0B44  2A32               	goto	l5000
  8648  0B45                     l5102:	
  8649  0B45  3002               	movlw	2
  8650  0B46  0650               	xorwf	clock_setting@i,w
  8651  0B47  0451               	iorwf	clock_setting@i+1,w
  8652  0B48  1D03               	btfss	3,2
  8653  0B49  2A32               	goto	l5000
  8654                           
  8655                           ;clock_source.c: 337:                 T('h','d',i);
  8656  0B4A  3068               	movlw	104
  8657  0B4B  00C4               	movwf	T@T
  8658  0B4C  3000               	movlw	0
  8659  0B4D  00C5               	movwf	T@T+1
  8660  0B4E  3064               	movlw	100
  8661  0B4F  00C6               	movwf	T@C
  8662  0B50  3000               	movlw	0
  8663  0B51  00C7               	movwf	T@C+1
  8664  0B52  0851               	movf	clock_setting@i+1,w
  8665  0B53  00C9               	movwf	T@i+1
  8666  0B54  0850               	movf	clock_setting@i,w
  8667  0B55  00C8               	movwf	T@i
  8668  0B56  120A  158A  20A3  120A  158A  	fcall	_T
  8669  0B5B  2A32               	goto	l5000
  8670  0B5C                     l5106:	
  8671  0B5C  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8672  0B61  3004               	movlw	4
  8673  0B62  0642               	xorwf	_FirstRC,w
  8674  0B63  1D03               	btfss	3,2
  8675  0B64  2A32               	goto	l5000
  8676  0B65  3002               	movlw	2
  8677  0B66  0643               	xorwf	_SecondRC,w
  8678  0B67  1D03               	btfss	3,2
  8679  0B68  2A32               	goto	l5000
  8680                           
  8681                           ;clock_source.c: 344:             button_reset();
  8682  0B69  160A  158A  24EE  120A  158A  	fcall	_button_reset
  8683                           
  8684                           ;clock_source.c: 347:             if (i == 0){
  8685  0B6E  0850               	movf	clock_setting@i,w
  8686  0B6F  0451               	iorwf	clock_setting@i+1,w
  8687  0B70  1D03               	btfss	3,2
  8688  0B71  2B84               	goto	l5118
  8689                           
  8690                           ;clock_source.c: 348:                 T('s','i',i);
  8691  0B72  3073               	movlw	115
  8692  0B73  00C4               	movwf	T@T
  8693  0B74  3000               	movlw	0
  8694  0B75  00C5               	movwf	T@T+1
  8695  0B76  3069               	movlw	105
  8696  0B77  00C6               	movwf	T@C
  8697  0B78  3000               	movlw	0
  8698  0B79  00C7               	movwf	T@C+1
  8699  0B7A  0851               	movf	clock_setting@i+1,w
  8700  0B7B  00C9               	movwf	T@i+1
  8701  0B7C  0850               	movf	clock_setting@i,w
  8702  0B7D  00C8               	movwf	T@i
  8703  0B7E  120A  158A  20A3  120A  158A  	fcall	_T
  8704                           
  8705                           ;clock_source.c: 349:             }
  8706  0B83  2A32               	goto	l5000
  8707  0B84                     l5118:	
  8708  0B84  0350               	decf	clock_setting@i,w
  8709  0B85  0451               	iorwf	clock_setting@i+1,w
  8710  0B86  1D03               	btfss	3,2
  8711  0B87  2B9A               	goto	l5122
  8712                           
  8713                           ;clock_source.c: 353:                 T('m','i',i);
  8714  0B88  306D               	movlw	109
  8715  0B89  00C4               	movwf	T@T
  8716  0B8A  3000               	movlw	0
  8717  0B8B  00C5               	movwf	T@T+1
  8718  0B8C  3069               	movlw	105
  8719  0B8D  00C6               	movwf	T@C
  8720  0B8E  3000               	movlw	0
  8721  0B8F  00C7               	movwf	T@C+1
  8722  0B90  0851               	movf	clock_setting@i+1,w
  8723  0B91  00C9               	movwf	T@i+1
  8724  0B92  0850               	movf	clock_setting@i,w
  8725  0B93  00C8               	movwf	T@i
  8726  0B94  120A  158A  20A3  120A  158A  	fcall	_T
  8727                           
  8728                           ;clock_source.c: 354:             }
  8729  0B99  2A32               	goto	l5000
  8730  0B9A                     l5122:	
  8731  0B9A  3002               	movlw	2
  8732  0B9B  0650               	xorwf	clock_setting@i,w
  8733  0B9C  0451               	iorwf	clock_setting@i+1,w
  8734  0B9D  1D03               	btfss	3,2
  8735  0B9E  2A32               	goto	l5000
  8736                           
  8737                           ;clock_source.c: 358:                 T('h','i',i);
  8738  0B9F  3068               	movlw	104
  8739  0BA0  00C4               	movwf	T@T
  8740  0BA1  3000               	movlw	0
  8741  0BA2  00C5               	movwf	T@T+1
  8742  0BA3  3069               	movlw	105
  8743  0BA4  00C6               	movwf	T@C
  8744  0BA5  3000               	movlw	0
  8745  0BA6  00C7               	movwf	T@C+1
  8746  0BA7  0851               	movf	clock_setting@i+1,w
  8747  0BA8  00C9               	movwf	T@i+1
  8748  0BA9  0850               	movf	clock_setting@i,w
  8749  0BAA  00C8               	movwf	T@i
  8750  0BAB  120A  158A  20A3  120A  158A  	fcall	_T
  8751  0BB0  2A32               	goto	l5000
  8752  0BB1                     __end_of_clock_setting:	
  8753                           
  8754                           	psect	text34
  8755  14D7                     __ptext34:	
  8756 ;; *************** function _start_time *****************
  8757 ;; Defined at:
  8758 ;;		line 224 in file "clock_source.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  i               2    0[BANK0 ] int 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : 300/0
  8769 ;;		On exit  : 300/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8772 ;;      Params:         0       0       0       0       0
  8773 ;;      Locals:         0       2       0       0       0
  8774 ;;      Temps:          2       0       0       0       0
  8775 ;;      Totals:         2       2       0       0       0
  8776 ;;Total ram usage:        4 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    3
  8779 ;; This function calls:
  8780 ;;		_write_str
  8781 ;;		_writechar
  8782 ;; This function is called by:
  8783 ;;		_clock_setting
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           
  8788                           ;psect for function _start_time
  8789  14D7                     _start_time:	
  8790                           
  8791                           ;clock_source.c: 225:     int i;;clock_source.c: 226:     i=table[2]&0xf0;
  8792                           
  8793                           ;incstack = 0
  8794                           ; Regs used in _start_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8795  14D7  085F               	movf	_table+2,w
  8796  14D8  39F0               	andlw	240
  8797  14D9  00FC               	movwf	??_start_time
  8798  14DA  01FD               	clrf	??_start_time+1
  8799  14DB  087C               	movf	??_start_time,w
  8800  14DC  00C4               	movwf	start_time@i
  8801  14DD  087D               	movf	??_start_time+1,w
  8802  14DE  00C5               	movwf	start_time@i+1
  8803                           
  8804                           ;clock_source.c: 227:     i=i>>4;
  8805  14DF  0E44               	swapf	start_time@i,w
  8806  14E0  390F               	andlw	15
  8807  14E1  00C4               	movwf	start_time@i
  8808  14E2  0E45               	swapf	start_time@i+1,w
  8809  14E3  39F0               	andlw	240
  8810  14E4  04C4               	iorwf	start_time@i,f
  8811  14E5  0E45               	swapf	start_time@i+1,w
  8812  14E6  390F               	andlw	15
  8813  14E7  00C5               	movwf	start_time@i+1
  8814  14E8  30F0               	movlw	240
  8815  14E9  1DC5               	btfss	start_time@i+1,3
  8816  14EA  3000               	movlw	0
  8817  14EB  04C5               	iorwf	start_time@i+1,f
  8818                           
  8819                           ;clock_source.c: 228:     writechar(i + '0');
  8820  14EC  0844               	movf	start_time@i,w
  8821  14ED  3E30               	addlw	48
  8822  14EE  160A  158A  25AF  160A  118A  	fcall	_writechar
  8823                           
  8824                           ;clock_source.c: 229:     i=i<<4;
  8825  14F3  0845               	movf	start_time@i+1,w
  8826  14F4  00FD               	movwf	??_start_time+1
  8827  14F5  0844               	movf	start_time@i,w
  8828  14F6  00FC               	movwf	??_start_time
  8829  14F7  0EFC               	swapf	??_start_time,f
  8830  14F8  0EFD               	swapf	??_start_time+1,f
  8831  14F9  30F0               	movlw	240
  8832  14FA  05FD               	andwf	??_start_time+1,f
  8833  14FB  087C               	movf	??_start_time,w
  8834  14FC  390F               	andlw	15
  8835  14FD  04FD               	iorwf	??_start_time+1,f
  8836  14FE  30F0               	movlw	240
  8837  14FF  05FC               	andwf	??_start_time,f
  8838  1500  087C               	movf	??_start_time,w
  8839  1501  00C4               	movwf	start_time@i
  8840  1502  087D               	movf	??_start_time+1,w
  8841  1503  00C5               	movwf	start_time@i+1
  8842                           
  8843                           ;clock_source.c: 230:     i = table[2]&0x0f;
  8844  1504  085F               	movf	_table+2,w
  8845  1505  390F               	andlw	15
  8846  1506  00FC               	movwf	??_start_time
  8847  1507  01FD               	clrf	??_start_time+1
  8848  1508  087C               	movf	??_start_time,w
  8849  1509  00C4               	movwf	start_time@i
  8850  150A  087D               	movf	??_start_time+1,w
  8851  150B  00C5               	movwf	start_time@i+1
  8852                           
  8853                           ;clock_source.c: 231:     writechar(i +'0');
  8854  150C  0844               	movf	start_time@i,w
  8855  150D  3E30               	addlw	48
  8856  150E  160A  158A  25AF  160A  118A  	fcall	_writechar
  8857                           
  8858                           ;clock_source.c: 232:     write_str(": ");
  8859  1513  3082               	movlw	low ((STR_17+4)| (0+32768))
  8860  1514  00F3               	movwf	write_str@array
  8861  1515  3090               	movlw	high ((STR_17+4)| (0+32768))
  8862  1516  00F4               	movwf	write_str@array+1
  8863  1517  160A  118A  215E  160A  118A  	fcall	_write_str
  8864                           
  8865                           ;clock_source.c: 235:     i=table[1]&0xf0;
  8866  151C  085E               	movf	_table+1,w
  8867  151D  39F0               	andlw	240
  8868  151E  00FC               	movwf	??_start_time
  8869  151F  01FD               	clrf	??_start_time+1
  8870  1520  087C               	movf	??_start_time,w
  8871  1521  00C4               	movwf	start_time@i
  8872  1522  087D               	movf	??_start_time+1,w
  8873  1523  00C5               	movwf	start_time@i+1
  8874                           
  8875                           ;clock_source.c: 236:     i=i>>4;
  8876  1524  0E44               	swapf	start_time@i,w
  8877  1525  390F               	andlw	15
  8878  1526  00C4               	movwf	start_time@i
  8879  1527  0E45               	swapf	start_time@i+1,w
  8880  1528  39F0               	andlw	240
  8881  1529  04C4               	iorwf	start_time@i,f
  8882  152A  0E45               	swapf	start_time@i+1,w
  8883  152B  390F               	andlw	15
  8884  152C  00C5               	movwf	start_time@i+1
  8885  152D  30F0               	movlw	240
  8886  152E  1DC5               	btfss	start_time@i+1,3
  8887  152F  3000               	movlw	0
  8888  1530  04C5               	iorwf	start_time@i+1,f
  8889                           
  8890                           ;clock_source.c: 237:     writechar(i + '0');
  8891  1531  0844               	movf	start_time@i,w
  8892  1532  3E30               	addlw	48
  8893  1533  160A  158A  25AF  160A  118A  	fcall	_writechar
  8894                           
  8895                           ;clock_source.c: 238:     i=i<<4;
  8896  1538  0845               	movf	start_time@i+1,w
  8897  1539  00FD               	movwf	??_start_time+1
  8898  153A  0844               	movf	start_time@i,w
  8899  153B  00FC               	movwf	??_start_time
  8900  153C  0EFC               	swapf	??_start_time,f
  8901  153D  0EFD               	swapf	??_start_time+1,f
  8902  153E  30F0               	movlw	240
  8903  153F  05FD               	andwf	??_start_time+1,f
  8904  1540  087C               	movf	??_start_time,w
  8905  1541  390F               	andlw	15
  8906  1542  04FD               	iorwf	??_start_time+1,f
  8907  1543  30F0               	movlw	240
  8908  1544  05FC               	andwf	??_start_time,f
  8909  1545  087C               	movf	??_start_time,w
  8910  1546  00C4               	movwf	start_time@i
  8911  1547  087D               	movf	??_start_time+1,w
  8912  1548  00C5               	movwf	start_time@i+1
  8913                           
  8914                           ;clock_source.c: 239:     i = table[1]&0x0f;
  8915  1549  085E               	movf	_table+1,w
  8916  154A  390F               	andlw	15
  8917  154B  00FC               	movwf	??_start_time
  8918  154C  01FD               	clrf	??_start_time+1
  8919  154D  087C               	movf	??_start_time,w
  8920  154E  00C4               	movwf	start_time@i
  8921  154F  087D               	movf	??_start_time+1,w
  8922  1550  00C5               	movwf	start_time@i+1
  8923                           
  8924                           ;clock_source.c: 240:     writechar(i +'0');
  8925  1551  0844               	movf	start_time@i,w
  8926  1552  3E30               	addlw	48
  8927  1553  160A  158A  25AF  160A  118A  	fcall	_writechar
  8928                           
  8929                           ;clock_source.c: 241:     write_str(": ");
  8930  1558  3082               	movlw	low ((STR_17+4)| (0+32768))
  8931  1559  00F3               	movwf	write_str@array
  8932  155A  3090               	movlw	high ((STR_17+4)| (0+32768))
  8933  155B  00F4               	movwf	write_str@array+1
  8934  155C  160A  118A  215E  160A  118A  	fcall	_write_str
  8935                           
  8936                           ;clock_source.c: 244:     i=table[0]&0xf0;
  8937  1561  085D               	movf	_table,w
  8938  1562  39F0               	andlw	240
  8939  1563  00FC               	movwf	??_start_time
  8940  1564  01FD               	clrf	??_start_time+1
  8941  1565  087C               	movf	??_start_time,w
  8942  1566  00C4               	movwf	start_time@i
  8943  1567  087D               	movf	??_start_time+1,w
  8944  1568  00C5               	movwf	start_time@i+1
  8945                           
  8946                           ;clock_source.c: 245:     i=i>>4;
  8947  1569  0E44               	swapf	start_time@i,w
  8948  156A  390F               	andlw	15
  8949  156B  00C4               	movwf	start_time@i
  8950  156C  0E45               	swapf	start_time@i+1,w
  8951  156D  39F0               	andlw	240
  8952  156E  04C4               	iorwf	start_time@i,f
  8953  156F  0E45               	swapf	start_time@i+1,w
  8954  1570  390F               	andlw	15
  8955  1571  00C5               	movwf	start_time@i+1
  8956  1572  30F0               	movlw	240
  8957  1573  1DC5               	btfss	start_time@i+1,3
  8958  1574  3000               	movlw	0
  8959  1575  04C5               	iorwf	start_time@i+1,f
  8960                           
  8961                           ;clock_source.c: 246:     writechar(i + '0');
  8962  1576  0844               	movf	start_time@i,w
  8963  1577  3E30               	addlw	48
  8964  1578  160A  158A  25AF  160A  118A  	fcall	_writechar
  8965                           
  8966                           ;clock_source.c: 247:     i=i<<4;
  8967  157D  0845               	movf	start_time@i+1,w
  8968  157E  00FD               	movwf	??_start_time+1
  8969  157F  0844               	movf	start_time@i,w
  8970  1580  00FC               	movwf	??_start_time
  8971  1581  0EFC               	swapf	??_start_time,f
  8972  1582  0EFD               	swapf	??_start_time+1,f
  8973  1583  30F0               	movlw	240
  8974  1584  05FD               	andwf	??_start_time+1,f
  8975  1585  087C               	movf	??_start_time,w
  8976  1586  390F               	andlw	15
  8977  1587  04FD               	iorwf	??_start_time+1,f
  8978  1588  30F0               	movlw	240
  8979  1589  05FC               	andwf	??_start_time,f
  8980  158A  087C               	movf	??_start_time,w
  8981  158B  00C4               	movwf	start_time@i
  8982  158C  087D               	movf	??_start_time+1,w
  8983  158D  00C5               	movwf	start_time@i+1
  8984                           
  8985                           ;clock_source.c: 248:     i = table[0]&0x0f;
  8986  158E  085D               	movf	_table,w
  8987  158F  390F               	andlw	15
  8988  1590  00FC               	movwf	??_start_time
  8989  1591  01FD               	clrf	??_start_time+1
  8990  1592  087C               	movf	??_start_time,w
  8991  1593  00C4               	movwf	start_time@i
  8992  1594  087D               	movf	??_start_time+1,w
  8993  1595  00C5               	movwf	start_time@i+1
  8994                           
  8995                           ;clock_source.c: 249:     writechar(i +'0');
  8996  1596  0844               	movf	start_time@i,w
  8997  1597  3E30               	addlw	48
  8998  1598  160A  158A  25AF   	fcall	_writechar
  8999  159B  0008               	return
  9000  159C                     __end_of_start_time:	
  9001                           
  9002                           	psect	text35
  9003  115E                     __ptext35:	
  9004 ;; *************** function _write_str *****************
  9005 ;; Defined at:
  9006 ;;		line 4 in file "lcd.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  array           2    3[COMMON] PTR unsigned char 
  9009 ;;		 -> STR_81(6), STR_80(6), STR_79(6), STR_78(6), 
  9010 ;;		 -> STR_77(6), STR_76(6), STR_75(5), STR_74(6), 
  9011 ;;		 -> STR_73(5), STR_72(2), STR_71(2), STR_70(2), 
  9012 ;;		 -> STR_69(2), STR_68(2), STR_67(5), STR_66(11), 
  9013 ;;		 -> STR_65(2), STR_64(5), STR_63(11), STR_62(2), 
  9014 ;;		 -> STR_61(5), STR_60(2), STR_59(5), STR_58(15), 
  9015 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  9016 ;;		 -> STR_53(2), STR_52(5), STR_51(11), STR_50(2), 
  9017 ;;		 -> STR_49(5), STR_48(11), STR_47(2), STR_46(5), 
  9018 ;;		 -> STR_45(2), STR_44(5), STR_43(13), STR_42(6), 
  9019 ;;		 -> STR_41(4), STR_40(15), STR_39(2), STR_38(2), 
  9020 ;;		 -> STR_37(6), STR_36(5), STR_35(5), STR_34(6), 
  9021 ;;		 -> STR_33(4), STR_32(17), STR_31(15), STR_30(14), 
  9022 ;;		 -> STR_29(8), STR_28(17), STR_27(7), STR_26(17), 
  9023 ;;		 -> STR_25(5), STR_24(17), STR_23(7), STR_22(17), 
  9024 ;;		 -> STR_21(15), STR_20(14), STR_19(3), STR_18(3), 
  9025 ;;		 -> STR_17(7), STR_16(3), STR_15(3), STR_14(2), 
  9026 ;;		 -> STR_13(2), STR_12(6), STR_11(6), STR_10(2), 
  9027 ;;		 -> STR_9(2), STR_8(6), STR_7(4), STR_6(4), 
  9028 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  9029 ;;		 -> STR_1(4), 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  i               2   10[COMMON] int 
  9032 ;;  p               2    8[COMMON] PTR unsigned char 
  9033 ;;		 -> STR_81(6), STR_80(6), STR_79(6), STR_78(6), 
  9034 ;;		 -> STR_77(6), STR_76(6), STR_75(5), STR_74(6), 
  9035 ;;		 -> STR_73(5), STR_72(2), STR_71(2), STR_70(2), 
  9036 ;;		 -> STR_69(2), STR_68(2), STR_67(5), STR_66(11), 
  9037 ;;		 -> STR_65(2), STR_64(5), STR_63(11), STR_62(2), 
  9038 ;;		 -> STR_61(5), STR_60(2), STR_59(5), STR_58(15), 
  9039 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  9040 ;;		 -> STR_53(2), STR_52(5), STR_51(11), STR_50(2), 
  9041 ;;		 -> STR_49(5), STR_48(11), STR_47(2), STR_46(5), 
  9042 ;;		 -> STR_45(2), STR_44(5), STR_43(13), STR_42(6), 
  9043 ;;		 -> STR_41(4), STR_40(15), STR_39(2), STR_38(2), 
  9044 ;;		 -> STR_37(6), STR_36(5), STR_35(5), STR_34(6), 
  9045 ;;		 -> STR_33(4), STR_32(17), STR_31(15), STR_30(14), 
  9046 ;;		 -> STR_29(8), STR_28(17), STR_27(7), STR_26(17), 
  9047 ;;		 -> STR_25(5), STR_24(17), STR_23(7), STR_22(17), 
  9048 ;;		 -> STR_21(15), STR_20(14), STR_19(3), STR_18(3), 
  9049 ;;		 -> STR_17(7), STR_16(3), STR_15(3), STR_14(2), 
  9050 ;;		 -> STR_13(2), STR_12(6), STR_11(6), STR_10(2), 
  9051 ;;		 -> STR_9(2), STR_8(6), STR_7(4), STR_6(4), 
  9052 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  9053 ;;		 -> STR_1(4), 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 300/0
  9060 ;;		On exit  : 300/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9063 ;;      Params:         2       0       0       0       0
  9064 ;;      Locals:         4       0       0       0       0
  9065 ;;      Temps:          3       0       0       0       0
  9066 ;;      Totals:         9       0       0       0       0
  9067 ;;Total ram usage:        9 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    2
  9070 ;; This function calls:
  9071 ;;		_writechar
  9072 ;; This function is called by:
  9073 ;;		_week
  9074 ;;		_display_clock
  9075 ;;		_start_date
  9076 ;;		_start_time
  9077 ;;		_clock_setting
  9078 ;;		_date_setting
  9079 ;;		_D
  9080 ;;		_display_temp
  9081 ;;		_temp_setting
  9082 ;;		_set_day
  9083 ;;		_set_night
  9084 ;;		_cool
  9085 ;;		_heat
  9086 ;;		_OK
  9087 ;;		_main
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function _write_str
  9093  115E                     _write_str:	
  9094                           
  9095                           ;lcd.c: 4: void write_str(unsigned char *array);lcd.c: 5: {;lcd.c: 6:     char * p; int 
      +                          i = 0;
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _write_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9099  115E  01FA               	clrf	write_str@i
  9100  115F  01FB               	clrf	write_str@i+1
  9101                           
  9102                           ;lcd.c: 7:     for (p = array; *p != '\0'; p++){
  9103  1160  0873               	movf	write_str@array,w
  9104  1161  00F8               	movwf	write_str@p
  9105  1162  0874               	movf	write_str@array+1,w
  9106  1163  00F9               	movwf	write_str@p+1
  9107  1164                     l3694:	
  9108  1164  0879               	movf	write_str@p+1,w
  9109  1165  00FF               	movwf	127
  9110  1166  0878               	movf	write_str@p,w
  9111  1167  0084               	movwf	4
  9112  1168  160A  158A  2000  160A  118A  	fcall	stringtab
  9113  116D  3A00               	xorlw	0
  9114  116E  1903               	btfsc	3,2
  9115  116F  0008               	return
  9116                           
  9117                           ;lcd.c: 8:         writechar(array[i]);
  9118  1170  087A               	movf	write_str@i,w
  9119  1171  0773               	addwf	write_str@array,w
  9120  1172  00F6               	movwf	??_write_str+1
  9121  1173  0874               	movf	write_str@array+1,w
  9122  1174  00F5               	movwf	??_write_str
  9123  1175  1803               	skipnc
  9124  1176  0AF5               	incf	??_write_str,f
  9125  1177  1BFA               	btfsc	write_str@i,7
  9126  1178  03F5               	decf	??_write_str,f
  9127  1179  0875               	movf	??_write_str,w
  9128  117A  00F7               	movwf	??_write_str+2
  9129  117B  0877               	movf	??_write_str+2,w
  9130  117C  1283               	bcf	3,5	;RP0=0, select bank0
  9131  117D  1303               	bcf	3,6	;RP1=0, select bank0
  9132  117E  00FF               	movwf	127
  9133  117F  0876               	movf	??_write_str+1,w
  9134  1180  0084               	movwf	4
  9135  1181  160A  158A  2000  160A  118A  	fcall	stringtab
  9136  1186  160A  158A  25AF  160A  118A  	fcall	_writechar
  9137                           
  9138                           ;lcd.c: 9:         i++;
  9139  118B  3001               	movlw	1
  9140  118C  07FA               	addwf	write_str@i,f
  9141  118D  1803               	skipnc
  9142  118E  0AFB               	incf	write_str@i+1,f
  9143  118F  3000               	movlw	0
  9144  1190  07FB               	addwf	write_str@i+1,f
  9145                           
  9146                           ;lcd.c: 10:     }
  9147  1191  3001               	movlw	1
  9148  1192  07F8               	addwf	write_str@p,f
  9149  1193  1803               	skipnc
  9150  1194  0AF9               	incf	write_str@p+1,f
  9151  1195  3000               	movlw	0
  9152  1196  07F9               	addwf	write_str@p+1,f
  9153  1197  2964               	goto	l3694
  9154  1198                     __end_of_write_str:	
  9155                           
  9156                           	psect	text36
  9157  1CEE                     __ptext36:	
  9158 ;; *************** function _button_reset *****************
  9159 ;; Defined at:
  9160 ;;		line 60 in file "button_press.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		status,2
  9169 ;; Tracked objects:
  9170 ;;		On entry : 300/0
  9171 ;;		On exit  : 300/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9174 ;;      Params:         0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0
  9177 ;;      Totals:         0       0       0       0       0
  9178 ;;Total ram usage:        0 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_clock_setting
  9184 ;;		_date_setting
  9185 ;;		_temp_setting
  9186 ;;		_set_day
  9187 ;;		_set_night
  9188 ;;		_main
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _button_reset
  9194  1CEE                     _button_reset:	
  9195                           
  9196                           ;button_press.c: 61:     SecondRC = 0;
  9197                           
  9198                           ;incstack = 0
  9199                           ; Regs used in _button_reset: [status,2]
  9200  1CEE  01C3               	clrf	_SecondRC
  9201                           
  9202                           ;button_press.c: 62:     FirstRC = 0;
  9203  1CEF  01C2               	clrf	_FirstRC
  9204                           
  9205                           ;button_press.c: 63:     OutputRC = 0;
  9206  1CF0  01C1               	clrf	_OutputRC
  9207  1CF1  0008               	return
  9208  1CF2                     __end_of_button_reset:	
  9209                           
  9210                           	psect	text37
  9211  08A3                     __ptext37:	
  9212 ;; *************** function _T *****************
  9213 ;; Defined at:
  9214 ;;		line 691 in file "clock_source.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  T               2    0[BANK0 ] PTR unsigned char 
  9217 ;;		 -> RAM(512), RAM(512), RAM(512), 
  9218 ;;  C               2    2[BANK0 ] PTR unsigned char 
  9219 ;;		 -> RAM(512), RAM(512), RAM(512), 
  9220 ;;  i               2    4[BANK0 ] unsigned int 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  j               2   10[BANK0 ] int 
  9223 ;;  j               2    8[BANK0 ] int 
  9224 ;;  j               2    6[BANK0 ] int 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      void 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 300/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9234 ;;      Params:         0       6       0       0       0
  9235 ;;      Locals:         0       6       0       0       0
  9236 ;;      Temps:          1       0       0       0       0
  9237 ;;      Totals:         1      12       0       0       0
  9238 ;;Total ram usage:       13 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    3
  9241 ;; This function calls:
  9242 ;;		_delay_main
  9243 ;;		_display_val
  9244 ;; This function is called by:
  9245 ;;		_clock_setting
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           
  9250                           ;psect for function _T
  9251  08A3                     _T:	
  9252                           
  9253                           ;clock_source.c: 694:     if ( C == 'd' && table[i] != 0x00){
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in _T: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9257  08A3  3064               	movlw	100
  9258  08A4  0646               	xorwf	T@C,w
  9259  08A5  0447               	iorwf	T@C+1,w
  9260  08A6  1D03               	btfss	3,2
  9261  08A7  2909               	goto	l4086
  9262  08A8  0848               	movf	T@i,w
  9263  08A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  9264  08AA  0084               	movwf	4
  9265  08AB  1383               	bcf	3,7	;select IRP bank0
  9266  08AC  0800               	movf	0,w
  9267  08AD  1903               	btfsc	3,2
  9268  08AE  2909               	goto	l4086
  9269                           
  9270                           ;clock_source.c: 695:         if (table[i] == 0x10 || table[i] == 0x20 || table[i] == 0x
      +                          30
  9271  08AF  0848               	movf	T@i,w
  9272  08B0  3E5D               	addlw	(low (_table| 0))& (0+255)
  9273  08B1  0084               	movwf	4
  9274  08B2  3010               	movlw	16
  9275  08B3  0600               	xorwf	0,w
  9276  08B4  1903               	btfsc	3,2
  9277  08B5  28D9               	goto	l4064
  9278  08B6  0848               	movf	T@i,w
  9279  08B7  3E5D               	addlw	(low (_table| 0))& (0+255)
  9280  08B8  0084               	movwf	4
  9281  08B9  3020               	movlw	32
  9282  08BA  0600               	xorwf	0,w
  9283  08BB  1903               	btfsc	3,2
  9284  08BC  28D9               	goto	l4064
  9285  08BD  0848               	movf	T@i,w
  9286  08BE  3E5D               	addlw	(low (_table| 0))& (0+255)
  9287  08BF  0084               	movwf	4
  9288  08C0  3030               	movlw	48
  9289  08C1  0600               	xorwf	0,w
  9290  08C2  1903               	btfsc	3,2
  9291  08C3  28D9               	goto	l4064
  9292  08C4  0848               	movf	T@i,w
  9293  08C5  3E5D               	addlw	(low (_table| 0))& (0+255)
  9294  08C6  0084               	movwf	4
  9295  08C7  3040               	movlw	64
  9296  08C8  0600               	xorwf	0,w
  9297  08C9  1903               	btfsc	3,2
  9298  08CA  28D9               	goto	l4064
  9299  08CB  0848               	movf	T@i,w
  9300  08CC  3E5D               	addlw	(low (_table| 0))& (0+255)
  9301  08CD  0084               	movwf	4
  9302  08CE  3050               	movlw	80
  9303  08CF  0600               	xorwf	0,w
  9304  08D0  1903               	btfsc	3,2
  9305  08D1  28D9               	goto	l4064
  9306  08D2  0848               	movf	T@i,w
  9307  08D3  3E5D               	addlw	(low (_table| 0))& (0+255)
  9308  08D4  0084               	movwf	4
  9309  08D5  3060               	movlw	96
  9310  08D6  0600               	xorwf	0,w
  9311  08D7  1D03               	btfss	3,2
  9312  08D8  2903               	goto	l4080
  9313  08D9                     l4064:	
  9314                           
  9315                           ;clock_source.c: 697:             || table[i] == 0x60){;clock_source.c: 698:            
      +                           for (int j=0; j<7; j++){
  9316  08D9  01CA               	clrf	T@j
  9317  08DA  01CB               	clrf	T@j+1
  9318  08DB                     l4070:	
  9319                           
  9320                           ;clock_source.c: 699:                 table[i]--;
  9321  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  9322  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  9323  08DD  0848               	movf	T@i,w
  9324  08DE  3E5D               	addlw	(low (_table| 0))& (0+255)
  9325  08DF  0084               	movwf	4
  9326  08E0  3001               	movlw	1
  9327  08E1  1383               	bcf	3,7	;select IRP bank0
  9328  08E2  0280               	subwf	0,f
  9329                           
  9330                           ;clock_source.c: 700:             }
  9331  08E3  3001               	movlw	1
  9332  08E4  07CA               	addwf	T@j,f
  9333  08E5  1803               	skipnc
  9334  08E6  0ACB               	incf	T@j+1,f
  9335  08E7  3000               	movlw	0
  9336  08E8  07CB               	addwf	T@j+1,f
  9337  08E9  084B               	movf	T@j+1,w
  9338  08EA  3A80               	xorlw	128
  9339  08EB  00FF               	movwf	127
  9340  08EC  3080               	movlw	128
  9341  08ED  027F               	subwf	127,w
  9342  08EE  1D03               	skipz
  9343  08EF  28F2               	goto	u3565
  9344  08F0  3007               	movlw	7
  9345  08F1  024A               	subwf	T@j,w
  9346  08F2                     u3565:	
  9347  08F2  1C03               	skipc
  9348  08F3  28DB               	goto	l4070
  9349  08F4                     l4076:	
  9350                           
  9351                           ;clock_source.c: 701:             display_val(i);
  9352  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  9353  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  9354  08F6  0849               	movf	T@i+1,w
  9355  08F7  00F4               	movwf	display_val@i+1
  9356  08F8  0848               	movf	T@i,w
  9357  08F9  00F3               	movwf	display_val@i
  9358  08FA  120A  158A  200E  120A  158A  	fcall	_display_val
  9359                           
  9360                           ;clock_source.c: 702:             delay_main();
  9361  08FF  160A  158A  256F   	fcall	_delay_main
  9362                           
  9363                           ;clock_source.c: 703:         }
  9364  0902  0008               	return
  9365  0903                     l4080:	
  9366                           
  9367                           ;clock_source.c: 705:             table[i]--;
  9368  0903  0848               	movf	T@i,w
  9369  0904  3E5D               	addlw	(low (_table| 0))& (0+255)
  9370  0905  0084               	movwf	4
  9371  0906  3001               	movlw	1
  9372  0907  0280               	subwf	0,f
  9373  0908  28F4               	goto	l4076
  9374  0909                     l4086:	
  9375  0909  3068               	movlw	104
  9376  090A  0644               	xorwf	T@T,w
  9377  090B  0445               	iorwf	T@T+1,w
  9378  090C  1D03               	btfss	3,2
  9379  090D  294F               	goto	l4118
  9380  090E  3069               	movlw	105
  9381  090F  0646               	xorwf	T@C,w
  9382  0910  0447               	iorwf	T@C+1,w
  9383  0911  1D03               	btfss	3,2
  9384  0912  294F               	goto	l4118
  9385  0913  0848               	movf	T@i,w
  9386  0914  3E5D               	addlw	(low (_table| 0))& (0+255)
  9387  0915  0084               	movwf	4
  9388  0916  3023               	movlw	35
  9389  0917  1383               	bcf	3,7	;select IRP bank0
  9390  0918  0600               	xorwf	0,w
  9391  0919  1903               	btfsc	3,2
  9392  091A  294F               	goto	l4118
  9393                           
  9394                           ;clock_source.c: 713:         if (table[i] == 0x09 || table[i] == 0x19){
  9395  091B  0848               	movf	T@i,w
  9396  091C  3E5D               	addlw	(low (_table| 0))& (0+255)
  9397  091D  0084               	movwf	4
  9398  091E  3009               	movlw	9
  9399  091F  0600               	xorwf	0,w
  9400  0920  1903               	btfsc	3,2
  9401  0921  2929               	goto	l4096
  9402  0922  0848               	movf	T@i,w
  9403  0923  3E5D               	addlw	(low (_table| 0))& (0+255)
  9404  0924  0084               	movwf	4
  9405  0925  3019               	movlw	25
  9406  0926  0600               	xorwf	0,w
  9407  0927  1D03               	btfss	3,2
  9408  0928  2947               	goto	l4112
  9409  0929                     l4096:	
  9410                           
  9411                           ;clock_source.c: 714:             for (int j=0; j<7; j++){
  9412  0929  01CC               	clrf	T@j_261
  9413  092A  01CD               	clrf	T@j_261+1
  9414  092B                     l4102:	
  9415                           
  9416                           ;clock_source.c: 715:                 table[i]++;
  9417  092B  3001               	movlw	1
  9418  092C  00F9               	movwf	??_T
  9419  092D  1283               	bcf	3,5	;RP0=0, select bank0
  9420  092E  1303               	bcf	3,6	;RP1=0, select bank0
  9421  092F  0848               	movf	T@i,w
  9422  0930  3E5D               	addlw	(low (_table| 0))& (0+255)
  9423  0931  0084               	movwf	4
  9424  0932  0879               	movf	??_T,w
  9425  0933  1383               	bcf	3,7	;select IRP bank0
  9426  0934  0780               	addwf	0,f
  9427                           
  9428                           ;clock_source.c: 716:             }
  9429  0935  3001               	movlw	1
  9430  0936  07CC               	addwf	T@j_261,f
  9431  0937  1803               	skipnc
  9432  0938  0ACD               	incf	T@j_261+1,f
  9433  0939  3000               	movlw	0
  9434  093A  07CD               	addwf	T@j_261+1,f
  9435  093B  084D               	movf	T@j_261+1,w
  9436  093C  3A80               	xorlw	128
  9437  093D  00FF               	movwf	127
  9438  093E  3080               	movlw	128
  9439  093F  027F               	subwf	127,w
  9440  0940  1D03               	skipz
  9441  0941  2944               	goto	u3625
  9442  0942  3007               	movlw	7
  9443  0943  024C               	subwf	T@j_261,w
  9444  0944                     u3625:	
  9445  0944  1803               	btfsc	3,0
  9446  0945  28F4               	goto	l4076
  9447  0946  292B               	goto	l4102
  9448  0947                     l4112:	
  9449                           
  9450                           ;clock_source.c: 721:             table[i]++;
  9451  0947  3001               	movlw	1
  9452  0948  00F9               	movwf	??_T
  9453  0949  0848               	movf	T@i,w
  9454  094A  3E5D               	addlw	(low (_table| 0))& (0+255)
  9455  094B  0084               	movwf	4
  9456  094C  0879               	movf	??_T,w
  9457  094D  0780               	addwf	0,f
  9458  094E  28F4               	goto	l4076
  9459  094F                     l4118:	
  9460                           ;clock_source.c: 725:     }
  9461                           
  9462                           ;clock_source.c: 724:         }
  9463                           
  9464  094F  3068               	movlw	104
  9465  0950  0644               	xorwf	T@T,w
  9466  0951  0445               	iorwf	T@T+1,w
  9467  0952  1D03               	btfss	3,2
  9468  0953  2966               	goto	l4130
  9469  0954  3069               	movlw	105
  9470  0955  0646               	xorwf	T@C,w
  9471  0956  0447               	iorwf	T@C+1,w
  9472  0957  1D03               	btfss	3,2
  9473  0958  2966               	goto	l4130
  9474  0959  0848               	movf	T@i,w
  9475  095A  3E5D               	addlw	(low (_table| 0))& (0+255)
  9476  095B  0084               	movwf	4
  9477  095C  3023               	movlw	35
  9478  095D  1383               	bcf	3,7	;select IRP bank0
  9479  095E  0600               	xorwf	0,w
  9480  095F  1D03               	btfss	3,2
  9481  0960  2966               	goto	l4130
  9482  0961                     l4124:	
  9483                           
  9484                           ;clock_source.c: 727:             table[i] = 0x00;
  9485  0961  0848               	movf	T@i,w
  9486  0962  3E5D               	addlw	(low (_table| 0))& (0+255)
  9487  0963  0084               	movwf	4
  9488  0964  0180               	clrf	0
  9489  0965  28F4               	goto	l4076
  9490  0966                     l4130:	
  9491  0966  3068               	movlw	104
  9492  0967  0644               	xorwf	T@T,w
  9493  0968  0445               	iorwf	T@T+1,w
  9494  0969  1903               	btfsc	3,2
  9495  096A  29C0               	goto	l4170
  9496  096B  3069               	movlw	105
  9497  096C  0646               	xorwf	T@C,w
  9498  096D  0447               	iorwf	T@C+1,w
  9499  096E  1D03               	btfss	3,2
  9500  096F  29C0               	goto	l4170
  9501  0970  0848               	movf	T@i,w
  9502  0971  3E5D               	addlw	(low (_table| 0))& (0+255)
  9503  0972  0084               	movwf	4
  9504  0973  3059               	movlw	89
  9505  0974  1383               	bcf	3,7	;select IRP bank0
  9506  0975  0600               	xorwf	0,w
  9507  0976  1903               	btfsc	3,2
  9508  0977  29C0               	goto	l4170
  9509                           
  9510                           ;clock_source.c: 735:         if (table[i] == 0x09 || table[i] == 0x19 || table[i] == 0x
      +                          29
  9511  0978  0848               	movf	T@i,w
  9512  0979  3E5D               	addlw	(low (_table| 0))& (0+255)
  9513  097A  0084               	movwf	4
  9514  097B  3009               	movlw	9
  9515  097C  0600               	xorwf	0,w
  9516  097D  1903               	btfsc	3,2
  9517  097E  29A2               	goto	l4148
  9518  097F  0848               	movf	T@i,w
  9519  0980  3E5D               	addlw	(low (_table| 0))& (0+255)
  9520  0981  0084               	movwf	4
  9521  0982  3019               	movlw	25
  9522  0983  0600               	xorwf	0,w
  9523  0984  1903               	btfsc	3,2
  9524  0985  29A2               	goto	l4148
  9525  0986  0848               	movf	T@i,w
  9526  0987  3E5D               	addlw	(low (_table| 0))& (0+255)
  9527  0988  0084               	movwf	4
  9528  0989  3029               	movlw	41
  9529  098A  0600               	xorwf	0,w
  9530  098B  1903               	btfsc	3,2
  9531  098C  29A2               	goto	l4148
  9532  098D  0848               	movf	T@i,w
  9533  098E  3E5D               	addlw	(low (_table| 0))& (0+255)
  9534  098F  0084               	movwf	4
  9535  0990  3039               	movlw	57
  9536  0991  0600               	xorwf	0,w
  9537  0992  1903               	btfsc	3,2
  9538  0993  29A2               	goto	l4148
  9539  0994  0848               	movf	T@i,w
  9540  0995  3E5D               	addlw	(low (_table| 0))& (0+255)
  9541  0996  0084               	movwf	4
  9542  0997  3049               	movlw	73
  9543  0998  0600               	xorwf	0,w
  9544  0999  1903               	btfsc	3,2
  9545  099A  29A2               	goto	l4148
  9546  099B  0848               	movf	T@i,w
  9547  099C  3E5D               	addlw	(low (_table| 0))& (0+255)
  9548  099D  0084               	movwf	4
  9549  099E  3059               	movlw	89
  9550  099F  0600               	xorwf	0,w
  9551  09A0  1D03               	btfss	3,2
  9552  09A1  2947               	goto	l4112
  9553  09A2                     l4148:	
  9554                           
  9555                           ;clock_source.c: 737:             || table[i] == 0x59){;clock_source.c: 738:            
      +                           for (int j=0; j<7; j++){
  9556  09A2  01CE               	clrf	T@j_262
  9557  09A3  01CF               	clrf	T@j_262+1
  9558  09A4                     l4154:	
  9559                           
  9560                           ;clock_source.c: 739:                 table[i]++;
  9561  09A4  3001               	movlw	1
  9562  09A5  00F9               	movwf	??_T
  9563  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  9564  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  9565  09A8  0848               	movf	T@i,w
  9566  09A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  9567  09AA  0084               	movwf	4
  9568  09AB  0879               	movf	??_T,w
  9569  09AC  1383               	bcf	3,7	;select IRP bank0
  9570  09AD  0780               	addwf	0,f
  9571                           
  9572                           ;clock_source.c: 740:             }
  9573  09AE  3001               	movlw	1
  9574  09AF  07CE               	addwf	T@j_262,f
  9575  09B0  1803               	skipnc
  9576  09B1  0ACF               	incf	T@j_262+1,f
  9577  09B2  3000               	movlw	0
  9578  09B3  07CF               	addwf	T@j_262+1,f
  9579  09B4  084F               	movf	T@j_262+1,w
  9580  09B5  3A80               	xorlw	128
  9581  09B6  00FF               	movwf	127
  9582  09B7  3080               	movlw	128
  9583  09B8  027F               	subwf	127,w
  9584  09B9  1D03               	skipz
  9585  09BA  29BD               	goto	u3755
  9586  09BB  3007               	movlw	7
  9587  09BC  024E               	subwf	T@j_262,w
  9588  09BD                     u3755:	
  9589  09BD  1803               	btfsc	3,0
  9590  09BE  28F4               	goto	l4076
  9591  09BF  29A4               	goto	l4154
  9592  09C0                     l4170:	
  9593  09C0  3069               	movlw	105
  9594  09C1  0646               	xorwf	T@C,w
  9595  09C2  0447               	iorwf	T@C+1,w
  9596  09C3  1D03               	btfss	3,2
  9597  09C4  29CD               	goto	l4180
  9598  09C5  0848               	movf	T@i,w
  9599  09C6  3E5D               	addlw	(low (_table| 0))& (0+255)
  9600  09C7  0084               	movwf	4
  9601  09C8  3059               	movlw	89
  9602  09C9  1383               	bcf	3,7	;select IRP bank0
  9603  09CA  0600               	xorwf	0,w
  9604  09CB  1903               	btfsc	3,2
  9605  09CC  2961               	goto	l4124
  9606  09CD                     l4180:	
  9607  09CD  3064               	movlw	100
  9608  09CE  0646               	xorwf	T@C,w
  9609  09CF  0447               	iorwf	T@C+1,w
  9610  09D0  1D03               	btfss	3,2
  9611  09D1  28F4               	goto	l4076
  9612                           
  9613                           ;clock_source.c: 756:         if (T == 'h' && table[i] == 0x00){
  9614  09D2  3068               	movlw	104
  9615  09D3  0644               	xorwf	T@T,w
  9616  09D4  0445               	iorwf	T@T+1,w
  9617  09D5  1D03               	btfss	3,2
  9618  09D6  29E0               	goto	l4192
  9619  09D7  0848               	movf	T@i,w
  9620  09D8  3E5D               	addlw	(low (_table| 0))& (0+255)
  9621  09D9  0084               	movwf	4
  9622  09DA  1383               	bcf	3,7	;select IRP bank0
  9623  09DB  0800               	movf	0,w
  9624  09DC  1D03               	btfss	3,2
  9625  09DD  29E0               	goto	l4192
  9626                           
  9627                           ;clock_source.c: 757:                 table[i] = 0x23;
  9628  09DE  3023               	movlw	35
  9629  09DF  29ED               	goto	L12
  9630  09E0                     l4192:	
  9631  09E0  306D               	movlw	109
  9632  09E1  0644               	xorwf	T@T,w
  9633  09E2  0445               	iorwf	T@T+1,w
  9634  09E3  1D03               	btfss	3,2
  9635  09E4  29F4               	goto	l4202
  9636  09E5  0848               	movf	T@i,w
  9637  09E6  3E5D               	addlw	(low (_table| 0))& (0+255)
  9638  09E7  0084               	movwf	4
  9639  09E8  1383               	bcf	3,7	;select IRP bank0
  9640  09E9  0800               	movf	0,w
  9641  09EA  1D03               	btfss	3,2
  9642  09EB  29F4               	goto	l4202
  9643  09EC                     l4196:	
  9644                           
  9645                           ;clock_source.c: 762:                 table[i] = 0x59;
  9646  09EC  3059               	movlw	89
  9647  09ED                     L12:	
  9648  09ED  00F9               	movwf	??_T
  9649  09EE  0848               	movf	T@i,w
  9650  09EF  3E5D               	addlw	(low (_table| 0))& (0+255)
  9651  09F0  0084               	movwf	4
  9652  09F1  0879               	movf	??_T,w
  9653  09F2  0080               	movwf	0
  9654  09F3  28F4               	goto	l4076
  9655  09F4                     l4202:	
  9656  09F4  3073               	movlw	115
  9657  09F5  0644               	xorwf	T@T,w
  9658  09F6  0445               	iorwf	T@T+1,w
  9659  09F7  1D03               	btfss	3,2
  9660  09F8  0008               	return
  9661  09F9  0848               	movf	T@i,w
  9662  09FA  3E5D               	addlw	(low (_table| 0))& (0+255)
  9663  09FB  0084               	movwf	4
  9664  09FC  1383               	bcf	3,7	;select IRP bank0
  9665  09FD  0800               	movf	0,w
  9666  09FE  1D03               	btfss	3,2
  9667  09FF  0008               	return
  9668  0A00  29EC               	goto	l4196
  9669  0A01                     __end_of_T:	
  9670                           
  9671                           	psect	text38
  9672  080E                     __ptext38:	
  9673 ;; *************** function _display_val *****************
  9674 ;; Defined at:
  9675 ;;		line 17 in file "functions_source.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  i               2    3[COMMON] unsigned int 
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;  t               2    7[COMMON] int 
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  1    wreg      void 
  9682 ;; Registers used:
  9683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9684 ;; Tracked objects:
  9685 ;;		On entry : 300/0
  9686 ;;		On exit  : 300/0
  9687 ;;		Unchanged: 0/0
  9688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9689 ;;      Params:         2       0       0       0       0
  9690 ;;      Locals:         2       0       0       0       0
  9691 ;;      Temps:          2       0       0       0       0
  9692 ;;      Totals:         6       0       0       0       0
  9693 ;;Total ram usage:        6 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; Hardware stack levels required when called:    2
  9696 ;; This function calls:
  9697 ;;		_writechar
  9698 ;;		_writecmd_4line
  9699 ;; This function is called by:
  9700 ;;		_date_setting
  9701 ;;		_D
  9702 ;;		_T
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           
  9707                           ;psect for function _display_val
  9708  080E                     _display_val:	
  9709                           
  9710                           ;functions_source.c: 18:     if (i == 0 || i == 6){
  9711                           
  9712                           ;incstack = 0
  9713                           ; Regs used in _display_val: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9714  080E  0873               	movf	display_val@i,w
  9715  080F  0474               	iorwf	display_val@i+1,w
  9716  0810  1903               	btfsc	3,2
  9717  0811  2817               	goto	l3744
  9718  0812  3006               	movlw	6
  9719  0813  0673               	xorwf	display_val@i,w
  9720  0814  0474               	iorwf	display_val@i+1,w
  9721  0815  1D03               	btfss	3,2
  9722  0816  2819               	goto	l3746
  9723  0817                     l3744:	
  9724                           
  9725                           ;functions_source.c: 19:         writecmd_4line(0x94);
  9726  0817  3094               	movlw	148
  9727  0818  282F               	goto	L13
  9728  0819                     l3746:	
  9729                           ;functions_source.c: 20:     }
  9730                           
  9731  0819  0373               	decf	display_val@i,w
  9732  081A  0474               	iorwf	display_val@i+1,w
  9733  081B  1903               	btfsc	3,2
  9734  081C  2822               	goto	l3750
  9735  081D  3004               	movlw	4
  9736  081E  0673               	xorwf	display_val@i,w
  9737  081F  0474               	iorwf	display_val@i+1,w
  9738  0820  1D03               	btfss	3,2
  9739  0821  2824               	goto	l3752
  9740  0822                     l3750:	
  9741                           
  9742                           ;functions_source.c: 22:         writecmd_4line(0x92);
  9743  0822  3092               	movlw	146
  9744  0823  282F               	goto	L13
  9745  0824                     l3752:	
  9746                           ;functions_source.c: 23:     }
  9747                           
  9748  0824  3002               	movlw	2
  9749  0825  0673               	xorwf	display_val@i,w
  9750  0826  0474               	iorwf	display_val@i+1,w
  9751  0827  1903               	btfsc	3,2
  9752  0828  282E               	goto	l3756
  9753  0829  3003               	movlw	3
  9754  082A  0673               	xorwf	display_val@i,w
  9755  082B  0474               	iorwf	display_val@i+1,w
  9756  082C  1D03               	btfss	3,2
  9757  082D  2834               	goto	l3758
  9758  082E                     l3756:	
  9759                           
  9760                           ;functions_source.c: 25:         writecmd_4line(0x90);
  9761  082E  3090               	movlw	144
  9762  082F                     L13:	
  9763  082F  160A  158A  25CB  120A  158A  	fcall	_writecmd_4line
  9764  0834                     l3758:	
  9765                           
  9766                           ;functions_source.c: 28:     int t;;functions_source.c: 29:     t = table[i]&0xf0;
  9767  0834  0873               	movf	display_val@i,w
  9768  0835  3E5D               	addlw	(low (_table| 0))& (0+255)
  9769  0836  0084               	movwf	4
  9770  0837  1383               	bcf	3,7	;select IRP bank0
  9771  0838  0800               	movf	0,w
  9772  0839  39F0               	andlw	240
  9773  083A  00F5               	movwf	??_display_val
  9774  083B  01F6               	clrf	??_display_val+1
  9775  083C  0875               	movf	??_display_val,w
  9776  083D  00F7               	movwf	display_val@t
  9777  083E  0876               	movf	??_display_val+1,w
  9778  083F  00F8               	movwf	display_val@t+1
  9779                           
  9780                           ;functions_source.c: 30:     t=t>>4;
  9781  0840  0E77               	swapf	display_val@t,w
  9782  0841  390F               	andlw	15
  9783  0842  00F7               	movwf	display_val@t
  9784  0843  0E78               	swapf	display_val@t+1,w
  9785  0844  39F0               	andlw	240
  9786  0845  04F7               	iorwf	display_val@t,f
  9787  0846  0E78               	swapf	display_val@t+1,w
  9788  0847  390F               	andlw	15
  9789  0848  00F8               	movwf	display_val@t+1
  9790  0849  30F0               	movlw	240
  9791  084A  1DF8               	btfss	display_val@t+1,3
  9792  084B  3000               	movlw	0
  9793  084C  04F8               	iorwf	display_val@t+1,f
  9794                           
  9795                           ;functions_source.c: 31:     writechar(t + '0');
  9796  084D  0877               	movf	display_val@t,w
  9797  084E  3E30               	addlw	48
  9798  084F  160A  158A  25AF  120A  158A  	fcall	_writechar
  9799                           
  9800                           ;functions_source.c: 32:     t=t<<4;
  9801  0854  0878               	movf	display_val@t+1,w
  9802  0855  00F6               	movwf	??_display_val+1
  9803  0856  0877               	movf	display_val@t,w
  9804  0857  00F5               	movwf	??_display_val
  9805  0858  0EF5               	swapf	??_display_val,f
  9806  0859  0EF6               	swapf	??_display_val+1,f
  9807  085A  30F0               	movlw	240
  9808  085B  05F6               	andwf	??_display_val+1,f
  9809  085C  0875               	movf	??_display_val,w
  9810  085D  390F               	andlw	15
  9811  085E  04F6               	iorwf	??_display_val+1,f
  9812  085F  30F0               	movlw	240
  9813  0860  05F5               	andwf	??_display_val,f
  9814  0861  0875               	movf	??_display_val,w
  9815  0862  00F7               	movwf	display_val@t
  9816  0863  0876               	movf	??_display_val+1,w
  9817  0864  00F8               	movwf	display_val@t+1
  9818                           
  9819                           ;functions_source.c: 33:     t = table[i]&0x0f;
  9820  0865  0873               	movf	display_val@i,w
  9821  0866  3E5D               	addlw	(low (_table| 0))& (0+255)
  9822  0867  0084               	movwf	4
  9823  0868  1383               	bcf	3,7	;select IRP bank0
  9824  0869  0800               	movf	0,w
  9825  086A  390F               	andlw	15
  9826  086B  00F5               	movwf	??_display_val
  9827  086C  01F6               	clrf	??_display_val+1
  9828  086D  0875               	movf	??_display_val,w
  9829  086E  00F7               	movwf	display_val@t
  9830  086F  0876               	movf	??_display_val+1,w
  9831  0870  00F8               	movwf	display_val@t+1
  9832                           
  9833                           ;functions_source.c: 34:     writechar(t + '0');
  9834  0871  0877               	movf	display_val@t,w
  9835  0872  3E30               	addlw	48
  9836  0873  160A  158A  25AF  120A  158A  	fcall	_writechar
  9837                           
  9838                           ;functions_source.c: 36:     if (i == 0 || i == 6){
  9839  0878  0873               	movf	display_val@i,w
  9840  0879  0474               	iorwf	display_val@i+1,w
  9841  087A  1903               	btfsc	3,2
  9842  087B  2881               	goto	l3774
  9843  087C  3006               	movlw	6
  9844  087D  0673               	xorwf	display_val@i,w
  9845  087E  0474               	iorwf	display_val@i+1,w
  9846  087F  1D03               	btfss	3,2
  9847  0880  2886               	goto	l3776
  9848  0881                     l3774:	
  9849                           
  9850                           ;functions_source.c: 37:         writecmd_4line(0x94);
  9851  0881  3094               	movlw	148
  9852  0882  160A  158A  25CB   	fcall	_writecmd_4line
  9853                           
  9854                           ;functions_source.c: 38:     }
  9855  0885  0008               	return
  9856  0886                     l3776:	
  9857  0886  0373               	decf	display_val@i,w
  9858  0887  0474               	iorwf	display_val@i+1,w
  9859  0888  1903               	btfsc	3,2
  9860  0889  288F               	goto	l3780
  9861  088A  3004               	movlw	4
  9862  088B  0673               	xorwf	display_val@i,w
  9863  088C  0474               	iorwf	display_val@i+1,w
  9864  088D  1D03               	btfss	3,2
  9865  088E  2894               	goto	l3782
  9866  088F                     l3780:	
  9867                           
  9868                           ;functions_source.c: 40:         writecmd_4line(0x92);
  9869  088F  3092               	movlw	146
  9870  0890  160A  158A  25CB   	fcall	_writecmd_4line
  9871                           
  9872                           ;functions_source.c: 41:     }
  9873  0893  0008               	return
  9874  0894                     l3782:	
  9875  0894  3002               	movlw	2
  9876  0895  0673               	xorwf	display_val@i,w
  9877  0896  0474               	iorwf	display_val@i+1,w
  9878  0897  1903               	btfsc	3,2
  9879  0898  289E               	goto	l3786
  9880  0899  3003               	movlw	3
  9881  089A  0673               	xorwf	display_val@i,w
  9882  089B  0474               	iorwf	display_val@i+1,w
  9883  089C  1D03               	btfss	3,2
  9884  089D  0008               	return
  9885  089E                     l3786:	
  9886                           
  9887                           ;functions_source.c: 43:         writecmd_4line(0x90);
  9888  089E  3090               	movlw	144
  9889  089F  160A  158A  25CB   	fcall	_writecmd_4line
  9890  08A2  0008               	return
  9891  08A3                     __end_of_display_val:	
  9892                           
  9893                           	psect	text39
  9894  1DCB                     __ptext39:	
  9895 ;; *************** function _writecmd_4line *****************
  9896 ;; Defined at:
  9897 ;;		line 38 in file "lcd.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  x               1    wreg     unsigned char 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  x               1    2[COMMON] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 300/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9911 ;;      Params:         0       0       0       0       0
  9912 ;;      Locals:         1       0       0       0       0
  9913 ;;      Temps:          0       0       0       0       0
  9914 ;;      Totals:         1       0       0       0       0
  9915 ;;Total ram usage:        1 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    1
  9918 ;; This function calls:
  9919 ;;		_delay_lcd
  9920 ;; This function is called by:
  9921 ;;		_lcd_init
  9922 ;;		_display_clock
  9923 ;;		_start_date
  9924 ;;		_clock_setting
  9925 ;;		_date_setting
  9926 ;;		_D
  9927 ;;		_display_temp
  9928 ;;		_temp_setting
  9929 ;;		_set_day
  9930 ;;		_set_night
  9931 ;;		_cool
  9932 ;;		_heat
  9933 ;;		_OK
  9934 ;;		_display_val
  9935 ;;		_main
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           
  9940                           ;psect for function _writecmd_4line
  9941  1DCB                     _writecmd_4line:	
  9942                           
  9943                           ;incstack = 0
  9944                           ; Regs used in _writecmd_4line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9945                           ;writecmd_4line@x stored from wreg
  9946  1DCB  00F2               	movwf	writecmd_4line@x
  9947                           
  9948                           ;lcd.c: 38: void writecmd_4line(unsigned char x);lcd.c: 39: {;lcd.c: 40:     RA5=0;
  9949  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
  9950  1DCD  1303               	bcf	3,6	;RP1=0, select bank0
  9951  1DCE  1285               	bcf	5,5	;volatile
  9952                           
  9953                           ;lcd.c: 41:     RA4=0;
  9954  1DCF  1205               	bcf	5,4	;volatile
  9955                           
  9956                           ;lcd.c: 42:     RA3=0;
  9957  1DD0  1185               	bcf	5,3	;volatile
  9958                           
  9959                           ;lcd.c: 43:     delay_lcd();
  9960  1DD1  160A  158A  2583  160A  158A  	fcall	_delay_lcd
  9961                           
  9962                           ;lcd.c: 44:     RA3=1;
  9963  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  9964  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  9965  1DD8  1585               	bsf	5,3	;volatile
  9966                           
  9967                           ;lcd.c: 45:     delay_lcd();
  9968  1DD9  160A  158A  2583  160A  158A  	fcall	_delay_lcd
  9969                           
  9970                           ;lcd.c: 46:     PORTD=x;
  9971  1DDE  0872               	movf	writecmd_4line@x,w
  9972  1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  9973  1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  9974  1DE1  0088               	movwf	8	;volatile
  9975                           
  9976                           ;lcd.c: 47:     delay_lcd();
  9977  1DE2  160A  158A  2583   	fcall	_delay_lcd
  9978                           
  9979                           ;lcd.c: 48:     RA3=0;
  9980  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  9981  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  9982  1DE7  1185               	bcf	5,3	;volatile
  9983  1DE8  0008               	return
  9984  1DE9                     __end_of_writecmd_4line:	
  9985                           
  9986                           	psect	text40
  9987  1DAF                     __ptext40:	
  9988 ;; *************** function _writechar *****************
  9989 ;; Defined at:
  9990 ;;		line 23 in file "lcd.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  x               1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  x               1    2[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 300/0
 10001 ;;		On exit  : 300/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0
 10007 ;;      Totals:         1       0       0       0       0
 10008 ;;Total ram usage:        1 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    1
 10011 ;; This function calls:
 10012 ;;		_delay_lcd
 10013 ;; This function is called by:
 10014 ;;		_write_str
 10015 ;;		_display_clock
 10016 ;;		_start_date
 10017 ;;		_start_time
 10018 ;;		_display_temp
 10019 ;;		_set_day
 10020 ;;		_set_night
 10021 ;;		_display_val
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           
 10026                           ;psect for function _writechar
 10027  1DAF                     _writechar:	
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10031                           ;writechar@x stored from wreg
 10032  1DAF  00F2               	movwf	writechar@x
 10033                           
 10034                           ;lcd.c: 23: void writechar(unsigned char x);lcd.c: 24: {;lcd.c: 25:     RA5=1;
 10035  1DB0  1685               	bsf	5,5	;volatile
 10036                           
 10037                           ;lcd.c: 26:     RA4=0;
 10038  1DB1  1205               	bcf	5,4	;volatile
 10039                           
 10040                           ;lcd.c: 27:     RA3=0;
 10041  1DB2  1185               	bcf	5,3	;volatile
 10042                           
 10043                           ;lcd.c: 28:     delay_lcd();
 10044  1DB3  160A  158A  2583  160A  158A  	fcall	_delay_lcd
 10045                           
 10046                           ;lcd.c: 29:     RA3=1;
 10047  1DB8  1283               	bcf	3,5	;RP0=0, select bank0
 10048  1DB9  1303               	bcf	3,6	;RP1=0, select bank0
 10049  1DBA  1585               	bsf	5,3	;volatile
 10050                           
 10051                           ;lcd.c: 30:     delay_lcd();
 10052  1DBB  160A  158A  2583  160A  158A  	fcall	_delay_lcd
 10053                           
 10054                           ;lcd.c: 31:     PORTD=x;
 10055  1DC0  0872               	movf	writechar@x,w
 10056  1DC1  1283               	bcf	3,5	;RP0=0, select bank0
 10057  1DC2  1303               	bcf	3,6	;RP1=0, select bank0
 10058  1DC3  0088               	movwf	8	;volatile
 10059                           
 10060                           ;lcd.c: 32:     delay_lcd();
 10061  1DC4  160A  158A  2583   	fcall	_delay_lcd
 10062                           
 10063                           ;lcd.c: 33:     RA3=0;
 10064  1DC7  1283               	bcf	3,5	;RP0=0, select bank0
 10065  1DC8  1303               	bcf	3,6	;RP1=0, select bank0
 10066  1DC9  1185               	bcf	5,3	;volatile
 10067  1DCA  0008               	return
 10068  1DCB                     __end_of_writechar:	
 10069                           
 10070                           	psect	text41
 10071  1D83                     __ptext41:	
 10072 ;; *************** function _delay_lcd *****************
 10073 ;; Defined at:
 10074 ;;		line 15 in file "lcd.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  i               2    0[COMMON] int 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, btemp+1
 10083 ;; Tracked objects:
 10084 ;;		On entry : 300/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         0       0       0       0       0
 10089 ;;      Locals:         2       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0
 10091 ;;      Totals:         2       0       0       0       0
 10092 ;;Total ram usage:        2 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_writechar
 10098 ;;		_writecmd_4line
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           
 10103                           ;psect for function _delay_lcd
 10104  1D83                     _delay_lcd:	
 10105                           
 10106                           ;lcd.c: 17:     int i;;lcd.c: 18: for(i=0;i<60;i++);
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _delay_lcd: [wreg+status,2+btemp+1]
 10110  1D83  01F0               	clrf	delay_lcd@i
 10111  1D84  01F1               	clrf	delay_lcd@i+1
 10112  1D85                     l3620:	
 10113  1D85  3001               	movlw	1
 10114  1D86  07F0               	addwf	delay_lcd@i,f
 10115  1D87  1803               	skipnc
 10116  1D88  0AF1               	incf	delay_lcd@i+1,f
 10117  1D89  3000               	movlw	0
 10118  1D8A  07F1               	addwf	delay_lcd@i+1,f
 10119  1D8B  0871               	movf	delay_lcd@i+1,w
 10120  1D8C  3A80               	xorlw	128
 10121  1D8D  00FF               	movwf	127
 10122  1D8E  3080               	movlw	128
 10123  1D8F  027F               	subwf	127,w
 10124  1D90  1D03               	skipz
 10125  1D91  2D94               	goto	u2975
 10126  1D92  303C               	movlw	60
 10127  1D93  0270               	subwf	delay_lcd@i,w
 10128  1D94                     u2975:	
 10129  1D94  1803               	btfsc	3,0
 10130  1D95  0008               	return
 10131  1D96  2D85               	goto	l3620
 10132  1D97                     __end_of_delay_lcd:	
 10133                           
 10134                           	psect	text42
 10135  1D6F                     __ptext42:	
 10136 ;; *************** function _delay_main *****************
 10137 ;; Defined at:
 10138 ;;		line 12 in file "functions_source.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  i               2    0[COMMON] int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, btemp+1
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10152 ;;      Params:         0       0       0       0       0
 10153 ;;      Locals:         2       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0
 10155 ;;      Totals:         2       0       0       0       0
 10156 ;;Total ram usage:        2 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; This function calls:
 10159 ;;		Nothing
 10160 ;; This function is called by:
 10161 ;;		_clock_setting
 10162 ;;		_date_setting
 10163 ;;		_D
 10164 ;;		_T
 10165 ;;		_temp_increment
 10166 ;;		_temp_decrement
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _delay_main
 10172  1D6F                     _delay_main:	
 10173                           
 10174                           ;functions_source.c: 13:     for (int i=0;i<10000;i++){
 10175                           
 10176                           ;incstack = 0
 10177                           ; Regs used in _delay_main: [wreg+status,2+btemp+1]
 10178  1D6F  01F0               	clrf	delay_main@i
 10179  1D70  01F1               	clrf	delay_main@i+1
 10180  1D71                     l3666:	
 10181                           
 10182                           ;functions_source.c: 14:     }
 10183  1D71  3001               	movlw	1
 10184  1D72  07F0               	addwf	delay_main@i,f
 10185  1D73  1803               	skipnc
 10186  1D74  0AF1               	incf	delay_main@i+1,f
 10187  1D75  3000               	movlw	0
 10188  1D76  07F1               	addwf	delay_main@i+1,f
 10189  1D77  0871               	movf	delay_main@i+1,w
 10190  1D78  3A80               	xorlw	128
 10191  1D79  00FF               	movwf	127
 10192  1D7A  30A7               	movlw	167
 10193  1D7B  027F               	subwf	127,w
 10194  1D7C  1D03               	skipz
 10195  1D7D  2D80               	goto	u3025
 10196  1D7E  3010               	movlw	16
 10197  1D7F  0270               	subwf	delay_main@i,w
 10198  1D80                     u3025:	
 10199  1D80  1803               	btfsc	3,0
 10200  1D81  0008               	return
 10201  1D82  2D71               	goto	l3666
 10202  1D83                     __end_of_delay_main:	
 10203                           
 10204                           	psect	text43
 10205  1260                     __ptext43:	
 10206 ;; *************** function _OutputPins *****************
 10207 ;; Defined at:
 10208 ;;		line 11 in file "button_press.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;		None
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;		None
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg, status,2, status,0, pclath, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 300/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10222 ;;      Params:         0       0       0       0       0
 10223 ;;      Locals:         0       0       0       0       0
 10224 ;;      Temps:          2       0       0       0       0
 10225 ;;      Totals:         2       0       0       0       0
 10226 ;;Total ram usage:        2 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; Hardware stack levels required when called:    1
 10229 ;; This function calls:
 10230 ;;		_InputPins
 10231 ;; This function is called by:
 10232 ;;		_clock_setting
 10233 ;;		_date_setting
 10234 ;;		_temp_setting
 10235 ;;		_set_day
 10236 ;;		_set_night
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           
 10242                           ;psect for function _OutputPins
 10243  1260                     _OutputPins:	
 10244                           
 10245                           ;button_press.c: 13:     PORTCbits.RC0 = 1;
 10246                           
 10247                           ;incstack = 0
 10248                           ; Regs used in _OutputPins: [wreg+status,2+status,0+pclath+cstack]
 10249  1260  1283               	bcf	3,5	;RP0=0, select bank0
 10250  1261  1303               	bcf	3,6	;RP1=0, select bank0
 10251  1262  1407               	bsf	7,0	;volatile
 10252                           
 10253                           ;button_press.c: 14:     OutputRC = 1;
 10254  1263  01C1               	clrf	_OutputRC
 10255  1264  0AC1               	incf	_OutputRC,f
 10256                           
 10257                           ;button_press.c: 15:     InputPins(OutputRC);
 10258  1265  0841               	movf	_OutputRC,w
 10259  1266  00F3               	movwf	??_OutputPins
 10260  1267  01F4               	clrf	??_OutputPins+1
 10261  1268  0873               	movf	??_OutputPins,w
 10262  1269  00F0               	movwf	InputPins@RC
 10263  126A  0874               	movf	??_OutputPins+1,w
 10264  126B  00F1               	movwf	InputPins@RC+1
 10265  126C  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10266                           
 10267                           ;button_press.c: 16:     PORTCbits.RC0 = 0;
 10268  1271  1007               	bcf	7,0	;volatile
 10269                           
 10270                           ;button_press.c: 18:     PORTCbits.RC1 = 1;
 10271  1272  1487               	bsf	7,1	;volatile
 10272                           
 10273                           ;button_press.c: 19:     OutputRC = 2;
 10274  1273  3002               	movlw	2
 10275  1274  00F3               	movwf	??_OutputPins
 10276  1275  0873               	movf	??_OutputPins,w
 10277  1276  00C1               	movwf	_OutputRC
 10278                           
 10279                           ;button_press.c: 20:     InputPins(OutputRC);
 10280  1277  0841               	movf	_OutputRC,w
 10281  1278  00F3               	movwf	??_OutputPins
 10282  1279  01F4               	clrf	??_OutputPins+1
 10283  127A  0873               	movf	??_OutputPins,w
 10284  127B  00F0               	movwf	InputPins@RC
 10285  127C  0874               	movf	??_OutputPins+1,w
 10286  127D  00F1               	movwf	InputPins@RC+1
 10287  127E  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10288                           
 10289                           ;button_press.c: 21:     PORTCbits.RC1 = 0;
 10290  1283  1087               	bcf	7,1	;volatile
 10291                           
 10292                           ;button_press.c: 23:     PORTCbits.RC2 = 1;
 10293  1284  1507               	bsf	7,2	;volatile
 10294                           
 10295                           ;button_press.c: 24:     OutputRC = 3;
 10296  1285  3003               	movlw	3
 10297  1286  00F3               	movwf	??_OutputPins
 10298  1287  0873               	movf	??_OutputPins,w
 10299  1288  00C1               	movwf	_OutputRC
 10300                           
 10301                           ;button_press.c: 25:     InputPins(OutputRC);
 10302  1289  0841               	movf	_OutputRC,w
 10303  128A  00F3               	movwf	??_OutputPins
 10304  128B  01F4               	clrf	??_OutputPins+1
 10305  128C  0873               	movf	??_OutputPins,w
 10306  128D  00F0               	movwf	InputPins@RC
 10307  128E  0874               	movf	??_OutputPins+1,w
 10308  128F  00F1               	movwf	InputPins@RC+1
 10309  1290  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10310                           
 10311                           ;button_press.c: 26:     PORTCbits.RC2 = 0;
 10312  1295  1107               	bcf	7,2	;volatile
 10313                           
 10314                           ;button_press.c: 28:     PORTCbits.RC3 = 1;
 10315  1296  1587               	bsf	7,3	;volatile
 10316                           
 10317                           ;button_press.c: 29:     OutputRC = 4;
 10318  1297  3004               	movlw	4
 10319  1298  00F3               	movwf	??_OutputPins
 10320  1299  0873               	movf	??_OutputPins,w
 10321  129A  00C1               	movwf	_OutputRC
 10322                           
 10323                           ;button_press.c: 30:     InputPins(OutputRC);
 10324  129B  0841               	movf	_OutputRC,w
 10325  129C  00F3               	movwf	??_OutputPins
 10326  129D  01F4               	clrf	??_OutputPins+1
 10327  129E  0873               	movf	??_OutputPins,w
 10328  129F  00F0               	movwf	InputPins@RC
 10329  12A0  0874               	movf	??_OutputPins+1,w
 10330  12A1  00F1               	movwf	InputPins@RC+1
 10331  12A2  160A  158A  26B7   	fcall	_InputPins
 10332                           
 10333                           ;button_press.c: 31:     PORTCbits.RC3 = 0;
 10334  12A5  1187               	bcf	7,3	;volatile
 10335  12A6  0008               	return
 10336  12A7                     __end_of_OutputPins:	
 10337                           
 10338                           	psect	text44
 10339  1EB7                     __ptext44:	
 10340 ;; *************** function _InputPins *****************
 10341 ;; Defined at:
 10342 ;;		line 36 in file "button_press.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  RC              2    0[COMMON] unsigned int 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;		None
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      void 
 10349 ;; Registers used:
 10350 ;;		wreg
 10351 ;; Tracked objects:
 10352 ;;		On entry : 300/0
 10353 ;;		On exit  : 300/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10356 ;;      Params:         2       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0
 10358 ;;      Temps:          1       0       0       0       0
 10359 ;;      Totals:         3       0       0       0       0
 10360 ;;Total ram usage:        3 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; This function calls:
 10363 ;;		Nothing
 10364 ;; This function is called by:
 10365 ;;		_OutputPins
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           
 10370                           ;psect for function _InputPins
 10371  1EB7                     _InputPins:	
 10372                           
 10373                           ;button_press.c: 38:     if (PORTCbits.RC4 == 1){
 10374                           
 10375                           ;incstack = 0
 10376                           ; Regs used in _InputPins: [wreg]
 10377  1EB7  1E07               	btfss	7,4	;volatile
 10378  1EB8  2EC0               	goto	l63
 10379                           
 10380                           ;button_press.c: 39:         SecondRC = 1;
 10381  1EB9  01C3               	clrf	_SecondRC
 10382  1EBA  0AC3               	incf	_SecondRC,f
 10383                           
 10384                           ;button_press.c: 40:         FirstRC = RC;
 10385  1EBB  0870               	movf	InputPins@RC,w
 10386  1EBC  00F2               	movwf	??_InputPins
 10387  1EBD  0872               	movf	??_InputPins,w
 10388  1EBE  00C2               	movwf	_FirstRC
 10389                           
 10390                           ;button_press.c: 42:     }
 10391  1EBF  0008               	return
 10392  1EC0                     l63:	
 10393                           ;button_press.c: 43:     else if (PORTCbits.RC5 == 1){
 10394                           
 10395  1EC0  1E87               	btfss	7,5	;volatile
 10396  1EC1  2ECB               	goto	l65
 10397                           
 10398                           ;button_press.c: 44:         SecondRC = 2;
 10399  1EC2  3002               	movlw	2
 10400  1EC3  00F2               	movwf	??_InputPins
 10401  1EC4  0872               	movf	??_InputPins,w
 10402  1EC5  00C3               	movwf	_SecondRC
 10403                           
 10404                           ;button_press.c: 45:         FirstRC = RC;
 10405  1EC6  0870               	movf	InputPins@RC,w
 10406  1EC7  00F2               	movwf	??_InputPins
 10407  1EC8  0872               	movf	??_InputPins,w
 10408  1EC9  00C2               	movwf	_FirstRC
 10409                           
 10410                           ;button_press.c: 47:     }
 10411  1ECA  0008               	return
 10412  1ECB                     l65:	
 10413                           ;button_press.c: 48:     else if (PORTCbits.RC6 == 1){
 10414                           
 10415  1ECB  1F07               	btfss	7,6	;volatile
 10416  1ECC  2ED6               	goto	l67
 10417                           
 10418                           ;button_press.c: 49:         SecondRC = 3;
 10419  1ECD  3003               	movlw	3
 10420  1ECE  00F2               	movwf	??_InputPins
 10421  1ECF  0872               	movf	??_InputPins,w
 10422  1ED0  00C3               	movwf	_SecondRC
 10423                           
 10424                           ;button_press.c: 50:         FirstRC = RC;
 10425  1ED1  0870               	movf	InputPins@RC,w
 10426  1ED2  00F2               	movwf	??_InputPins
 10427  1ED3  0872               	movf	??_InputPins,w
 10428  1ED4  00C2               	movwf	_FirstRC
 10429                           
 10430                           ;button_press.c: 52:     }
 10431  1ED5  0008               	return
 10432  1ED6                     l67:	
 10433                           ;button_press.c: 53:     else if (PORTCbits.RC7 == 1){
 10434                           
 10435  1ED6  1F87               	btfss	7,7	;volatile
 10436  1ED7  0008               	return
 10437                           
 10438                           ;button_press.c: 54:         SecondRC = 4;
 10439  1ED8  3004               	movlw	4
 10440  1ED9  00F2               	movwf	??_InputPins
 10441  1EDA  0872               	movf	??_InputPins,w
 10442  1EDB  00C3               	movwf	_SecondRC
 10443                           
 10444                           ;button_press.c: 55:         FirstRC = RC;
 10445  1EDC  0870               	movf	InputPins@RC,w
 10446  1EDD  00F2               	movwf	??_InputPins
 10447  1EDE  0872               	movf	??_InputPins,w
 10448  1EDF  00C2               	movwf	_FirstRC
 10449  1EE0  0008               	return
 10450  1EE1                     __end_of_InputPins:	
 10451                           
 10452                           	psect	text45
 10453  0800                     __ptext45:	
 10454 ;; *************** function _clock_init *****************
 10455 ;; Defined at:
 10456 ;;		line 183 in file "clock_source.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      void 
 10463 ;; Registers used:
 10464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : B00/0
 10467 ;;		On exit  : 300/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10470 ;;      Params:         0       0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0
 10472 ;;      Temps:          0       0       0       0       0
 10473 ;;      Totals:         0       0       0       0       0
 10474 ;;Total ram usage:        0 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:    2
 10477 ;; This function calls:
 10478 ;;		_ds1302_init
 10479 ;;		_port_init
 10480 ;;		_set_time_date
 10481 ;; This function is called by:
 10482 ;;		_main
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           
 10487                           ;psect for function _clock_init
 10488  0800                     _clock_init:	
 10489                           
 10490                           ;clock_source.c: 184:     port_init();
 10491                           
 10492                           ;incstack = 0
 10493                           ; Regs used in _clock_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10494  0800  160A  158A  24F9  120A  158A  	fcall	_port_init
 10495                           
 10496                           ;clock_source.c: 185:     ds1302_init();
 10497  0805  160A  158A  251A  120A  158A  	fcall	_ds1302_init
 10498                           
 10499                           ;clock_source.c: 186:     set_time_date();
 10500  080A  160A  158A  268F   	fcall	_set_time_date
 10501  080D  0008               	return
 10502  080E                     __end_of_clock_init:	
 10503                           
 10504                           	psect	text46
 10505  1E8F                     __ptext46:	
 10506 ;; *************** function _set_time_date *****************
 10507 ;; Defined at:
 10508 ;;		line 38 in file "clock_source.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;		None
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  i               2    5[COMMON] int 
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  1    wreg      void 
 10515 ;; Registers used:
 10516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10517 ;; Tracked objects:
 10518 ;;		On entry : 300/0
 10519 ;;		On exit  : 300/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10522 ;;      Params:         0       0       0       0       0
 10523 ;;      Locals:         2       0       0       0       0
 10524 ;;      Temps:          0       0       0       0       0
 10525 ;;      Totals:         2       0       0       0       0
 10526 ;;Total ram usage:        2 bytes
 10527 ;; Hardware stack levels used:    1
 10528 ;; Hardware stack levels required when called:    1
 10529 ;; This function calls:
 10530 ;;		_time_write_1
 10531 ;; This function is called by:
 10532 ;;		_clock_init
 10533 ;;		_clock_setting
 10534 ;;		_date_setting
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           
 10539                           ;psect for function _set_time_date
 10540  1E8F                     _set_time_date:	
 10541                           
 10542                           ;clock_source.c: 39:    int i;;clock_source.c: 40:    RB5=1;
 10543                           
 10544                           ;incstack = 0
 10545                           ; Regs used in _set_time_date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10546  1E8F  1686               	bsf	6,5	;volatile
 10547                           
 10548                           ;clock_source.c: 41:    time_write_1(0xbe);
 10549  1E90  30BE               	movlw	190
 10550  1E91  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10551                           
 10552                           ;clock_source.c: 43:    for(i=0;i<8;i++)
 10553  1E96  01F5               	clrf	set_time_date@i
 10554  1E97  01F6               	clrf	set_time_date@i+1
 10555  1E98                     l3934:	
 10556                           
 10557                           ;clock_source.c: 44:     {;clock_source.c: 45:        time_write_1(table[i]);
 10558  1E98  0875               	movf	set_time_date@i,w
 10559  1E99  3E5D               	addlw	(low (_table| 0))& (0+255)
 10560  1E9A  0084               	movwf	4
 10561  1E9B  1383               	bcf	3,7	;select IRP bank0
 10562  1E9C  0800               	movf	0,w
 10563  1E9D  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10564                           
 10565                           ;clock_source.c: 46:     }
 10566  1EA2  3001               	movlw	1
 10567  1EA3  07F5               	addwf	set_time_date@i,f
 10568  1EA4  1803               	skipnc
 10569  1EA5  0AF6               	incf	set_time_date@i+1,f
 10570  1EA6  3000               	movlw	0
 10571  1EA7  07F6               	addwf	set_time_date@i+1,f
 10572  1EA8  0876               	movf	set_time_date@i+1,w
 10573  1EA9  3A80               	xorlw	128
 10574  1EAA  00FF               	movwf	127
 10575  1EAB  3080               	movlw	128
 10576  1EAC  027F               	subwf	127,w
 10577  1EAD  1D03               	skipz
 10578  1EAE  2EB1               	goto	u3455
 10579  1EAF  3008               	movlw	8
 10580  1EB0  0275               	subwf	set_time_date@i,w
 10581  1EB1                     u3455:	
 10582  1EB1  1C03               	skipc
 10583  1EB2  2E98               	goto	l3934
 10584                           
 10585                           ;clock_source.c: 47:    RB5=0;
 10586  1EB3  1283               	bcf	3,5	;RP0=0, select bank0
 10587  1EB4  1303               	bcf	3,6	;RP1=0, select bank0
 10588  1EB5  1286               	bcf	6,5	;volatile
 10589  1EB6  0008               	return
 10590  1EB7                     __end_of_set_time_date:	
 10591                           
 10592                           	psect	text47
 10593  1CF9                     __ptext47:	
 10594 ;; *************** function _port_init *****************
 10595 ;; Defined at:
 10596 ;;		line 102 in file "clock_source.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;		None
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;		None
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      void 
 10603 ;; Registers used:
 10604 ;;		wreg, status,2
 10605 ;; Tracked objects:
 10606 ;;		On entry : B00/0
 10607 ;;		On exit  : B00/100
 10608 ;;		Unchanged: 800/0
 10609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10610 ;;      Params:         0       0       0       0       0
 10611 ;;      Locals:         0       0       0       0       0
 10612 ;;      Temps:          0       0       0       0       0
 10613 ;;      Totals:         0       0       0       0       0
 10614 ;;Total ram usage:        0 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_clock_init
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           
 10624                           ;psect for function _port_init
 10625  1CF9                     _port_init:	
 10626                           
 10627                           ;clock_source.c: 103:     ADCON1=0X06;
 10628                           
 10629                           ;incstack = 0
 10630                           ; Regs used in _port_init: [wreg+status,2]
 10631  1CF9  3006               	movlw	6
 10632  1CFA  1683               	bsf	3,5	;RP0=1, select bank1
 10633  1CFB  009F               	movwf	31	;volatile
 10634                           
 10635                           ;clock_source.c: 104:     TRISB=0X02;
 10636  1CFC  3002               	movlw	2
 10637  1CFD  0086               	movwf	6	;volatile
 10638                           
 10639                           ;clock_source.c: 105:     OPTION_REG=0X00;
 10640  1CFE  0181               	clrf	1	;volatile
 10641  1CFF  0008               	return
 10642  1D00                     __end_of_port_init:	
 10643                           
 10644                           	psect	text48
 10645  1D1A                     __ptext48:	
 10646 ;; *************** function _ds1302_init *****************
 10647 ;; Defined at:
 10648 ;;		line 27 in file "clock_source.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : B00/100
 10659 ;;		On exit  : 300/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10662 ;;      Params:         0       0       0       0       0
 10663 ;;      Locals:         0       0       0       0       0
 10664 ;;      Temps:          0       0       0       0       0
 10665 ;;      Totals:         0       0       0       0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    1
 10669 ;; This function calls:
 10670 ;;		_time_write_1
 10671 ;; This function is called by:
 10672 ;;		_clock_init
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           
 10677                           ;psect for function _ds1302_init
 10678  1D1A                     _ds1302_init:	
 10679                           
 10680                           ;clock_source.c: 28:    RB0=0;
 10681                           
 10682                           ;incstack = 0
 10683                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10684  1D1A  1283               	bcf	3,5	;RP0=0, select bank0
 10685  1D1B  1006               	bcf	6,0	;volatile
 10686                           
 10687                           ;clock_source.c: 29:    RB5 =0;
 10688  1D1C  1286               	bcf	6,5	;volatile
 10689                           
 10690                           ;clock_source.c: 30:    RB5=1;
 10691  1D1D  1686               	bsf	6,5	;volatile
 10692                           
 10693                           ;clock_source.c: 31:    time_write_1(0x8e);
 10694  1D1E  308E               	movlw	142
 10695  1D1F  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10696                           
 10697                           ;clock_source.c: 32:    time_write_1(0);
 10698  1D24  3000               	movlw	0
 10699  1D25  160A  158A  2669   	fcall	_time_write_1
 10700                           
 10701                           ;clock_source.c: 33:    RB5=0;
 10702  1D28  1286               	bcf	6,5	;volatile
 10703  1D29  0008               	return
 10704  1D2A                     __end_of_ds1302_init:	
 10705                           
 10706                           	psect	text49
 10707  1E69                     __ptext49:	
 10708 ;; *************** function _time_write_1 *****************
 10709 ;; Defined at:
 10710 ;;		line 65 in file "clock_source.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  time_tx         1    wreg     unsigned char 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  time_tx         1    4[COMMON] unsigned char 
 10715 ;;  j               2    2[COMMON] int 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0, btemp+1
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 300/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10725 ;;      Params:         0       0       0       0       0
 10726 ;;      Locals:         3       0       0       0       0
 10727 ;;      Temps:          2       0       0       0       0
 10728 ;;      Totals:         5       0       0       0       0
 10729 ;;Total ram usage:        5 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_ds1302_init
 10735 ;;		_set_time_date
 10736 ;;		_get_time
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           
 10741                           ;psect for function _time_write_1
 10742  1E69                     _time_write_1:	
 10743                           
 10744                           ;incstack = 0
 10745                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
 10746                           ;time_write_1@time_tx stored from wreg
 10747  1E69  00F4               	movwf	time_write_1@time_tx
 10748                           
 10749                           ;clock_source.c: 66:     int j;;clock_source.c: 67:     for(j=0;j<8;j++)
 10750  1E6A  01F2               	clrf	time_write_1@j
 10751  1E6B  01F3               	clrf	time_write_1@j+1
 10752  1E6C                     l205:	
 10753                           
 10754                           ;clock_source.c: 68:     {;clock_source.c: 69:         RB4=0;
 10755  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
 10756  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
 10757  1E6E  1206               	bcf	6,4	;volatile
 10758                           
 10759                           ;clock_source.c: 70:         RB0=0;
 10760  1E6F  1006               	bcf	6,0	;volatile
 10761                           
 10762                           ;clock_source.c: 71:         if(time_tx&0x01)
 10763  1E70  1874               	btfsc	time_write_1@time_tx,0
 10764                           
 10765                           ;clock_source.c: 72:           {;clock_source.c: 73:             RB4=1;
 10766  1E71  1606               	bsf	6,4	;volatile
 10767                           
 10768                           ;clock_source.c: 75:         time_tx=time_tx>>1;
 10769  1E72  0874               	movf	time_write_1@time_tx,w
 10770  1E73  00F0               	movwf	??_time_write_1
 10771  1E74  1003               	clrc
 10772  1E75  0C70               	rrf	??_time_write_1,w
 10773  1E76  00F1               	movwf	??_time_write_1+1
 10774  1E77  0871               	movf	??_time_write_1+1,w
 10775  1E78  00F4               	movwf	time_write_1@time_tx
 10776                           
 10777                           ;clock_source.c: 76:         RB0=1;
 10778  1E79  1406               	bsf	6,0	;volatile
 10779                           
 10780                           ;clock_source.c: 77:     }
 10781  1E7A  3001               	movlw	1
 10782  1E7B  07F2               	addwf	time_write_1@j,f
 10783  1E7C  1803               	skipnc
 10784  1E7D  0AF3               	incf	time_write_1@j+1,f
 10785  1E7E  3000               	movlw	0
 10786  1E7F  07F3               	addwf	time_write_1@j+1,f
 10787  1E80  0873               	movf	time_write_1@j+1,w
 10788  1E81  3A80               	xorlw	128
 10789  1E82  00FF               	movwf	127
 10790  1E83  3080               	movlw	128
 10791  1E84  027F               	subwf	127,w
 10792  1E85  1D03               	skipz
 10793  1E86  2E89               	goto	u3085
 10794  1E87  3008               	movlw	8
 10795  1E88  0272               	subwf	time_write_1@j,w
 10796  1E89                     u3085:	
 10797  1E89  1C03               	skipc
 10798  1E8A  2E6C               	goto	l205
 10799                           
 10800                           ;clock_source.c: 78:     RB0=0;
 10801  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
 10802  1E8C  1303               	bcf	3,6	;RP1=0, select bank0
 10803  1E8D  1006               	bcf	6,0	;volatile
 10804  1E8E  0008               	return
 10805  1E8F                     __end_of_time_write_1:	
 10806                           
 10807                           	psect	text50
 10808  1CF2                     __ptext50:	
 10809 ;; *************** function _buzzer_init *****************
 10810 ;; Defined at:
 10811 ;;		line 16 in file "buzzer.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, status,2
 10820 ;; Tracked objects:
 10821 ;;		On entry : B00/0
 10822 ;;		On exit  : B00/0
 10823 ;;		Unchanged: 800/0
 10824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10825 ;;      Params:         0       0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0
 10827 ;;      Temps:          0       0       0       0       0
 10828 ;;      Totals:         0       0       0       0       0
 10829 ;;Total ram usage:        0 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; This function calls:
 10832 ;;		Nothing
 10833 ;; This function is called by:
 10834 ;;		_main
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           
 10839                           ;psect for function _buzzer_init
 10840  1CF2                     _buzzer_init:	
 10841                           
 10842                           ;incstack = 0
 10843                           ; Regs used in _buzzer_init: [wreg+status,2]
 10844  1CF2  3007               	movlw	7
 10845  1CF3  1683               	bsf	3,5	;RP0=1, select bank1
 10846  1CF4  009F               	movwf	31	;volatile
 10847  1CF5  0189               	clrf	9	;volatile
 10848  1CF6  1283               	bcf	3,5	;RP0=0, select bank0
 10849  1CF7  0189               	clrf	9	;volatile
 10850  1CF8  0008               	return
 10851  1CF9                     __end_of_buzzer_init:	
 10852  007E                     btemp	set	126	;btemp
 10853  007E                     wtemp0	set	126


Data Sizes:
    Strings     262
    Constant    0
    Data        27
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      78
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    T@T	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    T@C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    D@D	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 
		 -> RAM(DATA[512]), 

    D@C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    write_str@array	PTR unsigned char  size(2) Largest target is 17
		 -> STR_81(CODE[6]), STR_80(CODE[6]), STR_79(CODE[6]), STR_78(CODE[6]), 
		 -> STR_77(CODE[6]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[6]), 
		 -> STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[2]), 
		 -> STR_69(CODE[2]), STR_68(CODE[2]), STR_67(CODE[5]), STR_66(CODE[11]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[11]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[2]), STR_59(CODE[5]), STR_58(CODE[15]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[2]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[13]), STR_42(CODE[6]), 
		 -> STR_41(CODE[4]), STR_40(CODE[15]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_37(CODE[6]), STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[6]), 
		 -> STR_33(CODE[4]), STR_32(CODE[17]), STR_31(CODE[15]), STR_30(CODE[14]), 
		 -> STR_29(CODE[8]), STR_28(CODE[17]), STR_27(CODE[7]), STR_26(CODE[17]), 
		 -> STR_25(CODE[5]), STR_24(CODE[17]), STR_23(CODE[7]), STR_22(CODE[17]), 
		 -> STR_21(CODE[15]), STR_20(CODE[14]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[7]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[6]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    write_str@p	PTR unsigned char  size(2) Largest target is 17
		 -> STR_81(CODE[6]), STR_80(CODE[6]), STR_79(CODE[6]), STR_78(CODE[6]), 
		 -> STR_77(CODE[6]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[6]), 
		 -> STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[2]), 
		 -> STR_69(CODE[2]), STR_68(CODE[2]), STR_67(CODE[5]), STR_66(CODE[11]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[11]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[2]), STR_59(CODE[5]), STR_58(CODE[15]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[2]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[13]), STR_42(CODE[6]), 
		 -> STR_41(CODE[4]), STR_40(CODE[15]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_37(CODE[6]), STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[6]), 
		 -> STR_33(CODE[4]), STR_32(CODE[17]), STR_31(CODE[15]), STR_30(CODE[14]), 
		 -> STR_29(CODE[8]), STR_28(CODE[17]), STR_27(CODE[7]), STR_26(CODE[17]), 
		 -> STR_25(CODE[5]), STR_24(CODE[17]), STR_23(CODE[7]), STR_22(CODE[17]), 
		 -> STR_21(CODE[15]), STR_20(CODE[14]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[7]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[6]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _temp_setting->_set_day
    _temp_setting->_set_night
    _set_night->_write_str
    _set_day->_write_str
    _temp_increment->_delay_main
    _temp_decrement->_delay_main
    _heat->_write_str
    _temp_check_rise->___bmul
    _cool->_write_str
    _temp_check_lower->___bmul
    _OK->_write_str
    _lcd_init->_writecmd_4line
    _get_time->_time_read_1
    _get_time->_time_write_1
    _write_byte->_delay_temp
    _reset->_delay_temp
    _read_byte->_delay_temp
    _display_temp->_write_str
    _display_clock->_week
    _date_setting->_D
    _date_setting->_start_date
    _date_setting->_week
    _week->_write_str
    _start_date->_write_str
    _D->_write_str
    _clock_setting->_start_time
    _start_time->_write_str
    _write_str->_writechar
    _T->_display_val
    _display_val->_writechar
    _display_val->_writecmd_4line
    _writecmd_4line->_delay_lcd
    _writechar->_delay_lcd
    _OutputPins->_InputPins
    _clock_init->_set_time_date
    _set_time_date->_time_write_1
    _ds1302_init->_time_write_1

Critical Paths under _main in BANK0

    _main->_date_setting
    _temp_setting->_set_day
    _temp_setting->_set_night
    _date_setting->_D
    _clock_setting->_T

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  157541
                         _OutputPins
                       _button_reset
                        _buzzer_init
                         _clock_init
                      _clock_setting
                       _date_setting
                      _display_clock
                           _get_temp
                           _get_time
                     _initialisation
                           _lcd_init
                           _temp_day
                         _temp_night
                       _temp_setting
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _temp_setting                                         0     0      0   20882
                         _OutputPins
                       _button_reset
                            _set_day
                          _set_night
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _set_night                                            4     4      0    7053
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                         _OutputPins
                       _button_reset
                     _temp_decrement
                     _temp_increment
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _set_day                                              4     4      0    7053
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                         _OutputPins
                       _button_reset
                     _temp_decrement
                     _temp_increment
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_increment                                       0     0      0      46
                         _delay_main
 ---------------------------------------------------------------------------------
 (3) _temp_decrement                                       2     2      0      72
                                              2 COMMON     2     2      0
                         _delay_main
 ---------------------------------------------------------------------------------
 (1) _temp_night                                          14    14      0   22889
                                              0 BANK0     14    14      0
                                 _OK
                             ___wmul
                               _cool
                               _heat
 ---------------------------------------------------------------------------------
 (1) _temp_day                                            14    14      0   22889
                                              0 BANK0     14    14      0
                                 _OK
                             ___wmul
                               _cool
                               _heat
 ---------------------------------------------------------------------------------
 (2) _heat                                                 0     0      0    7205
                    _temp_check_rise
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_check_rise                                      5     5      0     821
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _cool                                                 0     0      0    7205
                   _temp_check_lower
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_check_lower                                     5     5      0     821
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1916
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _OK                                                   0     0      0    6384
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      68
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             4     4      0    8790
                                              0 BANK0      4     4      0
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                       _display_temp
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset                                                2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _display_temp                                         0     0      0    6452
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     235
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              5     4      1     238
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0   13800
                                              0 BANK0      4     4      0
                               _week
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _date_setting                                        19    19      0   39729
                                              6 BANK0     19    19      0
                                  _D
                         _OutputPins
                             ___bmul
                       _button_reset
                         _delay_main
                        _display_val
                      _set_time_date
                         _start_date
                               _week
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _week                                                 2     0      2    6774
                                             12 COMMON     2     0      2
                          _write_str
 ---------------------------------------------------------------------------------
 (2) _start_date                                           4     4      0    6728
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     776
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _D                                                    8     2      6   12750
                                             12 COMMON     2     2      0
                                              0 BANK0      6     0      6
                         _delay_main
                        _display_val
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _clock_setting                                        2     2      0   21194
                                             12 BANK0      2     2      0
                         _OutputPins
                                  _T
                       _button_reset
                         _delay_main
                      _set_time_date
                         _start_time
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _start_time                                           4     4      0    6660
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _write_str
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _write_str                                            9     7      2    6316
                                              3 COMMON     9     7      2
                          _writechar
 ---------------------------------------------------------------------------------
 (3) _button_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _T                                                   13     7      6    7066
                                              9 COMMON     1     1      0
                                              0 BANK0     12     6      6
                         _delay_main
                        _display_val
 ---------------------------------------------------------------------------------
 (2) _display_val                                          6     4      2    3348
                                              3 COMMON     6     4      2
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _writecmd_4line                                       1     1      0      68
                                              2 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (2) _delay_lcd                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _delay_main                                           2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _OutputPins                                           2     2      0     392
                                              3 COMMON     2     2      0
                          _InputPins
 ---------------------------------------------------------------------------------
 (4) _InputPins                                            3     1      2     392
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _clock_init                                           0     0      0     250
                        _ds1302_init
                          _port_init
                      _set_time_date
 ---------------------------------------------------------------------------------
 (2) _set_time_date                                        2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OutputPins
     _InputPins
   _button_reset
   _buzzer_init
   _clock_init
     _ds1302_init
       _time_write_1
     _port_init
     _set_time_date
       _time_write_1
   _clock_setting
     _OutputPins
       _InputPins
     _T
       _delay_main
       _display_val
         _writechar
           _delay_lcd
         _writecmd_4line
           _delay_lcd
     _button_reset
     _delay_main
     _set_time_date
       _time_write_1
     _start_time
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _date_setting
     _D
       _delay_main
       _display_val
         _writechar
           _delay_lcd
         _writecmd_4line
           _delay_lcd
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _OutputPins
       _InputPins
     ___bmul
     _button_reset
     _delay_main
     _display_val
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _set_time_date
       _time_write_1
     _start_date
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _week
       _write_str
         _writechar
           _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _display_clock
     _week
       _write_str
         _writechar
           _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writechar
       _delay_lcd
     _writecmd_4line
       _delay_lcd
   _get_temp
     ___lbdiv
     ___lbmod
     ___lwdiv
     _display_temp
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _read_byte
       _delay_temp
     _reset
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _initialisation
   _lcd_init
     _writecmd_4line
       _delay_lcd
   _temp_day
     _OK
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     ___wmul
     _cool
       _temp_check_lower
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _heat
       _temp_check_rise
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
   _temp_night
     _OK
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     ___wmul
     _cool
       _temp_check_lower
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _heat
       _temp_check_rise
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
   _temp_setting
     _OutputPins
       _InputPins
     _button_reset
     _set_day
       _OutputPins
         _InputPins
       _button_reset
       _temp_decrement
         _delay_main
       _temp_increment
         _delay_main
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _set_night
       _OutputPins
         _InputPins
       _button_reset
       _temp_decrement
         _delay_main
       _temp_increment
         _delay_main
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _write_str
     _writechar
       _delay_lcd
   _writecmd_4line
     _delay_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       A       7       12.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 18 17:27:59 2019

                        _D 141B                          _T 08A3                          pc 0002  
           ___bmul@product 0072                         D@C 0046                         D@D 0044  
                       D@i 0048                         D@j 007C                         ?_D 0044  
                       ?_T 0044                         T@C 0046                         T@T 0044  
                       T@i 0048                         T@j 004A                         l63 1EC0  
                       l65 1ECB                         l67 1ED6               ?_display_val 0073  
                       _OK 1D5D                         _TX 003C                         _TZ 003D  
                       _ge 003A                         _wd 002F                         fsr 0004  
      ___wmul@multiplicand 0072                        ??_D 007C                        ??_T 0079  
          ??_clock_setting 007E                        ?_OK 0070                        l211 1F6D  
                      l205 1E6C                        l537 0004                        l676 11EF  
                      l686 1235                        l946 1111                        _RA2 002A  
                      _RB0 0030                        _RA3 002B                        _RA4 002C  
                      _RA5 002D                        _RB4 0034                        _RB5 0035  
                      _RE0 0048                        _RE2 004A                        _THV 003E  
            ?_display_temp 0070                        _TLV 003F                        _shi 003B  
                      _wkd 0040                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000                       ??_OK 007C               __CFG_LVP$OFF 0000  
                     l1156 1E63            _temp_check_rise 121A                       l4102 092B  
                     l4112 0947                       l5000 0A32                       l4202 09F4  
                     l4130 0966                       l4124 0961                       l4118 094F  
                     l4070 08DB                       l5102 0B45                       l5022 0A4E  
                     l4310 1FBF                       l4080 0903                       l4064 08D9  
                     l4312 1FC0                       l4154 09A4                       l4170 09C0  
                     l5122 0B9A                       l5106 0B5C                       l4234 1450  
                     l4314 1F99                       l4322 112D                       l3620 1D85  
                     l4180 09CD                       l4148 09A2                       l4076 08F4  
                     l5044 0AA3                       l4244 146E                       l5300 05C2  
                     l4086 0909                       l5118 0B84                       l5054 0AC8  
                     l4262 14A7                       l4254 148B                       l4238 1459  
                     l5222 04C8                       l4342 1142                       l4430 0DEE  
                     l4192 09E0                       l4096 0929                       l4248 147C  
                     l5216 04C1                       l4274 14C2                       l5234 04F1  
                     l5162 0429                       l5138 0409                       l4442 0DFE  
                     l4196 09EC                       l5076 0AE3                       l4268 14A9  
                     l5332 0624                       l5252 052B                       l5180 0461  
                     l4364 1F3D                       l3812 1F05                       l4700 0316  
                     l3750 0822                       l5086 0B07                       l4278 14D1  
                     l3910 0051                       l3902 0037                       l5510 07BD  
                     l5414 06D5                       l5326 0612                       l5406 06B8  
                     l3806 1EFA                       l4518 0EFB                       l4534 0F4C  
                     l3752 0824                       l3744 0817                       l3672 1D2C  
                     l5512 07BF                       l5416 06D7                       l5352 0653  
                     l5336 0635                       l5248 0514                       l5192 04A5  
                     l4800 1E35                       l3832 12C8                       l3808 1EFE  
                     l4608 01C8                       l5600 1328                       l3666 1D71  
                     l3746 0819                       l5098 0B2F                       l3914 005E  
                     l3906 0044                       l5370 0672                       l5354 065A  
                     l5338 0637                       l5362 0662                       l5290 05B1  
                     l5178 045B                       l5186 0483                       l4810 1E44  
                     l3842 12E3                       l4634 0210                       l3780 088F  
                     l3756 082E                       l3676 1D32                       l5452 0719  
                     l5380 0695                       l5276 0589                       l5292 05B6  
                     l3844 12E7                       l4468 0E46                       l4724 0379  
                     l4660 0262                       l5620 134A                       l3934 1E98  
                     l3782 0894                       l3774 0881                       l3758 0834  
                     l3694 1164                       l5462 0742                       l5382 0697  
                     l5438 06F3                       l5278 058B                       l3790 0008  
                     l4558 0FAF                       l4494 0E98                       l5702 00CC  
                     l3776 0886                       l5376 0684                       l5288 05A5  
                     l4840 11A0                       l5640 1650                       l3848 12EE  
                     l3786 089E                       l4818 1E4C                       l4842 11AE  
                     l3954 1F7E                       l5714 00E9                       l5396 06B3  
                     l4852 11CF                       l3868 1213                       l5636 1644  
                     l5652 170C                       l4684 02C5                       l4596 01B8  
                     l5732 010F                       l3894 001D                       l5486 075E  
                     l5582 1400                       l5574 13EC                       l3886 1259  
                     l5670 007F                       l4848 11C4                       l4776 1109  
                     l5656 1718                       l5752 013D                       l5728 0107  
           ?_display_clock 0070                       l3898 002A                       l5586 140A  
                     l5578 13F6                       l5738 0124                       l5690 00AF  
                     l4884 1F17                       l4798 1E2C                       STR_1 10EB  
                     STR_2 10E3                       STR_3 10DF                       STR_4 10F7  
                     STR_5 10E7                       STR_6 10F3                       STR_7 10EF  
                     STR_8 10AA                       STR_9 1104                       u3025 1D80  
                     u3085 1E89                       u3455 1EB1                       u5135 0594  
                     u3625 0944                       u4515 11AF                       u3475 1F8E  
                     u3565 08F2                       u5325 06A0                       u5245 0640  
                     u4525 11BB                       u4455 1E4F                       u4535 11C5  
                     u5185 05E9                       u4385 1112                       u3755 09BD  
                     u4555 1F32                       u4395 1119                       u5445 074B  
                     u2975 1D94                       u4495 11A3                       u5385 06E0  
                     u5705 163E                       u5715 164A                       u5565 07C8  
                     u5725 1656                       u5575 13A4                       u5735 165E  
                     u3985 14C0                       u5585 13AF                       u5745 1706  
                     u5595 13BC                       u5755 1712                       u5765 171E  
                     u5775 1726           ??_initialisation 0070                       _heat 1E07  
                     _cool 1DE9                       _main 006B                       _pass 0035  
                     _week 0011                       btemp 007E              write_byte@val 0077  
         set_night@min_max 0044                       start 0000          ___bmul@multiplier 0073  
     __end_of_date_setting 07DB           _temp_check_lower 11D4                      ?_heat 0070  
                    ?_cool 0070                      ?_main 0070             ??_display_temp 007C  
          __end_of___lbdiv 1E46                      STR_10 1104                      STR_11 10B0  
                    STR_12 10A4                      STR_20 104D                      STR_13 10A8  
                    STR_21 102F                      STR_14 10A8                      STR_30 105B  
                    STR_22 1000                      STR_15 10FF                      STR_23 1085  
                    STR_31 103E                      STR_32 1000                      STR_24 1000  
                    STR_16 10FF                      STR_40 1011                      STR_41 10FB  
                    STR_33 10FB                      STR_25 10DA                      STR_17 107E  
            __CFG_WDTE$OFF 0000                      STR_26 1000                      STR_18 1082  
                    STR_50 103C                      STR_34 10B6                      STR_42 109E  
                    STR_51 1006                      STR_19 1082                      STR_27 1085  
                    STR_35 10D0                      STR_43 1069                      STR_28 1000  
                    STR_60 103C                      STR_52 10C1                      STR_36 10D5  
                    STR_44 10C6                      STR_53 103C                      STR_45 103C  
                    STR_61 10C1                      STR_37 1098                      STR_29 1076  
                    STR_70 103C                      STR_62 103C                      STR_54 103C  
                    STR_38 103C                      STR_46 10C1                      STR_63 1006  
                    STR_71 103C                      STR_55 103C                      STR_47 103C  
                    STR_39 1102                      STR_48 1006                      STR_72 103C  
                    STR_56 103C                      STR_64 10C6                      STR_80 109E  
                    STR_81 108C                      STR_65 103C                      STR_57 103C  
                    STR_49 10C6                      STR_73 10CB                      STR_66 1006  
                    STR_74 1092                      STR_58 1020                      STR_67 10C1  
                    STR_59 10C6                      STR_75 10BC                      STR_68 103C  
                    STR_76 109E            __end_of___lbmod 1E69                      ?_week 007C  
                    STR_69 103C                      STR_77 109E                      STR_78 108C  
                    STR_79 109E            __end_of___lwdiv 11D4                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089              __CFG_PWRTE$ON 0000                      _table 005D  
                    _reset 1F97             write_byte@temp 0076             __CFG_BOREN$OFF 0000  
          __end_of_set_day 1000                      pclath 000A                      week@w 007C  
   temp_check_lower@temp_e 0078               display_val@i 0073               display_val@t 0077  
                    status 0003                      wtemp0 007E            ___lbdiv@divisor 0070  
          ___lbdiv@counter 0073              ??_ds1302_init 0075               ?_buzzer_init 0070  
          __initialization 07DB               __end_of_heat 1E25               __end_of_cool 1E07  
             __end_of_main 0147               __end_of_week 006B                     ??_heat 007C  
                   ??_cool 007C                     ??_main 007E                     ??_week 007E  
  __end_of_temp_check_rise 1260             write_str@array 0073           ??_writecmd_4line 0072  
          ??_display_clock 0044                     T@j_261 004C                     T@j_262 004E  
                   _ADCON1 009F                     ?_reset 0070                     _TRISB4 0434  
                   _TRISE0 0448              ?_button_reset 0070         __size_of_InputPins 002A  
         __end_of_lcd_init 1DAF           __end_of_get_temp 141B           __end_of_get_time 1F38  
                   ___bmul 1D2A                     ___wmul 1107                  ??___lbdiv 0071  
                ??___lbmod 0071                  ??___lwdiv 0074        __end_of_ds1302_init 1D2A  
                   _table1 0020                     _table2 00A0                InputPins@RC 0070  
                   _shifen 0039                     _temp_d 0033                     _temp_p 0034  
          writecmd_4line@x 0072       __size_of_display_val 0095               ?_time_read_1 0070  
      time_write_1@time_tx 0074           __end_of_temp_day 1664                  ??_set_day 007C  
         ___lbdiv@dividend 0072            ___lbmod@divisor 0070    __end_of__initialization 07FC  
          ___lbmod@counter 0075                 _OutputPins 1260      __size_of_date_setting 0411  
     __end_of_display_temp 2000             ??_button_reset 0070        ___bmul@multiplicand 0070  
           __pcstackCOMMON 0070               __pidataBANK0 1D4C               __pidataBANK1 1D10  
            __end_of_reset 1FCB             set_day@min_max 0044           ___lbdiv@quotient 0074  
               __end_of_OK 1D6F         __size_of_delay_lcd 0014           temp_day@temp_max 004C  
         temp_day@temp_min 004E           ?_temp_check_rise 0070      __end_of_set_time_date 1EB7  
        __end_of_InputPins 1EE1               _date_setting 03CA                    ??_reset 0074  
               __pbssBANK0 0020   __end_of_temp_check_lower 121A    __size_of_temp_decrement 004E  
       __size_of_read_byte 002F                _ds1302_init 1D1A                 _delay_main 1D6F  
               _delay_temp 0003                 __pmaintext 006B       __size_of_buzzer_init 0007  
                  ?___bmul 0070                    ?___wmul 0070         time_read_1@time_rx 0074  
               _clock_init 0800         __size_of_set_night 0283                 __size_of_D 00BC  
               __size_of_T 015E      __end_of_clock_setting 0BB1         __size_of_port_init 0007  
  __size_of_temp_increment 002B                  ?_lcd_init 0070                  ?_get_temp 0070  
                ?_get_time 0070                 __stringtab 1800          __end_of_delay_lcd 1D97  
              ?_OutputPins 0070                    _FirstRC 0042         __size_of_writechar 001C  
       __size_of_write_str 003A              _night_dec_max 0038              _night_dec_min 0036  
                ?_temp_day 0070            __size_of___bmul 0011                    ___lbdiv 1E25  
                  ___lbmod 1E46            __size_of___wmul 0021                    ___lwdiv 1198  
            _night_one_max 0066              _night_one_min 0037              _night_ten_max 0067  
            _night_ten_min 0065                    __ptext1 12F5                    __ptext2 0147  
                  __ptext3 0D7D                    __ptext4 1EE1                    __ptext5 12A7  
                  __ptext6 1664                    __ptext7 159C                    __ptext8 1E07  
                  __ptext9 121A                 _buzz_count 002D       __end_of_button_reset 1CF2  
        __end_of_read_byte 1F67       __size_of_time_read_1 0030                    _set_day 0D7D  
            ?_temp_setting 0070                    clrloop0 1D09                 ??_lcd_init 0073  
               delay_lcd@i 0070                 ??_get_temp 0044                 ??_get_time 0075  
    __size_of_display_temp 0035       end_of_initialization 07FC          __end_of_set_night 03CA  
           display_clock@i 0046              ?_time_write_1 0070                ?_delay_main 0070  
              ?_delay_temp 0070                 ??_temp_day 0044          __end_of_port_init 1D00  
  __size_of_initialisation 0008                 _temp_night 1664               __pstringtext 1000  
              ?_clock_init 0070                  _PORTCbits 0007              date_setting@a 004C  
            date_setting@b 004D              date_setting@i 005B              date_setting@j 004F  
            date_setting@y 004E        __size_of_OutputPins 0047               _display_temp 1FCB  
        __end_of_writechar 1DCB          __end_of_write_str 1198             ??_temp_setting 007E  
         ___lbmod@dividend 0074      __end_of_display_clock 0D7D                 _start_date 172C  
               _start_time 14D7                ___lbmod@rem 0076             ??_time_write_1 0070  
           _temp_decrement 12A7              ??_display_val 0075             __end_of___bmul 1D3B  
           __end_of___wmul 1128                 _write_byte 1128        start_initialization 07DB  
    temp_check_rise@temp_e 0078             _temp_increment 1EE1        __size_of_delay_main 0014  
      __size_of_delay_temp 000E                  _InputPins 1EB7     __end_of_temp_decrement 12F5  
  __size_of_writecmd_4line 001E          ?_temp_check_lower 0070        __size_of_clock_init 000E  
             ?_ds1302_init 0070         ??_temp_check_lower 0074              reset@presence 0075  
                 ??___bmul 0071                   ??___wmul 0074                ?_temp_night 0070  
               init_fetch0 1D3B                __pdataBANK0 005D                __pdataBANK1 00A0  
              start_date@i 0044      __size_of_button_reset 0004                 read_byte@i 0076  
               read_byte@j 0031                start_time@i 0044     __end_of_temp_increment 1F0C  
      __end_of_display_val 08A3             set_time_date@i 0075                  ___latbits 0002  
            __pcstackBANK0 0044                  __end_of_D 14D7                  __end_of_T 0A01  
              ?_start_date 0070                ?_start_time 0070   __size_of_temp_check_rise 0046  
               ?_InputPins 0070            ?_temp_decrement 0070          __size_of_lcd_init 0018  
             ??_OutputPins 0073          __size_of_get_temp 00BA          __size_of_get_time 002C  
              _day_dec_max 006B                _day_dec_min 0068              ??_buzzer_init 0070  
             _button_reset 1CEE           ___lwdiv@dividend 0072                  _delay_lcd 1D83  
     __end_of_temp_setting 1361             _initialisation 1D00                _day_one_max 006C  
              _day_one_min 0069                   ?___lbdiv 0070     __size_of_set_time_date 0028  
                 ?___lbmod 0070                _day_ten_max 006D                _day_ten_min 006A  
                 ?___lwdiv 0070          __size_of_temp_day 00C8                ?_write_byte 0070  
                __pstrings 1800             temp_night@temp 0050            ?_temp_increment 0070  
       __end_of_OutputPins 12A7       __end_of_time_write_1 1E8F                   ?_set_day 0070  
         ___lwdiv@quotient 0075                  _read_byte 1F38             __size_of_reset 0034  
        temp_decrement@end 0072        __size_of_temp_night 00C8                __size_of_OK 0012  
           ___wmul@product 0074                  clear_ram0 1D08               ??_delay_main 0070  
   __end_of_initialisation 1D08               ??_delay_temp 0071                 ?_delay_lcd 0070  
   __size_of_clock_setting 01B0                  _set_night 0147        __end_of_buzzer_init 1CF9  
              _display_val 080E                  _port_init 1CF9        __size_of_start_date 00D4  
             ??_clock_init 0077        __size_of_start_time 00C5                __stringbase 1812  
            ??_time_read_1 0070          ___wmul@multiplier 0070                  get_time@i 0076  
              write_byte@i 0078         __end_of_delay_main 1D83              _set_time_date 1E8F  
       __end_of_delay_temp 0011                  _writechar 1DAF                 ?_read_byte 0070  
                _write_str 115E                ??_InputPins 0072             _writecmd_4line 1DCB  
      __size_of_write_byte 0036                   _SecondRC 0043         __end_of_clock_init 080E  
          ?_initialisation 0070          ??_temp_check_rise 0074                 ?_set_night 0070  
     __size_of_ds1302_init 0010           __size_of___lbdiv 0021           __size_of___lbmod 0023  
                 _OutputRC 0041           __size_of___lwdiv 003C                 ?_port_init 0070  
       __end_of__stringtab 1812              _clock_setting 0A01            ___lwdiv@divisor 0070  
        date_setting@j_241 0051          date_setting@j_242 0053          date_setting@j_243 0055  
        date_setting@j_244 0057          date_setting@j_245 0059             ?_set_time_date 0070  
          ___lwdiv@counter 0077              ?_date_setting 0070                   __ptext10 1DE9  
                 __ptext11 11D4                   __ptext20 1F97                   __ptext12 1107  
                 __ptext21 1F38                   __ptext13 1D5D                   __ptext30 172C  
                 __ptext22 0003                   __ptext14 1D97                   __ptext31 1D2A  
                 __ptext23 1FCB                   __ptext15 1D00                   __ptext40 1DAF  
                 __ptext32 141B                   __ptext24 1198                   __ptext16 1F0C  
                 __ptext41 1D83                   __ptext33 0A01                   __ptext25 1E46  
                 __ptext17 1F67                   __ptext50 1CF2                   __ptext42 1D6F  
                 __ptext34 14D7                   __ptext26 1E25                   __ptext18 1361  
                 __ptext43 1260                   __ptext35 115E                   __ptext27 0BB1  
                 __ptext19 1128                   __ptext44 1EB7                   __ptext36 1CEE  
                 __ptext28 03CA                   __ptext45 0800                   __ptext37 08A3  
                 __ptext29 0011                   __ptext46 1E8F                   __ptext38 080E  
                 __ptext47 1CF9                   __ptext39 1DCB                   __ptext48 1D1A  
                 __ptext49 1E69           __size_of_set_day 0283        __end_of_time_read_1 1F97  
               ?_writechar 0070                   _lcd_init 1D97                 ?_write_str 0073  
                 _get_temp 1361                   _get_time 1F0C     __end_of_writecmd_4line 1DE9  
    __size_of_temp_setting 006C              __size_of_heat 001E              __size_of_cool 001E  
            __size_of_main 00DC              __size_of_week 005A                _buzzer_init 1CF2  
           clock_setting@i 0050                ??_delay_lcd 0070                   _temp_dec 0027  
                 _temp_day 159C                   _temp_sec 0032                   _temp_one 0029  
                 _temp_ten 002B               ??_temp_night 0044      __size_of_time_write_1 0026  
   __size_of_display_clock 01CC                 writechar@x 0072                 write_str@i 007A  
               write_str@p 0078  __size_of_temp_check_lower 0046                delay_main@i 0070  
              delay_temp@x 0072                delay_temp@y 0070                delay_temp@z 0073  
             temp_day@temp 0050             ?_clock_setting 0070             ??_date_setting 004A  
           read_byte@value 0075               _temp_setting 12F5                   init_ram0 1D3F  
         ??_temp_decrement 0072                ??_read_byte 0074               ??_start_date 007C  
          ?_writecmd_4line 0070               ??_start_time 007C         __end_of_temp_night 172C  
                stringcode 180A               _time_write_1 1E69                ??_set_night 007C  
         ??_temp_increment 0072                ??_port_init 0070               ??_write_byte 0074  
       __end_of_start_date 1800         __end_of_start_time 159C                 _OPTION_REG 0081  
              _time_read_1 1F67               time_read_1@j 0072            ??_set_time_date 0075  
                 stringtab 1800                ??_writechar 0072                ??_write_str 0075  
       temp_night@temp_max 004C         temp_night@temp_min 004E              _display_clock 0BB1  
            time_write_1@j 0072         __end_of_write_byte 115E  
