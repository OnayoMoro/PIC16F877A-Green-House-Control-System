

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 02:04:07 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F877A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  0088                     	;# 
   143  0089                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0088                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010E                     	;# 
   580  010F                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583                           
   584                           	psect	idataBANK0
   585  1D60                     __pidataBANK0:	
   586                           
   587                           ;initializer for _table
   588  1D60  3455               	retlw	85
   589  1D61  3429               	retlw	41
   590  1D62  3408               	retlw	8
   591  1D63  3427               	retlw	39
   592  1D64  3402               	retlw	2
   593  1D65  3407               	retlw	7
   594  1D66  3422               	retlw	34
   595  1D67  3400               	retlw	0
   596                           
   597                           ;initializer for _night_ten_min
   598  1D68  3402               	retlw	2
   599                           
   600                           ;initializer for _night_one_max
   601  1D69  3401               	retlw	1
   602                           
   603                           ;initializer for _night_ten_max
   604  1D6A  3402               	retlw	2
   605                           
   606                           ;initializer for _day_dec_min
   607  1D6B  3405               	retlw	5
   608                           
   609                           ;initializer for _day_one_min
   610  1D6C  3404               	retlw	4
   611                           
   612                           ;initializer for _day_ten_min
   613  1D6D  3402               	retlw	2
   614                           
   615                           ;initializer for _day_dec_max
   616  1D6E  3405               	retlw	5
   617                           
   618                           ;initializer for _day_one_max
   619  1D6F  3405               	retlw	5
   620                           
   621                           ;initializer for _day_ten_max
   622  1D70  3402               	retlw	2
   623                           
   624                           	psect	idataBANK1
   625  1D13                     __pidataBANK1:	
   626                           
   627                           ;initializer for _table2
   628  1D13  3430               	retlw	48
   629  1D14  3431               	retlw	49
   630  1D15  3432               	retlw	50
   631  1D16  3433               	retlw	51
   632  1D17  3434               	retlw	52
   633  1D18  3435               	retlw	53
   634  1D19  3436               	retlw	54
   635  1D1A  3437               	retlw	55
   636  1D1B  3438               	retlw	56
   637  1D1C  3439               	retlw	57
   638  0009                     _PORTE	set	9
   639  0007                     _PORTCbits	set	7
   640  0007                     _PORTC	set	7
   641  0008                     _PORTD	set	8
   642  004A                     _RE2	set	74
   643  0048                     _RE0	set	72
   644  0034                     _RB4	set	52
   645  0035                     _RB5	set	53
   646  0030                     _RB0	set	48
   647  002A                     _RA2	set	42
   648  002B                     _RA3	set	43
   649  002C                     _RA4	set	44
   650  002D                     _RA5	set	45
   651  0089                     _TRISE	set	137
   652  0081                     _OPTION_REG	set	129
   653  0086                     _TRISB	set	134
   654  0087                     _TRISC	set	135
   655  0088                     _TRISD	set	136
   656  0085                     _TRISA	set	133
   657  009F                     _ADCON1	set	159
   658  0448                     _TRISE0	set	1096
   659  0434                     _TRISB4	set	1076
   660                           
   661                           	psect	strings
   662  1800                     __pstrings:	
   663  1800                     stringtab:	
   664  1800                     __stringtab:	
   665                           
   666                           ;	String table - string pointers are 2 bytes each
   667  1800  1BFF               	btfsc	btemp+1,7
   668  1801  280A               	ljmp	stringcode
   669  1802  1383               	bcf	3,7
   670  1803  187F               	btfsc	btemp+1,0
   671  1804  1783               	bsf	3,7
   672  1805  0800               	movf	0,w
   673  1806  0A84               	incf	4,f
   674  1807  1903               	skipnz
   675  1808  0AFF               	incf	btemp+1,f
   676  1809  0008               	return
   677  180A                     stringcode:	
   678  180A  087F               	movf	btemp+1,w
   679  180B  397F               	andlw	127
   680  180C  008A               	movwf	10
   681  180D  0804               	movf	4,w
   682  180E  0A84               	incf	4,f
   683  180F  1903               	skipnz
   684  1810  0AFF               	incf	btemp+1,f
   685  1811  0082               	movwf	2
   686  1812                     __stringbase:	
   687  1812                     __end_of__stringtab:	
   688                           
   689                           	psect	stringtext
   690  1000                     __pstringtext:	
   691  1000                     STR_22:	
   692  1000  3420               	retlw	32	;' '
   693  1001  3420               	retlw	32	;' '
   694  1002  3420               	retlw	32	;' '
   695  1003  3420               	retlw	32	;' '
   696  1004  3420               	retlw	32	;' '
   697  1005  3420               	retlw	32	;' '
   698  1006  3420               	retlw	32	;' '
   699  1007  3420               	retlw	32	;' '
   700  1008  3420               	retlw	32	;' '
   701  1009  3420               	retlw	32	;' '
   702  100A  3420               	retlw	32	;' '
   703  100B  3420               	retlw	32	;' '
   704  100C  3420               	retlw	32	;' '
   705  100D  3420               	retlw	32	;' '
   706  100E  3420               	retlw	32	;' '
   707  100F  3420               	retlw	32	;' '
   708  1010  3400               	retlw	0
   709  1011                     STR_40:	
   710  1011  3454               	retlw	84	;'T'
   711  1012  3465               	retlw	101	;'e'
   712  1013  346D               	retlw	109	;'m'
   713  1014  3470               	retlw	112	;'p'
   714  1015  3420               	retlw	32	;' '
   715  1016  3454               	retlw	84	;'T'
   716  1017  3468               	retlw	104	;'h'
   717  1018  3472               	retlw	114	;'r'
   718  1019  3465               	retlw	101	;'e'
   719  101A  3473               	retlw	115	;'s'
   720  101B  3468               	retlw	104	;'h'
   721  101C  346F               	retlw	111	;'o'
   722  101D  346C               	retlw	108	;'l'
   723  101E  3464               	retlw	100	;'d'
   724  101F  3400               	retlw	0
   725  1020                     STR_58:	
   726  1020  344E               	retlw	78	;'N'
   727  1021  3469               	retlw	105	;'i'
   728  1022  3467               	retlw	103	;'g'
   729  1023  3468               	retlw	104	;'h'
   730  1024  3474               	retlw	116	;'t'
   731  1025  3420               	retlw	32	;' '
   732  1026  3453               	retlw	83	;'S'
   733  1027  3465               	retlw	101	;'e'
   734  1028  3474               	retlw	116	;'t'
   735  1029  3474               	retlw	116	;'t'
   736  102A  3469               	retlw	105	;'i'
   737  102B  346E               	retlw	110	;'n'
   738  102C  3467               	retlw	103	;'g'
   739  102D  3473               	retlw	115	;'s'
   740  102E  3400               	retlw	0
   741  102F                     STR_21:	
   742  102F  3443               	retlw	67	;'C'
   743  1030  3468               	retlw	104	;'h'
   744  1031  3461               	retlw	97	;'a'
   745  1032  346E               	retlw	110	;'n'
   746  1033  3467               	retlw	103	;'g'
   747  1034  3465               	retlw	101	;'e'
   748  1035  3420               	retlw	32	;' '
   749  1036  3474               	retlw	116	;'t'
   750  1037  3469               	retlw	105	;'i'
   751  1038  346D               	retlw	109	;'m'
   752  1039  3465               	retlw	101	;'e'
   753  103A  342E               	retlw	46	;'.'
   754  103B  342E               	retlw	46	;'.'
   755  103C  342E               	retlw	46	;'.'
   756  103D  3400               	retlw	0
   757  103E                     STR_31:	
   758  103E  3443               	retlw	67	;'C'
   759  103F  3468               	retlw	104	;'h'
   760  1040  3461               	retlw	97	;'a'
   761  1041  346E               	retlw	110	;'n'
   762  1042  3467               	retlw	103	;'g'
   763  1043  3465               	retlw	101	;'e'
   764  1044  3420               	retlw	32	;' '
   765  1045  3464               	retlw	100	;'d'
   766  1046  3461               	retlw	97	;'a'
   767  1047  3474               	retlw	116	;'t'
   768  1048  3465               	retlw	101	;'e'
   769  1049  342E               	retlw	46	;'.'
   770  104A  342E               	retlw	46	;'.'
   771  104B  342E               	retlw	46	;'.'
   772  104C  3400               	retlw	0
   773  104D                     STR_20:	
   774  104D  3454               	retlw	84	;'T'
   775  104E  3469               	retlw	105	;'i'
   776  104F  346D               	retlw	109	;'m'
   777  1050  3465               	retlw	101	;'e'
   778  1051  3420               	retlw	32	;' '
   779  1052  3453               	retlw	83	;'S'
   780  1053  3465               	retlw	101	;'e'
   781  1054  3474               	retlw	116	;'t'
   782  1055  3474               	retlw	116	;'t'
   783  1056  3469               	retlw	105	;'i'
   784  1057  346E               	retlw	110	;'n'
   785  1058  3467               	retlw	103	;'g'
   786  1059  3473               	retlw	115	;'s'
   787  105A  3400               	retlw	0
   788  105B                     STR_30:	
   789  105B  3444               	retlw	68	;'D'
   790  105C  3461               	retlw	97	;'a'
   791  105D  3474               	retlw	116	;'t'
   792  105E  3465               	retlw	101	;'e'
   793  105F  3420               	retlw	32	;' '
   794  1060  3453               	retlw	83	;'S'
   795  1061  3465               	retlw	101	;'e'
   796  1062  3474               	retlw	116	;'t'
   797  1063  3474               	retlw	116	;'t'
   798  1064  3469               	retlw	105	;'i'
   799  1065  346E               	retlw	110	;'n'
   800  1066  3467               	retlw	103	;'g'
   801  1067  3473               	retlw	115	;'s'
   802  1068  3400               	retlw	0
   803  1069                     STR_43:	
   804  1069  3444               	retlw	68	;'D'
   805  106A  3461               	retlw	97	;'a'
   806  106B  3479               	retlw	121	;'y'
   807  106C  3420               	retlw	32	;' '
   808  106D  3453               	retlw	83	;'S'
   809  106E  3465               	retlw	101	;'e'
   810  106F  3474               	retlw	116	;'t'
   811  1070  3474               	retlw	116	;'t'
   812  1071  3469               	retlw	105	;'i'
   813  1072  346E               	retlw	110	;'n'
   814  1073  3467               	retlw	103	;'g'
   815  1074  3473               	retlw	115	;'s'
   816  1075  3400               	retlw	0
   817  1076                     STR_29:	
   818  1076  3453               	retlw	83	;'S'
   819  1077  3465               	retlw	101	;'e'
   820  1078  3463               	retlw	99	;'c'
   821  1079  346F               	retlw	111	;'o'
   822  107A  346E               	retlw	110	;'n'
   823  107B  3464               	retlw	100	;'d'
   824  107C  3473               	retlw	115	;'s'
   825  107D  3400               	retlw	0
   826  107E                     STR_17:	
   827  107E  3457               	retlw	87	;'W'
   828  107F  3465               	retlw	101	;'e'
   829  1080  3465               	retlw	101	;'e'
   830  1081  346B               	retlw	107	;'k'
   831  1082  343A               	retlw	58	;':'
   832  1083  3420               	retlw	32	;' '
   833  1084  3400               	retlw	0
   834  1085                     STR_23:	
   835  1085  344D               	retlw	77	;'M'
   836  1086  3469               	retlw	105	;'i'
   837  1087  346E               	retlw	110	;'n'
   838  1088  3475               	retlw	117	;'u'
   839  1089  3474               	retlw	116	;'t'
   840  108A  3465               	retlw	101	;'e'
   841  108B  3400               	retlw	0
   842  108C                     STR_78:	
   843  108C  3444               	retlw	68	;'D'
   844  108D  3461               	retlw	97	;'a'
   845  108E  3479               	retlw	121	;'y'
   846  108F  3420               	retlw	32	;' '
   847  1090  3420               	retlw	32	;' '
   848  1091  3400               	retlw	0
   849  1092                     STR_74:	
   850  1092  3448               	retlw	72	;'H'
   851  1093  3465               	retlw	101	;'e'
   852  1094  3461               	retlw	97	;'a'
   853  1095  3474               	retlw	116	;'t'
   854  1096  3420               	retlw	32	;' '
   855  1097  3400               	retlw	0
   856  1098                     STR_37:	
   857  1098  3454               	retlw	84	;'T'
   858  1099  3465               	retlw	101	;'e'
   859  109A  346D               	retlw	109	;'m'
   860  109B  3470               	retlw	112	;'p'
   861  109C  343A               	retlw	58	;':'
   862  109D  3400               	retlw	0
   863  109E                     STR_42:	
   864  109E  344E               	retlw	78	;'N'
   865  109F  3469               	retlw	105	;'i'
   866  10A0  3467               	retlw	103	;'g'
   867  10A1  3468               	retlw	104	;'h'
   868  10A2  3474               	retlw	116	;'t'
   869  10A3  3400               	retlw	0
   870  10A4                     STR_12:	
   871  10A4  3454               	retlw	84	;'T'
   872  10A5  3469               	retlw	105	;'i'
   873  10A6  346D               	retlw	109	;'m'
   874  10A7  3465               	retlw	101	;'e'
   875  10A8  343A               	retlw	58	;':'
   876  10A9  3400               	retlw	0
   877  10AA                     STR_8:	
   878  10AA  3444               	retlw	68	;'D'
   879  10AB  3461               	retlw	97	;'a'
   880  10AC  3474               	retlw	116	;'t'
   881  10AD  3465               	retlw	101	;'e'
   882  10AE  343A               	retlw	58	;':'
   883  10AF  3400               	retlw	0
   884  10B0                     STR_11:	
   885  10B0  3457               	retlw	87	;'W'
   886  10B1  3465               	retlw	101	;'e'
   887  10B2  3465               	retlw	101	;'e'
   888  10B3  346B               	retlw	107	;'k'
   889  10B4  343A               	retlw	58	;':'
   890  10B5  3400               	retlw	0
   891  10B6                     STR_34:	
   892  10B6  344D               	retlw	77	;'M'
   893  10B7  346F               	retlw	111	;'o'
   894  10B8  346E               	retlw	110	;'n'
   895  10B9  3474               	retlw	116	;'t'
   896  10BA  3468               	retlw	104	;'h'
   897  10BB  3400               	retlw	0
   898  10BC                     STR_75:	
   899  10BC  344F               	retlw	79	;'O'
   900  10BD  344B               	retlw	75	;'K'
   901  10BE  3420               	retlw	32	;' '
   902  10BF  3420               	retlw	32	;' '
   903  10C0  3400               	retlw	0
   904  10C1                     STR_46:	
   905  10C1  344D               	retlw	77	;'M'
   906  10C2  3469               	retlw	105	;'i'
   907  10C3  346E               	retlw	110	;'n'
   908  10C4  343A               	retlw	58	;':'
   909  10C5  3400               	retlw	0
   910  10C6                     STR_44:	
   911  10C6  344D               	retlw	77	;'M'
   912  10C7  3461               	retlw	97	;'a'
   913  10C8  3478               	retlw	120	;'x'
   914  10C9  343A               	retlw	58	;':'
   915  10CA  3400               	retlw	0
   916  10CB                     STR_73:	
   917  10CB  3443               	retlw	67	;'C'
   918  10CC  346F               	retlw	111	;'o'
   919  10CD  346F               	retlw	111	;'o'
   920  10CE  346C               	retlw	108	;'l'
   921  10CF  3400               	retlw	0
   922  10D0                     STR_35:	
   923  10D0  3457               	retlw	87	;'W'
   924  10D1  3465               	retlw	101	;'e'
   925  10D2  3465               	retlw	101	;'e'
   926  10D3  346B               	retlw	107	;'k'
   927  10D4  3400               	retlw	0
   928  10D5                     STR_36:	
   929  10D5  3459               	retlw	89	;'Y'
   930  10D6  3465               	retlw	101	;'e'
   931  10D7  3461               	retlw	97	;'a'
   932  10D8  3472               	retlw	114	;'r'
   933  10D9  3400               	retlw	0
   934  10DA                     STR_25:	
   935  10DA  3448               	retlw	72	;'H'
   936  10DB  346F               	retlw	111	;'o'
   937  10DC  3475               	retlw	117	;'u'
   938  10DD  3472               	retlw	114	;'r'
   939  10DE  3400               	retlw	0
   940  10DF                     STR_3:	
   941  10DF  3457               	retlw	87	;'W'
   942  10E0  3465               	retlw	101	;'e'
   943  10E1  3464               	retlw	100	;'d'
   944  10E2  3400               	retlw	0
   945  10E3                     STR_2:	
   946  10E3  3454               	retlw	84	;'T'
   947  10E4  3475               	retlw	117	;'u'
   948  10E5  3465               	retlw	101	;'e'
   949  10E6  3400               	retlw	0
   950  10E7                     STR_5:	
   951  10E7  3446               	retlw	70	;'F'
   952  10E8  3472               	retlw	114	;'r'
   953  10E9  3469               	retlw	105	;'i'
   954  10EA  3400               	retlw	0
   955  10EB                     STR_1:	
   956  10EB  344D               	retlw	77	;'M'
   957  10EC  346F               	retlw	111	;'o'
   958  10ED  346E               	retlw	110	;'n'
   959  10EE  3400               	retlw	0
   960  10EF                     STR_7:	
   961  10EF  3453               	retlw	83	;'S'
   962  10F0  3475               	retlw	117	;'u'
   963  10F1  346E               	retlw	110	;'n'
   964  10F2  3400               	retlw	0
   965  10F3                     STR_6:	
   966  10F3  3453               	retlw	83	;'S'
   967  10F4  3461               	retlw	97	;'a'
   968  10F5  3474               	retlw	116	;'t'
   969  10F6  3400               	retlw	0
   970  10F7                     STR_4:	
   971  10F7  3454               	retlw	84	;'T'
   972  10F8  3468               	retlw	104	;'h'
   973  10F9  3475               	retlw	117	;'u'
   974  10FA  3400               	retlw	0
   975  10FB                     STR_33:	
   976  10FB  3444               	retlw	68	;'D'
   977  10FC  3461               	retlw	97	;'a'
   978  10FD  3479               	retlw	121	;'y'
   979  10FE  3400               	retlw	0
   980  10FF                     STR_15:	
   981  10FF  342F               	retlw	47	;'/'
   982  1100  3420               	retlw	32	;' '
   983  1101  3400               	retlw	0
   984  1102                     STR_39:	
   985  1102  3443               	retlw	67	;'C'
   986  1103  3400               	retlw	0
   987  1104                     STR_9:	
   988  1104  342F               	retlw	47	;'/'
   989  1105  3400               	retlw	0
   990  1006                     
   991                           ; #config settings
   992  0000                     
   993                           	psect	cinit
   994  07DB                     start_initialization:	
   995  07DB                     __initialization:	
   996                           
   997                           ; Initialize objects allocated to BANK1
   998  07DB  1383               	bcf	3,7	;select IRP bank0
   999  07DC  30AA               	movlw	low (__pdataBANK1+10)
  1000  07DD  00FD               	movwf	btemp+-1
  1001  07DE  301D               	movlw	high __pidataBANK1
  1002  07DF  00FE               	movwf	btemp
  1003  07E0  3013               	movlw	low __pidataBANK1
  1004  07E1  00FF               	movwf	btemp+1
  1005  07E2  30A0               	movlw	low __pdataBANK1
  1006  07E3  0084               	movwf	4
  1007  07E4  160A  158A  2553  120A  118A  	fcall	init_ram0
  1008                           
  1009                           ; Initialize objects allocated to BANK0
  1010  07E9  306E               	movlw	low (__pdataBANK0+17)
  1011  07EA  00FD               	movwf	btemp+-1
  1012  07EB  301D               	movlw	high __pidataBANK0
  1013  07EC  00FE               	movwf	btemp
  1014  07ED  3060               	movlw	low __pidataBANK0
  1015  07EE  00FF               	movwf	btemp+1
  1016  07EF  305D               	movlw	low __pdataBANK0
  1017  07F0  0084               	movwf	4
  1018  07F1  160A  158A  2553  120A  118A  	fcall	init_ram0
  1019                           
  1020                           ; Clear objects allocated to BANK0
  1021  07F6  3020               	movlw	low __pbssBANK0
  1022  07F7  0084               	movwf	4
  1023  07F8  3044               	movlw	low (__pbssBANK0+36)
  1024  07F9  160A  158A  250B   	fcall	clear_ram0
  1025  07FC                     end_of_initialization:	
  1026                           ;End of C runtime variable initialization code
  1027                           
  1028  07FC                     __end_of__initialization:	
  1029  07FC  0183               	clrf	3
  1030  07FD  120A  118A  286B   	ljmp	_main	;jump to C main() function
  1031                           
  1032                           	psect	bssBANK0
  1033  0020                     __pbssBANK0:	
  1034  0020                     _table1:	
  1035  0020                     	ds	7
  1036  0027                     _temp_dec:	
  1037  0027                     	ds	2
  1038  0029                     _temp_one:	
  1039  0029                     	ds	2
  1040  002B                     _temp_ten:	
  1041  002B                     	ds	2
  1042  002D                     _buzz_count:	
  1043  002D                     	ds	2
  1044  002F                     _wd:	
  1045  002F                     	ds	2
  1046  0031                     read_byte@j:	
  1047  0031                     	ds	1
  1048  0032                     _temp_sec:	
  1049  0032                     	ds	1
  1050  0033                     _temp_d:	
  1051  0033                     	ds	1
  1052  0034                     _temp_p:	
  1053  0034                     	ds	1
  1054  0035                     _pass:	
  1055  0035                     	ds	1
  1056  0036                     _night_dec_min:	
  1057  0036                     	ds	1
  1058  0037                     _night_one_min:	
  1059  0037                     	ds	1
  1060  0038                     _night_dec_max:	
  1061  0038                     	ds	1
  1062  0039                     _shifen:	
  1063  0039                     	ds	1
  1064  003A                     _ge:	
  1065  003A                     	ds	1
  1066  003B                     _shi:	
  1067  003B                     	ds	1
  1068  003C                     _TX:	
  1069  003C                     	ds	1
  1070  003D                     _TZ:	
  1071  003D                     	ds	1
  1072  003E                     _THV:	
  1073  003E                     	ds	1
  1074  003F                     _TLV:	
  1075  003F                     	ds	1
  1076  0040                     _wkd:	
  1077  0040                     	ds	1
  1078  0041                     _OutputRC:	
  1079  0041                     	ds	1
  1080  0042                     _FirstRC:	
  1081  0042                     	ds	1
  1082  0043                     _SecondRC:	
  1083  0043                     	ds	1
  1084                           
  1085                           	psect	dataBANK0
  1086  005D                     __pdataBANK0:	
  1087  005D                     _table:	
  1088  005D                     	ds	8
  1089  0065                     _night_ten_min:	
  1090  0065                     	ds	1
  1091  0066                     _night_one_max:	
  1092  0066                     	ds	1
  1093  0067                     _night_ten_max:	
  1094  0067                     	ds	1
  1095  0068                     _day_dec_min:	
  1096  0068                     	ds	1
  1097  0069                     _day_one_min:	
  1098  0069                     	ds	1
  1099  006A                     _day_ten_min:	
  1100  006A                     	ds	1
  1101  006B                     _day_dec_max:	
  1102  006B                     	ds	1
  1103  006C                     _day_one_max:	
  1104  006C                     	ds	1
  1105  006D                     _day_ten_max:	
  1106  006D                     	ds	1
  1107                           
  1108                           	psect	dataBANK1
  1109  00A0                     __pdataBANK1:	
  1110  00A0                     _table2:	
  1111  00A0                     	ds	10
  1112                           
  1113                           	psect	inittext
  1114  1D4F                     init_fetch0:	
  1115                           ;	Called with low address in FSR and high address in W
  1116                           
  1117  1D4F  087E               	movf	126,w
  1118  1D50  008A               	movwf	10
  1119  1D51  087F               	movf	127,w
  1120  1D52  0082               	movwf	2
  1121  1D53                     init_ram0:	
  1122                           ;Called with:
  1123                           ;	high address of idata address in btemp 
  1124                           ;	low address of idata address in btemp+1 
  1125                           ;	low address of data in FSR
  1126                           ;	high address + 1 of data in btemp-1
  1127                           
  1128  1D53  254F  160A  158A   	fcall	init_fetch0
  1129  1D56  0080               	movwf	0
  1130  1D57  0A84               	incf	4,f
  1131  1D58  0804               	movf	4,w
  1132  1D59  067D               	xorwf	125,w
  1133  1D5A  1903               	btfsc	3,2
  1134  1D5B  3400               	retlw	0
  1135  1D5C  0AFF               	incf	127,f
  1136  1D5D  1903               	btfsc	3,2
  1137  1D5E  0AFE               	incf	126,f
  1138  1D5F  2D53               	goto	init_ram0
  1139                           
  1140                           	psect	clrtext
  1141  1D0B                     clear_ram0:	
  1142                           ;	Called with FSR containing the base address, and
  1143                           ;	W with the last address+1
  1144                           
  1145  1D0B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1146  1D0C                     clrloop0:	
  1147  1D0C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1148  1D0D  0A84               	incf	4,f	;increment pointer
  1149  1D0E  0604               	xorwf	4,w	;XOR with final address
  1150  1D0F  1903               	btfsc	3,2	;have we reached the end yet?
  1151  1D10  3400               	retlw	0	;all done for this memory range, return
  1152  1D11  0604               	xorwf	4,w	;XOR again to restore value
  1153  1D12  2D0C               	goto	clrloop0	;do the next byte
  1154                           
  1155                           	psect	cstackCOMMON
  1156  0070                     __pcstackCOMMON:	
  1157  0070                     ?_writechar:	
  1158  0070                     ?_InputPins:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_time_write_1:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_time_write_1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_time_read_1:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_time_read_1:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_delay_main:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_delay_main:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_set_day:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_set_night:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_temp_increment:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_temp_decrement:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_cool:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_heat:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_OK:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_temp_check_lower:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_temp_check_rise:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_delay_lcd:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ??_delay_lcd:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_writecmd_4line:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_lcd_init:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_initialisation:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_initialisation:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_OutputPins:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_button_reset:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ??_button_reset:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_ds1302_init:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_set_time_date:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_get_time:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_port_init:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ??_port_init:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_display_clock:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_clock_init:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_start_date:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_start_time:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_clock_setting:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_date_setting:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_buzzer_init:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ??_buzzer_init:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_delay_temp:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_display_temp:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_write_byte:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_read_byte:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_get_temp:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_temp_setting:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_temp_day:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_temp_night:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_main:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?___bmul:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?___lbdiv:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?___lbmod:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_reset:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?___wmul:	
  1312                           ; 2 bytes @ 0x0
  1313                           
  1314  0070                     ?___lwdiv:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317  0070                     delay_temp@y:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0070                     ___bmul@multiplicand:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ___lbdiv@divisor:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ___lbmod@divisor:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     delay_lcd@i:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     InputPins@RC:	
  1333                           ; 2 bytes @ 0x0
  1334                           
  1335  0070                     delay_main@i:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338  0070                     ___wmul@multiplier:	
  1339                           ; 2 bytes @ 0x0
  1340                           
  1341  0070                     ___lwdiv@divisor:	
  1342                           ; 2 bytes @ 0x0
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x0
  1346  0070                     	ds	1
  1347  0071                     ??_delay_temp:	
  1348  0071                     ??___bmul:	
  1349                           ; 1 bytes @ 0x1
  1350                           
  1351  0071                     ??___lbdiv:	
  1352                           ; 1 bytes @ 0x1
  1353                           
  1354  0071                     ??___lbmod:	
  1355                           ; 1 bytes @ 0x1
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x1
  1359  0071                     	ds	1
  1360  0072                     ??_writechar:	
  1361  0072                     ??_InputPins:	
  1362                           ; 1 bytes @ 0x2
  1363                           
  1364  0072                     ??_temp_increment:	
  1365                           ; 1 bytes @ 0x2
  1366                           
  1367  0072                     ??_temp_decrement:	
  1368                           ; 1 bytes @ 0x2
  1369                           
  1370  0072                     ??_writecmd_4line:	
  1371                           ; 1 bytes @ 0x2
  1372                           
  1373  0072                     writechar@x:	
  1374                           ; 1 bytes @ 0x2
  1375                           
  1376  0072                     writecmd_4line@x:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379  0072                     delay_temp@x:	
  1380                           ; 1 bytes @ 0x2
  1381                           
  1382  0072                     ___bmul@product:	
  1383                           ; 1 bytes @ 0x2
  1384                           
  1385  0072                     ___lbdiv@dividend:	
  1386                           ; 1 bytes @ 0x2
  1387                           
  1388  0072                     time_write_1@j:	
  1389                           ; 1 bytes @ 0x2
  1390                           
  1391  0072                     time_read_1@j:	
  1392                           ; 2 bytes @ 0x2
  1393                           
  1394  0072                     temp_decrement@end:	
  1395                           ; 2 bytes @ 0x2
  1396                           
  1397  0072                     ___wmul@multiplicand:	
  1398                           ; 2 bytes @ 0x2
  1399                           
  1400  0072                     ___lwdiv@dividend:	
  1401                           ; 2 bytes @ 0x2
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0x2
  1405  0072                     	ds	1
  1406  0073                     ?_display_val:	
  1407  0073                     ?_write_str:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410  0073                     ??_lcd_init:	
  1411                           ; 1 bytes @ 0x3
  1412                           
  1413  0073                     ??_OutputPins:	
  1414                           ; 1 bytes @ 0x3
  1415                           
  1416  0073                     delay_temp@z:	
  1417                           ; 1 bytes @ 0x3
  1418                           
  1419  0073                     ___bmul@multiplier:	
  1420                           ; 1 bytes @ 0x3
  1421                           
  1422  0073                     ___lbdiv@counter:	
  1423                           ; 1 bytes @ 0x3
  1424                           
  1425  0073                     write_str@array:	
  1426                           ; 1 bytes @ 0x3
  1427                           
  1428  0073                     display_val@i:	
  1429                           ; 2 bytes @ 0x3
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x3
  1433  0073                     	ds	1
  1434  0074                     ??_temp_check_lower:	
  1435  0074                     ??_temp_check_rise:	
  1436                           ; 1 bytes @ 0x4
  1437                           
  1438  0074                     ??_reset:	
  1439                           ; 1 bytes @ 0x4
  1440                           
  1441  0074                     ??_write_byte:	
  1442                           ; 1 bytes @ 0x4
  1443                           
  1444  0074                     ??_read_byte:	
  1445                           ; 1 bytes @ 0x4
  1446                           
  1447  0074                     ??___wmul:	
  1448                           ; 1 bytes @ 0x4
  1449                           
  1450  0074                     ??___lwdiv:	
  1451                           ; 1 bytes @ 0x4
  1452                           
  1453  0074                     time_write_1@time_tx:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456  0074                     time_read_1@time_rx:	
  1457                           ; 1 bytes @ 0x4
  1458                           
  1459  0074                     ___lbdiv@quotient:	
  1460                           ; 1 bytes @ 0x4
  1461                           
  1462  0074                     ___lbmod@dividend:	
  1463                           ; 1 bytes @ 0x4
  1464                           
  1465  0074                     ___wmul@product:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x4
  1470  0074                     	ds	1
  1471  0075                     ??_display_val:	
  1472  0075                     ??_write_str:	
  1473                           ; 1 bytes @ 0x5
  1474                           
  1475  0075                     ??_ds1302_init:	
  1476                           ; 1 bytes @ 0x5
  1477                           
  1478  0075                     ??_set_time_date:	
  1479                           ; 1 bytes @ 0x5
  1480                           
  1481  0075                     ??_get_time:	
  1482                           ; 1 bytes @ 0x5
  1483                           
  1484  0075                     reset@presence:	
  1485                           ; 1 bytes @ 0x5
  1486                           
  1487  0075                     read_byte@value:	
  1488                           ; 1 bytes @ 0x5
  1489                           
  1490  0075                     ___lbmod@counter:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     set_time_date@i:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496  0075                     ___lwdiv@quotient:	
  1497                           ; 2 bytes @ 0x5
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x5
  1501  0075                     	ds	1
  1502  0076                     write_byte@temp:	
  1503  0076                     read_byte@i:	
  1504                           ; 1 bytes @ 0x6
  1505                           
  1506  0076                     ___lbmod@rem:	
  1507                           ; 1 bytes @ 0x6
  1508                           
  1509  0076                     get_time@i:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x6
  1514  0076                     	ds	1
  1515  0077                     ??_clock_init:	
  1516  0077                     write_byte@val:	
  1517                           ; 1 bytes @ 0x7
  1518                           
  1519  0077                     ___lwdiv@counter:	
  1520                           ; 1 bytes @ 0x7
  1521                           
  1522  0077                     display_val@t:	
  1523                           ; 1 bytes @ 0x7
  1524                           
  1525                           
  1526                           ; 2 bytes @ 0x7
  1527  0077                     	ds	1
  1528  0078                     write_byte@i:	
  1529  0078                     temp_check_lower@temp_e:	
  1530                           ; 1 bytes @ 0x8
  1531                           
  1532  0078                     temp_check_rise@temp_e:	
  1533                           ; 1 bytes @ 0x8
  1534                           
  1535  0078                     write_str@p:	
  1536                           ; 1 bytes @ 0x8
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x8
  1540  0078                     	ds	1
  1541  0079                     ??_T:	
  1542                           
  1543                           ; 1 bytes @ 0x9
  1544  0079                     	ds	1
  1545  007A                     write_str@i:	
  1546                           
  1547                           ; 2 bytes @ 0xA
  1548  007A                     	ds	2
  1549  007C                     ??_D:	
  1550  007C                     ??_set_day:	
  1551                           ; 1 bytes @ 0xC
  1552                           
  1553  007C                     ??_set_night:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  007C                     ??_cool:	
  1557                           ; 1 bytes @ 0xC
  1558                           
  1559  007C                     ??_heat:	
  1560                           ; 1 bytes @ 0xC
  1561                           
  1562  007C                     ??_OK:	
  1563                           ; 1 bytes @ 0xC
  1564                           
  1565  007C                     ?_week:	
  1566                           ; 1 bytes @ 0xC
  1567                           
  1568  007C                     ??_start_date:	
  1569                           ; 1 bytes @ 0xC
  1570                           
  1571  007C                     ??_start_time:	
  1572                           ; 1 bytes @ 0xC
  1573                           
  1574  007C                     ??_display_temp:	
  1575                           ; 1 bytes @ 0xC
  1576                           
  1577  007C                     week@w:	
  1578                           ; 1 bytes @ 0xC
  1579                           
  1580  007C                     D@j:	
  1581                           ; 2 bytes @ 0xC
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0xC
  1585  007C                     	ds	2
  1586  007E                     ??_week:	
  1587  007E                     ??_clock_setting:	
  1588                           ; 1 bytes @ 0xE
  1589                           
  1590  007E                     ??_temp_setting:	
  1591                           ; 1 bytes @ 0xE
  1592                           
  1593  007E                     ??_main:	
  1594                           ; 1 bytes @ 0xE
  1595                           
  1596                           
  1597                           	psect	cstackBANK0
  1598  0044                     __pcstackBANK0:	
  1599                           ; 1 bytes @ 0xE
  1600                           
  1601  0044                     ?_T:	
  1602  0044                     ?_D:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0044                     ??_display_clock:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0044                     ??_get_temp:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0044                     ??_temp_day:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0044                     ??_temp_night:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0044                     start_date@i:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0044                     start_time@i:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0044                     D@D:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0044                     T@T:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0044                     set_day@min_max:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0044                     set_night@min_max:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635                           
  1636                           ; 2 bytes @ 0x0
  1637  0044                     	ds	2
  1638  0046                     display_clock@i:	
  1639  0046                     D@C:	
  1640                           ; 2 bytes @ 0x2
  1641                           
  1642  0046                     T@C:	
  1643                           ; 2 bytes @ 0x2
  1644                           
  1645                           
  1646                           ; 2 bytes @ 0x2
  1647  0046                     	ds	2
  1648  0048                     D@i:	
  1649  0048                     T@i:	
  1650                           ; 2 bytes @ 0x4
  1651                           
  1652                           
  1653                           ; 2 bytes @ 0x4
  1654  0048                     	ds	2
  1655  004A                     ??_date_setting:	
  1656  004A                     T@j:	
  1657                           ; 1 bytes @ 0x6
  1658                           
  1659                           
  1660                           ; 2 bytes @ 0x6
  1661  004A                     	ds	2
  1662  004C                     date_setting@a:	
  1663  004C                     T@j_261:	
  1664                           ; 1 bytes @ 0x8
  1665                           
  1666  004C                     temp_day@temp_max:	
  1667                           ; 2 bytes @ 0x8
  1668                           
  1669  004C                     temp_night@temp_max:	
  1670                           ; 2 bytes @ 0x8
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x8
  1674  004C                     	ds	1
  1675  004D                     date_setting@b:	
  1676                           
  1677                           ; 1 bytes @ 0x9
  1678  004D                     	ds	1
  1679  004E                     date_setting@y:	
  1680  004E                     T@j_262:	
  1681                           ; 1 bytes @ 0xA
  1682                           
  1683  004E                     temp_day@temp_min:	
  1684                           ; 2 bytes @ 0xA
  1685                           
  1686  004E                     temp_night@temp_min:	
  1687                           ; 2 bytes @ 0xA
  1688                           
  1689                           
  1690                           ; 2 bytes @ 0xA
  1691  004E                     	ds	1
  1692  004F                     date_setting@j:	
  1693                           
  1694                           ; 2 bytes @ 0xB
  1695  004F                     	ds	1
  1696  0050                     clock_setting@i:	
  1697  0050                     temp_day@temp:	
  1698                           ; 2 bytes @ 0xC
  1699                           
  1700  0050                     temp_night@temp:	
  1701                           ; 2 bytes @ 0xC
  1702                           
  1703                           
  1704                           ; 2 bytes @ 0xC
  1705  0050                     	ds	1
  1706  0051                     date_setting@j_241:	
  1707                           
  1708                           ; 2 bytes @ 0xD
  1709  0051                     	ds	2
  1710  0053                     date_setting@j_242:	
  1711                           
  1712                           ; 2 bytes @ 0xF
  1713  0053                     	ds	2
  1714  0055                     date_setting@j_243:	
  1715                           
  1716                           ; 2 bytes @ 0x11
  1717  0055                     	ds	2
  1718  0057                     date_setting@j_244:	
  1719                           
  1720                           ; 2 bytes @ 0x13
  1721  0057                     	ds	2
  1722  0059                     date_setting@j_245:	
  1723                           
  1724                           ; 2 bytes @ 0x15
  1725  0059                     	ds	2
  1726  005B                     date_setting@i:	
  1727                           
  1728                           ; 2 bytes @ 0x17
  1729  005B                     	ds	2
  1730                           
  1731                           	psect	maintext
  1732  006B                     __pmaintext:	
  1733 ;;
  1734 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1735 ;;
  1736 ;; *************** function _main *****************
  1737 ;; Defined at:
  1738 ;;		line 19 in file "ClimateControl.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : B00/0
  1749 ;;		On exit  : 300/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		_OutputPins
  1760 ;;		_button_reset
  1761 ;;		_buzzer_init
  1762 ;;		_clock_init
  1763 ;;		_clock_setting
  1764 ;;		_date_setting
  1765 ;;		_display_clock
  1766 ;;		_get_temp
  1767 ;;		_get_time
  1768 ;;		_initialisation
  1769 ;;		_lcd_init
  1770 ;;		_temp_day
  1771 ;;		_temp_night
  1772 ;;		_temp_setting
  1773 ;;		_write_str
  1774 ;;		_writecmd_4line
  1775 ;; This function is called by:
  1776 ;;		Startup code after reset
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _main
  1782  006B                     _main:	
  1783                           
  1784                           ;ClimateControl.c: 21:     buzzer_init();
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1788  006B  160A  158A  24F5  120A  118A  	fcall	_buzzer_init
  1789                           
  1790                           ;ClimateControl.c: 22:     clock_init();
  1791  0070  120A  158A  2000  120A  118A  	fcall	_clock_init
  1792                           
  1793                           ;ClimateControl.c: 23:     lcd_init();
  1794  0075  160A  158A  2599  120A  118A  	fcall	_lcd_init
  1795                           
  1796                           ;ClimateControl.c: 24:     initialisation ();
  1797  007A  160A  158A  2503  120A  118A  	fcall	_initialisation
  1798  007F                     l5658:	
  1799                           
  1800                           ;ClimateControl.c: 29:    {;ClimateControl.c: 30:        get_temp();
  1801  007F  160A  118A  2361  120A  118A  	fcall	_get_temp
  1802                           
  1803                           ;ClimateControl.c: 31:        get_time();
  1804  0084  160A  158A  270C  120A  118A  	fcall	_get_time
  1805                           
  1806                           ;ClimateControl.c: 32:        display_clock();
  1807  0089  120A  158A  23B1  120A  118A  	fcall	_display_clock
  1808                           
  1809                           ;ClimateControl.c: 35:        button_reset();
  1810  008E  160A  158A  24F1  120A  118A  	fcall	_button_reset
  1811                           
  1812                           ;ClimateControl.c: 38:        if (OutputPins(),FirstRC == 1 && SecondRC == 1){
  1813  0093  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1814  0098  0342               	decf	_FirstRC,w
  1815  0099  1D03               	btfss	3,2
  1816  009A  28AF               	goto	l5678
  1817  009B  0343               	decf	_SecondRC,w
  1818  009C  1D03               	btfss	3,2
  1819  009D  28AF               	goto	l5678
  1820                           
  1821                           ;ClimateControl.c: 39:            button_reset();
  1822  009E  160A  158A  24F1  120A  118A  	fcall	_button_reset
  1823                           
  1824                           ;ClimateControl.c: 40:            clock_setting();
  1825  00A3  120A  158A  2201  120A  118A  	fcall	_clock_setting
  1826                           
  1827                           ;ClimateControl.c: 41:            writecmd_4line(0x1);
  1828  00A8  3001               	movlw	1
  1829  00A9  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  1830                           
  1831                           ;ClimateControl.c: 42:        }
  1832  00AE  2907               	goto	l5716
  1833  00AF                     l5678:	
  1834  00AF  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1835  00B4  0342               	decf	_FirstRC,w
  1836  00B5  1D03               	btfss	3,2
  1837  00B6  28CC               	goto	l5690
  1838  00B7  3002               	movlw	2
  1839  00B8  0643               	xorwf	_SecondRC,w
  1840  00B9  1D03               	btfss	3,2
  1841  00BA  28CC               	goto	l5690
  1842                           
  1843                           ;ClimateControl.c: 45:            button_reset();
  1844  00BB  160A  158A  24F1  120A  118A  	fcall	_button_reset
  1845                           
  1846                           ;ClimateControl.c: 46:            date_setting();
  1847  00C0  120A  118A  23CA  120A  118A  	fcall	_date_setting
  1848                           
  1849                           ;ClimateControl.c: 47:            writecmd_4line(0x1);
  1850  00C5  3001               	movlw	1
  1851  00C6  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  1852                           
  1853                           ;ClimateControl.c: 48:        }
  1854  00CB  2907               	goto	l5716
  1855  00CC                     l5690:	
  1856  00CC  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1857  00D1  0342               	decf	_FirstRC,w
  1858  00D2  1D03               	btfss	3,2
  1859  00D3  28E9               	goto	l5702
  1860  00D4  3003               	movlw	3
  1861  00D5  0643               	xorwf	_SecondRC,w
  1862  00D6  1D03               	btfss	3,2
  1863  00D7  28E9               	goto	l5702
  1864                           
  1865                           ;ClimateControl.c: 51:            button_reset();
  1866  00D8  160A  158A  24F1  120A  118A  	fcall	_button_reset
  1867                           
  1868                           ;ClimateControl.c: 52:            temp_setting();
  1869  00DD  160A  118A  22F5  120A  118A  	fcall	_temp_setting
  1870                           
  1871                           ;ClimateControl.c: 53:            writecmd_4line(0x1);
  1872  00E2  3001               	movlw	1
  1873  00E3  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  1874                           
  1875                           ;ClimateControl.c: 54:        }
  1876  00E8  2907               	goto	l5716
  1877  00E9                     l5702:	
  1878  00E9  160A  118A  2260  120A  118A  	fcall	_OutputPins
  1879  00EE  3004               	movlw	4
  1880  00EF  0642               	xorwf	_FirstRC,w
  1881  00F0  1D03               	btfss	3,2
  1882  00F1  2907               	goto	l5716
  1883  00F2  3004               	movlw	4
  1884  00F3  0643               	xorwf	_SecondRC,w
  1885  00F4  1D03               	btfss	3,2
  1886  00F5  2907               	goto	l5716
  1887                           
  1888                           ;ClimateControl.c: 57:            button_reset();
  1889  00F6  160A  158A  24F1  120A  118A  	fcall	_button_reset
  1890                           
  1891                           ;ClimateControl.c: 58:            if (buzz_count >=20){
  1892  00FB  3000               	movlw	0
  1893  00FC  022E               	subwf	_buzz_count+1,w
  1894  00FD  3014               	movlw	20
  1895  00FE  1903               	skipnz
  1896  00FF  022D               	subwf	_buzz_count,w
  1897  0100  1C03               	skipc
  1898  0101  2907               	goto	l5716
  1899                           
  1900                           ;ClimateControl.c: 59:                RE2 = 0;
  1901  0102  1109               	bcf	9,2	;volatile
  1902                           
  1903                           ;ClimateControl.c: 60:                pass = 1;
  1904  0103  01B5               	clrf	_pass
  1905  0104  0AB5               	incf	_pass,f
  1906                           
  1907                           ;ClimateControl.c: 61:                buzz_count = 0;
  1908  0105  01AD               	clrf	_buzz_count
  1909  0106  01AE               	clrf	_buzz_count+1
  1910  0107                     l5716:	
  1911                           
  1912                           ;ClimateControl.c: 73:        if (table1[1] > 0x29){
  1913  0107  302A               	movlw	42
  1914  0108  0221               	subwf	_table1+1,w
  1915  0109  1C03               	skipc
  1916  010A  293D               	goto	l5740
  1917                           
  1918                           ;ClimateControl.c: 75:            if (table1[2] >= 0x19){
  1919  010B  3019               	movlw	25
  1920  010C  0222               	subwf	_table1+2,w
  1921  010D  1C03               	skipc
  1922  010E  2924               	goto	l5726
  1923  010F                     l5720:	
  1924                           
  1925                           ;ClimateControl.c: 76:                 writecmd_4line(0x95);
  1926  010F  3095               	movlw	149
  1927  0110  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  1928                           
  1929                           ;ClimateControl.c: 77:                 write_str("Night");
  1930  0115  309E               	movlw	low (STR_42| (0+32768))
  1931  0116  00F3               	movwf	write_str@array
  1932  0117  3090               	movlw	high (STR_42| (0+32768))
  1933  0118  00F4               	movwf	write_str@array+1
  1934  0119  160A  118A  2160  120A  118A  	fcall	_write_str
  1935                           
  1936                           ;ClimateControl.c: 78:                 temp_night();
  1937  011E  160A  118A  2664  120A  118A  	fcall	_temp_night
  1938                           
  1939                           ;ClimateControl.c: 79:            }
  1940  0123  287F               	goto	l5658
  1941  0124                     l5726:	
  1942  0124  3006               	movlw	6
  1943  0125                     L1:	
  1944  0125  0222               	subwf	_table1+2,w
  1945  0126  1C03               	btfss	3,0
  1946  0127  290F               	goto	l5720
  1947                           
  1948                           ;ClimateControl.c: 88:                 writecmd_4line(0x95);
  1949                           
  1950                           ;ClimateControl.c: 83:                 write_str("Night");
  1951                           
  1952                           ;ClimateControl.c: 82:                 writecmd_4line(0x95);
  1953  0128  3095               	movlw	149
  1954  0129  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  1955                           
  1956                           ;ClimateControl.c: 89:                 write_str("Day  ");
  1957  012E  308C               	movlw	low (STR_78| (0+32768))
  1958  012F  00F3               	movwf	write_str@array
  1959  0130  3090               	movlw	high (STR_78| (0+32768))
  1960  0131  00F4               	movwf	write_str@array+1
  1961  0132  160A  118A  2160  120A  118A  	fcall	_write_str
  1962                           
  1963                           ;ClimateControl.c: 90:                 temp_day();
  1964  0137  160A  118A  259C  120A  118A  	fcall	_temp_day
  1965  013C  287F               	goto	l5658
  1966  013D                     l5740:	
  1967  013D  3030               	movlw	48
  1968  013E  025E               	subwf	_table+1,w
  1969  013F  1803               	skipnc
  1970  0140  287F               	goto	l5658
  1971                           
  1972                           ;ClimateControl.c: 97:            if (table1[2] >= 0x20){
  1973  0141  3020               	movlw	32
  1974  0142  0222               	subwf	_table1+2,w
  1975  0143  1803               	btfsc	3,0
  1976  0144  290F               	goto	l5720
  1977                           
  1978                           ;ClimateControl.c: 99:                 write_str("Night");
  1979                           
  1980                           ;ClimateControl.c: 98:                 writecmd_4line(0x95);
  1981  0145  3007               	movlw	7
  1982  0146  2925               	goto	L1
  1983  0147                     __end_of_main:	
  1984                           ;ClimateControl.c: 111:                 write_str("Day  ");
  1985                           
  1986                           ;ClimateControl.c: 110:                 writecmd_4line(0x95);
  1987                           
  1988                           ;ClimateControl.c: 105:                 write_str("Night");
  1989                           
  1990                           ;ClimateControl.c: 104:                 writecmd_4line(0x95);
  1991                           
  1992                           
  1993                           	psect	text1
  1994  12F5                     __ptext1:	
  1995 ;; *************** function _temp_setting *****************
  1996 ;; Defined at:
  1997 ;;		line 130 in file "temperature.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 300/0
  2008 ;;		On exit  : 300/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		_OutputPins
  2020 ;;		_button_reset
  2021 ;;		_set_day
  2022 ;;		_set_night
  2023 ;;		_write_str
  2024 ;;		_writecmd_4line
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _temp_setting
  2032  12F5                     _temp_setting:	
  2033                           
  2034                           ;temperature.c: 131:     writecmd_4line(0x1);
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _temp_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2038  12F5  3001               	movlw	1
  2039  12F6  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  2040                           
  2041                           ;temperature.c: 132:     writecmd_4line(0x80);
  2042  12FB  3080               	movlw	128
  2043  12FC  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  2044                           
  2045                           ;temperature.c: 133:     write_str("Temp Threshold");
  2046  1301  3011               	movlw	low (STR_40| (0+32768))
  2047  1302  00F3               	movwf	write_str@array
  2048  1303  3090               	movlw	high (STR_40| (0+32768))
  2049  1304  00F4               	movwf	write_str@array+1
  2050  1305  160A  118A  2160  160A  118A  	fcall	_write_str
  2051                           
  2052                           ;temperature.c: 134:     writecmd_4line(0x90);
  2053  130A  3090               	movlw	144
  2054  130B  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  2055                           
  2056                           ;temperature.c: 135:     write_str("Day");
  2057  1310  30FB               	movlw	low (STR_33| (0+32768))
  2058  1311  00F3               	movwf	write_str@array
  2059  1312  3090               	movlw	high (STR_33| (0+32768))
  2060  1313  00F4               	movwf	write_str@array+1
  2061  1314  160A  118A  2160  160A  118A  	fcall	_write_str
  2062                           
  2063                           ;temperature.c: 136:     writecmd_4line(0x88);
  2064  1319  3088               	movlw	136
  2065  131A  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  2066                           
  2067                           ;temperature.c: 137:     write_str("Night");
  2068  131F  309E               	movlw	low (STR_42| (0+32768))
  2069  1320  00F3               	movwf	write_str@array
  2070  1321  3090               	movlw	high (STR_42| (0+32768))
  2071  1322  00F4               	movwf	write_str@array+1
  2072  1323  160A  118A  2160  160A  118A  	fcall	_write_str
  2073  1328                     l5588:	
  2074                           
  2075                           ;temperature.c: 142:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2076  1328  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2077  132D  3002               	movlw	2
  2078  132E  0642               	xorwf	_FirstRC,w
  2079  132F  1903               	btfsc	3,2
  2080  1330  0343               	decf	_SecondRC,w
  2081  1331  1903               	btfsc	3,2
  2082  1332  0008               	return
  2083  1333  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2084  1338  3003               	movlw	3
  2085  1339  0642               	xorwf	_FirstRC,w
  2086  133A  1D03               	btfss	3,2
  2087  133B  2B4A               	goto	l5608
  2088  133C  0343               	decf	_SecondRC,w
  2089  133D  1D03               	btfss	3,2
  2090  133E  2B4A               	goto	l5608
  2091                           
  2092                           ;temperature.c: 148:             button_reset();
  2093  133F  160A  158A  24F1  160A  118A  	fcall	_button_reset
  2094                           
  2095                           ;temperature.c: 149:             set_day();
  2096  1344  120A  158A  257D  160A  118A  	fcall	_set_day
  2097                           
  2098                           ;temperature.c: 150:         }
  2099  1349  2B28               	goto	l5588
  2100  134A                     l5608:	
  2101  134A  160A  118A  2260  160A  118A  	fcall	_OutputPins
  2102  134F  3004               	movlw	4
  2103  1350  0642               	xorwf	_FirstRC,w
  2104  1351  1D03               	btfss	3,2
  2105  1352  2B28               	goto	l5588
  2106  1353  0343               	decf	_SecondRC,w
  2107  1354  1D03               	btfss	3,2
  2108  1355  2B28               	goto	l5588
  2109                           
  2110                           ;temperature.c: 154:             button_reset();
  2111  1356  160A  158A  24F1  160A  118A  	fcall	_button_reset
  2112                           
  2113                           ;temperature.c: 155:             set_night();
  2114  135B  120A  118A  2147  160A  118A  	fcall	_set_night
  2115  1360  2B28               	goto	l5588
  2116  1361                     __end_of_temp_setting:	
  2117                           
  2118                           	psect	text2
  2119  0147                     __ptext2:	
  2120 ;; *************** function _set_night *****************
  2121 ;; Defined at:
  2122 ;;		line 286 in file "temperature.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  min_max         2    0[BANK0 ] unsigned int 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 300/0
  2133 ;;		On exit  : 300/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       2       0       0       0
  2138 ;;      Temps:          2       0       0       0       0
  2139 ;;      Totals:         2       2       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		_OutputPins
  2145 ;;		_button_reset
  2146 ;;		_temp_decrement
  2147 ;;		_temp_increment
  2148 ;;		_write_str
  2149 ;;		_writechar
  2150 ;;		_writecmd_4line
  2151 ;; This function is called by:
  2152 ;;		_temp_setting
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _set_night
  2158  0147                     _set_night:	
  2159                           
  2160                           ;temperature.c: 287:     writecmd_4line(0x1);
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _set_night: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2164  0147  3001               	movlw	1
  2165  0148  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2166                           
  2167                           ;temperature.c: 288:     writecmd_4line(0x80);
  2168  014D  3080               	movlw	128
  2169  014E  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2170                           
  2171                           ;temperature.c: 289:     write_str("Night Settings");
  2172  0153  3020               	movlw	low (STR_58| (0+32768))
  2173  0154  00F3               	movwf	write_str@array
  2174  0155  3090               	movlw	high (STR_58| (0+32768))
  2175  0156  00F4               	movwf	write_str@array+1
  2176  0157  160A  118A  2160  120A  118A  	fcall	_write_str
  2177                           
  2178                           ;temperature.c: 290:     writecmd_4line(0x90);
  2179  015C  3090               	movlw	144
  2180  015D  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2181                           
  2182                           ;temperature.c: 291:     write_str("Max:");
  2183  0162  30C6               	movlw	low (STR_44| (0+32768))
  2184  0163  00F3               	movwf	write_str@array
  2185  0164  3090               	movlw	high (STR_44| (0+32768))
  2186  0165  00F4               	movwf	write_str@array+1
  2187  0166  160A  118A  2160  120A  118A  	fcall	_write_str
  2188                           
  2189                           ;temperature.c: 292:     writechar(night_ten_max + '0');
  2190  016B  0867               	movf	_night_ten_max,w
  2191  016C  3E30               	addlw	48
  2192  016D  160A  158A  25B1  120A  118A  	fcall	_writechar
  2193                           
  2194                           ;temperature.c: 293:     writechar(night_one_max + '0');
  2195  0172  0866               	movf	_night_one_max,w
  2196  0173  3E30               	addlw	48
  2197  0174  160A  158A  25B1  120A  118A  	fcall	_writechar
  2198                           
  2199                           ;temperature.c: 294:     write_str(".");
  2200  0179  303C               	movlw	low ((STR_21+13)| (0+32768))
  2201  017A  00F3               	movwf	write_str@array
  2202  017B  3090               	movlw	high ((STR_21+13)| (0+32768))
  2203  017C  00F4               	movwf	write_str@array+1
  2204  017D  160A  118A  2160  120A  118A  	fcall	_write_str
  2205                           
  2206                           ;temperature.c: 295:     writechar(night_dec_max + '0');
  2207  0182  0838               	movf	_night_dec_max,w
  2208  0183  3E30               	addlw	48
  2209  0184  160A  158A  25B1  120A  118A  	fcall	_writechar
  2210                           
  2211                           ;temperature.c: 296:     writecmd_4line(0x88);
  2212  0189  3088               	movlw	136
  2213  018A  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2214                           
  2215                           ;temperature.c: 297:     write_str("Min:");
  2216  018F  30C1               	movlw	low (STR_46| (0+32768))
  2217  0190  00F3               	movwf	write_str@array
  2218  0191  3090               	movlw	high (STR_46| (0+32768))
  2219  0192  00F4               	movwf	write_str@array+1
  2220  0193  160A  118A  2160  120A  118A  	fcall	_write_str
  2221                           
  2222                           ;temperature.c: 298:     writechar(night_ten_min + '0');
  2223  0198  0865               	movf	_night_ten_min,w
  2224  0199  3E30               	addlw	48
  2225  019A  160A  158A  25B1  120A  118A  	fcall	_writechar
  2226                           
  2227                           ;temperature.c: 299:     writechar(night_one_min + '0');
  2228  019F  0837               	movf	_night_one_min,w
  2229  01A0  3E30               	addlw	48
  2230  01A1  160A  158A  25B1  120A  118A  	fcall	_writechar
  2231                           
  2232                           ;temperature.c: 300:     write_str(".");
  2233  01A6  303C               	movlw	low ((STR_21+13)| (0+32768))
  2234  01A7  00F3               	movwf	write_str@array
  2235  01A8  3090               	movlw	high ((STR_21+13)| (0+32768))
  2236  01A9  00F4               	movwf	write_str@array+1
  2237  01AA  160A  118A  2160  120A  118A  	fcall	_write_str
  2238                           
  2239                           ;temperature.c: 301:     writechar(night_dec_min + '0');
  2240  01AF  0836               	movf	_night_dec_min,w
  2241  01B0                     L2:	
  2242  01B0  3E30               	addlw	48
  2243  01B1  160A  158A  25B1  120A  118A  	fcall	_writechar
  2244                           
  2245                           ;temperature.c: 303:     unsigned int min_max = 0;
  2246  01B6  01C4               	clrf	set_night@min_max
  2247  01B7  01C5               	clrf	set_night@min_max+1
  2248  01B8                     l4586:	
  2249                           
  2250                           ;temperature.c: 307:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2251  01B8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2252  01BD  3002               	movlw	2
  2253  01BE  0642               	xorwf	_FirstRC,w
  2254  01BF  1D03               	btfss	3,2
  2255  01C0  29C8               	goto	l4598
  2256  01C1  0343               	decf	_SecondRC,w
  2257  01C2  1D03               	btfss	3,2
  2258  01C3  29C8               	goto	l4598
  2259                           
  2260                           ;temperature.c: 308:             button_reset();
  2261  01C4  160A  158A  24F1   	fcall	_button_reset
  2262  01C7  0008               	return
  2263  01C8                     l4598:	
  2264  01C8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2265  01CD  3003               	movlw	3
  2266  01CE  0642               	xorwf	_FirstRC,w
  2267  01CF  1D03               	btfss	3,2
  2268  01D0  2A10               	goto	l4624
  2269  01D1  0343               	decf	_SecondRC,w
  2270  01D2  1D03               	btfss	3,2
  2271  01D3  2A10               	goto	l4624
  2272                           
  2273                           ;temperature.c: 314:             button_reset();
  2274  01D4  160A  158A  24F1  120A  118A  	fcall	_button_reset
  2275                           
  2276                           ;temperature.c: 315:             writecmd_4line(0x90);
  2277  01D9  3090               	movlw	144
  2278  01DA  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2279                           
  2280                           ;temperature.c: 316:             write_str("          ");
  2281  01DF  3006               	movlw	low ((STR_22+6)| (0+32768))
  2282  01E0  00F3               	movwf	write_str@array
  2283  01E1  3090               	movlw	high ((STR_22+6)| (0+32768))
  2284  01E2  00F4               	movwf	write_str@array+1
  2285  01E3  160A  118A  2160  120A  118A  	fcall	_write_str
  2286                           
  2287                           ;temperature.c: 317:             writecmd_4line(0x90);
  2288  01E8  3090               	movlw	144
  2289  01E9  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2290                           
  2291                           ;temperature.c: 318:             write_str("Max:");
  2292  01EE  30C6               	movlw	low (STR_44| (0+32768))
  2293  01EF  00F3               	movwf	write_str@array
  2294  01F0  3090               	movlw	high (STR_44| (0+32768))
  2295  01F1  00F4               	movwf	write_str@array+1
  2296  01F2  160A  118A  2160  120A  118A  	fcall	_write_str
  2297                           
  2298                           ;temperature.c: 319:             writechar(night_ten_max + '0');
  2299  01F7  0867               	movf	_night_ten_max,w
  2300  01F8  3E30               	addlw	48
  2301  01F9  160A  158A  25B1  120A  118A  	fcall	_writechar
  2302                           
  2303                           ;temperature.c: 320:             writechar(night_one_max + '0');
  2304  01FE  0866               	movf	_night_one_max,w
  2305  01FF  3E30               	addlw	48
  2306  0200  160A  158A  25B1  120A  118A  	fcall	_writechar
  2307                           
  2308                           ;temperature.c: 321:             write_str(".");
  2309  0205  303C               	movlw	low ((STR_21+13)| (0+32768))
  2310  0206  00F3               	movwf	write_str@array
  2311  0207  3090               	movlw	high ((STR_21+13)| (0+32768))
  2312  0208  00F4               	movwf	write_str@array+1
  2313  0209  160A  118A  2160  120A  118A  	fcall	_write_str
  2314                           
  2315                           ;temperature.c: 322:             writechar(night_dec_max + '0');
  2316  020E  0838               	movf	_night_dec_max,w
  2317  020F  29B0               	goto	L2
  2318  0210                     l4624:	
  2319  0210  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2320  0215  3004               	movlw	4
  2321  0216  0642               	xorwf	_FirstRC,w
  2322  0217  1D03               	btfss	3,2
  2323  0218  2A62               	goto	l4650
  2324  0219  0343               	decf	_SecondRC,w
  2325  021A  1D03               	btfss	3,2
  2326  021B  2A62               	goto	l4650
  2327                           
  2328                           ;temperature.c: 330:             button_reset();
  2329  021C  160A  158A  24F1  120A  118A  	fcall	_button_reset
  2330                           
  2331                           ;temperature.c: 331:             writecmd_4line(0x88);
  2332  0221  3088               	movlw	136
  2333  0222  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2334                           
  2335                           ;temperature.c: 332:             write_str("          ");
  2336  0227  3006               	movlw	low ((STR_22+6)| (0+32768))
  2337  0228  00F3               	movwf	write_str@array
  2338  0229  3090               	movlw	high ((STR_22+6)| (0+32768))
  2339  022A  00F4               	movwf	write_str@array+1
  2340  022B  160A  118A  2160  120A  118A  	fcall	_write_str
  2341                           
  2342                           ;temperature.c: 333:             writecmd_4line(0x88);
  2343  0230  3088               	movlw	136
  2344  0231  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2345                           
  2346                           ;temperature.c: 334:             write_str("Min:");
  2347  0236  30C1               	movlw	low (STR_46| (0+32768))
  2348  0237  00F3               	movwf	write_str@array
  2349  0238  3090               	movlw	high (STR_46| (0+32768))
  2350  0239  00F4               	movwf	write_str@array+1
  2351  023A  160A  118A  2160  120A  118A  	fcall	_write_str
  2352                           
  2353                           ;temperature.c: 335:             writechar(night_ten_min + '0');
  2354  023F  0865               	movf	_night_ten_min,w
  2355  0240  3E30               	addlw	48
  2356  0241  160A  158A  25B1  120A  118A  	fcall	_writechar
  2357                           
  2358                           ;temperature.c: 336:             writechar(night_one_min + '0');
  2359  0246  0837               	movf	_night_one_min,w
  2360  0247  3E30               	addlw	48
  2361  0248  160A  158A  25B1  120A  118A  	fcall	_writechar
  2362                           
  2363                           ;temperature.c: 337:             write_str(".");
  2364  024D  303C               	movlw	low ((STR_21+13)| (0+32768))
  2365  024E  00F3               	movwf	write_str@array
  2366  024F  3090               	movlw	high ((STR_21+13)| (0+32768))
  2367  0250  00F4               	movwf	write_str@array+1
  2368  0251  160A  118A  2160  120A  118A  	fcall	_write_str
  2369                           
  2370                           ;temperature.c: 338:             writechar(night_dec_min + '0');
  2371  0256  0836               	movf	_night_dec_min,w
  2372  0257  3E30               	addlw	48
  2373  0258  160A  158A  25B1  120A  118A  	fcall	_writechar
  2374                           
  2375                           ;temperature.c: 340:             min_max = 1;
  2376  025D  3001               	movlw	1
  2377  025E  00C4               	movwf	set_night@min_max
  2378  025F  3000               	movlw	0
  2379  0260  00C5               	movwf	set_night@min_max+1
  2380                           
  2381                           ;temperature.c: 341:         }
  2382  0261  29B8               	goto	l4586
  2383  0262                     l4650:	
  2384  0262  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2385  0267  3004               	movlw	4
  2386  0268  0642               	xorwf	_FirstRC,w
  2387  0269  1D03               	btfss	3,2
  2388  026A  2B16               	goto	l4690
  2389  026B  3002               	movlw	2
  2390  026C  0643               	xorwf	_SecondRC,w
  2391  026D  1D03               	btfss	3,2
  2392  026E  2B16               	goto	l4690
  2393                           
  2394                           ;temperature.c: 345:             button_reset();
  2395  026F  160A  158A  24F1  120A  118A  	fcall	_button_reset
  2396                           
  2397                           ;temperature.c: 346:             if (min_max == 0){
  2398  0274  0844               	movf	set_night@min_max,w
  2399  0275  0445               	iorwf	set_night@min_max+1,w
  2400  0276  1D03               	btfss	3,2
  2401  0277  2AC5               	goto	l4674
  2402                           
  2403                           ;temperature.c: 348:                 temp_ten = night_ten_max; temp_one = night_one_max;
      +                           temp_dec = night_dec_max;
  2404  0278  0867               	movf	_night_ten_max,w
  2405  0279  00FC               	movwf	??_set_night
  2406  027A  01FD               	clrf	??_set_night+1
  2407  027B  087C               	movf	??_set_night,w
  2408  027C  00AB               	movwf	_temp_ten
  2409  027D  087D               	movf	??_set_night+1,w
  2410  027E  00AC               	movwf	_temp_ten+1
  2411  027F  0866               	movf	_night_one_max,w
  2412  0280  00FC               	movwf	??_set_night
  2413  0281  01FD               	clrf	??_set_night+1
  2414  0282  087C               	movf	??_set_night,w
  2415  0283  00A9               	movwf	_temp_one
  2416  0284  087D               	movf	??_set_night+1,w
  2417  0285  00AA               	movwf	_temp_one+1
  2418  0286  0838               	movf	_night_dec_max,w
  2419  0287  00FC               	movwf	??_set_night
  2420  0288  01FD               	clrf	??_set_night+1
  2421  0289  087C               	movf	??_set_night,w
  2422  028A  00A7               	movwf	_temp_dec
  2423  028B  087D               	movf	??_set_night+1,w
  2424  028C  00A8               	movwf	_temp_dec+1
  2425                           
  2426                           ;temperature.c: 350:                 temp_increment();
  2427  028D  160A  158A  26E1  120A  118A  	fcall	_temp_increment
  2428                           
  2429                           ;temperature.c: 352:                 night_ten_max = temp_ten; night_one_max = temp_one;
      +                           night_dec_max = temp_dec;
  2430  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0294  082B               	movf	_temp_ten,w
  2433  0295  00FC               	movwf	??_set_night
  2434  0296  087C               	movf	??_set_night,w
  2435  0297  00E7               	movwf	_night_ten_max
  2436  0298  0829               	movf	_temp_one,w
  2437  0299  00FC               	movwf	??_set_night
  2438  029A  087C               	movf	??_set_night,w
  2439  029B  00E6               	movwf	_night_one_max
  2440  029C  0827               	movf	_temp_dec,w
  2441  029D  00FC               	movwf	??_set_night
  2442  029E  087C               	movf	??_set_night,w
  2443  029F  00B8               	movwf	_night_dec_max
  2444                           
  2445                           ;temperature.c: 354:                 writecmd_4line(0x92);
  2446  02A0  3092               	movlw	146
  2447  02A1  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2448                           
  2449                           ;temperature.c: 355:                 writechar(night_ten_max + '0');
  2450  02A6  0867               	movf	_night_ten_max,w
  2451  02A7  3E30               	addlw	48
  2452  02A8  160A  158A  25B1  120A  118A  	fcall	_writechar
  2453                           
  2454                           ;temperature.c: 356:                 writechar(night_one_max + '0');
  2455  02AD  0866               	movf	_night_one_max,w
  2456  02AE  3E30               	addlw	48
  2457  02AF  160A  158A  25B1  120A  118A  	fcall	_writechar
  2458                           
  2459                           ;temperature.c: 357:                 write_str(".");
  2460  02B4  303C               	movlw	low ((STR_21+13)| (0+32768))
  2461  02B5  00F3               	movwf	write_str@array
  2462  02B6  3090               	movlw	high ((STR_21+13)| (0+32768))
  2463  02B7  00F4               	movwf	write_str@array+1
  2464  02B8  160A  118A  2160  120A  118A  	fcall	_write_str
  2465                           
  2466                           ;temperature.c: 358:                 writechar(night_dec_max + '0');
  2467  02BD  0838               	movf	_night_dec_max,w
  2468  02BE  3E30               	addlw	48
  2469  02BF  160A  158A  25B1  120A  118A  	fcall	_writechar
  2470                           
  2471                           ;temperature.c: 359:             }
  2472  02C4  29B8               	goto	l4586
  2473  02C5                     l4674:	
  2474  02C5  0344               	decf	set_night@min_max,w
  2475  02C6  0445               	iorwf	set_night@min_max+1,w
  2476  02C7  1D03               	btfss	3,2
  2477  02C8  29B8               	goto	l4586
  2478                           
  2479                           ;temperature.c: 362:                 temp_ten = night_ten_min; temp_one = night_one_min;
      +                           temp_dec = night_dec_min;
  2480  02C9  0865               	movf	_night_ten_min,w
  2481  02CA  00FC               	movwf	??_set_night
  2482  02CB  01FD               	clrf	??_set_night+1
  2483  02CC  087C               	movf	??_set_night,w
  2484  02CD  00AB               	movwf	_temp_ten
  2485  02CE  087D               	movf	??_set_night+1,w
  2486  02CF  00AC               	movwf	_temp_ten+1
  2487  02D0  0837               	movf	_night_one_min,w
  2488  02D1  00FC               	movwf	??_set_night
  2489  02D2  01FD               	clrf	??_set_night+1
  2490  02D3  087C               	movf	??_set_night,w
  2491  02D4  00A9               	movwf	_temp_one
  2492  02D5  087D               	movf	??_set_night+1,w
  2493  02D6  00AA               	movwf	_temp_one+1
  2494  02D7  0836               	movf	_night_dec_min,w
  2495  02D8  00FC               	movwf	??_set_night
  2496  02D9  01FD               	clrf	??_set_night+1
  2497  02DA  087C               	movf	??_set_night,w
  2498  02DB  00A7               	movwf	_temp_dec
  2499  02DC  087D               	movf	??_set_night+1,w
  2500  02DD  00A8               	movwf	_temp_dec+1
  2501                           
  2502                           ;temperature.c: 364:                 temp_increment();
  2503  02DE  160A  158A  26E1  120A  118A  	fcall	_temp_increment
  2504                           
  2505                           ;temperature.c: 366:                 night_ten_min = temp_ten; night_one_min = temp_one;
      +                           night_dec_min = temp_dec;
  2506  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2507  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2508  02E5  082B               	movf	_temp_ten,w
  2509  02E6  00FC               	movwf	??_set_night
  2510  02E7  087C               	movf	??_set_night,w
  2511  02E8  00E5               	movwf	_night_ten_min
  2512  02E9  0829               	movf	_temp_one,w
  2513  02EA  00FC               	movwf	??_set_night
  2514  02EB  087C               	movf	??_set_night,w
  2515  02EC  00B7               	movwf	_night_one_min
  2516  02ED  0827               	movf	_temp_dec,w
  2517  02EE  00FC               	movwf	??_set_night
  2518  02EF  087C               	movf	??_set_night,w
  2519  02F0  00B6               	movwf	_night_dec_min
  2520                           
  2521                           ;temperature.c: 368:                 writecmd_4line(0x8A);
  2522  02F1  308A               	movlw	138
  2523  02F2  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2524                           
  2525                           ;temperature.c: 369:                 writechar(night_ten_min + '0');
  2526  02F7  0865               	movf	_night_ten_min,w
  2527  02F8  3E30               	addlw	48
  2528  02F9  160A  158A  25B1  120A  118A  	fcall	_writechar
  2529                           
  2530                           ;temperature.c: 370:                 writechar(night_one_min + '0');
  2531  02FE  0837               	movf	_night_one_min,w
  2532  02FF  3E30               	addlw	48
  2533  0300  160A  158A  25B1  120A  118A  	fcall	_writechar
  2534                           
  2535                           ;temperature.c: 371:                 write_str(".");
  2536  0305  303C               	movlw	low ((STR_21+13)| (0+32768))
  2537  0306  00F3               	movwf	write_str@array
  2538  0307  3090               	movlw	high ((STR_21+13)| (0+32768))
  2539  0308  00F4               	movwf	write_str@array+1
  2540  0309  160A  118A  2160  120A  118A  	fcall	_write_str
  2541                           
  2542                           ;temperature.c: 372:                 writechar(night_dec_min + '0');
  2543  030E  0836               	movf	_night_dec_min,w
  2544  030F  3E30               	addlw	48
  2545  0310  160A  158A  25B1  120A  118A  	fcall	_writechar
  2546  0315  29B8               	goto	l4586
  2547  0316                     l4690:	
  2548  0316  160A  118A  2260  120A  118A  	fcall	_OutputPins
  2549  031B  3003               	movlw	3
  2550  031C  0642               	xorwf	_FirstRC,w
  2551  031D  1D03               	btfss	3,2
  2552  031E  29B8               	goto	l4586
  2553  031F  3002               	movlw	2
  2554  0320  0643               	xorwf	_SecondRC,w
  2555  0321  1D03               	btfss	3,2
  2556  0322  29B8               	goto	l4586
  2557                           
  2558                           ;temperature.c: 378:             button_reset();
  2559  0323  160A  158A  24F1  120A  118A  	fcall	_button_reset
  2560                           
  2561                           ;temperature.c: 379:             if (min_max == 0){
  2562  0328  0844               	movf	set_night@min_max,w
  2563  0329  0445               	iorwf	set_night@min_max+1,w
  2564  032A  1D03               	btfss	3,2
  2565  032B  2B79               	goto	l4714
  2566                           
  2567                           ;temperature.c: 381:                 temp_ten = night_ten_max; temp_one = night_one_max;
      +                           temp_dec = night_dec_max;
  2568  032C  0867               	movf	_night_ten_max,w
  2569  032D  00FC               	movwf	??_set_night
  2570  032E  01FD               	clrf	??_set_night+1
  2571  032F  087C               	movf	??_set_night,w
  2572  0330  00AB               	movwf	_temp_ten
  2573  0331  087D               	movf	??_set_night+1,w
  2574  0332  00AC               	movwf	_temp_ten+1
  2575  0333  0866               	movf	_night_one_max,w
  2576  0334  00FC               	movwf	??_set_night
  2577  0335  01FD               	clrf	??_set_night+1
  2578  0336  087C               	movf	??_set_night,w
  2579  0337  00A9               	movwf	_temp_one
  2580  0338  087D               	movf	??_set_night+1,w
  2581  0339  00AA               	movwf	_temp_one+1
  2582  033A  0838               	movf	_night_dec_max,w
  2583  033B  00FC               	movwf	??_set_night
  2584  033C  01FD               	clrf	??_set_night+1
  2585  033D  087C               	movf	??_set_night,w
  2586  033E  00A7               	movwf	_temp_dec
  2587  033F  087D               	movf	??_set_night+1,w
  2588  0340  00A8               	movwf	_temp_dec+1
  2589                           
  2590                           ;temperature.c: 383:                 temp_decrement();
  2591  0341  160A  118A  22A7  120A  118A  	fcall	_temp_decrement
  2592                           
  2593                           ;temperature.c: 385:                 night_ten_max = temp_ten; night_one_max = temp_one;
      +                           night_dec_max = temp_dec;
  2594  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0348  082B               	movf	_temp_ten,w
  2597  0349  00FC               	movwf	??_set_night
  2598  034A  087C               	movf	??_set_night,w
  2599  034B  00E7               	movwf	_night_ten_max
  2600  034C  0829               	movf	_temp_one,w
  2601  034D  00FC               	movwf	??_set_night
  2602  034E  087C               	movf	??_set_night,w
  2603  034F  00E6               	movwf	_night_one_max
  2604  0350  0827               	movf	_temp_dec,w
  2605  0351  00FC               	movwf	??_set_night
  2606  0352  087C               	movf	??_set_night,w
  2607  0353  00B8               	movwf	_night_dec_max
  2608                           
  2609                           ;temperature.c: 387:                 writecmd_4line(0x92);
  2610  0354  3092               	movlw	146
  2611  0355  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2612                           
  2613                           ;temperature.c: 388:                 writechar(night_ten_max + '0');
  2614  035A  0867               	movf	_night_ten_max,w
  2615  035B  3E30               	addlw	48
  2616  035C  160A  158A  25B1  120A  118A  	fcall	_writechar
  2617                           
  2618                           ;temperature.c: 389:                 writechar(night_one_max + '0');
  2619  0361  0866               	movf	_night_one_max,w
  2620  0362  3E30               	addlw	48
  2621  0363  160A  158A  25B1  120A  118A  	fcall	_writechar
  2622                           
  2623                           ;temperature.c: 390:                 write_str(".");
  2624  0368  303C               	movlw	low ((STR_21+13)| (0+32768))
  2625  0369  00F3               	movwf	write_str@array
  2626  036A  3090               	movlw	high ((STR_21+13)| (0+32768))
  2627  036B  00F4               	movwf	write_str@array+1
  2628  036C  160A  118A  2160  120A  118A  	fcall	_write_str
  2629                           
  2630                           ;temperature.c: 391:                 writechar(night_dec_max + '0');
  2631  0371  0838               	movf	_night_dec_max,w
  2632  0372  3E30               	addlw	48
  2633  0373  160A  158A  25B1  120A  118A  	fcall	_writechar
  2634                           
  2635                           ;temperature.c: 392:             }
  2636  0378  29B8               	goto	l4586
  2637  0379                     l4714:	
  2638  0379  0344               	decf	set_night@min_max,w
  2639  037A  0445               	iorwf	set_night@min_max+1,w
  2640  037B  1D03               	btfss	3,2
  2641  037C  29B8               	goto	l4586
  2642                           
  2643                           ;temperature.c: 395:                 temp_ten = night_ten_min; temp_one = night_one_min;
      +                           temp_dec = night_dec_min;
  2644  037D  0865               	movf	_night_ten_min,w
  2645  037E  00FC               	movwf	??_set_night
  2646  037F  01FD               	clrf	??_set_night+1
  2647  0380  087C               	movf	??_set_night,w
  2648  0381  00AB               	movwf	_temp_ten
  2649  0382  087D               	movf	??_set_night+1,w
  2650  0383  00AC               	movwf	_temp_ten+1
  2651  0384  0837               	movf	_night_one_min,w
  2652  0385  00FC               	movwf	??_set_night
  2653  0386  01FD               	clrf	??_set_night+1
  2654  0387  087C               	movf	??_set_night,w
  2655  0388  00A9               	movwf	_temp_one
  2656  0389  087D               	movf	??_set_night+1,w
  2657  038A  00AA               	movwf	_temp_one+1
  2658  038B  0836               	movf	_night_dec_min,w
  2659  038C  00FC               	movwf	??_set_night
  2660  038D  01FD               	clrf	??_set_night+1
  2661  038E  087C               	movf	??_set_night,w
  2662  038F  00A7               	movwf	_temp_dec
  2663  0390  087D               	movf	??_set_night+1,w
  2664  0391  00A8               	movwf	_temp_dec+1
  2665                           
  2666                           ;temperature.c: 397:                 temp_decrement();
  2667  0392  160A  118A  22A7  120A  118A  	fcall	_temp_decrement
  2668                           
  2669                           ;temperature.c: 399:                 night_ten_min = temp_ten; night_one_min = temp_one;
      +                           night_dec_min = temp_dec;
  2670  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0399  082B               	movf	_temp_ten,w
  2673  039A  00FC               	movwf	??_set_night
  2674  039B  087C               	movf	??_set_night,w
  2675  039C  00E5               	movwf	_night_ten_min
  2676  039D  0829               	movf	_temp_one,w
  2677  039E  00FC               	movwf	??_set_night
  2678  039F  087C               	movf	??_set_night,w
  2679  03A0  00B7               	movwf	_night_one_min
  2680  03A1  0827               	movf	_temp_dec,w
  2681  03A2  00FC               	movwf	??_set_night
  2682  03A3  087C               	movf	??_set_night,w
  2683  03A4  00B6               	movwf	_night_dec_min
  2684                           
  2685                           ;temperature.c: 401:                 writecmd_4line(0x8A);
  2686  03A5  308A               	movlw	138
  2687  03A6  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  2688                           
  2689                           ;temperature.c: 402:                 writechar(night_ten_min + '0');
  2690  03AB  0865               	movf	_night_ten_min,w
  2691  03AC  3E30               	addlw	48
  2692  03AD  160A  158A  25B1  120A  118A  	fcall	_writechar
  2693                           
  2694                           ;temperature.c: 403:                 writechar(night_one_min + '0');
  2695  03B2  0837               	movf	_night_one_min,w
  2696  03B3  3E30               	addlw	48
  2697  03B4  160A  158A  25B1  120A  118A  	fcall	_writechar
  2698                           
  2699                           ;temperature.c: 404:                 write_str(".");
  2700  03B9  303C               	movlw	low ((STR_21+13)| (0+32768))
  2701  03BA  00F3               	movwf	write_str@array
  2702  03BB  3090               	movlw	high ((STR_21+13)| (0+32768))
  2703  03BC  00F4               	movwf	write_str@array+1
  2704  03BD  160A  118A  2160  120A  118A  	fcall	_write_str
  2705                           
  2706                           ;temperature.c: 405:                 writechar(night_dec_min + '0');
  2707  03C2  0836               	movf	_night_dec_min,w
  2708  03C3  3E30               	addlw	48
  2709  03C4  160A  158A  25B1  120A  118A  	fcall	_writechar
  2710  03C9  29B8               	goto	l4586
  2711  03CA                     __end_of_set_night:	
  2712                           
  2713                           	psect	text3
  2714  0D7D                     __ptext3:	
  2715 ;; *************** function _set_day *****************
  2716 ;; Defined at:
  2717 ;;		line 160 in file "temperature.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  min_max         2    0[BANK0 ] unsigned int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 300/0
  2728 ;;		On exit  : 300/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0       2       0       0       0
  2733 ;;      Temps:          2       0       0       0       0
  2734 ;;      Totals:         2       2       0       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		_OutputPins
  2740 ;;		_button_reset
  2741 ;;		_temp_decrement
  2742 ;;		_temp_increment
  2743 ;;		_write_str
  2744 ;;		_writechar
  2745 ;;		_writecmd_4line
  2746 ;; This function is called by:
  2747 ;;		_temp_setting
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _set_day
  2753  0D7D                     _set_day:	
  2754                           
  2755                           ;temperature.c: 161:     writecmd_4line(0x1);
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _set_day: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2759  0D7D  3001               	movlw	1
  2760  0D7E  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2761                           
  2762                           ;temperature.c: 162:     writecmd_4line(0x80);
  2763  0D83  3080               	movlw	128
  2764  0D84  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2765                           
  2766                           ;temperature.c: 163:     write_str("Day Settings");
  2767  0D89  3069               	movlw	low (STR_43| (0+32768))
  2768  0D8A  00F3               	movwf	write_str@array
  2769  0D8B  3090               	movlw	high (STR_43| (0+32768))
  2770  0D8C  00F4               	movwf	write_str@array+1
  2771  0D8D  160A  118A  2160  120A  158A  	fcall	_write_str
  2772                           
  2773                           ;temperature.c: 164:     writecmd_4line(0x90);
  2774  0D92  3090               	movlw	144
  2775  0D93  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2776                           
  2777                           ;temperature.c: 165:     write_str("Max:");
  2778  0D98  30C6               	movlw	low (STR_44| (0+32768))
  2779  0D99  00F3               	movwf	write_str@array
  2780  0D9A  3090               	movlw	high (STR_44| (0+32768))
  2781  0D9B  00F4               	movwf	write_str@array+1
  2782  0D9C  160A  118A  2160  120A  158A  	fcall	_write_str
  2783                           
  2784                           ;temperature.c: 166:     writechar(day_ten_max + '0');
  2785  0DA1  086D               	movf	_day_ten_max,w
  2786  0DA2  3E30               	addlw	48
  2787  0DA3  160A  158A  25B1  120A  158A  	fcall	_writechar
  2788                           
  2789                           ;temperature.c: 167:     writechar(day_one_max + '0');
  2790  0DA8  086C               	movf	_day_one_max,w
  2791  0DA9  3E30               	addlw	48
  2792  0DAA  160A  158A  25B1  120A  158A  	fcall	_writechar
  2793                           
  2794                           ;temperature.c: 168:     write_str(".");
  2795  0DAF  303C               	movlw	low ((STR_21+13)| (0+32768))
  2796  0DB0  00F3               	movwf	write_str@array
  2797  0DB1  3090               	movlw	high ((STR_21+13)| (0+32768))
  2798  0DB2  00F4               	movwf	write_str@array+1
  2799  0DB3  160A  118A  2160  120A  158A  	fcall	_write_str
  2800                           
  2801                           ;temperature.c: 169:     writechar(day_dec_max + '0');
  2802  0DB8  086B               	movf	_day_dec_max,w
  2803  0DB9  3E30               	addlw	48
  2804  0DBA  160A  158A  25B1  120A  158A  	fcall	_writechar
  2805                           
  2806                           ;temperature.c: 170:     writecmd_4line(0x88);
  2807  0DBF  3088               	movlw	136
  2808  0DC0  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2809                           
  2810                           ;temperature.c: 171:     write_str("Min:");
  2811  0DC5  30C1               	movlw	low (STR_46| (0+32768))
  2812  0DC6  00F3               	movwf	write_str@array
  2813  0DC7  3090               	movlw	high (STR_46| (0+32768))
  2814  0DC8  00F4               	movwf	write_str@array+1
  2815  0DC9  160A  118A  2160  120A  158A  	fcall	_write_str
  2816                           
  2817                           ;temperature.c: 172:     writechar(day_ten_min + '0');
  2818  0DCE  086A               	movf	_day_ten_min,w
  2819  0DCF  3E30               	addlw	48
  2820  0DD0  160A  158A  25B1  120A  158A  	fcall	_writechar
  2821                           
  2822                           ;temperature.c: 173:     writechar(day_one_min + '0');
  2823  0DD5  0869               	movf	_day_one_min,w
  2824  0DD6  3E30               	addlw	48
  2825  0DD7  160A  158A  25B1  120A  158A  	fcall	_writechar
  2826                           
  2827                           ;temperature.c: 174:     write_str(".");
  2828  0DDC  303C               	movlw	low ((STR_21+13)| (0+32768))
  2829  0DDD  00F3               	movwf	write_str@array
  2830  0DDE  3090               	movlw	high ((STR_21+13)| (0+32768))
  2831  0DDF  00F4               	movwf	write_str@array+1
  2832  0DE0  160A  118A  2160  120A  158A  	fcall	_write_str
  2833                           
  2834                           ;temperature.c: 175:     writechar(day_dec_min + '0');
  2835  0DE5  0868               	movf	_day_dec_min,w
  2836  0DE6                     L3:	
  2837  0DE6  3E30               	addlw	48
  2838  0DE7  160A  158A  25B1  120A  158A  	fcall	_writechar
  2839                           
  2840                           ;temperature.c: 177:     unsigned int min_max = 0;
  2841  0DEC  01C4               	clrf	set_day@min_max
  2842  0DED  01C5               	clrf	set_day@min_max+1
  2843  0DEE                     l4420:	
  2844                           
  2845                           ;temperature.c: 182:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  2846  0DEE  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2847  0DF3  3002               	movlw	2
  2848  0DF4  0642               	xorwf	_FirstRC,w
  2849  0DF5  1D03               	btfss	3,2
  2850  0DF6  2DFE               	goto	l4432
  2851  0DF7  0343               	decf	_SecondRC,w
  2852  0DF8  1D03               	btfss	3,2
  2853  0DF9  2DFE               	goto	l4432
  2854                           
  2855                           ;temperature.c: 183:             button_reset();
  2856  0DFA  160A  158A  24F1   	fcall	_button_reset
  2857  0DFD  0008               	return
  2858  0DFE                     l4432:	
  2859  0DFE  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2860  0E03  3003               	movlw	3
  2861  0E04  0642               	xorwf	_FirstRC,w
  2862  0E05  1D03               	btfss	3,2
  2863  0E06  2E46               	goto	l4458
  2864  0E07  0343               	decf	_SecondRC,w
  2865  0E08  1D03               	btfss	3,2
  2866  0E09  2E46               	goto	l4458
  2867                           
  2868                           ;temperature.c: 189:             button_reset();
  2869  0E0A  160A  158A  24F1  120A  158A  	fcall	_button_reset
  2870                           
  2871                           ;temperature.c: 190:             writecmd_4line(0x90);
  2872  0E0F  3090               	movlw	144
  2873  0E10  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2874                           
  2875                           ;temperature.c: 191:             write_str("          ");
  2876  0E15  3006               	movlw	low ((STR_22+6)| (0+32768))
  2877  0E16  00F3               	movwf	write_str@array
  2878  0E17  3090               	movlw	high ((STR_22+6)| (0+32768))
  2879  0E18  00F4               	movwf	write_str@array+1
  2880  0E19  160A  118A  2160  120A  158A  	fcall	_write_str
  2881                           
  2882                           ;temperature.c: 192:             writecmd_4line(0x90);
  2883  0E1E  3090               	movlw	144
  2884  0E1F  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2885                           
  2886                           ;temperature.c: 193:             write_str("Max:");
  2887  0E24  30C6               	movlw	low (STR_44| (0+32768))
  2888  0E25  00F3               	movwf	write_str@array
  2889  0E26  3090               	movlw	high (STR_44| (0+32768))
  2890  0E27  00F4               	movwf	write_str@array+1
  2891  0E28  160A  118A  2160  120A  158A  	fcall	_write_str
  2892                           
  2893                           ;temperature.c: 194:             writechar(day_ten_max + '0');
  2894  0E2D  086D               	movf	_day_ten_max,w
  2895  0E2E  3E30               	addlw	48
  2896  0E2F  160A  158A  25B1  120A  158A  	fcall	_writechar
  2897                           
  2898                           ;temperature.c: 195:             writechar(day_one_max + '0');
  2899  0E34  086C               	movf	_day_one_max,w
  2900  0E35  3E30               	addlw	48
  2901  0E36  160A  158A  25B1  120A  158A  	fcall	_writechar
  2902                           
  2903                           ;temperature.c: 196:             write_str(".");
  2904  0E3B  303C               	movlw	low ((STR_21+13)| (0+32768))
  2905  0E3C  00F3               	movwf	write_str@array
  2906  0E3D  3090               	movlw	high ((STR_21+13)| (0+32768))
  2907  0E3E  00F4               	movwf	write_str@array+1
  2908  0E3F  160A  118A  2160  120A  158A  	fcall	_write_str
  2909                           
  2910                           ;temperature.c: 197:             writechar(day_dec_max + '0');
  2911  0E44  086B               	movf	_day_dec_max,w
  2912  0E45  2DE6               	goto	L3
  2913  0E46                     l4458:	
  2914  0E46  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2915  0E4B  3004               	movlw	4
  2916  0E4C  0642               	xorwf	_FirstRC,w
  2917  0E4D  1D03               	btfss	3,2
  2918  0E4E  2E98               	goto	l4484
  2919  0E4F  0343               	decf	_SecondRC,w
  2920  0E50  1D03               	btfss	3,2
  2921  0E51  2E98               	goto	l4484
  2922                           
  2923                           ;temperature.c: 205:             button_reset();
  2924  0E52  160A  158A  24F1  120A  158A  	fcall	_button_reset
  2925                           
  2926                           ;temperature.c: 206:             writecmd_4line(0x88);
  2927  0E57  3088               	movlw	136
  2928  0E58  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2929                           
  2930                           ;temperature.c: 207:             write_str("          ");
  2931  0E5D  3006               	movlw	low ((STR_22+6)| (0+32768))
  2932  0E5E  00F3               	movwf	write_str@array
  2933  0E5F  3090               	movlw	high ((STR_22+6)| (0+32768))
  2934  0E60  00F4               	movwf	write_str@array+1
  2935  0E61  160A  118A  2160  120A  158A  	fcall	_write_str
  2936                           
  2937                           ;temperature.c: 208:             writecmd_4line(0x88);
  2938  0E66  3088               	movlw	136
  2939  0E67  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  2940                           
  2941                           ;temperature.c: 209:             write_str("Min:");
  2942  0E6C  30C1               	movlw	low (STR_46| (0+32768))
  2943  0E6D  00F3               	movwf	write_str@array
  2944  0E6E  3090               	movlw	high (STR_46| (0+32768))
  2945  0E6F  00F4               	movwf	write_str@array+1
  2946  0E70  160A  118A  2160  120A  158A  	fcall	_write_str
  2947                           
  2948                           ;temperature.c: 210:             writechar(day_ten_min + '0');
  2949  0E75  086A               	movf	_day_ten_min,w
  2950  0E76  3E30               	addlw	48
  2951  0E77  160A  158A  25B1  120A  158A  	fcall	_writechar
  2952                           
  2953                           ;temperature.c: 211:             writechar(day_one_min + '0');
  2954  0E7C  0869               	movf	_day_one_min,w
  2955  0E7D  3E30               	addlw	48
  2956  0E7E  160A  158A  25B1  120A  158A  	fcall	_writechar
  2957                           
  2958                           ;temperature.c: 212:             write_str(".");
  2959  0E83  303C               	movlw	low ((STR_21+13)| (0+32768))
  2960  0E84  00F3               	movwf	write_str@array
  2961  0E85  3090               	movlw	high ((STR_21+13)| (0+32768))
  2962  0E86  00F4               	movwf	write_str@array+1
  2963  0E87  160A  118A  2160  120A  158A  	fcall	_write_str
  2964                           
  2965                           ;temperature.c: 213:             writechar(day_dec_min + '0');
  2966  0E8C  0868               	movf	_day_dec_min,w
  2967  0E8D  3E30               	addlw	48
  2968  0E8E  160A  158A  25B1  120A  158A  	fcall	_writechar
  2969                           
  2970                           ;temperature.c: 215:             min_max = 1;
  2971  0E93  3001               	movlw	1
  2972  0E94  00C4               	movwf	set_day@min_max
  2973  0E95  3000               	movlw	0
  2974  0E96  00C5               	movwf	set_day@min_max+1
  2975                           
  2976                           ;temperature.c: 216:         }
  2977  0E97  2DEE               	goto	l4420
  2978  0E98                     l4484:	
  2979  0E98  160A  118A  2260  120A  158A  	fcall	_OutputPins
  2980  0E9D  3004               	movlw	4
  2981  0E9E  0642               	xorwf	_FirstRC,w
  2982  0E9F  1D03               	btfss	3,2
  2983  0EA0  2F4C               	goto	l4524
  2984  0EA1  3002               	movlw	2
  2985  0EA2  0643               	xorwf	_SecondRC,w
  2986  0EA3  1D03               	btfss	3,2
  2987  0EA4  2F4C               	goto	l4524
  2988                           
  2989                           ;temperature.c: 220:             button_reset();
  2990  0EA5  160A  158A  24F1  120A  158A  	fcall	_button_reset
  2991                           
  2992                           ;temperature.c: 221:             if (min_max == 0){
  2993  0EAA  0844               	movf	set_day@min_max,w
  2994  0EAB  0445               	iorwf	set_day@min_max+1,w
  2995  0EAC  1D03               	btfss	3,2
  2996  0EAD  2EFB               	goto	l4508
  2997                           
  2998                           ;temperature.c: 223:                 temp_ten = day_ten_max; temp_one = day_one_max; tem
      +                          p_dec = day_dec_max;
  2999  0EAE  086D               	movf	_day_ten_max,w
  3000  0EAF  00FC               	movwf	??_set_day
  3001  0EB0  01FD               	clrf	??_set_day+1
  3002  0EB1  087C               	movf	??_set_day,w
  3003  0EB2  00AB               	movwf	_temp_ten
  3004  0EB3  087D               	movf	??_set_day+1,w
  3005  0EB4  00AC               	movwf	_temp_ten+1
  3006  0EB5  086C               	movf	_day_one_max,w
  3007  0EB6  00FC               	movwf	??_set_day
  3008  0EB7  01FD               	clrf	??_set_day+1
  3009  0EB8  087C               	movf	??_set_day,w
  3010  0EB9  00A9               	movwf	_temp_one
  3011  0EBA  087D               	movf	??_set_day+1,w
  3012  0EBB  00AA               	movwf	_temp_one+1
  3013  0EBC  086B               	movf	_day_dec_max,w
  3014  0EBD  00FC               	movwf	??_set_day
  3015  0EBE  01FD               	clrf	??_set_day+1
  3016  0EBF  087C               	movf	??_set_day,w
  3017  0EC0  00A7               	movwf	_temp_dec
  3018  0EC1  087D               	movf	??_set_day+1,w
  3019  0EC2  00A8               	movwf	_temp_dec+1
  3020                           
  3021                           ;temperature.c: 225:                 temp_increment();
  3022  0EC3  160A  158A  26E1  120A  158A  	fcall	_temp_increment
  3023                           
  3024                           ;temperature.c: 227:                 day_ten_max = temp_ten; day_one_max = temp_one; day
      +                          _dec_max = temp_dec;
  3025  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0ECA  082B               	movf	_temp_ten,w
  3028  0ECB  00FC               	movwf	??_set_day
  3029  0ECC  087C               	movf	??_set_day,w
  3030  0ECD  00ED               	movwf	_day_ten_max
  3031  0ECE  0829               	movf	_temp_one,w
  3032  0ECF  00FC               	movwf	??_set_day
  3033  0ED0  087C               	movf	??_set_day,w
  3034  0ED1  00EC               	movwf	_day_one_max
  3035  0ED2  0827               	movf	_temp_dec,w
  3036  0ED3  00FC               	movwf	??_set_day
  3037  0ED4  087C               	movf	??_set_day,w
  3038  0ED5  00EB               	movwf	_day_dec_max
  3039                           
  3040                           ;temperature.c: 229:                 writecmd_4line(0x92);
  3041  0ED6  3092               	movlw	146
  3042  0ED7  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  3043                           
  3044                           ;temperature.c: 230:                 writechar(day_ten_max + '0');
  3045  0EDC  086D               	movf	_day_ten_max,w
  3046  0EDD  3E30               	addlw	48
  3047  0EDE  160A  158A  25B1  120A  158A  	fcall	_writechar
  3048                           
  3049                           ;temperature.c: 231:                 writechar(day_one_max + '0');
  3050  0EE3  086C               	movf	_day_one_max,w
  3051  0EE4  3E30               	addlw	48
  3052  0EE5  160A  158A  25B1  120A  158A  	fcall	_writechar
  3053                           
  3054                           ;temperature.c: 232:                 write_str(".");
  3055  0EEA  303C               	movlw	low ((STR_21+13)| (0+32768))
  3056  0EEB  00F3               	movwf	write_str@array
  3057  0EEC  3090               	movlw	high ((STR_21+13)| (0+32768))
  3058  0EED  00F4               	movwf	write_str@array+1
  3059  0EEE  160A  118A  2160  120A  158A  	fcall	_write_str
  3060                           
  3061                           ;temperature.c: 233:                 writechar(day_dec_max + '0');
  3062  0EF3  086B               	movf	_day_dec_max,w
  3063  0EF4  3E30               	addlw	48
  3064  0EF5  160A  158A  25B1  120A  158A  	fcall	_writechar
  3065                           
  3066                           ;temperature.c: 234:             }
  3067  0EFA  2DEE               	goto	l4420
  3068  0EFB                     l4508:	
  3069  0EFB  0344               	decf	set_day@min_max,w
  3070  0EFC  0445               	iorwf	set_day@min_max+1,w
  3071  0EFD  1D03               	btfss	3,2
  3072  0EFE  2DEE               	goto	l4420
  3073                           
  3074                           ;temperature.c: 237:                 temp_ten = day_ten_min; temp_one = day_one_min; tem
      +                          p_dec = day_dec_min;
  3075  0EFF  086A               	movf	_day_ten_min,w
  3076  0F00  00FC               	movwf	??_set_day
  3077  0F01  01FD               	clrf	??_set_day+1
  3078  0F02  087C               	movf	??_set_day,w
  3079  0F03  00AB               	movwf	_temp_ten
  3080  0F04  087D               	movf	??_set_day+1,w
  3081  0F05  00AC               	movwf	_temp_ten+1
  3082  0F06  0869               	movf	_day_one_min,w
  3083  0F07  00FC               	movwf	??_set_day
  3084  0F08  01FD               	clrf	??_set_day+1
  3085  0F09  087C               	movf	??_set_day,w
  3086  0F0A  00A9               	movwf	_temp_one
  3087  0F0B  087D               	movf	??_set_day+1,w
  3088  0F0C  00AA               	movwf	_temp_one+1
  3089  0F0D  0868               	movf	_day_dec_min,w
  3090  0F0E  00FC               	movwf	??_set_day
  3091  0F0F  01FD               	clrf	??_set_day+1
  3092  0F10  087C               	movf	??_set_day,w
  3093  0F11  00A7               	movwf	_temp_dec
  3094  0F12  087D               	movf	??_set_day+1,w
  3095  0F13  00A8               	movwf	_temp_dec+1
  3096                           
  3097                           ;temperature.c: 239:                 temp_increment();
  3098  0F14  160A  158A  26E1  120A  158A  	fcall	_temp_increment
  3099                           
  3100                           ;temperature.c: 241:                 day_ten_min = temp_ten; day_one_min = temp_one; day
      +                          _dec_min = temp_dec;
  3101  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0F1B  082B               	movf	_temp_ten,w
  3104  0F1C  00FC               	movwf	??_set_day
  3105  0F1D  087C               	movf	??_set_day,w
  3106  0F1E  00EA               	movwf	_day_ten_min
  3107  0F1F  0829               	movf	_temp_one,w
  3108  0F20  00FC               	movwf	??_set_day
  3109  0F21  087C               	movf	??_set_day,w
  3110  0F22  00E9               	movwf	_day_one_min
  3111  0F23  0827               	movf	_temp_dec,w
  3112  0F24  00FC               	movwf	??_set_day
  3113  0F25  087C               	movf	??_set_day,w
  3114  0F26  00E8               	movwf	_day_dec_min
  3115                           
  3116                           ;temperature.c: 243:                 writecmd_4line(0x8A);
  3117  0F27  308A               	movlw	138
  3118  0F28  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  3119                           
  3120                           ;temperature.c: 244:                 writechar(day_ten_min + '0');
  3121  0F2D  086A               	movf	_day_ten_min,w
  3122  0F2E  3E30               	addlw	48
  3123  0F2F  160A  158A  25B1  120A  158A  	fcall	_writechar
  3124                           
  3125                           ;temperature.c: 245:                 writechar(day_one_min + '0');
  3126  0F34  0869               	movf	_day_one_min,w
  3127  0F35  3E30               	addlw	48
  3128  0F36  160A  158A  25B1  120A  158A  	fcall	_writechar
  3129                           
  3130                           ;temperature.c: 246:                 write_str(".");
  3131  0F3B  303C               	movlw	low ((STR_21+13)| (0+32768))
  3132  0F3C  00F3               	movwf	write_str@array
  3133  0F3D  3090               	movlw	high ((STR_21+13)| (0+32768))
  3134  0F3E  00F4               	movwf	write_str@array+1
  3135  0F3F  160A  118A  2160  120A  158A  	fcall	_write_str
  3136                           
  3137                           ;temperature.c: 247:                 writechar(day_dec_min + '0');
  3138  0F44  0868               	movf	_day_dec_min,w
  3139  0F45  3E30               	addlw	48
  3140  0F46  160A  158A  25B1  120A  158A  	fcall	_writechar
  3141  0F4B  2DEE               	goto	l4420
  3142  0F4C                     l4524:	
  3143  0F4C  160A  118A  2260  120A  158A  	fcall	_OutputPins
  3144  0F51  3003               	movlw	3
  3145  0F52  0642               	xorwf	_FirstRC,w
  3146  0F53  1D03               	btfss	3,2
  3147  0F54  2DEE               	goto	l4420
  3148  0F55  3002               	movlw	2
  3149  0F56  0643               	xorwf	_SecondRC,w
  3150  0F57  1D03               	btfss	3,2
  3151  0F58  2DEE               	goto	l4420
  3152                           
  3153                           ;temperature.c: 253:             button_reset();
  3154  0F59  160A  158A  24F1  120A  158A  	fcall	_button_reset
  3155                           
  3156                           ;temperature.c: 254:             if (min_max == 0){
  3157  0F5E  0844               	movf	set_day@min_max,w
  3158  0F5F  0445               	iorwf	set_day@min_max+1,w
  3159  0F60  1D03               	btfss	3,2
  3160  0F61  2FAF               	goto	l4548
  3161                           
  3162                           ;temperature.c: 256:                 temp_ten = day_ten_max; temp_one = day_one_max; tem
      +                          p_dec = day_dec_max;
  3163  0F62  086D               	movf	_day_ten_max,w
  3164  0F63  00FC               	movwf	??_set_day
  3165  0F64  01FD               	clrf	??_set_day+1
  3166  0F65  087C               	movf	??_set_day,w
  3167  0F66  00AB               	movwf	_temp_ten
  3168  0F67  087D               	movf	??_set_day+1,w
  3169  0F68  00AC               	movwf	_temp_ten+1
  3170  0F69  086C               	movf	_day_one_max,w
  3171  0F6A  00FC               	movwf	??_set_day
  3172  0F6B  01FD               	clrf	??_set_day+1
  3173  0F6C  087C               	movf	??_set_day,w
  3174  0F6D  00A9               	movwf	_temp_one
  3175  0F6E  087D               	movf	??_set_day+1,w
  3176  0F6F  00AA               	movwf	_temp_one+1
  3177  0F70  086B               	movf	_day_dec_max,w
  3178  0F71  00FC               	movwf	??_set_day
  3179  0F72  01FD               	clrf	??_set_day+1
  3180  0F73  087C               	movf	??_set_day,w
  3181  0F74  00A7               	movwf	_temp_dec
  3182  0F75  087D               	movf	??_set_day+1,w
  3183  0F76  00A8               	movwf	_temp_dec+1
  3184                           
  3185                           ;temperature.c: 258:                 temp_decrement();
  3186  0F77  160A  118A  22A7  120A  158A  	fcall	_temp_decrement
  3187                           
  3188                           ;temperature.c: 260:                 day_ten_max = temp_ten; day_one_max = temp_one; day
      +                          _dec_max = temp_dec;
  3189  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0F7E  082B               	movf	_temp_ten,w
  3192  0F7F  00FC               	movwf	??_set_day
  3193  0F80  087C               	movf	??_set_day,w
  3194  0F81  00ED               	movwf	_day_ten_max
  3195  0F82  0829               	movf	_temp_one,w
  3196  0F83  00FC               	movwf	??_set_day
  3197  0F84  087C               	movf	??_set_day,w
  3198  0F85  00EC               	movwf	_day_one_max
  3199  0F86  0827               	movf	_temp_dec,w
  3200  0F87  00FC               	movwf	??_set_day
  3201  0F88  087C               	movf	??_set_day,w
  3202  0F89  00EB               	movwf	_day_dec_max
  3203                           
  3204                           ;temperature.c: 262:                 writecmd_4line(0x92);
  3205  0F8A  3092               	movlw	146
  3206  0F8B  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  3207                           
  3208                           ;temperature.c: 263:                 writechar(day_ten_max + '0');
  3209  0F90  086D               	movf	_day_ten_max,w
  3210  0F91  3E30               	addlw	48
  3211  0F92  160A  158A  25B1  120A  158A  	fcall	_writechar
  3212                           
  3213                           ;temperature.c: 264:                 writechar(day_one_max + '0');
  3214  0F97  086C               	movf	_day_one_max,w
  3215  0F98  3E30               	addlw	48
  3216  0F99  160A  158A  25B1  120A  158A  	fcall	_writechar
  3217                           
  3218                           ;temperature.c: 265:                 write_str(".");
  3219  0F9E  303C               	movlw	low ((STR_21+13)| (0+32768))
  3220  0F9F  00F3               	movwf	write_str@array
  3221  0FA0  3090               	movlw	high ((STR_21+13)| (0+32768))
  3222  0FA1  00F4               	movwf	write_str@array+1
  3223  0FA2  160A  118A  2160  120A  158A  	fcall	_write_str
  3224                           
  3225                           ;temperature.c: 266:                 writechar(day_dec_max + '0');
  3226  0FA7  086B               	movf	_day_dec_max,w
  3227  0FA8  3E30               	addlw	48
  3228  0FA9  160A  158A  25B1  120A  158A  	fcall	_writechar
  3229                           
  3230                           ;temperature.c: 267:             }
  3231  0FAE  2DEE               	goto	l4420
  3232  0FAF                     l4548:	
  3233  0FAF  0344               	decf	set_day@min_max,w
  3234  0FB0  0445               	iorwf	set_day@min_max+1,w
  3235  0FB1  1D03               	btfss	3,2
  3236  0FB2  2DEE               	goto	l4420
  3237                           
  3238                           ;temperature.c: 270:                 temp_ten = day_ten_min; temp_one = day_one_min; tem
      +                          p_dec = day_dec_min;
  3239  0FB3  086A               	movf	_day_ten_min,w
  3240  0FB4  00FC               	movwf	??_set_day
  3241  0FB5  01FD               	clrf	??_set_day+1
  3242  0FB6  087C               	movf	??_set_day,w
  3243  0FB7  00AB               	movwf	_temp_ten
  3244  0FB8  087D               	movf	??_set_day+1,w
  3245  0FB9  00AC               	movwf	_temp_ten+1
  3246  0FBA  0869               	movf	_day_one_min,w
  3247  0FBB  00FC               	movwf	??_set_day
  3248  0FBC  01FD               	clrf	??_set_day+1
  3249  0FBD  087C               	movf	??_set_day,w
  3250  0FBE  00A9               	movwf	_temp_one
  3251  0FBF  087D               	movf	??_set_day+1,w
  3252  0FC0  00AA               	movwf	_temp_one+1
  3253  0FC1  0868               	movf	_day_dec_min,w
  3254  0FC2  00FC               	movwf	??_set_day
  3255  0FC3  01FD               	clrf	??_set_day+1
  3256  0FC4  087C               	movf	??_set_day,w
  3257  0FC5  00A7               	movwf	_temp_dec
  3258  0FC6  087D               	movf	??_set_day+1,w
  3259  0FC7  00A8               	movwf	_temp_dec+1
  3260                           
  3261                           ;temperature.c: 272:                 temp_decrement();
  3262  0FC8  160A  118A  22A7  120A  158A  	fcall	_temp_decrement
  3263                           
  3264                           ;temperature.c: 274:                 day_ten_min = temp_ten; day_one_min = temp_one; day
      +                          _dec_min = temp_dec;
  3265  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0FCF  082B               	movf	_temp_ten,w
  3268  0FD0  00FC               	movwf	??_set_day
  3269  0FD1  087C               	movf	??_set_day,w
  3270  0FD2  00EA               	movwf	_day_ten_min
  3271  0FD3  0829               	movf	_temp_one,w
  3272  0FD4  00FC               	movwf	??_set_day
  3273  0FD5  087C               	movf	??_set_day,w
  3274  0FD6  00E9               	movwf	_day_one_min
  3275  0FD7  0827               	movf	_temp_dec,w
  3276  0FD8  00FC               	movwf	??_set_day
  3277  0FD9  087C               	movf	??_set_day,w
  3278  0FDA  00E8               	movwf	_day_dec_min
  3279                           
  3280                           ;temperature.c: 276:                 writecmd_4line(0x8A);
  3281  0FDB  308A               	movlw	138
  3282  0FDC  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  3283                           
  3284                           ;temperature.c: 277:                 writechar(day_ten_min + '0');
  3285  0FE1  086A               	movf	_day_ten_min,w
  3286  0FE2  3E30               	addlw	48
  3287  0FE3  160A  158A  25B1  120A  158A  	fcall	_writechar
  3288                           
  3289                           ;temperature.c: 278:                 writechar(day_one_min + '0');
  3290  0FE8  0869               	movf	_day_one_min,w
  3291  0FE9  3E30               	addlw	48
  3292  0FEA  160A  158A  25B1  120A  158A  	fcall	_writechar
  3293                           
  3294                           ;temperature.c: 279:                 write_str(".");
  3295  0FEF  303C               	movlw	low ((STR_21+13)| (0+32768))
  3296  0FF0  00F3               	movwf	write_str@array
  3297  0FF1  3090               	movlw	high ((STR_21+13)| (0+32768))
  3298  0FF2  00F4               	movwf	write_str@array+1
  3299  0FF3  160A  118A  2160  120A  158A  	fcall	_write_str
  3300                           
  3301                           ;temperature.c: 280:                 writechar(day_dec_min + '0');
  3302  0FF8  0868               	movf	_day_dec_min,w
  3303  0FF9  3E30               	addlw	48
  3304  0FFA  160A  158A  25B1  120A  158A  	fcall	_writechar
  3305  0FFF  2DEE               	goto	l4420
  3306  1000                     __end_of_set_day:	
  3307                           
  3308                           	psect	text4
  3309  1EE1                     __ptext4:	
  3310 ;; *************** function _temp_increment *****************
  3311 ;; Defined at:
  3312 ;;		line 411 in file "temperature.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 300/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         0       0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		_delay_main
  3335 ;; This function is called by:
  3336 ;;		_set_day
  3337 ;;		_set_night
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _temp_increment
  3343  1EE1                     _temp_increment:	
  3344                           
  3345                           ;temperature.c: 413:     if (temp_ten != 4){
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _temp_increment: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3349  1EE1  3004               	movlw	4
  3350  1EE2  062B               	xorwf	_temp_ten,w
  3351  1EE3  042C               	iorwf	_temp_ten+1,w
  3352  1EE4  1903               	btfsc	3,2
  3353  1EE5  2EFA               	goto	l3800
  3354                           
  3355                           ;temperature.c: 416:         if (temp_dec == 9){
  3356  1EE6  3009               	movlw	9
  3357  1EE7  0627               	xorwf	_temp_dec,w
  3358  1EE8  0428               	iorwf	_temp_dec+1,w
  3359  1EE9  1D03               	btfss	3,2
  3360  1EEA  2F05               	goto	l3806
  3361                           
  3362                           ;temperature.c: 417:             temp_dec = 0;
  3363  1EEB  01A7               	clrf	_temp_dec
  3364  1EEC  01A8               	clrf	_temp_dec+1
  3365                           
  3366                           ;temperature.c: 420:             if (temp_one == 9){
  3367  1EED  3009               	movlw	9
  3368  1EEE  0629               	xorwf	_temp_one,w
  3369  1EEF  042A               	iorwf	_temp_one+1,w
  3370  1EF0  1D03               	btfss	3,2
  3371  1EF1  2EFE               	goto	l3802
  3372                           
  3373                           ;temperature.c: 421:                 temp_one = 0;
  3374  1EF2  01A9               	clrf	_temp_one
  3375  1EF3  01AA               	clrf	_temp_one+1
  3376                           
  3377                           ;temperature.c: 424:                 temp_ten++;
  3378  1EF4  3001               	movlw	1
  3379  1EF5  07AB               	addwf	_temp_ten,f
  3380  1EF6  1803               	skipnc
  3381  1EF7  0AAC               	incf	_temp_ten+1,f
  3382  1EF8  3000               	movlw	0
  3383  1EF9  07AC               	addwf	_temp_ten+1,f
  3384  1EFA                     l3800:	
  3385                           
  3386                           ;temperature.c: 425:                 delay_main();
  3387  1EFA  160A  158A  2571   	fcall	_delay_main
  3388                           
  3389                           ;temperature.c: 426:             }
  3390  1EFD  0008               	return
  3391  1EFE                     l3802:	
  3392                           
  3393                           ;temperature.c: 428:                 temp_one++;
  3394  1EFE  3001               	movlw	1
  3395  1EFF  07A9               	addwf	_temp_one,f
  3396  1F00  1803               	skipnc
  3397  1F01  0AAA               	incf	_temp_one+1,f
  3398  1F02  3000               	movlw	0
  3399  1F03  07AA               	addwf	_temp_one+1,f
  3400  1F04  2EFA               	goto	l3800
  3401  1F05                     l3806:	
  3402                           
  3403                           ;temperature.c: 433:             temp_dec++;
  3404  1F05  3001               	movlw	1
  3405  1F06  07A7               	addwf	_temp_dec,f
  3406  1F07  1803               	skipnc
  3407  1F08  0AA8               	incf	_temp_dec+1,f
  3408  1F09  3000               	movlw	0
  3409  1F0A  07A8               	addwf	_temp_dec+1,f
  3410  1F0B  2EFA               	goto	l3800
  3411  1F0C                     __end_of_temp_increment:	
  3412                           
  3413                           	psect	text5
  3414  12A7                     __ptext5:	
  3415 ;; *************** function _temp_decrement *****************
  3416 ;; Defined at:
  3417 ;;		line 442 in file "temperature.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  end             2    2[COMMON] unsigned int 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 300/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         0       0       0       0       0
  3432 ;;      Locals:         2       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0
  3434 ;;      Totals:         2       0       0       0       0
  3435 ;;Total ram usage:        2 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    1
  3438 ;; This function calls:
  3439 ;;		_delay_main
  3440 ;; This function is called by:
  3441 ;;		_set_day
  3442 ;;		_set_night
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _temp_decrement
  3448  12A7                     _temp_decrement:	
  3449                           
  3450                           ;temperature.c: 443:     unsigned int end = 0;
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _temp_decrement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3454  12A7  01F2               	clrf	temp_decrement@end
  3455  12A8  01F3               	clrf	temp_decrement@end+1
  3456                           
  3457                           ;temperature.c: 445:     if (temp_ten == 1){
  3458  12A9  032B               	decf	_temp_ten,w
  3459  12AA  042C               	iorwf	_temp_ten+1,w
  3460  12AB  1D03               	btfss	3,2
  3461  12AC  2AC8               	goto	l3826
  3462                           
  3463                           ;temperature.c: 446:         end++;
  3464  12AD  3001               	movlw	1
  3465  12AE  07F2               	addwf	temp_decrement@end,f
  3466  12AF  1803               	skipnc
  3467  12B0  0AF3               	incf	temp_decrement@end+1,f
  3468  12B1  3000               	movlw	0
  3469  12B2  07F3               	addwf	temp_decrement@end+1,f
  3470                           
  3471                           ;temperature.c: 447:         if (temp_one == 5){
  3472  12B3  3005               	movlw	5
  3473  12B4  0629               	xorwf	_temp_one,w
  3474  12B5  042A               	iorwf	_temp_one+1,w
  3475  12B6  1D03               	btfss	3,2
  3476  12B7  2AC8               	goto	l3826
  3477                           
  3478                           ;temperature.c: 448:             end++;
  3479  12B8  3001               	movlw	1
  3480  12B9  07F2               	addwf	temp_decrement@end,f
  3481  12BA  1803               	skipnc
  3482  12BB  0AF3               	incf	temp_decrement@end+1,f
  3483  12BC  3000               	movlw	0
  3484  12BD  07F3               	addwf	temp_decrement@end+1,f
  3485                           
  3486                           ;temperature.c: 449:             if (temp_dec == 0){
  3487  12BE  0827               	movf	_temp_dec,w
  3488  12BF  0428               	iorwf	_temp_dec+1,w
  3489  12C0  1D03               	btfss	3,2
  3490  12C1  2AC8               	goto	l3826
  3491                           
  3492                           ;temperature.c: 450:                 end++;
  3493  12C2  3001               	movlw	1
  3494  12C3  07F2               	addwf	temp_decrement@end,f
  3495  12C4  1803               	skipnc
  3496  12C5  0AF3               	incf	temp_decrement@end+1,f
  3497  12C6  3000               	movlw	0
  3498  12C7  07F3               	addwf	temp_decrement@end+1,f
  3499  12C8                     l3826:	
  3500                           
  3501                           ;temperature.c: 455:     if (end != 3){
  3502  12C8  3003               	movlw	3
  3503  12C9  0672               	xorwf	temp_decrement@end,w
  3504  12CA  0473               	iorwf	temp_decrement@end+1,w
  3505  12CB  1903               	btfsc	3,2
  3506  12CC  2AE3               	goto	l3836
  3507                           
  3508                           ;temperature.c: 458:         if (temp_dec == 0){
  3509  12CD  0827               	movf	_temp_dec,w
  3510  12CE  0428               	iorwf	_temp_dec+1,w
  3511  12CF  1D03               	btfss	3,2
  3512  12D0  2AEE               	goto	l3842
  3513                           
  3514                           ;temperature.c: 459:             temp_dec = 9;
  3515  12D1  3009               	movlw	9
  3516  12D2  00A7               	movwf	_temp_dec
  3517  12D3  3000               	movlw	0
  3518  12D4  00A8               	movwf	_temp_dec+1
  3519                           
  3520                           ;temperature.c: 462:             if (temp_one == 0){
  3521  12D5  0829               	movf	_temp_one,w
  3522  12D6  042A               	iorwf	_temp_one+1,w
  3523  12D7  1D03               	btfss	3,2
  3524  12D8  2AE7               	goto	l3838
  3525                           
  3526                           ;temperature.c: 463:                 temp_one = 9;
  3527  12D9  3009               	movlw	9
  3528  12DA  00A9               	movwf	_temp_one
  3529  12DB  3000               	movlw	0
  3530  12DC  00AA               	movwf	_temp_one+1
  3531                           
  3532                           ;temperature.c: 466:                 temp_ten--;
  3533  12DD  3001               	movlw	1
  3534  12DE  02AB               	subwf	_temp_ten,f
  3535  12DF  3000               	movlw	0
  3536  12E0  1C03               	skipc
  3537  12E1  03AC               	decf	_temp_ten+1,f
  3538  12E2  02AC               	subwf	_temp_ten+1,f
  3539  12E3                     l3836:	
  3540                           
  3541                           ;temperature.c: 467:                 delay_main();
  3542  12E3  160A  158A  2571   	fcall	_delay_main
  3543                           
  3544                           ;temperature.c: 468:             }
  3545  12E6  0008               	return
  3546  12E7                     l3838:	
  3547                           
  3548                           ;temperature.c: 470:                 temp_one--;
  3549  12E7  3001               	movlw	1
  3550  12E8  02A9               	subwf	_temp_one,f
  3551  12E9  3000               	movlw	0
  3552  12EA  1C03               	skipc
  3553  12EB  03AA               	decf	_temp_one+1,f
  3554  12EC  02AA               	subwf	_temp_one+1,f
  3555  12ED  2AE3               	goto	l3836
  3556  12EE                     l3842:	
  3557                           
  3558                           ;temperature.c: 475:             temp_dec--;
  3559  12EE  3001               	movlw	1
  3560  12EF  02A7               	subwf	_temp_dec,f
  3561  12F0  3000               	movlw	0
  3562  12F1  1C03               	skipc
  3563  12F2  03A8               	decf	_temp_dec+1,f
  3564  12F3  02A8               	subwf	_temp_dec+1,f
  3565  12F4  2AE3               	goto	l3836
  3566  12F5                     __end_of_temp_decrement:	
  3567                           
  3568                           	psect	text6
  3569  1664                     __ptext6:	
  3570 ;; *************** function _temp_night *****************
  3571 ;; Defined at:
  3572 ;;		line 502 in file "temperature.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  temp            2   12[BANK0 ] unsigned int 
  3577 ;;  temp_min        2   10[BANK0 ] unsigned int 
  3578 ;;  temp_max        2    8[BANK0 ] unsigned int 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 300/0
  3585 ;;		On exit  : 300/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       6       0       0       0
  3590 ;;      Temps:          0       8       0       0       0
  3591 ;;      Totals:         0      14       0       0       0
  3592 ;;Total ram usage:       14 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    4
  3595 ;; This function calls:
  3596 ;;		_OK
  3597 ;;		___wmul
  3598 ;;		_cool
  3599 ;;		_heat
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _temp_night
  3607  1664                     _temp_night:	
  3608                           
  3609                           ;temperature.c: 503:     unsigned int temp = shi*100 + ge*10 + shifen;
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _temp_night: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613  1664  083B               	movf	_shi,w
  3614  1665  00C4               	movwf	??_temp_night
  3615  1666  01C5               	clrf	??_temp_night+1
  3616  1667  0844               	movf	??_temp_night,w
  3617  1668  00F0               	movwf	___wmul@multiplier
  3618  1669  0845               	movf	??_temp_night+1,w
  3619  166A  00F1               	movwf	___wmul@multiplier+1
  3620  166B  3064               	movlw	100
  3621  166C  00F2               	movwf	___wmul@multiplicand
  3622  166D  3000               	movlw	0
  3623  166E  00F3               	movwf	___wmul@multiplicand+1
  3624  166F  160A  158A  2648  160A  118A  	fcall	___wmul
  3625  1674  0870               	movf	?___wmul,w
  3626  1675  00C6               	movwf	??_temp_night+2
  3627  1676  0871               	movf	?___wmul+1,w
  3628  1677  00C7               	movwf	??_temp_night+3
  3629  1678  083A               	movf	_ge,w
  3630  1679  00C8               	movwf	??_temp_night+4
  3631  167A  01C9               	clrf	??_temp_night+5
  3632  167B  0848               	movf	??_temp_night+4,w
  3633  167C  00F0               	movwf	___wmul@multiplier
  3634  167D  0849               	movf	??_temp_night+5,w
  3635  167E  00F1               	movwf	___wmul@multiplier+1
  3636  167F  300A               	movlw	10
  3637  1680  00F2               	movwf	___wmul@multiplicand
  3638  1681  3000               	movlw	0
  3639  1682  00F3               	movwf	___wmul@multiplicand+1
  3640  1683  160A  158A  2648  160A  118A  	fcall	___wmul
  3641  1688  0870               	movf	?___wmul,w
  3642  1689  0746               	addwf	??_temp_night+2,w
  3643  168A  00CA               	movwf	??_temp_night+6
  3644  168B  0871               	movf	?___wmul+1,w
  3645  168C  1803               	skipnc
  3646  168D  0A71               	incf	?___wmul+1,w
  3647  168E  0747               	addwf	??_temp_night+3,w
  3648  168F  00CB               	movwf	??_temp_night+7
  3649  1690  0839               	movf	_shifen,w
  3650  1691  074A               	addwf	??_temp_night+6,w
  3651  1692  00D0               	movwf	temp_night@temp
  3652  1693  3000               	movlw	0
  3653  1694  1803               	skipnc
  3654  1695  3001               	movlw	1
  3655  1696  074B               	addwf	??_temp_night+7,w
  3656  1697  00D1               	movwf	temp_night@temp+1
  3657                           
  3658                           ;temperature.c: 504:     unsigned int temp_max = night_ten_max*100 + night_one_max*10 + 
      +                          night_dec_max;
  3659  1698  0867               	movf	_night_ten_max,w
  3660  1699  00C4               	movwf	??_temp_night
  3661  169A  01C5               	clrf	??_temp_night+1
  3662  169B  0844               	movf	??_temp_night,w
  3663  169C  00F0               	movwf	___wmul@multiplier
  3664  169D  0845               	movf	??_temp_night+1,w
  3665  169E  00F1               	movwf	___wmul@multiplier+1
  3666  169F  3064               	movlw	100
  3667  16A0  00F2               	movwf	___wmul@multiplicand
  3668  16A1  3000               	movlw	0
  3669  16A2  00F3               	movwf	___wmul@multiplicand+1
  3670  16A3  160A  158A  2648  160A  118A  	fcall	___wmul
  3671  16A8  0870               	movf	?___wmul,w
  3672  16A9  00C6               	movwf	??_temp_night+2
  3673  16AA  0871               	movf	?___wmul+1,w
  3674  16AB  00C7               	movwf	??_temp_night+3
  3675  16AC  0866               	movf	_night_one_max,w
  3676  16AD  00C8               	movwf	??_temp_night+4
  3677  16AE  01C9               	clrf	??_temp_night+5
  3678  16AF  0848               	movf	??_temp_night+4,w
  3679  16B0  00F0               	movwf	___wmul@multiplier
  3680  16B1  0849               	movf	??_temp_night+5,w
  3681  16B2  00F1               	movwf	___wmul@multiplier+1
  3682  16B3  300A               	movlw	10
  3683  16B4  00F2               	movwf	___wmul@multiplicand
  3684  16B5  3000               	movlw	0
  3685  16B6  00F3               	movwf	___wmul@multiplicand+1
  3686  16B7  160A  158A  2648  160A  118A  	fcall	___wmul
  3687  16BC  0870               	movf	?___wmul,w
  3688  16BD  0746               	addwf	??_temp_night+2,w
  3689  16BE  00CA               	movwf	??_temp_night+6
  3690  16BF  0871               	movf	?___wmul+1,w
  3691  16C0  1803               	skipnc
  3692  16C1  0A71               	incf	?___wmul+1,w
  3693  16C2  0747               	addwf	??_temp_night+3,w
  3694  16C3  00CB               	movwf	??_temp_night+7
  3695  16C4  0838               	movf	_night_dec_max,w
  3696  16C5  074A               	addwf	??_temp_night+6,w
  3697  16C6  00CC               	movwf	temp_night@temp_max
  3698  16C7  3000               	movlw	0
  3699  16C8  1803               	skipnc
  3700  16C9  3001               	movlw	1
  3701  16CA  074B               	addwf	??_temp_night+7,w
  3702  16CB  00CD               	movwf	temp_night@temp_max+1
  3703                           
  3704                           ;temperature.c: 505:     unsigned int temp_min = night_ten_min*100 + night_one_min*10 + 
      +                          night_dec_min;
  3705  16CC  0865               	movf	_night_ten_min,w
  3706  16CD  00C4               	movwf	??_temp_night
  3707  16CE  01C5               	clrf	??_temp_night+1
  3708  16CF  0844               	movf	??_temp_night,w
  3709  16D0  00F0               	movwf	___wmul@multiplier
  3710  16D1  0845               	movf	??_temp_night+1,w
  3711  16D2  00F1               	movwf	___wmul@multiplier+1
  3712  16D3  3064               	movlw	100
  3713  16D4  00F2               	movwf	___wmul@multiplicand
  3714  16D5  3000               	movlw	0
  3715  16D6  00F3               	movwf	___wmul@multiplicand+1
  3716  16D7  160A  158A  2648  160A  118A  	fcall	___wmul
  3717  16DC  0870               	movf	?___wmul,w
  3718  16DD  00C6               	movwf	??_temp_night+2
  3719  16DE  0871               	movf	?___wmul+1,w
  3720  16DF  00C7               	movwf	??_temp_night+3
  3721  16E0  0837               	movf	_night_one_min,w
  3722  16E1  00C8               	movwf	??_temp_night+4
  3723  16E2  01C9               	clrf	??_temp_night+5
  3724  16E3  0848               	movf	??_temp_night+4,w
  3725  16E4  00F0               	movwf	___wmul@multiplier
  3726  16E5  0849               	movf	??_temp_night+5,w
  3727  16E6  00F1               	movwf	___wmul@multiplier+1
  3728  16E7  300A               	movlw	10
  3729  16E8  00F2               	movwf	___wmul@multiplicand
  3730  16E9  3000               	movlw	0
  3731  16EA  00F3               	movwf	___wmul@multiplicand+1
  3732  16EB  160A  158A  2648  160A  118A  	fcall	___wmul
  3733  16F0  0870               	movf	?___wmul,w
  3734  16F1  0746               	addwf	??_temp_night+2,w
  3735  16F2  00CA               	movwf	??_temp_night+6
  3736  16F3  0871               	movf	?___wmul+1,w
  3737  16F4  1803               	skipnc
  3738  16F5  0A71               	incf	?___wmul+1,w
  3739  16F6  0747               	addwf	??_temp_night+3,w
  3740  16F7  00CB               	movwf	??_temp_night+7
  3741  16F8  0836               	movf	_night_dec_min,w
  3742  16F9  074A               	addwf	??_temp_night+6,w
  3743  16FA  00CE               	movwf	temp_night@temp_min
  3744  16FB  3000               	movlw	0
  3745  16FC  1803               	skipnc
  3746  16FD  3001               	movlw	1
  3747  16FE  074B               	addwf	??_temp_night+7,w
  3748  16FF  00CF               	movwf	temp_night@temp_min+1
  3749                           
  3750                           ;temperature.c: 506:     if (temp > temp_max){
  3751  1700  0851               	movf	temp_night@temp+1,w
  3752  1701  024D               	subwf	temp_night@temp_max+1,w
  3753  1702  1D03               	skipz
  3754  1703  2F06               	goto	u5745
  3755  1704  0850               	movf	temp_night@temp,w
  3756  1705  024C               	subwf	temp_night@temp_max,w
  3757  1706                     u5745:	
  3758  1706  1803               	skipnc
  3759  1707  2F0C               	goto	l5640
  3760                           
  3761                           ;temperature.c: 507:         cool();
  3762  1708  160A  158A  25EB   	fcall	_cool
  3763                           
  3764                           ;temperature.c: 508:     }
  3765  170B  0008               	return
  3766  170C                     l5640:	
  3767  170C  084F               	movf	temp_night@temp_min+1,w
  3768  170D  0251               	subwf	temp_night@temp+1,w
  3769  170E  1D03               	skipz
  3770  170F  2F12               	goto	u5755
  3771  1710  084E               	movf	temp_night@temp_min,w
  3772  1711  0250               	subwf	temp_night@temp,w
  3773  1712                     u5755:	
  3774  1712  1803               	skipnc
  3775  1713  2F18               	goto	l5644
  3776                           
  3777                           ;temperature.c: 510:         heat();
  3778  1714  160A  158A  2609   	fcall	_heat
  3779                           
  3780                           ;temperature.c: 511:     }
  3781  1717  0008               	return
  3782  1718                     l5644:	
  3783  1718  0851               	movf	temp_night@temp+1,w
  3784  1719  024D               	subwf	temp_night@temp_max+1,w
  3785  171A  1D03               	skipz
  3786  171B  2F1E               	goto	u5765
  3787  171C  0850               	movf	temp_night@temp,w
  3788  171D  024C               	subwf	temp_night@temp_max,w
  3789  171E                     u5765:	
  3790  171E  1C03               	skipc
  3791  171F  0008               	return
  3792                           
  3793                           ;temperature.c: 513:         if (temp >= temp_min){
  3794  1720  084F               	movf	temp_night@temp_min+1,w
  3795  1721  0251               	subwf	temp_night@temp+1,w
  3796  1722  1D03               	skipz
  3797  1723  2F26               	goto	u5775
  3798  1724  084E               	movf	temp_night@temp_min,w
  3799  1725  0250               	subwf	temp_night@temp,w
  3800  1726                     u5775:	
  3801  1726  1C03               	skipc
  3802  1727  0008               	return
  3803                           
  3804                           ;temperature.c: 514:             OK();
  3805  1728  160A  158A  253E   	fcall	_OK
  3806  172B  0008               	return
  3807  172C                     __end_of_temp_night:	
  3808                           
  3809                           	psect	text7
  3810  159C                     __ptext7:	
  3811 ;; *************** function _temp_day *****************
  3812 ;; Defined at:
  3813 ;;		line 485 in file "temperature.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  temp            2   12[BANK0 ] unsigned int 
  3818 ;;  temp_min        2   10[BANK0 ] unsigned int 
  3819 ;;  temp_max        2    8[BANK0 ] unsigned int 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 300/0
  3826 ;;		On exit  : 300/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       0       0       0       0
  3830 ;;      Locals:         0       6       0       0       0
  3831 ;;      Temps:          0       8       0       0       0
  3832 ;;      Totals:         0      14       0       0       0
  3833 ;;Total ram usage:       14 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    4
  3836 ;; This function calls:
  3837 ;;		_OK
  3838 ;;		___wmul
  3839 ;;		_cool
  3840 ;;		_heat
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _temp_day
  3848  159C                     _temp_day:	
  3849                           
  3850                           ;temperature.c: 486:     unsigned int temp = shi*100 + ge*10 + shifen;
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _temp_day: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3854  159C  083B               	movf	_shi,w
  3855  159D  00C4               	movwf	??_temp_day
  3856  159E  01C5               	clrf	??_temp_day+1
  3857  159F  0844               	movf	??_temp_day,w
  3858  15A0  00F0               	movwf	___wmul@multiplier
  3859  15A1  0845               	movf	??_temp_day+1,w
  3860  15A2  00F1               	movwf	___wmul@multiplier+1
  3861  15A3  3064               	movlw	100
  3862  15A4  00F2               	movwf	___wmul@multiplicand
  3863  15A5  3000               	movlw	0
  3864  15A6  00F3               	movwf	___wmul@multiplicand+1
  3865  15A7  160A  158A  2648  160A  118A  	fcall	___wmul
  3866  15AC  0870               	movf	?___wmul,w
  3867  15AD  00C6               	movwf	??_temp_day+2
  3868  15AE  0871               	movf	?___wmul+1,w
  3869  15AF  00C7               	movwf	??_temp_day+3
  3870  15B0  083A               	movf	_ge,w
  3871  15B1  00C8               	movwf	??_temp_day+4
  3872  15B2  01C9               	clrf	??_temp_day+5
  3873  15B3  0848               	movf	??_temp_day+4,w
  3874  15B4  00F0               	movwf	___wmul@multiplier
  3875  15B5  0849               	movf	??_temp_day+5,w
  3876  15B6  00F1               	movwf	___wmul@multiplier+1
  3877  15B7  300A               	movlw	10
  3878  15B8  00F2               	movwf	___wmul@multiplicand
  3879  15B9  3000               	movlw	0
  3880  15BA  00F3               	movwf	___wmul@multiplicand+1
  3881  15BB  160A  158A  2648  160A  118A  	fcall	___wmul
  3882  15C0  0870               	movf	?___wmul,w
  3883  15C1  0746               	addwf	??_temp_day+2,w
  3884  15C2  00CA               	movwf	??_temp_day+6
  3885  15C3  0871               	movf	?___wmul+1,w
  3886  15C4  1803               	skipnc
  3887  15C5  0A71               	incf	?___wmul+1,w
  3888  15C6  0747               	addwf	??_temp_day+3,w
  3889  15C7  00CB               	movwf	??_temp_day+7
  3890  15C8  0839               	movf	_shifen,w
  3891  15C9  074A               	addwf	??_temp_day+6,w
  3892  15CA  00D0               	movwf	temp_day@temp
  3893  15CB  3000               	movlw	0
  3894  15CC  1803               	skipnc
  3895  15CD  3001               	movlw	1
  3896  15CE  074B               	addwf	??_temp_day+7,w
  3897  15CF  00D1               	movwf	temp_day@temp+1
  3898                           
  3899                           ;temperature.c: 487:     unsigned int temp_max = day_ten_max*100 + day_one_max*10 + day_
      +                          dec_max;
  3900  15D0  086D               	movf	_day_ten_max,w
  3901  15D1  00C4               	movwf	??_temp_day
  3902  15D2  01C5               	clrf	??_temp_day+1
  3903  15D3  0844               	movf	??_temp_day,w
  3904  15D4  00F0               	movwf	___wmul@multiplier
  3905  15D5  0845               	movf	??_temp_day+1,w
  3906  15D6  00F1               	movwf	___wmul@multiplier+1
  3907  15D7  3064               	movlw	100
  3908  15D8  00F2               	movwf	___wmul@multiplicand
  3909  15D9  3000               	movlw	0
  3910  15DA  00F3               	movwf	___wmul@multiplicand+1
  3911  15DB  160A  158A  2648  160A  118A  	fcall	___wmul
  3912  15E0  0870               	movf	?___wmul,w
  3913  15E1  00C6               	movwf	??_temp_day+2
  3914  15E2  0871               	movf	?___wmul+1,w
  3915  15E3  00C7               	movwf	??_temp_day+3
  3916  15E4  086C               	movf	_day_one_max,w
  3917  15E5  00C8               	movwf	??_temp_day+4
  3918  15E6  01C9               	clrf	??_temp_day+5
  3919  15E7  0848               	movf	??_temp_day+4,w
  3920  15E8  00F0               	movwf	___wmul@multiplier
  3921  15E9  0849               	movf	??_temp_day+5,w
  3922  15EA  00F1               	movwf	___wmul@multiplier+1
  3923  15EB  300A               	movlw	10
  3924  15EC  00F2               	movwf	___wmul@multiplicand
  3925  15ED  3000               	movlw	0
  3926  15EE  00F3               	movwf	___wmul@multiplicand+1
  3927  15EF  160A  158A  2648  160A  118A  	fcall	___wmul
  3928  15F4  0870               	movf	?___wmul,w
  3929  15F5  0746               	addwf	??_temp_day+2,w
  3930  15F6  00CA               	movwf	??_temp_day+6
  3931  15F7  0871               	movf	?___wmul+1,w
  3932  15F8  1803               	skipnc
  3933  15F9  0A71               	incf	?___wmul+1,w
  3934  15FA  0747               	addwf	??_temp_day+3,w
  3935  15FB  00CB               	movwf	??_temp_day+7
  3936  15FC  086B               	movf	_day_dec_max,w
  3937  15FD  074A               	addwf	??_temp_day+6,w
  3938  15FE  00CC               	movwf	temp_day@temp_max
  3939  15FF  3000               	movlw	0
  3940  1600  1803               	skipnc
  3941  1601  3001               	movlw	1
  3942  1602  074B               	addwf	??_temp_day+7,w
  3943  1603  00CD               	movwf	temp_day@temp_max+1
  3944                           
  3945                           ;temperature.c: 488:     unsigned int temp_min = day_ten_min*100 + day_one_min*10 + day_
      +                          dec_min;
  3946  1604  086A               	movf	_day_ten_min,w
  3947  1605  00C4               	movwf	??_temp_day
  3948  1606  01C5               	clrf	??_temp_day+1
  3949  1607  0844               	movf	??_temp_day,w
  3950  1608  00F0               	movwf	___wmul@multiplier
  3951  1609  0845               	movf	??_temp_day+1,w
  3952  160A  00F1               	movwf	___wmul@multiplier+1
  3953  160B  3064               	movlw	100
  3954  160C  00F2               	movwf	___wmul@multiplicand
  3955  160D  3000               	movlw	0
  3956  160E  00F3               	movwf	___wmul@multiplicand+1
  3957  160F  160A  158A  2648  160A  118A  	fcall	___wmul
  3958  1614  0870               	movf	?___wmul,w
  3959  1615  00C6               	movwf	??_temp_day+2
  3960  1616  0871               	movf	?___wmul+1,w
  3961  1617  00C7               	movwf	??_temp_day+3
  3962  1618  0869               	movf	_day_one_min,w
  3963  1619  00C8               	movwf	??_temp_day+4
  3964  161A  01C9               	clrf	??_temp_day+5
  3965  161B  0848               	movf	??_temp_day+4,w
  3966  161C  00F0               	movwf	___wmul@multiplier
  3967  161D  0849               	movf	??_temp_day+5,w
  3968  161E  00F1               	movwf	___wmul@multiplier+1
  3969  161F  300A               	movlw	10
  3970  1620  00F2               	movwf	___wmul@multiplicand
  3971  1621  3000               	movlw	0
  3972  1622  00F3               	movwf	___wmul@multiplicand+1
  3973  1623  160A  158A  2648  160A  118A  	fcall	___wmul
  3974  1628  0870               	movf	?___wmul,w
  3975  1629  0746               	addwf	??_temp_day+2,w
  3976  162A  00CA               	movwf	??_temp_day+6
  3977  162B  0871               	movf	?___wmul+1,w
  3978  162C  1803               	skipnc
  3979  162D  0A71               	incf	?___wmul+1,w
  3980  162E  0747               	addwf	??_temp_day+3,w
  3981  162F  00CB               	movwf	??_temp_day+7
  3982  1630  0868               	movf	_day_dec_min,w
  3983  1631  074A               	addwf	??_temp_day+6,w
  3984  1632  00CE               	movwf	temp_day@temp_min
  3985  1633  3000               	movlw	0
  3986  1634  1803               	skipnc
  3987  1635  3001               	movlw	1
  3988  1636  074B               	addwf	??_temp_day+7,w
  3989  1637  00CF               	movwf	temp_day@temp_min+1
  3990                           
  3991                           ;temperature.c: 489:     if (temp > temp_max){
  3992  1638  0851               	movf	temp_day@temp+1,w
  3993  1639  024D               	subwf	temp_day@temp_max+1,w
  3994  163A  1D03               	skipz
  3995  163B  2E3E               	goto	u5705
  3996  163C  0850               	movf	temp_day@temp,w
  3997  163D  024C               	subwf	temp_day@temp_max,w
  3998  163E                     u5705:	
  3999  163E  1803               	skipnc
  4000  163F  2E44               	goto	l5624
  4001                           
  4002                           ;temperature.c: 490:         cool();
  4003  1640  160A  158A  25EB   	fcall	_cool
  4004                           
  4005                           ;temperature.c: 491:     }
  4006  1643  0008               	return
  4007  1644                     l5624:	
  4008  1644  084F               	movf	temp_day@temp_min+1,w
  4009  1645  0251               	subwf	temp_day@temp+1,w
  4010  1646  1D03               	skipz
  4011  1647  2E4A               	goto	u5715
  4012  1648  084E               	movf	temp_day@temp_min,w
  4013  1649  0250               	subwf	temp_day@temp,w
  4014  164A                     u5715:	
  4015  164A  1803               	skipnc
  4016  164B  2E50               	goto	l5628
  4017                           
  4018                           ;temperature.c: 493:         heat();
  4019  164C  160A  158A  2609   	fcall	_heat
  4020                           
  4021                           ;temperature.c: 494:     }
  4022  164F  0008               	return
  4023  1650                     l5628:	
  4024  1650  0851               	movf	temp_day@temp+1,w
  4025  1651  024D               	subwf	temp_day@temp_max+1,w
  4026  1652  1D03               	skipz
  4027  1653  2E56               	goto	u5725
  4028  1654  0850               	movf	temp_day@temp,w
  4029  1655  024C               	subwf	temp_day@temp_max,w
  4030  1656                     u5725:	
  4031  1656  1C03               	skipc
  4032  1657  0008               	return
  4033                           
  4034                           ;temperature.c: 496:         if (temp >= temp_min){
  4035  1658  084F               	movf	temp_day@temp_min+1,w
  4036  1659  0251               	subwf	temp_day@temp+1,w
  4037  165A  1D03               	skipz
  4038  165B  2E5E               	goto	u5735
  4039  165C  084E               	movf	temp_day@temp_min,w
  4040  165D  0250               	subwf	temp_day@temp,w
  4041  165E                     u5735:	
  4042  165E  1C03               	skipc
  4043  165F  0008               	return
  4044                           
  4045                           ;temperature.c: 497:             OK();
  4046  1660  160A  158A  253E   	fcall	_OK
  4047  1663  0008               	return
  4048  1664                     __end_of_temp_day:	
  4049                           
  4050                           	psect	text8
  4051  1E09                     __ptext8:	
  4052 ;; *************** function _heat *****************
  4053 ;; Defined at:
  4054 ;;		line 528 in file "temperature.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 300/0
  4065 ;;		On exit  : 300/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0
  4071 ;;      Totals:         0       0       0       0       0
  4072 ;;Total ram usage:        0 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    3
  4075 ;; This function calls:
  4076 ;;		_temp_check_rise
  4077 ;;		_write_str
  4078 ;;		_writecmd_4line
  4079 ;; This function is called by:
  4080 ;;		_temp_day
  4081 ;;		_temp_night
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _heat
  4087  1E09                     _heat:	
  4088                           
  4089                           ;temperature.c: 529:     writecmd_4line(0x9E);
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _heat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4093  1E09  309E               	movlw	158
  4094  1E0A  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  4095                           
  4096                           ;temperature.c: 530:     write_str("Heat ");
  4097  1E0F  3092               	movlw	low (STR_74| (0+32768))
  4098  1E10  00F3               	movwf	write_str@array
  4099  1E11  3090               	movlw	high (STR_74| (0+32768))
  4100  1E12  00F4               	movwf	write_str@array+1
  4101  1E13  160A  118A  2160  160A  158A  	fcall	_write_str
  4102                           
  4103                           ;temperature.c: 531:     temp_check_rise();
  4104  1E18  160A  118A  221B  160A  158A  	fcall	_temp_check_rise
  4105                           
  4106                           ;temperature.c: 532:     if (buzz_count == 20 && pass == 0){
  4107  1E1D  3014               	movlw	20
  4108  1E1E  062D               	xorwf	_buzz_count,w
  4109  1E1F  042E               	iorwf	_buzz_count+1,w
  4110  1E20  1D03               	btfss	3,2
  4111  1E21  0008               	return
  4112  1E22  0835               	movf	_pass,w
  4113  1E23  1D03               	btfss	3,2
  4114  1E24  0008               	return
  4115                           
  4116                           ;temperature.c: 533:         RE2 = 1;
  4117  1E25  1509               	bsf	9,2	;volatile
  4118  1E26  0008               	return
  4119  1E27                     __end_of_heat:	
  4120                           
  4121                           	psect	text9
  4122  121B                     __ptext9:	
  4123 ;; *************** function _temp_check_rise *****************
  4124 ;; Defined at:
  4125 ;;		line 563 in file "temperature.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  temp_e          1    8[COMMON] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 300/0
  4136 ;;		On exit  : 300/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       0       0       0       0
  4140 ;;      Locals:         1       0       0       0       0
  4141 ;;      Temps:          4       0       0       0       0
  4142 ;;      Totals:         5       0       0       0       0
  4143 ;;Total ram usage:        5 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    1
  4146 ;; This function calls:
  4147 ;;		___bmul
  4148 ;; This function is called by:
  4149 ;;		_heat
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _temp_check_rise
  4155  121B                     _temp_check_rise:	
  4156                           
  4157                           ;temperature.c: 564:     if (temp_sec%2 == 0){
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _temp_check_rise: [wreg+status,2+status,0+pclath+cstack]
  4161  121B  1832               	btfsc	_temp_sec,0
  4162  121C  2A36               	goto	l686
  4163                           
  4164                           ;temperature.c: 565:         temp_p = shi*100 + ge*10 + shifen;
  4165  121D  300A               	movlw	10
  4166  121E  00F4               	movwf	??_temp_check_rise
  4167  121F  0874               	movf	??_temp_check_rise,w
  4168  1220  00F0               	movwf	___bmul@multiplicand
  4169  1221  083A               	movf	_ge,w
  4170  1222  160A  158A  252D  160A  118A  	fcall	___bmul
  4171  1227  00F5               	movwf	??_temp_check_rise+1
  4172  1228  3064               	movlw	100
  4173  1229  00F6               	movwf	??_temp_check_rise+2
  4174  122A  0876               	movf	??_temp_check_rise+2,w
  4175  122B  00F0               	movwf	___bmul@multiplicand
  4176  122C  083B               	movf	_shi,w
  4177  122D  160A  158A  252D   	fcall	___bmul
  4178  1230  0775               	addwf	??_temp_check_rise+1,w
  4179  1231  0739               	addwf	_shifen,w
  4180  1232  00F7               	movwf	??_temp_check_rise+3
  4181  1233  0877               	movf	??_temp_check_rise+3,w
  4182  1234  00B4               	movwf	_temp_p
  4183                           
  4184                           ;temperature.c: 566:     }
  4185  1235  0008               	return
  4186  1236                     l686:	
  4187                           ;temperature.c: 567:     else if (temp_sec%2 != 0){
  4188                           
  4189  1236  1C32               	btfss	_temp_sec,0
  4190  1237  0008               	return
  4191                           
  4192                           ;temperature.c: 568:         unsigned char temp_e = shi*100 + ge*10 + shifen;
  4193  1238  300A               	movlw	10
  4194  1239  00F4               	movwf	??_temp_check_rise
  4195  123A  0874               	movf	??_temp_check_rise,w
  4196  123B  00F0               	movwf	___bmul@multiplicand
  4197  123C  083A               	movf	_ge,w
  4198  123D  160A  158A  252D  160A  118A  	fcall	___bmul
  4199  1242  00F5               	movwf	??_temp_check_rise+1
  4200  1243  3064               	movlw	100
  4201  1244  00F6               	movwf	??_temp_check_rise+2
  4202  1245  0876               	movf	??_temp_check_rise+2,w
  4203  1246  00F0               	movwf	___bmul@multiplicand
  4204  1247  083B               	movf	_shi,w
  4205  1248  160A  158A  252D  160A  118A  	fcall	___bmul
  4206  124D  0775               	addwf	??_temp_check_rise+1,w
  4207  124E  0739               	addwf	_shifen,w
  4208  124F  00F7               	movwf	??_temp_check_rise+3
  4209  1250  0877               	movf	??_temp_check_rise+3,w
  4210  1251  00F8               	movwf	temp_check_rise@temp_e
  4211                           
  4212                           ;temperature.c: 569:         if (temp_p < temp_e){
  4213  1252  0878               	movf	temp_check_rise@temp_e,w
  4214  1253  0234               	subwf	_temp_p,w
  4215  1254  1803               	skipnc
  4216  1255  2A59               	goto	l3876
  4217                           
  4218                           ;temperature.c: 570:             buzz_count = 0;
  4219  1256  01AD               	clrf	_buzz_count
  4220  1257  01AE               	clrf	_buzz_count+1
  4221                           
  4222                           ;temperature.c: 571:         }
  4223  1258  0008               	return
  4224  1259                     l3876:	
  4225                           
  4226                           ;temperature.c: 573:             buzz_count++;
  4227  1259  3001               	movlw	1
  4228  125A  07AD               	addwf	_buzz_count,f
  4229  125B  1803               	skipnc
  4230  125C  0AAE               	incf	_buzz_count+1,f
  4231  125D  3000               	movlw	0
  4232  125E  07AE               	addwf	_buzz_count+1,f
  4233                           
  4234                           ;temperature.c: 575:         }
  4235  125F  0008               	return
  4236  1260                     __end_of_temp_check_rise:	
  4237                           
  4238                           	psect	text10
  4239  1DEB                     __ptext10:	
  4240 ;; *************** function _cool *****************
  4241 ;; Defined at:
  4242 ;;		line 519 in file "temperature.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 300/0
  4253 ;;		On exit  : 300/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		_temp_check_lower
  4265 ;;		_write_str
  4266 ;;		_writecmd_4line
  4267 ;; This function is called by:
  4268 ;;		_temp_day
  4269 ;;		_temp_night
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _cool
  4275  1DEB                     _cool:	
  4276                           
  4277                           ;temperature.c: 520:     writecmd_4line(0x9E);
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _cool: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4281  1DEB  309E               	movlw	158
  4282  1DEC  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  4283                           
  4284                           ;temperature.c: 521:     write_str("Cool");
  4285  1DF1  30CB               	movlw	low (STR_73| (0+32768))
  4286  1DF2  00F3               	movwf	write_str@array
  4287  1DF3  3090               	movlw	high (STR_73| (0+32768))
  4288  1DF4  00F4               	movwf	write_str@array+1
  4289  1DF5  160A  118A  2160  160A  158A  	fcall	_write_str
  4290                           
  4291                           ;temperature.c: 522:     temp_check_lower();
  4292  1DFA  160A  118A  21D6  160A  158A  	fcall	_temp_check_lower
  4293                           
  4294                           ;temperature.c: 523:     if (buzz_count == 20 && pass == 0){
  4295  1DFF  3014               	movlw	20
  4296  1E00  062D               	xorwf	_buzz_count,w
  4297  1E01  042E               	iorwf	_buzz_count+1,w
  4298  1E02  1D03               	btfss	3,2
  4299  1E03  0008               	return
  4300  1E04  0835               	movf	_pass,w
  4301  1E05  1D03               	btfss	3,2
  4302  1E06  0008               	return
  4303                           
  4304                           ;temperature.c: 524:         RE2 = 1;
  4305  1E07  1509               	bsf	9,2	;volatile
  4306  1E08  0008               	return
  4307  1E09                     __end_of_cool:	
  4308                           
  4309                           	psect	text11
  4310  11D6                     __ptext11:	
  4311 ;; *************** function _temp_check_lower *****************
  4312 ;; Defined at:
  4313 ;;		line 544 in file "temperature.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  temp_e          1    8[COMMON] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 300/0
  4324 ;;		On exit  : 300/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0
  4329 ;;      Temps:          4       0       0       0       0
  4330 ;;      Totals:         5       0       0       0       0
  4331 ;;Total ram usage:        5 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    1
  4334 ;; This function calls:
  4335 ;;		___bmul
  4336 ;; This function is called by:
  4337 ;;		_cool
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _temp_check_lower
  4343  11D6                     _temp_check_lower:	
  4344                           
  4345                           ;temperature.c: 546:     if (temp_sec%2 == 0){
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _temp_check_lower: [wreg+status,2+status,0+pclath+cstack]
  4349  11D6  1832               	btfsc	_temp_sec,0
  4350  11D7  29F1               	goto	l676
  4351                           
  4352                           ;temperature.c: 547:         temp_p = shi*100 + ge*10 + shifen;
  4353  11D8  300A               	movlw	10
  4354  11D9  00F4               	movwf	??_temp_check_lower
  4355  11DA  0874               	movf	??_temp_check_lower,w
  4356  11DB  00F0               	movwf	___bmul@multiplicand
  4357  11DC  083A               	movf	_ge,w
  4358  11DD  160A  158A  252D  160A  118A  	fcall	___bmul
  4359  11E2  00F5               	movwf	??_temp_check_lower+1
  4360  11E3  3064               	movlw	100
  4361  11E4  00F6               	movwf	??_temp_check_lower+2
  4362  11E5  0876               	movf	??_temp_check_lower+2,w
  4363  11E6  00F0               	movwf	___bmul@multiplicand
  4364  11E7  083B               	movf	_shi,w
  4365  11E8  160A  158A  252D   	fcall	___bmul
  4366  11EB  0775               	addwf	??_temp_check_lower+1,w
  4367  11EC  0739               	addwf	_shifen,w
  4368  11ED  00F7               	movwf	??_temp_check_lower+3
  4369  11EE  0877               	movf	??_temp_check_lower+3,w
  4370  11EF  00B4               	movwf	_temp_p
  4371                           
  4372                           ;temperature.c: 548:     }
  4373  11F0  0008               	return
  4374  11F1                     l676:	
  4375                           ;temperature.c: 549:     else if (temp_sec%2 != 0){
  4376                           
  4377  11F1  1C32               	btfss	_temp_sec,0
  4378  11F2  0008               	return
  4379                           
  4380                           ;temperature.c: 550:         unsigned char temp_e = shi*100 + ge*10 + shifen;
  4381  11F3  300A               	movlw	10
  4382  11F4  00F4               	movwf	??_temp_check_lower
  4383  11F5  0874               	movf	??_temp_check_lower,w
  4384  11F6  00F0               	movwf	___bmul@multiplicand
  4385  11F7  083A               	movf	_ge,w
  4386  11F8  160A  158A  252D  160A  118A  	fcall	___bmul
  4387  11FD  00F5               	movwf	??_temp_check_lower+1
  4388  11FE  3064               	movlw	100
  4389  11FF  00F6               	movwf	??_temp_check_lower+2
  4390  1200  0876               	movf	??_temp_check_lower+2,w
  4391  1201  00F0               	movwf	___bmul@multiplicand
  4392  1202  083B               	movf	_shi,w
  4393  1203  160A  158A  252D  160A  118A  	fcall	___bmul
  4394  1208  0775               	addwf	??_temp_check_lower+1,w
  4395  1209  0739               	addwf	_shifen,w
  4396  120A  00F7               	movwf	??_temp_check_lower+3
  4397  120B  0877               	movf	??_temp_check_lower+3,w
  4398  120C  00F8               	movwf	temp_check_lower@temp_e
  4399                           
  4400                           ;temperature.c: 551:         if (temp_p > temp_e){
  4401  120D  0834               	movf	_temp_p,w
  4402  120E  0278               	subwf	temp_check_lower@temp_e,w
  4403  120F  1803               	skipnc
  4404  1210  2A14               	goto	l3860
  4405                           
  4406                           ;temperature.c: 552:                 buzz_count = 0;
  4407  1211  01AD               	clrf	_buzz_count
  4408  1212  01AE               	clrf	_buzz_count+1
  4409                           
  4410                           ;temperature.c: 553:         }
  4411  1213  0008               	return
  4412  1214                     l3860:	
  4413                           
  4414                           ;temperature.c: 555:            buzz_count++;
  4415  1214  3001               	movlw	1
  4416  1215  07AD               	addwf	_buzz_count,f
  4417  1216  1803               	skipnc
  4418  1217  0AAE               	incf	_buzz_count+1,f
  4419  1218  3000               	movlw	0
  4420  1219  07AE               	addwf	_buzz_count+1,f
  4421                           
  4422                           ;temperature.c: 556:         }
  4423  121A  0008               	return
  4424  121B                     __end_of_temp_check_lower:	
  4425                           
  4426                           	psect	text12
  4427  1E48                     __ptext12:	
  4428 ;; *************** function ___wmul *****************
  4429 ;; Defined at:
  4430 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  multiplier      2    0[COMMON] unsigned int 
  4433 ;;  multiplicand    2    2[COMMON] unsigned int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  product         2    4[COMMON] unsigned int 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    0[COMMON] unsigned int 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 300/0
  4442 ;;		On exit  : 300/0
  4443 ;;		Unchanged: 300/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         4       0       0       0       0
  4446 ;;      Locals:         2       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0
  4448 ;;      Totals:         6       0       0       0       0
  4449 ;;Total ram usage:        6 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_temp_day
  4455 ;;		_temp_night
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function ___wmul
  4461  1E48                     ___wmul:	
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4465  1E48  01F4               	clrf	___wmul@product
  4466  1E49  01F5               	clrf	___wmul@product+1
  4467  1E4A                     l4764:	
  4468  1E4A  1C70               	btfss	___wmul@multiplier,0
  4469  1E4B  2E52               	goto	l946
  4470  1E4C  0872               	movf	___wmul@multiplicand,w
  4471  1E4D  07F4               	addwf	___wmul@product,f
  4472  1E4E  1803               	skipnc
  4473  1E4F  0AF5               	incf	___wmul@product+1,f
  4474  1E50  0873               	movf	___wmul@multiplicand+1,w
  4475  1E51  07F5               	addwf	___wmul@product+1,f
  4476  1E52                     l946:	
  4477  1E52  3001               	movlw	1
  4478  1E53                     u4385:	
  4479  1E53  1003               	clrc
  4480  1E54  0DF2               	rlf	___wmul@multiplicand,f
  4481  1E55  0DF3               	rlf	___wmul@multiplicand+1,f
  4482  1E56  3EFF               	addlw	-1
  4483  1E57  1D03               	skipz
  4484  1E58  2E53               	goto	u4385
  4485  1E59  3001               	movlw	1
  4486  1E5A                     u4395:	
  4487  1E5A  1003               	clrc
  4488  1E5B  0CF1               	rrf	___wmul@multiplier+1,f
  4489  1E5C  0CF0               	rrf	___wmul@multiplier,f
  4490  1E5D  3EFF               	addlw	-1
  4491  1E5E  1D03               	skipz
  4492  1E5F  2E5A               	goto	u4395
  4493  1E60  0870               	movf	___wmul@multiplier,w
  4494  1E61  0471               	iorwf	___wmul@multiplier+1,w
  4495  1E62  1D03               	btfss	3,2
  4496  1E63  2E4A               	goto	l4764
  4497  1E64  0875               	movf	___wmul@product+1,w
  4498  1E65  00F1               	movwf	?___wmul+1
  4499  1E66  0874               	movf	___wmul@product,w
  4500  1E67  00F0               	movwf	?___wmul
  4501  1E68  0008               	return
  4502  1E69                     __end_of___wmul:	
  4503                           
  4504                           	psect	text13
  4505  1D3E                     __ptext13:	
  4506 ;; *************** function _OK *****************
  4507 ;; Defined at:
  4508 ;;		line 537 in file "temperature.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 300/0
  4519 ;;		On exit  : 300/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    3
  4529 ;; This function calls:
  4530 ;;		_write_str
  4531 ;;		_writecmd_4line
  4532 ;; This function is called by:
  4533 ;;		_temp_day
  4534 ;;		_temp_night
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _OK
  4540  1D3E                     _OK:	
  4541                           
  4542                           ;temperature.c: 538:     writecmd_4line(0x9E);
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4546  1D3E  309E               	movlw	158
  4547  1D3F  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  4548                           
  4549                           ;temperature.c: 539:     write_str("OK  ");
  4550  1D44  30BC               	movlw	low (STR_75| (0+32768))
  4551  1D45  00F3               	movwf	write_str@array
  4552  1D46  3090               	movlw	high (STR_75| (0+32768))
  4553  1D47  00F4               	movwf	write_str@array+1
  4554  1D48  160A  118A  2160   	fcall	_write_str
  4555                           
  4556                           ;temperature.c: 540:     buzz_count = 0;
  4557  1D4B  01AD               	clrf	_buzz_count
  4558  1D4C  01AE               	clrf	_buzz_count+1
  4559                           
  4560                           ;temperature.c: 541:     pass = 0;
  4561  1D4D  01B5               	clrf	_pass
  4562  1D4E  0008               	return
  4563  1D4F                     __end_of_OK:	
  4564                           
  4565                           	psect	text14
  4566  1D99                     __ptext14:	
  4567 ;; *************** function _lcd_init *****************
  4568 ;; Defined at:
  4569 ;;		line 53 in file "lcd.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 300/0
  4580 ;;		On exit  : 300/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    2
  4590 ;; This function calls:
  4591 ;;		_writecmd_4line
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _lcd_init
  4599  1D99                     _lcd_init:	
  4600                           
  4601                           ;lcd.c: 56:     ADCON1=0X07;
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4605  1D99  3007               	movlw	7
  4606  1D9A  1683               	bsf	3,5	;RP0=1, select bank1
  4607  1D9B  009F               	movwf	31	;volatile
  4608                           
  4609                           ;lcd.c: 57:     TRISA=0X00;
  4610  1D9C  0185               	clrf	5	;volatile
  4611                           
  4612                           ;lcd.c: 58:     TRISD=0X00;
  4613  1D9D  0188               	clrf	8	;volatile
  4614                           
  4615                           ;lcd.c: 59:     RA2 = 1;
  4616  1D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4617  1D9F  1505               	bsf	5,2	;volatile
  4618                           
  4619                           ;lcd.c: 62:     writecmd_4line(0x0e);
  4620  1DA0  300E               	movlw	14
  4621  1DA1  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  4622                           
  4623                           ;lcd.c: 63:     writecmd_4line(0x1);
  4624  1DA6  3001               	movlw	1
  4625  1DA7  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  4626                           
  4627                           ;lcd.c: 64:     writecmd_4line(0x38);
  4628  1DAC  3038               	movlw	56
  4629  1DAD  160A  158A  25CD   	fcall	_writecmd_4line
  4630  1DB0  0008               	return
  4631  1DB1                     __end_of_lcd_init:	
  4632                           
  4633                           	psect	text15
  4634  1D03                     __ptext15:	
  4635 ;; *************** function _initialisation *****************
  4636 ;; Defined at:
  4637 ;;		line 4 in file "button_press.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2
  4646 ;; Tracked objects:
  4647 ;;		On entry : 300/0
  4648 ;;		On exit  : 300/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4651 ;;      Params:         0       0       0       0       0
  4652 ;;      Locals:         0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0
  4654 ;;      Totals:         0       0       0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _initialisation
  4666  1D03                     _initialisation:	
  4667                           
  4668                           ;button_press.c: 5:     ADCON1 = 0X07;
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _initialisation: [wreg+status,2]
  4672  1D03  3007               	movlw	7
  4673  1D04  1683               	bsf	3,5	;RP0=1, select bank1
  4674  1D05  009F               	movwf	31	;volatile
  4675                           
  4676                           ;button_press.c: 6:     TRISC = 0xF0;
  4677  1D06  30F0               	movlw	240
  4678  1D07  0087               	movwf	7	;volatile
  4679                           
  4680                           ;button_press.c: 7:     PORTC = 0x00;
  4681  1D08  1283               	bcf	3,5	;RP0=0, select bank0
  4682  1D09  0187               	clrf	7	;volatile
  4683  1D0A  0008               	return
  4684  1D0B                     __end_of_initialisation:	
  4685                           
  4686                           	psect	text16
  4687  1F0C                     __ptext16:	
  4688 ;; *************** function _get_time *****************
  4689 ;; Defined at:
  4690 ;;		line 52 in file "clock_source.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  i               2    6[COMMON] int 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 300/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         0       0       0       0       0
  4705 ;;      Locals:         2       0       0       0       0
  4706 ;;      Temps:          1       0       0       0       0
  4707 ;;      Totals:         3       0       0       0       0
  4708 ;;Total ram usage:        3 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    1
  4711 ;; This function calls:
  4712 ;;		_time_read_1
  4713 ;;		_time_write_1
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _get_time
  4721  1F0C                     _get_time:	
  4722                           
  4723                           ;clock_source.c: 53:    int i;;clock_source.c: 54:    RB5=1;
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4727  1F0C  1283               	bcf	3,5	;RP0=0, select bank0
  4728  1F0D  1303               	bcf	3,6	;RP1=0, select bank0
  4729  1F0E  1686               	bsf	6,5	;volatile
  4730                           
  4731                           ;clock_source.c: 55:    time_write_1(0xbf);
  4732  1F0F  30BF               	movlw	191
  4733  1F10  160A  158A  2669  160A  158A  	fcall	_time_write_1
  4734                           
  4735                           ;clock_source.c: 56:    for(i=0;i<7;i++)
  4736  1F15  01F6               	clrf	get_time@i
  4737  1F16  01F7               	clrf	get_time@i+1
  4738  1F17                     l4872:	
  4739                           
  4740                           ;clock_source.c: 57:     {;clock_source.c: 58:         table1[i]=time_read_1();
  4741  1F17  160A  158A  2767  160A  158A  	fcall	_time_read_1
  4742  1F1C  00F5               	movwf	??_get_time
  4743  1F1D  0876               	movf	get_time@i,w
  4744  1F1E  3E20               	addlw	(low (_table1| 0))& (0+255)
  4745  1F1F  0084               	movwf	4
  4746  1F20  0875               	movf	??_get_time,w
  4747  1F21  1383               	bcf	3,7	;select IRP bank0
  4748  1F22  0080               	movwf	0
  4749                           
  4750                           ;clock_source.c: 59:     }
  4751  1F23  3001               	movlw	1
  4752  1F24  07F6               	addwf	get_time@i,f
  4753  1F25  1803               	skipnc
  4754  1F26  0AF7               	incf	get_time@i+1,f
  4755  1F27  3000               	movlw	0
  4756  1F28  07F7               	addwf	get_time@i+1,f
  4757  1F29  0877               	movf	get_time@i+1,w
  4758  1F2A  3A80               	xorlw	128
  4759  1F2B  00FF               	movwf	127
  4760  1F2C  3080               	movlw	128
  4761  1F2D  027F               	subwf	127,w
  4762  1F2E  1D03               	skipz
  4763  1F2F  2F32               	goto	u4555
  4764  1F30  3007               	movlw	7
  4765  1F31  0276               	subwf	get_time@i,w
  4766  1F32                     u4555:	
  4767  1F32  1C03               	skipc
  4768  1F33  2F17               	goto	l4872
  4769                           
  4770                           ;clock_source.c: 60:     RB5=0;
  4771  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  4772  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  4773  1F36  1286               	bcf	6,5	;volatile
  4774  1F37  0008               	return
  4775  1F38                     __end_of_get_time:	
  4776                           
  4777                           	psect	text17
  4778  1F67                     __ptext17:	
  4779 ;; *************** function _time_read_1 *****************
  4780 ;; Defined at:
  4781 ;;		line 83 in file "clock_source.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  j               2    2[COMMON] int 
  4786 ;;  time_rx         1    4[COMMON] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      unsigned char 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0, btemp+1
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 300/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         0       0       0       0       0
  4797 ;;      Locals:         3       0       0       0       0
  4798 ;;      Temps:          2       0       0       0       0
  4799 ;;      Totals:         5       0       0       0       0
  4800 ;;Total ram usage:        5 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_get_time
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _time_read_1
  4811  1F67                     _time_read_1:	
  4812                           
  4813                           ;clock_source.c: 84:    unsigned char time_rx=0;
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  4817  1F67  01F4               	clrf	time_read_1@time_rx
  4818                           
  4819                           ;clock_source.c: 85:    int j;;clock_source.c: 86:    TRISB4=1;
  4820  1F68  1683               	bsf	3,5	;RP0=1, select bank1
  4821  1F69  1303               	bcf	3,6	;RP1=0, select bank1
  4822  1F6A  1606               	bsf	6,4	;volatile
  4823                           
  4824                           ;clock_source.c: 87:    for(j=0;j<8;j++)
  4825  1F6B  01F2               	clrf	time_read_1@j
  4826  1F6C  01F3               	clrf	time_read_1@j+1
  4827  1F6D                     l211:	
  4828                           
  4829                           ;clock_source.c: 88:    {;clock_source.c: 89:         RB0=0;
  4830  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4831  1F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4832  1F6F  1006               	bcf	6,0	;volatile
  4833                           
  4834                           ;clock_source.c: 90:         time_rx=time_rx>>1;
  4835  1F70  0874               	movf	time_read_1@time_rx,w
  4836  1F71  00F0               	movwf	??_time_read_1
  4837  1F72  1003               	clrc
  4838  1F73  0C70               	rrf	??_time_read_1,w
  4839  1F74  00F1               	movwf	??_time_read_1+1
  4840  1F75  0871               	movf	??_time_read_1+1,w
  4841  1F76  00F4               	movwf	time_read_1@time_rx
  4842                           
  4843                           ;clock_source.c: 91:         if(RB4)time_rx=time_rx|0x80;
  4844  1F77  1E06               	btfss	6,4	;volatile
  4845  1F78  2F7E               	goto	l3944
  4846  1F79  0874               	movf	time_read_1@time_rx,w
  4847  1F7A  3880               	iorlw	128
  4848  1F7B  00F0               	movwf	??_time_read_1
  4849  1F7C  0870               	movf	??_time_read_1,w
  4850  1F7D  00F4               	movwf	time_read_1@time_rx
  4851  1F7E                     l3944:	
  4852                           
  4853                           ;clock_source.c: 93:        RB0=1;
  4854  1F7E  1406               	bsf	6,0	;volatile
  4855                           
  4856                           ;clock_source.c: 94:     }
  4857  1F7F  3001               	movlw	1
  4858  1F80  07F2               	addwf	time_read_1@j,f
  4859  1F81  1803               	skipnc
  4860  1F82  0AF3               	incf	time_read_1@j+1,f
  4861  1F83  3000               	movlw	0
  4862  1F84  07F3               	addwf	time_read_1@j+1,f
  4863  1F85  0873               	movf	time_read_1@j+1,w
  4864  1F86  3A80               	xorlw	128
  4865  1F87  00FF               	movwf	127
  4866  1F88  3080               	movlw	128
  4867  1F89  027F               	subwf	127,w
  4868  1F8A  1D03               	skipz
  4869  1F8B  2F8E               	goto	u3475
  4870  1F8C  3008               	movlw	8
  4871  1F8D  0272               	subwf	time_read_1@j,w
  4872  1F8E                     u3475:	
  4873  1F8E  1C03               	skipc
  4874  1F8F  2F6D               	goto	l211
  4875                           
  4876                           ;clock_source.c: 95:     TRISB4=0;
  4877  1F90  1683               	bsf	3,5	;RP0=1, select bank1
  4878  1F91  1303               	bcf	3,6	;RP1=0, select bank1
  4879  1F92  1206               	bcf	6,4	;volatile
  4880                           
  4881                           ;clock_source.c: 96:     RB0=0;
  4882  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  4883  1F94  1006               	bcf	6,0	;volatile
  4884                           
  4885                           ;clock_source.c: 97:     return(time_rx);
  4886  1F95  0874               	movf	time_read_1@time_rx,w
  4887  1F96  0008               	return
  4888  1F97                     __end_of_time_read_1:	
  4889                           
  4890                           	psect	text18
  4891  1361                     __ptext18:	
  4892 ;; *************** function _get_temp *****************
  4893 ;; Defined at:
  4894 ;;		line 105 in file "temperature.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 300/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4908 ;;      Params:         0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0
  4910 ;;      Temps:          0       4       0       0       0
  4911 ;;      Totals:         0       4       0       0       0
  4912 ;;Total ram usage:        4 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    4
  4915 ;; This function calls:
  4916 ;;		___lbdiv
  4917 ;;		___lbmod
  4918 ;;		___lwdiv
  4919 ;;		_display_temp
  4920 ;;		_read_byte
  4921 ;;		_reset
  4922 ;;		_write_byte
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _get_temp
  4930  1361                     _get_temp:	
  4931                           
  4932                           ;temperature.c: 106: TRISE0 =1;
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4936  1361  1683               	bsf	3,5	;RP0=1, select bank1
  4937  1362  1409               	bsf	9,0	;volatile
  4938                           
  4939                           ;temperature.c: 107: reset();
  4940  1363  160A  158A  2797  160A  118A  	fcall	_reset
  4941                           
  4942                           ;temperature.c: 108: write_byte(0XCC);
  4943  1368  30CC               	movlw	204
  4944  1369  160A  118A  212A  160A  118A  	fcall	_write_byte
  4945                           
  4946                           ;temperature.c: 109: write_byte(0X44);
  4947  136E  3044               	movlw	68
  4948  136F  160A  118A  212A  160A  118A  	fcall	_write_byte
  4949                           
  4950                           ;temperature.c: 110: display_temp();
  4951  1374  160A  158A  27CB  160A  118A  	fcall	_display_temp
  4952                           
  4953                           ;temperature.c: 111: reset();
  4954  1379  160A  158A  2797  160A  118A  	fcall	_reset
  4955                           
  4956                           ;temperature.c: 112: write_byte(0XCC);
  4957  137E  30CC               	movlw	204
  4958  137F  160A  118A  212A  160A  118A  	fcall	_write_byte
  4959                           
  4960                           ;temperature.c: 113: write_byte(0XBE);
  4961  1384  30BE               	movlw	190
  4962  1385  160A  118A  212A  160A  118A  	fcall	_write_byte
  4963                           
  4964                           ;temperature.c: 114: TLV=read_byte();
  4965  138A  160A  158A  2738  160A  118A  	fcall	_read_byte
  4966  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4967  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4968  1391  00C4               	movwf	??_get_temp
  4969  1392  0844               	movf	??_get_temp,w
  4970  1393  00BF               	movwf	_TLV
  4971                           
  4972                           ;temperature.c: 115: THV=read_byte();
  4973  1394  160A  158A  2738  160A  118A  	fcall	_read_byte
  4974  1399  1283               	bcf	3,5	;RP0=0, select bank0
  4975  139A  1303               	bcf	3,6	;RP1=0, select bank0
  4976  139B  00C4               	movwf	??_get_temp
  4977  139C  0844               	movf	??_get_temp,w
  4978  139D  00BE               	movwf	_THV
  4979                           
  4980                           ;temperature.c: 116: TRISE0 =1;
  4981  139E  1683               	bsf	3,5	;RP0=1, select bank1
  4982  139F  1409               	bsf	9,0	;volatile
  4983                           
  4984                           ;temperature.c: 117: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4985  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  4986  13A1  083E               	movf	_THV,w
  4987  13A2  00C4               	movwf	??_get_temp
  4988  13A3  3004               	movlw	4
  4989  13A4                     u5575:	
  4990  13A4  1003               	clrc
  4991  13A5  0DC4               	rlf	??_get_temp,f
  4992  13A6  3EFF               	addlw	-1
  4993  13A7  1D03               	skipz
  4994  13A8  2BA4               	goto	u5575
  4995  13A9  303F               	movlw	63
  4996  13AA  0544               	andwf	??_get_temp,w
  4997  13AB  00C5               	movwf	??_get_temp+1
  4998  13AC  083F               	movf	_TLV,w
  4999  13AD  00C6               	movwf	??_get_temp+2
  5000  13AE  3004               	movlw	4
  5001  13AF                     u5585:	
  5002  13AF  1003               	clrc
  5003  13B0  0CC6               	rrf	??_get_temp+2,f
  5004  13B1  3EFF               	addlw	-1
  5005  13B2  1D03               	skipz
  5006  13B3  2BAF               	goto	u5585
  5007  13B4  0846               	movf	??_get_temp+2,w
  5008  13B5  0445               	iorwf	??_get_temp+1,w
  5009  13B6  00C7               	movwf	??_get_temp+3
  5010  13B7  0847               	movf	??_get_temp+3,w
  5011  13B8  00BD               	movwf	_TZ
  5012                           
  5013                           ;temperature.c: 118: TX=TLV<<4;
  5014  13B9  083F               	movf	_TLV,w
  5015  13BA  00C4               	movwf	??_get_temp
  5016  13BB  3003               	movlw	3
  5017  13BC                     u5595:	
  5018  13BC  1003               	clrc
  5019  13BD  0DC4               	rlf	??_get_temp,f
  5020  13BE  3EFF               	addlw	-1
  5021  13BF  1D03               	skipz
  5022  13C0  2BBC               	goto	u5595
  5023  13C1  1003               	clrc
  5024  13C2  0D44               	rlf	??_get_temp,w
  5025  13C3  00C5               	movwf	??_get_temp+1
  5026  13C4  0845               	movf	??_get_temp+1,w
  5027  13C5  00BC               	movwf	_TX
  5028                           
  5029                           ;temperature.c: 119: ge=TZ%10;
  5030  13C6  300A               	movlw	10
  5031  13C7  00C4               	movwf	??_get_temp
  5032  13C8  0844               	movf	??_get_temp,w
  5033  13C9  00F0               	movwf	___lbmod@divisor
  5034  13CA  083D               	movf	_TZ,w
  5035  13CB  160A  118A  2107  160A  118A  	fcall	___lbmod
  5036  13D0  00C5               	movwf	??_get_temp+1
  5037  13D1  0845               	movf	??_get_temp+1,w
  5038  13D2  00BA               	movwf	_ge
  5039                           
  5040                           ;temperature.c: 120: shi=TZ/10;
  5041  13D3  300A               	movlw	10
  5042  13D4  00C4               	movwf	??_get_temp
  5043  13D5  0844               	movf	??_get_temp,w
  5044  13D6  00F0               	movwf	___lbdiv@divisor
  5045  13D7  083D               	movf	_TZ,w
  5046  13D8  160A  158A  2627  160A  118A  	fcall	___lbdiv
  5047  13DD  00C5               	movwf	??_get_temp+1
  5048  13DE  0845               	movf	??_get_temp+1,w
  5049  13DF  00BB               	movwf	_shi
  5050                           
  5051                           ;temperature.c: 121: wd=0;
  5052  13E0  01AF               	clrf	_wd
  5053  13E1  01B0               	clrf	_wd+1
  5054                           
  5055                           ;temperature.c: 122: if (TX & 0x80) wd=wd+5000;
  5056  13E2  1FBC               	btfss	_TX,7
  5057  13E3  2BEC               	goto	l5562
  5058  13E4  082F               	movf	_wd,w
  5059  13E5  3E88               	addlw	136
  5060  13E6  00AF               	movwf	_wd
  5061  13E7  0830               	movf	_wd+1,w
  5062  13E8  1803               	skipnc
  5063  13E9  3E01               	addlw	1
  5064  13EA  3E13               	addlw	19
  5065  13EB  00B0               	movwf	_wd+1
  5066  13EC                     l5562:	
  5067                           
  5068                           ;temperature.c: 123: if (TX & 0x40) wd=wd+2500;
  5069  13EC  1F3C               	btfss	_TX,6
  5070  13ED  2BF6               	goto	l5566
  5071  13EE  082F               	movf	_wd,w
  5072  13EF  3EC4               	addlw	196
  5073  13F0  00AF               	movwf	_wd
  5074  13F1  0830               	movf	_wd+1,w
  5075  13F2  1803               	skipnc
  5076  13F3  3E01               	addlw	1
  5077  13F4  3E09               	addlw	9
  5078  13F5  00B0               	movwf	_wd+1
  5079  13F6                     l5566:	
  5080                           
  5081                           ;temperature.c: 124: if (TX & 0x20) wd=wd+1250;
  5082  13F6  1EBC               	btfss	_TX,5
  5083  13F7  2C00               	goto	l5570
  5084  13F8  082F               	movf	_wd,w
  5085  13F9  3EE2               	addlw	226
  5086  13FA  00AF               	movwf	_wd
  5087  13FB  0830               	movf	_wd+1,w
  5088  13FC  1803               	skipnc
  5089  13FD  3E01               	addlw	1
  5090  13FE  3E04               	addlw	4
  5091  13FF  00B0               	movwf	_wd+1
  5092  1400                     l5570:	
  5093                           
  5094                           ;temperature.c: 125: if (TX & 0x10) wd=wd+625;
  5095  1400  1E3C               	btfss	_TX,4
  5096  1401  2C0A               	goto	l5574
  5097  1402  082F               	movf	_wd,w
  5098  1403  3E71               	addlw	113
  5099  1404  00AF               	movwf	_wd
  5100  1405  0830               	movf	_wd+1,w
  5101  1406  1803               	skipnc
  5102  1407  3E01               	addlw	1
  5103  1408  3E02               	addlw	2
  5104  1409  00B0               	movwf	_wd+1
  5105  140A                     l5574:	
  5106                           
  5107                           ;temperature.c: 126: shifen=wd/1000;
  5108  140A  30E8               	movlw	232
  5109  140B  00F0               	movwf	___lwdiv@divisor
  5110  140C  3003               	movlw	3
  5111  140D  00F1               	movwf	___lwdiv@divisor+1
  5112  140E  0830               	movf	_wd+1,w
  5113  140F  00F3               	movwf	___lwdiv@dividend+1
  5114  1410  082F               	movf	_wd,w
  5115  1411  00F2               	movwf	___lwdiv@dividend
  5116  1412  160A  118A  219A   	fcall	___lwdiv
  5117  1415  0870               	movf	?___lwdiv,w
  5118  1416  00C4               	movwf	??_get_temp
  5119  1417  0844               	movf	??_get_temp,w
  5120  1418  00B9               	movwf	_shifen
  5121                           
  5122                           ;temperature.c: 127: __nop();
  5123  1419  0000               	nop
  5124  141A  0008               	return
  5125  141B                     __end_of_get_temp:	
  5126                           
  5127                           	psect	text19
  5128  112A                     __ptext19:	
  5129 ;; *************** function _write_byte *****************
  5130 ;; Defined at:
  5131 ;;		line 53 in file "temperature.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  val             1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  val             1    7[COMMON] unsigned char 
  5136 ;;  i               1    8[COMMON] unsigned char 
  5137 ;;  temp            1    6[COMMON] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/100
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       0       0       0       0
  5148 ;;      Locals:         3       0       0       0       0
  5149 ;;      Temps:          2       0       0       0       0
  5150 ;;      Totals:         5       0       0       0       0
  5151 ;;Total ram usage:        5 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		_delay_temp
  5156 ;; This function is called by:
  5157 ;;		_get_temp
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _write_byte
  5163  112A                     _write_byte:	
  5164                           
  5165                           ;incstack = 0
  5166                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  5167                           ;write_byte@val stored from wreg
  5168  112A  00F7               	movwf	write_byte@val
  5169                           
  5170                           ;temperature.c: 54:  unsigned char i;;temperature.c: 55:  unsigned char temp;;temperatur
      +                          e.c: 56:  for(i=8;i>0;i--)
  5171  112B  3008               	movlw	8
  5172  112C  00F4               	movwf	??_write_byte
  5173  112D  0874               	movf	??_write_byte,w
  5174  112E  00F8               	movwf	write_byte@i
  5175  112F                     l4312:	
  5176                           
  5177                           ;temperature.c: 57:  {;temperature.c: 58:    temp=val&0x01;
  5178  112F  0877               	movf	write_byte@val,w
  5179  1130  3901               	andlw	1
  5180  1131  00F4               	movwf	??_write_byte
  5181  1132  0874               	movf	??_write_byte,w
  5182  1133  00F6               	movwf	write_byte@temp
  5183                           
  5184                           ;temperature.c: 59:    RE0 = 0; TRISE0 = 0;
  5185  1134  1283               	bcf	3,5	;RP0=0, select bank0
  5186  1135  1303               	bcf	3,6	;RP1=0, select bank0
  5187  1136  1009               	bcf	9,0	;volatile
  5188  1137  1683               	bsf	3,5	;RP0=1, select bank1
  5189  1138  1009               	bcf	9,0	;volatile
  5190                           
  5191                           ;temperature.c: 60:    __nop();
  5192  1139  0000               	nop
  5193                           
  5194                           ;temperature.c: 61:    __nop();
  5195  113A  0000               	nop
  5196                           
  5197                           ;temperature.c: 62:    __nop();
  5198  113B  0000               	nop
  5199                           
  5200                           ;temperature.c: 63:    __nop();
  5201  113C  0000               	nop
  5202                           
  5203                           ;temperature.c: 64:    __nop();
  5204  113D  0000               	nop
  5205                           
  5206                           ;temperature.c: 65:    if(temp==1) TRISE0 =1;
  5207  113E  0376               	decf	write_byte@temp,w
  5208  113F  1D03               	btfss	3,2
  5209  1140  2944               	goto	l4332
  5210  1141  1683               	bsf	3,5	;RP0=1, select bank1
  5211  1142  1303               	bcf	3,6	;RP1=0, select bank1
  5212  1143  1409               	bsf	9,0	;volatile
  5213  1144                     l4332:	
  5214                           
  5215                           ;temperature.c: 66:    delay_temp(2,7);
  5216  1144  3007               	movlw	7
  5217  1145  00F4               	movwf	??_write_byte
  5218  1146  0874               	movf	??_write_byte,w
  5219  1147  00F0               	movwf	delay_temp@y
  5220  1148  3002               	movlw	2
  5221  1149  120A  118A  2003  160A  118A  	fcall	_delay_temp
  5222                           
  5223                           ;temperature.c: 67:    TRISE0 =1;
  5224  114E  1683               	bsf	3,5	;RP0=1, select bank1
  5225  114F  1303               	bcf	3,6	;RP1=0, select bank1
  5226  1150  1409               	bsf	9,0	;volatile
  5227                           
  5228                           ;temperature.c: 68:    __nop();
  5229  1151  0000               	nop
  5230                           
  5231                           ;temperature.c: 69:    __nop();
  5232  1152  0000               	nop
  5233                           
  5234                           ;temperature.c: 70:    val=val>>1;
  5235  1153  0877               	movf	write_byte@val,w
  5236  1154  00F4               	movwf	??_write_byte
  5237  1155  1003               	clrc
  5238  1156  0C74               	rrf	??_write_byte,w
  5239  1157  00F5               	movwf	??_write_byte+1
  5240  1158  0875               	movf	??_write_byte+1,w
  5241  1159  00F7               	movwf	write_byte@val
  5242                           
  5243                           ;temperature.c: 71:   }
  5244  115A  3001               	movlw	1
  5245  115B  02F8               	subwf	write_byte@i,f
  5246  115C  0878               	movf	write_byte@i,w
  5247  115D  1903               	btfsc	3,2
  5248  115E  0008               	return
  5249  115F  292F               	goto	l4312
  5250  1160                     __end_of_write_byte:	
  5251                           
  5252                           	psect	text20
  5253  1F97                     __ptext20:	
  5254 ;; *************** function _reset *****************
  5255 ;; Defined at:
  5256 ;;		line 37 in file "temperature.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  presence        1    5[COMMON] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  2  546[None  ] int 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 200/100
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       0       0       0       0
  5271 ;;      Locals:         1       0       0       0       0
  5272 ;;      Temps:          1       0       0       0       0
  5273 ;;      Totals:         2       0       0       0       0
  5274 ;;Total ram usage:        2 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    1
  5277 ;; This function calls:
  5278 ;;		_delay_temp
  5279 ;; This function is called by:
  5280 ;;		_get_temp
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _reset
  5286  1F97                     _reset:	
  5287                           
  5288                           ;temperature.c: 38:   unsigned char presence=1;
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  5292  1F97  01F5               	clrf	reset@presence
  5293  1F98  0AF5               	incf	reset@presence,f
  5294  1F99                     l4304:	
  5295                           ;temperature.c: 39:   while(presence)
  5296                           
  5297                           
  5298                           ;temperature.c: 39:   while(presence)
  5299  1F99  0875               	movf	reset@presence,w
  5300  1F9A  1903               	btfsc	3,2
  5301  1F9B  0008               	return
  5302                           
  5303                           ;temperature.c: 40:   {;temperature.c: 41:     RE0 = 0; TRISE0 = 0 ;
  5304  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
  5305  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
  5306  1F9E  1009               	bcf	9,0	;volatile
  5307  1F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5308  1FA0  1009               	bcf	9,0	;volatile
  5309                           
  5310                           ;temperature.c: 42:     delay_temp(2,70);
  5311  1FA1  3046               	movlw	70
  5312  1FA2  00F4               	movwf	??_reset
  5313  1FA3  0874               	movf	??_reset,w
  5314  1FA4  00F0               	movwf	delay_temp@y
  5315  1FA5  3002               	movlw	2
  5316  1FA6  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5317                           
  5318                           ;temperature.c: 43:     TRISE0 =1;
  5319  1FAB  1683               	bsf	3,5	;RP0=1, select bank1
  5320  1FAC  1303               	bcf	3,6	;RP1=0, select bank1
  5321  1FAD  1409               	bsf	9,0	;volatile
  5322                           
  5323                           ;temperature.c: 44:     delay_temp(2,8);
  5324  1FAE  3008               	movlw	8
  5325  1FAF  00F4               	movwf	??_reset
  5326  1FB0  0874               	movf	??_reset,w
  5327  1FB1  00F0               	movwf	delay_temp@y
  5328  1FB2  3002               	movlw	2
  5329  1FB3  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5330                           
  5331                           ;temperature.c: 45:     if(RE0==1) presence=1;
  5332  1FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5333  1FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5334  1FBA  1C09               	btfss	9,0	;volatile
  5335  1FBB  2FBF               	goto	l4300
  5336  1FBC  01F5               	clrf	reset@presence
  5337  1FBD  0AF5               	incf	reset@presence,f
  5338  1FBE  2FC0               	goto	l4302
  5339  1FBF                     l4300:	
  5340  1FBF  01F5               	clrf	reset@presence
  5341  1FC0                     l4302:	
  5342                           
  5343                           ;temperature.c: 47:     delay_temp(2,60);
  5344  1FC0  303C               	movlw	60
  5345  1FC1  00F4               	movwf	??_reset
  5346  1FC2  0874               	movf	??_reset,w
  5347  1FC3  00F0               	movwf	delay_temp@y
  5348  1FC4  3002               	movlw	2
  5349  1FC5  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5350  1FCA  2F99               	goto	l4304
  5351  1FCB                     __end_of_reset:	
  5352                           
  5353                           	psect	text21
  5354  1F38                     __ptext21:	
  5355 ;; *************** function _read_byte *****************
  5356 ;; Defined at:
  5357 ;;		line 76 in file "temperature.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  i               1    6[COMMON] unsigned char 
  5362 ;;  value           1    5[COMMON] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0, pclath, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5372 ;;      Params:         0       0       0       0       0
  5373 ;;      Locals:         2       0       0       0       0
  5374 ;;      Temps:          1       0       0       0       0
  5375 ;;      Totals:         3       0       0       0       0
  5376 ;;Total ram usage:        3 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    1
  5379 ;; This function calls:
  5380 ;;		_delay_temp
  5381 ;; This function is called by:
  5382 ;;		_get_temp
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _read_byte
  5388  1F38                     _read_byte:	
  5389                           
  5390                           ;temperature.c: 77:  unsigned char i;;temperature.c: 78:  unsigned char value=0;
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  5394  1F38  01F5               	clrf	read_byte@value
  5395                           
  5396                           ;temperature.c: 79:  static char j;;temperature.c: 80:  for(i=8;i>0;i--)
  5397  1F39  3008               	movlw	8
  5398  1F3A  00F4               	movwf	??_read_byte
  5399  1F3B  0874               	movf	??_read_byte,w
  5400  1F3C  00F6               	movwf	read_byte@i
  5401  1F3D                     l4354:	
  5402                           
  5403                           ;temperature.c: 81:  {;temperature.c: 82:    value>>=1;
  5404  1F3D  1003               	clrc
  5405  1F3E  0CF5               	rrf	read_byte@value,f
  5406                           
  5407                           ;temperature.c: 83:    RE0 = 0; TRISE0 = 0;
  5408  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  5409  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  5410  1F41  1009               	bcf	9,0	;volatile
  5411  1F42  1683               	bsf	3,5	;RP0=1, select bank1
  5412  1F43  1009               	bcf	9,0	;volatile
  5413                           
  5414                           ;temperature.c: 84:    __nop();
  5415  1F44  0000               	nop
  5416                           
  5417                           ;temperature.c: 85:    __nop();
  5418  1F45  0000               	nop
  5419                           
  5420                           ;temperature.c: 86:    __nop();
  5421  1F46  0000               	nop
  5422                           
  5423                           ;temperature.c: 87:    __nop();
  5424  1F47  0000               	nop
  5425                           
  5426                           ;temperature.c: 88:    __nop();
  5427  1F48  0000               	nop
  5428                           
  5429                           ;temperature.c: 89:    __nop();
  5430  1F49  0000               	nop
  5431                           
  5432                           ;temperature.c: 90:    TRISE0 =1;
  5433  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5434  1F4B  1303               	bcf	3,6	;RP1=0, select bank1
  5435  1F4C  1409               	bsf	9,0	;volatile
  5436                           
  5437                           ;temperature.c: 91:    __nop();
  5438  1F4D  0000               	nop
  5439                           
  5440                           ;temperature.c: 92:    __nop();
  5441  1F4E  0000               	nop
  5442                           
  5443                           ;temperature.c: 93:    __nop();
  5444  1F4F  0000               	nop
  5445                           
  5446                           ;temperature.c: 94:    __nop();
  5447  1F50  0000               	nop
  5448                           
  5449                           ;temperature.c: 95:    __nop();
  5450  1F51  0000               	nop
  5451                           
  5452                           ;temperature.c: 97:    if(RE0 == 1) value|=0x80;
  5453  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  5454  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  5455  1F54  1809               	btfsc	9,0	;volatile
  5456  1F55  17F5               	bsf	read_byte@value,7
  5457                           
  5458                           ;temperature.c: 98:    delay_temp(2,7);
  5459  1F56  3007               	movlw	7
  5460  1F57  00F4               	movwf	??_read_byte
  5461  1F58  0874               	movf	??_read_byte,w
  5462  1F59  00F0               	movwf	delay_temp@y
  5463  1F5A  3002               	movlw	2
  5464  1F5B  120A  118A  2003  160A  158A  	fcall	_delay_temp
  5465                           
  5466                           ;temperature.c: 99:   }
  5467  1F60  3001               	movlw	1
  5468  1F61  02F6               	subwf	read_byte@i,f
  5469  1F62  0876               	movf	read_byte@i,w
  5470  1F63  1D03               	btfss	3,2
  5471  1F64  2F3D               	goto	l4354
  5472                           
  5473                           ;temperature.c: 100:   return(value);
  5474  1F65  0875               	movf	read_byte@value,w
  5475  1F66  0008               	return
  5476  1F67                     __end_of_read_byte:	
  5477                           
  5478                           	psect	text22
  5479  0003                     __ptext22:	
  5480 ;; *************** function _delay_temp *****************
  5481 ;; Defined at:
  5482 ;;		line 13 in file "temperature.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  x               1    wreg     unsigned char 
  5485 ;;  y               1    0[COMMON] unsigned char 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  x               1    2[COMMON] unsigned char 
  5488 ;;  z               1    3[COMMON] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/100
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5498 ;;      Params:         1       0       0       0       0
  5499 ;;      Locals:         2       0       0       0       0
  5500 ;;      Temps:          1       0       0       0       0
  5501 ;;      Totals:         4       0       0       0       0
  5502 ;;Total ram usage:        4 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_reset
  5508 ;;		_write_byte
  5509 ;;		_read_byte
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _delay_temp
  5515  0003                     _delay_temp:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  5519                           ;delay_temp@x stored from wreg
  5520  0003  00F2               	movwf	delay_temp@x
  5521  0004                     l537:	
  5522                           ;temperature.c: 14:   unsigned char z;;temperature.c: 15:   do{
  5523                           
  5524                           
  5525                           ;temperature.c: 16:       z=y;
  5526  0004  0870               	movf	delay_temp@y,w
  5527  0005  00F1               	movwf	??_delay_temp
  5528  0006  0871               	movf	??_delay_temp,w
  5529  0007  00F3               	movwf	delay_temp@z
  5530  0008                     l3784:	
  5531  0008  3001               	movlw	1
  5532  0009  02F3               	subwf	delay_temp@z,f
  5533  000A  1D03               	btfss	3,2
  5534  000B  2808               	goto	l3784
  5535                           
  5536                           ;temperature.c: 18:      }while(--x);
  5537  000C  3001               	movlw	1
  5538  000D  02F2               	subwf	delay_temp@x,f
  5539  000E  1903               	btfsc	3,2
  5540  000F  0008               	return
  5541  0010  2804               	goto	l537
  5542  0011                     __end_of_delay_temp:	
  5543                           
  5544                           	psect	text23
  5545  1FCB                     __ptext23:	
  5546 ;; *************** function _display_temp *****************
  5547 ;; Defined at:
  5548 ;;		line 23 in file "temperature.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/100
  5559 ;;		On exit  : 300/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5562 ;;      Params:         0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    3
  5569 ;; This function calls:
  5570 ;;		_write_str
  5571 ;;		_writechar
  5572 ;;		_writecmd_4line
  5573 ;; This function is called by:
  5574 ;;		_get_temp
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _display_temp
  5580  1FCB                     _display_temp:	
  5581                           
  5582                           ;temperature.c: 25:     writecmd_4line(0x98);
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _display_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5586  1FCB  3098               	movlw	152
  5587  1FCC  160A  158A  25CD  160A  158A  	fcall	_writecmd_4line
  5588                           
  5589                           ;temperature.c: 26:     write_str("Temp:");
  5590  1FD1  3098               	movlw	low (STR_37| (0+32768))
  5591  1FD2  00F3               	movwf	write_str@array
  5592  1FD3  3090               	movlw	high (STR_37| (0+32768))
  5593  1FD4  00F4               	movwf	write_str@array+1
  5594  1FD5  160A  118A  2160  160A  158A  	fcall	_write_str
  5595                           
  5596                           ;temperature.c: 27:     writechar(shi + '0');
  5597  1FDA  083B               	movf	_shi,w
  5598  1FDB  3E30               	addlw	48
  5599  1FDC  160A  158A  25B1  160A  158A  	fcall	_writechar
  5600                           
  5601                           ;temperature.c: 28:     writechar(ge + '0');
  5602  1FE1  083A               	movf	_ge,w
  5603  1FE2  3E30               	addlw	48
  5604  1FE3  160A  158A  25B1  160A  158A  	fcall	_writechar
  5605                           
  5606                           ;temperature.c: 29:     write_str(".");
  5607  1FE8  303C               	movlw	low ((STR_21+13)| (0+32768))
  5608  1FE9  00F3               	movwf	write_str@array
  5609  1FEA  3090               	movlw	high ((STR_21+13)| (0+32768))
  5610  1FEB  00F4               	movwf	write_str@array+1
  5611  1FEC  160A  118A  2160  160A  158A  	fcall	_write_str
  5612                           
  5613                           ;temperature.c: 30:     writechar(shifen + '0');
  5614  1FF1  0839               	movf	_shifen,w
  5615  1FF2  3E30               	addlw	48
  5616  1FF3  160A  158A  25B1  160A  158A  	fcall	_writechar
  5617                           
  5618                           ;temperature.c: 31:     write_str("C");
  5619  1FF8  3002               	movlw	low (STR_39| (0+32768))
  5620  1FF9  00F3               	movwf	write_str@array
  5621  1FFA  3091               	movlw	high (STR_39| (0+32768))
  5622  1FFB  00F4               	movwf	write_str@array+1
  5623  1FFC  160A  118A  2160   	fcall	_write_str
  5624  1FFF  0008               	return
  5625  2000                     __end_of_display_temp:	
  5626                           
  5627                           	psect	text24
  5628  119A                     __ptext24:	
  5629 ;; *************** function ___lwdiv *****************
  5630 ;; Defined at:
  5631 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  divisor         2    0[COMMON] unsigned int 
  5634 ;;  dividend        2    2[COMMON] unsigned int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  quotient        2    5[COMMON] unsigned int 
  5637 ;;  counter         1    7[COMMON] unsigned char 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  2    0[COMMON] unsigned int 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0
  5642 ;; Tracked objects:
  5643 ;;		On entry : 300/0
  5644 ;;		On exit  : 300/0
  5645 ;;		Unchanged: 300/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5647 ;;      Params:         4       0       0       0       0
  5648 ;;      Locals:         3       0       0       0       0
  5649 ;;      Temps:          1       0       0       0       0
  5650 ;;      Totals:         8       0       0       0       0
  5651 ;;Total ram usage:        8 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_get_temp
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function ___lwdiv
  5662  119A                     ___lwdiv:	
  5663                           
  5664                           ;incstack = 0
  5665                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5666  119A  01F5               	clrf	___lwdiv@quotient
  5667  119B  01F6               	clrf	___lwdiv@quotient+1
  5668  119C  0870               	movf	___lwdiv@divisor,w
  5669  119D  0471               	iorwf	___lwdiv@divisor+1,w
  5670  119E  1903               	btfsc	3,2
  5671  119F  29D1               	goto	l4840
  5672  11A0  01F7               	clrf	___lwdiv@counter
  5673  11A1  0AF7               	incf	___lwdiv@counter,f
  5674  11A2                     l4828:	
  5675  11A2  1BF1               	btfsc	___lwdiv@divisor+1,7
  5676  11A3  29B0               	goto	l4830
  5677  11A4  3001               	movlw	1
  5678  11A5                     u4495:	
  5679  11A5  1003               	clrc
  5680  11A6  0DF0               	rlf	___lwdiv@divisor,f
  5681  11A7  0DF1               	rlf	___lwdiv@divisor+1,f
  5682  11A8  3EFF               	addlw	-1
  5683  11A9  1D03               	skipz
  5684  11AA  29A5               	goto	u4495
  5685  11AB  3001               	movlw	1
  5686  11AC  00F4               	movwf	??___lwdiv
  5687  11AD  0874               	movf	??___lwdiv,w
  5688  11AE  07F7               	addwf	___lwdiv@counter,f
  5689  11AF  29A2               	goto	l4828
  5690  11B0                     l4830:	
  5691  11B0  3001               	movlw	1
  5692  11B1                     u4515:	
  5693  11B1  1003               	clrc
  5694  11B2  0DF5               	rlf	___lwdiv@quotient,f
  5695  11B3  0DF6               	rlf	___lwdiv@quotient+1,f
  5696  11B4  3EFF               	addlw	-1
  5697  11B5  1D03               	skipz
  5698  11B6  29B1               	goto	u4515
  5699  11B7  0871               	movf	___lwdiv@divisor+1,w
  5700  11B8  0273               	subwf	___lwdiv@dividend+1,w
  5701  11B9  1D03               	skipz
  5702  11BA  29BD               	goto	u4525
  5703  11BB  0870               	movf	___lwdiv@divisor,w
  5704  11BC  0272               	subwf	___lwdiv@dividend,w
  5705  11BD                     u4525:	
  5706  11BD  1C03               	skipc
  5707  11BE  29C6               	goto	l4836
  5708  11BF  0870               	movf	___lwdiv@divisor,w
  5709  11C0  02F2               	subwf	___lwdiv@dividend,f
  5710  11C1  0871               	movf	___lwdiv@divisor+1,w
  5711  11C2  1C03               	skipc
  5712  11C3  03F3               	decf	___lwdiv@dividend+1,f
  5713  11C4  02F3               	subwf	___lwdiv@dividend+1,f
  5714  11C5  1475               	bsf	___lwdiv@quotient,0
  5715  11C6                     l4836:	
  5716  11C6  3001               	movlw	1
  5717  11C7                     u4535:	
  5718  11C7  1003               	clrc
  5719  11C8  0CF1               	rrf	___lwdiv@divisor+1,f
  5720  11C9  0CF0               	rrf	___lwdiv@divisor,f
  5721  11CA  3EFF               	addlw	-1
  5722  11CB  1D03               	skipz
  5723  11CC  29C7               	goto	u4535
  5724  11CD  3001               	movlw	1
  5725  11CE  02F7               	subwf	___lwdiv@counter,f
  5726  11CF  1D03               	btfss	3,2
  5727  11D0  29B0               	goto	l4830
  5728  11D1                     l4840:	
  5729  11D1  0876               	movf	___lwdiv@quotient+1,w
  5730  11D2  00F1               	movwf	?___lwdiv+1
  5731  11D3  0875               	movf	___lwdiv@quotient,w
  5732  11D4  00F0               	movwf	?___lwdiv
  5733  11D5  0008               	return
  5734  11D6                     __end_of___lwdiv:	
  5735                           
  5736                           	psect	text25
  5737  1107                     __ptext25:	
  5738 ;; *************** function ___lbmod *****************
  5739 ;; Defined at:
  5740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  dividend        1    wreg     unsigned char 
  5743 ;;  divisor         1    0[COMMON] unsigned char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  dividend        1    4[COMMON] unsigned char 
  5746 ;;  rem             1    6[COMMON] unsigned char 
  5747 ;;  counter         1    5[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 300/0
  5754 ;;		On exit  : 300/0
  5755 ;;		Unchanged: 300/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         1       0       0       0       0
  5758 ;;      Locals:         3       0       0       0       0
  5759 ;;      Temps:          3       0       0       0       0
  5760 ;;      Totals:         7       0       0       0       0
  5761 ;;Total ram usage:        7 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_get_temp
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           
  5771                           ;psect for function ___lbmod
  5772  1107                     ___lbmod:	
  5773                           
  5774                           ;incstack = 0
  5775                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5776                           ;___lbmod@dividend stored from wreg
  5777  1107  00F4               	movwf	___lbmod@dividend
  5778  1108  3008               	movlw	8
  5779  1109  00F1               	movwf	??___lbmod
  5780  110A  0871               	movf	??___lbmod,w
  5781  110B  00F5               	movwf	___lbmod@counter
  5782  110C  01F6               	clrf	___lbmod@rem
  5783  110D                     l4806:	
  5784  110D  0874               	movf	___lbmod@dividend,w
  5785  110E  00F1               	movwf	??___lbmod
  5786  110F  3007               	movlw	7
  5787  1110                     u4455:	
  5788  1110  1003               	clrc
  5789  1111  0CF1               	rrf	??___lbmod,f
  5790  1112  3EFF               	addlw	-1
  5791  1113  1D03               	skipz
  5792  1114  2910               	goto	u4455
  5793  1115  0876               	movf	___lbmod@rem,w
  5794  1116  00F2               	movwf	??___lbmod+1
  5795  1117  0772               	addwf	??___lbmod+1,w
  5796  1118  0471               	iorwf	??___lbmod,w
  5797  1119  00F3               	movwf	??___lbmod+2
  5798  111A  0873               	movf	??___lbmod+2,w
  5799  111B  00F6               	movwf	___lbmod@rem
  5800  111C  1003               	clrc
  5801  111D  0DF4               	rlf	___lbmod@dividend,f
  5802  111E  0870               	movf	___lbmod@divisor,w
  5803  111F  0276               	subwf	___lbmod@rem,w
  5804  1120  1C03               	skipc
  5805  1121  2924               	goto	l1156
  5806  1122  0870               	movf	___lbmod@divisor,w
  5807  1123  02F6               	subwf	___lbmod@rem,f
  5808  1124                     l1156:	
  5809  1124  3001               	movlw	1
  5810  1125  02F5               	subwf	___lbmod@counter,f
  5811  1126  1D03               	btfss	3,2
  5812  1127  290D               	goto	l4806
  5813  1128  0876               	movf	___lbmod@rem,w
  5814  1129  0008               	return
  5815  112A                     __end_of___lbmod:	
  5816                           
  5817                           	psect	text26
  5818  1E27                     __ptext26:	
  5819 ;; *************** function ___lbdiv *****************
  5820 ;; Defined at:
  5821 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  dividend        1    wreg     unsigned char 
  5824 ;;  divisor         1    0[COMMON] unsigned char 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  dividend        1    2[COMMON] unsigned char 
  5827 ;;  quotient        1    4[COMMON] unsigned char 
  5828 ;;  counter         1    3[COMMON] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      unsigned char 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 300/0
  5835 ;;		On exit  : 300/0
  5836 ;;		Unchanged: 300/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         1       0       0       0       0
  5839 ;;      Locals:         3       0       0       0       0
  5840 ;;      Temps:          1       0       0       0       0
  5841 ;;      Totals:         5       0       0       0       0
  5842 ;;Total ram usage:        5 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_get_temp
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function ___lbdiv
  5853  1E27                     ___lbdiv:	
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5857                           ;___lbdiv@dividend stored from wreg
  5858  1E27  00F2               	movwf	___lbdiv@dividend
  5859  1E28  01F4               	clrf	___lbdiv@quotient
  5860  1E29  0870               	movf	___lbdiv@divisor,w
  5861  1E2A  1903               	btfsc	3,2
  5862  1E2B  2E46               	goto	l4798
  5863  1E2C  01F3               	clrf	___lbdiv@counter
  5864  1E2D  0AF3               	incf	___lbdiv@counter,f
  5865  1E2E                     l4786:	
  5866  1E2E  1BF0               	btfsc	___lbdiv@divisor,7
  5867  1E2F  2E37               	goto	l4788
  5868  1E30  1003               	clrc
  5869  1E31  0DF0               	rlf	___lbdiv@divisor,f
  5870  1E32  3001               	movlw	1
  5871  1E33  00F1               	movwf	??___lbdiv
  5872  1E34  0871               	movf	??___lbdiv,w
  5873  1E35  07F3               	addwf	___lbdiv@counter,f
  5874  1E36  2E2E               	goto	l4786
  5875  1E37                     l4788:	
  5876  1E37  1003               	clrc
  5877  1E38  0DF4               	rlf	___lbdiv@quotient,f
  5878  1E39  0870               	movf	___lbdiv@divisor,w
  5879  1E3A  0272               	subwf	___lbdiv@dividend,w
  5880  1E3B  1C03               	skipc
  5881  1E3C  2E41               	goto	L4
  5882  1E3D  0870               	movf	___lbdiv@divisor,w
  5883  1E3E  02F2               	subwf	___lbdiv@dividend,f
  5884  1E3F  1474               	bsf	___lbdiv@quotient,0
  5885  1E40  1003               	clrc
  5886  1E41                     L4:	
  5887  1E41  0CF0               	rrf	___lbdiv@divisor,f
  5888  1E42  3001               	movlw	1
  5889  1E43  02F3               	subwf	___lbdiv@counter,f
  5890  1E44  1D03               	btfss	3,2
  5891  1E45  2E37               	goto	l4788
  5892  1E46                     l4798:	
  5893  1E46  0874               	movf	___lbdiv@quotient,w
  5894  1E47  0008               	return
  5895  1E48                     __end_of___lbdiv:	
  5896                           
  5897                           	psect	text27
  5898  0BB1                     __ptext27:	
  5899 ;; *************** function _display_clock *****************
  5900 ;; Defined at:
  5901 ;;		line 110 in file "clock_source.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  i               2    2[BANK0 ] int 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 300/0
  5912 ;;		On exit  : 300/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5915 ;;      Params:         0       0       0       0       0
  5916 ;;      Locals:         0       2       0       0       0
  5917 ;;      Temps:          0       2       0       0       0
  5918 ;;      Totals:         0       4       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    4
  5922 ;; This function calls:
  5923 ;;		_week
  5924 ;;		_write_str
  5925 ;;		_writechar
  5926 ;;		_writecmd_4line
  5927 ;; This function is called by:
  5928 ;;		_main
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _display_clock
  5934  0BB1                     _display_clock:	
  5935                           
  5936                           ;clock_source.c: 111:     int i;;clock_source.c: 114:     writecmd_4line(0x80);
  5937                           
  5938                           ;incstack = 0
  5939                           ; Regs used in _display_clock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5940  0BB1  3080               	movlw	128
  5941  0BB2  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  5942                           
  5943                           ;clock_source.c: 115:     write_str("Date:");
  5944  0BB7  30AA               	movlw	low (STR_8| (0+32768))
  5945  0BB8  00F3               	movwf	write_str@array
  5946  0BB9  3090               	movlw	high (STR_8| (0+32768))
  5947  0BBA  00F4               	movwf	write_str@array+1
  5948  0BBB  160A  118A  2160  120A  158A  	fcall	_write_str
  5949                           
  5950                           ;clock_source.c: 118:     i=table1[3]&0xf0;
  5951  0BC0  0823               	movf	_table1+3,w
  5952  0BC1  39F0               	andlw	240
  5953  0BC2  00C4               	movwf	??_display_clock
  5954  0BC3  01C5               	clrf	??_display_clock+1
  5955  0BC4  0844               	movf	??_display_clock,w
  5956  0BC5  00C6               	movwf	display_clock@i
  5957  0BC6  0845               	movf	??_display_clock+1,w
  5958  0BC7  00C7               	movwf	display_clock@i+1
  5959                           
  5960                           ;clock_source.c: 119:     i=i>>4;
  5961  0BC8  0E46               	swapf	display_clock@i,w
  5962  0BC9  390F               	andlw	15
  5963  0BCA  00C6               	movwf	display_clock@i
  5964  0BCB  0E47               	swapf	display_clock@i+1,w
  5965  0BCC  39F0               	andlw	240
  5966  0BCD  04C6               	iorwf	display_clock@i,f
  5967  0BCE  0E47               	swapf	display_clock@i+1,w
  5968  0BCF  390F               	andlw	15
  5969  0BD0  00C7               	movwf	display_clock@i+1
  5970  0BD1  30F0               	movlw	240
  5971  0BD2  1DC7               	btfss	display_clock@i+1,3
  5972  0BD3  3000               	movlw	0
  5973  0BD4  04C7               	iorwf	display_clock@i+1,f
  5974                           
  5975                           ;clock_source.c: 120:     writechar(i + '0');
  5976  0BD5  0846               	movf	display_clock@i,w
  5977  0BD6  3E30               	addlw	48
  5978  0BD7  160A  158A  25B1  120A  158A  	fcall	_writechar
  5979                           
  5980                           ;clock_source.c: 121:     i=i<<4;
  5981  0BDC  0847               	movf	display_clock@i+1,w
  5982  0BDD  00C5               	movwf	??_display_clock+1
  5983  0BDE  0846               	movf	display_clock@i,w
  5984  0BDF  00C4               	movwf	??_display_clock
  5985  0BE0  0EC4               	swapf	??_display_clock,f
  5986  0BE1  0EC5               	swapf	??_display_clock+1,f
  5987  0BE2  30F0               	movlw	240
  5988  0BE3  05C5               	andwf	??_display_clock+1,f
  5989  0BE4  0844               	movf	??_display_clock,w
  5990  0BE5  390F               	andlw	15
  5991  0BE6  04C5               	iorwf	??_display_clock+1,f
  5992  0BE7  30F0               	movlw	240
  5993  0BE8  05C4               	andwf	??_display_clock,f
  5994  0BE9  0844               	movf	??_display_clock,w
  5995  0BEA  00C6               	movwf	display_clock@i
  5996  0BEB  0845               	movf	??_display_clock+1,w
  5997  0BEC  00C7               	movwf	display_clock@i+1
  5998                           
  5999                           ;clock_source.c: 122:     i = table1[3]&0x0f;
  6000  0BED  0823               	movf	_table1+3,w
  6001  0BEE  390F               	andlw	15
  6002  0BEF  00C4               	movwf	??_display_clock
  6003  0BF0  01C5               	clrf	??_display_clock+1
  6004  0BF1  0844               	movf	??_display_clock,w
  6005  0BF2  00C6               	movwf	display_clock@i
  6006  0BF3  0845               	movf	??_display_clock+1,w
  6007  0BF4  00C7               	movwf	display_clock@i+1
  6008                           
  6009                           ;clock_source.c: 123:     writechar(i + '0');
  6010  0BF5  0846               	movf	display_clock@i,w
  6011  0BF6  3E30               	addlw	48
  6012  0BF7  160A  158A  25B1  120A  158A  	fcall	_writechar
  6013                           
  6014                           ;clock_source.c: 124:     write_str("/");
  6015  0BFC  3004               	movlw	low (STR_9| (0+32768))
  6016  0BFD  00F3               	movwf	write_str@array
  6017  0BFE  3091               	movlw	high (STR_9| (0+32768))
  6018  0BFF  00F4               	movwf	write_str@array+1
  6019  0C00  160A  118A  2160  120A  158A  	fcall	_write_str
  6020                           
  6021                           ;clock_source.c: 127:     i=table1[4]&0xf0;
  6022  0C05  0824               	movf	_table1+4,w
  6023  0C06  39F0               	andlw	240
  6024  0C07  00C4               	movwf	??_display_clock
  6025  0C08  01C5               	clrf	??_display_clock+1
  6026  0C09  0844               	movf	??_display_clock,w
  6027  0C0A  00C6               	movwf	display_clock@i
  6028  0C0B  0845               	movf	??_display_clock+1,w
  6029  0C0C  00C7               	movwf	display_clock@i+1
  6030                           
  6031                           ;clock_source.c: 128:     i=i>>4;
  6032  0C0D  0E46               	swapf	display_clock@i,w
  6033  0C0E  390F               	andlw	15
  6034  0C0F  00C6               	movwf	display_clock@i
  6035  0C10  0E47               	swapf	display_clock@i+1,w
  6036  0C11  39F0               	andlw	240
  6037  0C12  04C6               	iorwf	display_clock@i,f
  6038  0C13  0E47               	swapf	display_clock@i+1,w
  6039  0C14  390F               	andlw	15
  6040  0C15  00C7               	movwf	display_clock@i+1
  6041  0C16  30F0               	movlw	240
  6042  0C17  1DC7               	btfss	display_clock@i+1,3
  6043  0C18  3000               	movlw	0
  6044  0C19  04C7               	iorwf	display_clock@i+1,f
  6045                           
  6046                           ;clock_source.c: 129:     writechar(i + '0');
  6047  0C1A  0846               	movf	display_clock@i,w
  6048  0C1B  3E30               	addlw	48
  6049  0C1C  160A  158A  25B1  120A  158A  	fcall	_writechar
  6050                           
  6051                           ;clock_source.c: 130:     i=i<<4;
  6052  0C21  0847               	movf	display_clock@i+1,w
  6053  0C22  00C5               	movwf	??_display_clock+1
  6054  0C23  0846               	movf	display_clock@i,w
  6055  0C24  00C4               	movwf	??_display_clock
  6056  0C25  0EC4               	swapf	??_display_clock,f
  6057  0C26  0EC5               	swapf	??_display_clock+1,f
  6058  0C27  30F0               	movlw	240
  6059  0C28  05C5               	andwf	??_display_clock+1,f
  6060  0C29  0844               	movf	??_display_clock,w
  6061  0C2A  390F               	andlw	15
  6062  0C2B  04C5               	iorwf	??_display_clock+1,f
  6063  0C2C  30F0               	movlw	240
  6064  0C2D  05C4               	andwf	??_display_clock,f
  6065  0C2E  0844               	movf	??_display_clock,w
  6066  0C2F  00C6               	movwf	display_clock@i
  6067  0C30  0845               	movf	??_display_clock+1,w
  6068  0C31  00C7               	movwf	display_clock@i+1
  6069                           
  6070                           ;clock_source.c: 131:     i = table1[4]&0x0f;
  6071  0C32  0824               	movf	_table1+4,w
  6072  0C33  390F               	andlw	15
  6073  0C34  00C4               	movwf	??_display_clock
  6074  0C35  01C5               	clrf	??_display_clock+1
  6075  0C36  0844               	movf	??_display_clock,w
  6076  0C37  00C6               	movwf	display_clock@i
  6077  0C38  0845               	movf	??_display_clock+1,w
  6078  0C39  00C7               	movwf	display_clock@i+1
  6079                           
  6080                           ;clock_source.c: 132:     writechar(i + '0');
  6081  0C3A  0846               	movf	display_clock@i,w
  6082  0C3B  3E30               	addlw	48
  6083  0C3C  160A  158A  25B1  120A  158A  	fcall	_writechar
  6084                           
  6085                           ;clock_source.c: 133:     write_str("/");
  6086  0C41  3004               	movlw	low (STR_9| (0+32768))
  6087  0C42  00F3               	movwf	write_str@array
  6088  0C43  3091               	movlw	high (STR_9| (0+32768))
  6089  0C44  00F4               	movwf	write_str@array+1
  6090  0C45  160A  118A  2160  120A  158A  	fcall	_write_str
  6091                           
  6092                           ;clock_source.c: 136:     i=table1[6]&0xf0;
  6093  0C4A  0826               	movf	_table1+6,w
  6094  0C4B  39F0               	andlw	240
  6095  0C4C  00C4               	movwf	??_display_clock
  6096  0C4D  01C5               	clrf	??_display_clock+1
  6097  0C4E  0844               	movf	??_display_clock,w
  6098  0C4F  00C6               	movwf	display_clock@i
  6099  0C50  0845               	movf	??_display_clock+1,w
  6100  0C51  00C7               	movwf	display_clock@i+1
  6101                           
  6102                           ;clock_source.c: 137:     i=i>>4;
  6103  0C52  0E46               	swapf	display_clock@i,w
  6104  0C53  390F               	andlw	15
  6105  0C54  00C6               	movwf	display_clock@i
  6106  0C55  0E47               	swapf	display_clock@i+1,w
  6107  0C56  39F0               	andlw	240
  6108  0C57  04C6               	iorwf	display_clock@i,f
  6109  0C58  0E47               	swapf	display_clock@i+1,w
  6110  0C59  390F               	andlw	15
  6111  0C5A  00C7               	movwf	display_clock@i+1
  6112  0C5B  30F0               	movlw	240
  6113  0C5C  1DC7               	btfss	display_clock@i+1,3
  6114  0C5D  3000               	movlw	0
  6115  0C5E  04C7               	iorwf	display_clock@i+1,f
  6116                           
  6117                           ;clock_source.c: 138:     writechar(i + '0');
  6118  0C5F  0846               	movf	display_clock@i,w
  6119  0C60  3E30               	addlw	48
  6120  0C61  160A  158A  25B1  120A  158A  	fcall	_writechar
  6121                           
  6122                           ;clock_source.c: 139:     i=i<<4;
  6123  0C66  0847               	movf	display_clock@i+1,w
  6124  0C67  00C5               	movwf	??_display_clock+1
  6125  0C68  0846               	movf	display_clock@i,w
  6126  0C69  00C4               	movwf	??_display_clock
  6127  0C6A  0EC4               	swapf	??_display_clock,f
  6128  0C6B  0EC5               	swapf	??_display_clock+1,f
  6129  0C6C  30F0               	movlw	240
  6130  0C6D  05C5               	andwf	??_display_clock+1,f
  6131  0C6E  0844               	movf	??_display_clock,w
  6132  0C6F  390F               	andlw	15
  6133  0C70  04C5               	iorwf	??_display_clock+1,f
  6134  0C71  30F0               	movlw	240
  6135  0C72  05C4               	andwf	??_display_clock,f
  6136  0C73  0844               	movf	??_display_clock,w
  6137  0C74  00C6               	movwf	display_clock@i
  6138  0C75  0845               	movf	??_display_clock+1,w
  6139  0C76  00C7               	movwf	display_clock@i+1
  6140                           
  6141                           ;clock_source.c: 140:     i = table1[6]&0x0f;
  6142  0C77  0826               	movf	_table1+6,w
  6143  0C78  390F               	andlw	15
  6144  0C79  00C4               	movwf	??_display_clock
  6145  0C7A  01C5               	clrf	??_display_clock+1
  6146  0C7B  0844               	movf	??_display_clock,w
  6147  0C7C  00C6               	movwf	display_clock@i
  6148  0C7D  0845               	movf	??_display_clock+1,w
  6149  0C7E  00C7               	movwf	display_clock@i+1
  6150                           
  6151                           ;clock_source.c: 141:     writechar(i + '0');
  6152  0C7F  0846               	movf	display_clock@i,w
  6153  0C80  3E30               	addlw	48
  6154  0C81  160A  158A  25B1  120A  158A  	fcall	_writechar
  6155                           
  6156                           ;clock_source.c: 144:     writecmd_4line(0x90);
  6157  0C86  3090               	movlw	144
  6158  0C87  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  6159                           
  6160                           ;clock_source.c: 145:     write_str("Week:");
  6161  0C8C  30B0               	movlw	low (STR_11| (0+32768))
  6162  0C8D  00F3               	movwf	write_str@array
  6163  0C8E  3090               	movlw	high (STR_11| (0+32768))
  6164  0C8F  00F4               	movwf	write_str@array+1
  6165  0C90  160A  118A  2160  120A  158A  	fcall	_write_str
  6166                           
  6167                           ;clock_source.c: 146:     wkd = (table1[5]);
  6168  0C95  0825               	movf	_table1+5,w
  6169  0C96  00C4               	movwf	??_display_clock
  6170  0C97  0844               	movf	??_display_clock,w
  6171  0C98  00C0               	movwf	_wkd
  6172                           
  6173                           ;clock_source.c: 147:     week(table1[5]);
  6174  0C99  0825               	movf	_table1+5,w
  6175  0C9A  00C4               	movwf	??_display_clock
  6176  0C9B  01C5               	clrf	??_display_clock+1
  6177  0C9C  0844               	movf	??_display_clock,w
  6178  0C9D  00FC               	movwf	week@w
  6179  0C9E  0845               	movf	??_display_clock+1,w
  6180  0C9F  00FD               	movwf	week@w+1
  6181  0CA0  120A  118A  2011  120A  158A  	fcall	_week
  6182                           
  6183                           ;clock_source.c: 150:     writecmd_4line(0x88);
  6184  0CA5  3088               	movlw	136
  6185  0CA6  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  6186                           
  6187                           ;clock_source.c: 151:     write_str("Time:");
  6188  0CAB  30A4               	movlw	low (STR_12| (0+32768))
  6189  0CAC  00F3               	movwf	write_str@array
  6190  0CAD  3090               	movlw	high (STR_12| (0+32768))
  6191  0CAE  00F4               	movwf	write_str@array+1
  6192  0CAF  160A  118A  2160  120A  158A  	fcall	_write_str
  6193                           
  6194                           ;clock_source.c: 154:     i=table1[2]&0xf0;
  6195  0CB4  0822               	movf	_table1+2,w
  6196  0CB5  39F0               	andlw	240
  6197  0CB6  00C4               	movwf	??_display_clock
  6198  0CB7  01C5               	clrf	??_display_clock+1
  6199  0CB8  0844               	movf	??_display_clock,w
  6200  0CB9  00C6               	movwf	display_clock@i
  6201  0CBA  0845               	movf	??_display_clock+1,w
  6202  0CBB  00C7               	movwf	display_clock@i+1
  6203                           
  6204                           ;clock_source.c: 155:     i=i>>4;
  6205  0CBC  0E46               	swapf	display_clock@i,w
  6206  0CBD  390F               	andlw	15
  6207  0CBE  00C6               	movwf	display_clock@i
  6208  0CBF  0E47               	swapf	display_clock@i+1,w
  6209  0CC0  39F0               	andlw	240
  6210  0CC1  04C6               	iorwf	display_clock@i,f
  6211  0CC2  0E47               	swapf	display_clock@i+1,w
  6212  0CC3  390F               	andlw	15
  6213  0CC4  00C7               	movwf	display_clock@i+1
  6214  0CC5  30F0               	movlw	240
  6215  0CC6  1DC7               	btfss	display_clock@i+1,3
  6216  0CC7  3000               	movlw	0
  6217  0CC8  04C7               	iorwf	display_clock@i+1,f
  6218                           
  6219                           ;clock_source.c: 156:     writechar(i + '0');
  6220  0CC9  0846               	movf	display_clock@i,w
  6221  0CCA  3E30               	addlw	48
  6222  0CCB  160A  158A  25B1  120A  158A  	fcall	_writechar
  6223                           
  6224                           ;clock_source.c: 157:     i=i<<4;
  6225  0CD0  0847               	movf	display_clock@i+1,w
  6226  0CD1  00C5               	movwf	??_display_clock+1
  6227  0CD2  0846               	movf	display_clock@i,w
  6228  0CD3  00C4               	movwf	??_display_clock
  6229  0CD4  0EC4               	swapf	??_display_clock,f
  6230  0CD5  0EC5               	swapf	??_display_clock+1,f
  6231  0CD6  30F0               	movlw	240
  6232  0CD7  05C5               	andwf	??_display_clock+1,f
  6233  0CD8  0844               	movf	??_display_clock,w
  6234  0CD9  390F               	andlw	15
  6235  0CDA  04C5               	iorwf	??_display_clock+1,f
  6236  0CDB  30F0               	movlw	240
  6237  0CDC  05C4               	andwf	??_display_clock,f
  6238  0CDD  0844               	movf	??_display_clock,w
  6239  0CDE  00C6               	movwf	display_clock@i
  6240  0CDF  0845               	movf	??_display_clock+1,w
  6241  0CE0  00C7               	movwf	display_clock@i+1
  6242                           
  6243                           ;clock_source.c: 158:     i = table1[2]&0x0f;
  6244  0CE1  0822               	movf	_table1+2,w
  6245  0CE2  390F               	andlw	15
  6246  0CE3  00C4               	movwf	??_display_clock
  6247  0CE4  01C5               	clrf	??_display_clock+1
  6248  0CE5  0844               	movf	??_display_clock,w
  6249  0CE6  00C6               	movwf	display_clock@i
  6250  0CE7  0845               	movf	??_display_clock+1,w
  6251  0CE8  00C7               	movwf	display_clock@i+1
  6252                           
  6253                           ;clock_source.c: 159:     writechar(i +'0');
  6254  0CE9  0846               	movf	display_clock@i,w
  6255  0CEA  3E30               	addlw	48
  6256  0CEB  160A  158A  25B1  120A  158A  	fcall	_writechar
  6257                           
  6258                           ;clock_source.c: 160:     write_str(":");
  6259  0CF0  30A8               	movlw	low ((STR_12+4)| (0+32768))
  6260  0CF1  00F3               	movwf	write_str@array
  6261  0CF2  3090               	movlw	high ((STR_12+4)| (0+32768))
  6262  0CF3  00F4               	movwf	write_str@array+1
  6263  0CF4  160A  118A  2160  120A  158A  	fcall	_write_str
  6264                           
  6265                           ;clock_source.c: 163:     i=table1[1]&0xf0;
  6266  0CF9  0821               	movf	_table1+1,w
  6267  0CFA  39F0               	andlw	240
  6268  0CFB  00C4               	movwf	??_display_clock
  6269  0CFC  01C5               	clrf	??_display_clock+1
  6270  0CFD  0844               	movf	??_display_clock,w
  6271  0CFE  00C6               	movwf	display_clock@i
  6272  0CFF  0845               	movf	??_display_clock+1,w
  6273  0D00  00C7               	movwf	display_clock@i+1
  6274                           
  6275                           ;clock_source.c: 164:     i=i>>4;
  6276  0D01  0E46               	swapf	display_clock@i,w
  6277  0D02  390F               	andlw	15
  6278  0D03  00C6               	movwf	display_clock@i
  6279  0D04  0E47               	swapf	display_clock@i+1,w
  6280  0D05  39F0               	andlw	240
  6281  0D06  04C6               	iorwf	display_clock@i,f
  6282  0D07  0E47               	swapf	display_clock@i+1,w
  6283  0D08  390F               	andlw	15
  6284  0D09  00C7               	movwf	display_clock@i+1
  6285  0D0A  30F0               	movlw	240
  6286  0D0B  1DC7               	btfss	display_clock@i+1,3
  6287  0D0C  3000               	movlw	0
  6288  0D0D  04C7               	iorwf	display_clock@i+1,f
  6289                           
  6290                           ;clock_source.c: 165:     writechar(i + '0');
  6291  0D0E  0846               	movf	display_clock@i,w
  6292  0D0F  3E30               	addlw	48
  6293  0D10  160A  158A  25B1  120A  158A  	fcall	_writechar
  6294                           
  6295                           ;clock_source.c: 166:     i=i<<4;
  6296  0D15  0847               	movf	display_clock@i+1,w
  6297  0D16  00C5               	movwf	??_display_clock+1
  6298  0D17  0846               	movf	display_clock@i,w
  6299  0D18  00C4               	movwf	??_display_clock
  6300  0D19  0EC4               	swapf	??_display_clock,f
  6301  0D1A  0EC5               	swapf	??_display_clock+1,f
  6302  0D1B  30F0               	movlw	240
  6303  0D1C  05C5               	andwf	??_display_clock+1,f
  6304  0D1D  0844               	movf	??_display_clock,w
  6305  0D1E  390F               	andlw	15
  6306  0D1F  04C5               	iorwf	??_display_clock+1,f
  6307  0D20  30F0               	movlw	240
  6308  0D21  05C4               	andwf	??_display_clock,f
  6309  0D22  0844               	movf	??_display_clock,w
  6310  0D23  00C6               	movwf	display_clock@i
  6311  0D24  0845               	movf	??_display_clock+1,w
  6312  0D25  00C7               	movwf	display_clock@i+1
  6313                           
  6314                           ;clock_source.c: 167:     i = table1[1]&0x0f;
  6315  0D26  0821               	movf	_table1+1,w
  6316  0D27  390F               	andlw	15
  6317  0D28  00C4               	movwf	??_display_clock
  6318  0D29  01C5               	clrf	??_display_clock+1
  6319  0D2A  0844               	movf	??_display_clock,w
  6320  0D2B  00C6               	movwf	display_clock@i
  6321  0D2C  0845               	movf	??_display_clock+1,w
  6322  0D2D  00C7               	movwf	display_clock@i+1
  6323                           
  6324                           ;clock_source.c: 168:     writechar(i +'0');
  6325  0D2E  0846               	movf	display_clock@i,w
  6326  0D2F  3E30               	addlw	48
  6327  0D30  160A  158A  25B1  120A  158A  	fcall	_writechar
  6328                           
  6329                           ;clock_source.c: 169:     write_str(":");
  6330  0D35  30A8               	movlw	low ((STR_12+4)| (0+32768))
  6331  0D36  00F3               	movwf	write_str@array
  6332  0D37  3090               	movlw	high ((STR_12+4)| (0+32768))
  6333  0D38  00F4               	movwf	write_str@array+1
  6334  0D39  160A  118A  2160  120A  158A  	fcall	_write_str
  6335                           
  6336                           ;clock_source.c: 172:     i=table1[0]&0xf0;
  6337  0D3E  0820               	movf	_table1,w
  6338  0D3F  39F0               	andlw	240
  6339  0D40  00C4               	movwf	??_display_clock
  6340  0D41  01C5               	clrf	??_display_clock+1
  6341  0D42  0844               	movf	??_display_clock,w
  6342  0D43  00C6               	movwf	display_clock@i
  6343  0D44  0845               	movf	??_display_clock+1,w
  6344  0D45  00C7               	movwf	display_clock@i+1
  6345                           
  6346                           ;clock_source.c: 173:     i=i>>4;
  6347  0D46  0E46               	swapf	display_clock@i,w
  6348  0D47  390F               	andlw	15
  6349  0D48  00C6               	movwf	display_clock@i
  6350  0D49  0E47               	swapf	display_clock@i+1,w
  6351  0D4A  39F0               	andlw	240
  6352  0D4B  04C6               	iorwf	display_clock@i,f
  6353  0D4C  0E47               	swapf	display_clock@i+1,w
  6354  0D4D  390F               	andlw	15
  6355  0D4E  00C7               	movwf	display_clock@i+1
  6356  0D4F  30F0               	movlw	240
  6357  0D50  1DC7               	btfss	display_clock@i+1,3
  6358  0D51  3000               	movlw	0
  6359  0D52  04C7               	iorwf	display_clock@i+1,f
  6360                           
  6361                           ;clock_source.c: 174:     writechar(i + '0');
  6362  0D53  0846               	movf	display_clock@i,w
  6363  0D54  3E30               	addlw	48
  6364  0D55  160A  158A  25B1  120A  158A  	fcall	_writechar
  6365                           
  6366                           ;clock_source.c: 175:     i=i<<4;
  6367  0D5A  0847               	movf	display_clock@i+1,w
  6368  0D5B  00C5               	movwf	??_display_clock+1
  6369  0D5C  0846               	movf	display_clock@i,w
  6370  0D5D  00C4               	movwf	??_display_clock
  6371  0D5E  0EC4               	swapf	??_display_clock,f
  6372  0D5F  0EC5               	swapf	??_display_clock+1,f
  6373  0D60  30F0               	movlw	240
  6374  0D61  05C5               	andwf	??_display_clock+1,f
  6375  0D62  0844               	movf	??_display_clock,w
  6376  0D63  390F               	andlw	15
  6377  0D64  04C5               	iorwf	??_display_clock+1,f
  6378  0D65  30F0               	movlw	240
  6379  0D66  05C4               	andwf	??_display_clock,f
  6380  0D67  0844               	movf	??_display_clock,w
  6381  0D68  00C6               	movwf	display_clock@i
  6382  0D69  0845               	movf	??_display_clock+1,w
  6383  0D6A  00C7               	movwf	display_clock@i+1
  6384                           
  6385                           ;clock_source.c: 176:     i = table1[0]&0x0f;
  6386  0D6B  0820               	movf	_table1,w
  6387  0D6C  390F               	andlw	15
  6388  0D6D  00C4               	movwf	??_display_clock
  6389  0D6E  01C5               	clrf	??_display_clock+1
  6390  0D6F  0844               	movf	??_display_clock,w
  6391  0D70  00C6               	movwf	display_clock@i
  6392  0D71  0845               	movf	??_display_clock+1,w
  6393  0D72  00C7               	movwf	display_clock@i+1
  6394                           
  6395                           ;clock_source.c: 177:     temp_sec = i;
  6396  0D73  0846               	movf	display_clock@i,w
  6397  0D74  00C4               	movwf	??_display_clock
  6398  0D75  0844               	movf	??_display_clock,w
  6399  0D76  00B2               	movwf	_temp_sec
  6400                           
  6401                           ;clock_source.c: 178:     writechar(i +'0');
  6402  0D77  0846               	movf	display_clock@i,w
  6403  0D78  3E30               	addlw	48
  6404  0D79  160A  158A  25B1   	fcall	_writechar
  6405  0D7C  0008               	return
  6406  0D7D                     __end_of_display_clock:	
  6407                           
  6408                           	psect	text28
  6409  03CA                     __ptext28:	
  6410 ;; *************** function _date_setting *****************
  6411 ;; Defined at:
  6412 ;;		line 365 in file "clock_source.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  j               2   15[BANK0 ] int 
  6417 ;;  j               2   13[BANK0 ] int 
  6418 ;;  j               2   21[BANK0 ] int 
  6419 ;;  j               2   19[BANK0 ] int 
  6420 ;;  j               2   17[BANK0 ] int 
  6421 ;;  j               2   11[BANK0 ] int 
  6422 ;;  y               1   10[BANK0 ] unsigned char 
  6423 ;;  b               1    9[BANK0 ] unsigned char 
  6424 ;;  a               1    8[BANK0 ] unsigned char 
  6425 ;;  i               2   23[BANK0 ] int 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 300/0
  6432 ;;		On exit  : 300/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6435 ;;      Params:         0       0       0       0       0
  6436 ;;      Locals:         0      17       0       0       0
  6437 ;;      Temps:          0       2       0       0       0
  6438 ;;      Totals:         0      19       0       0       0
  6439 ;;Total ram usage:       19 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    4
  6442 ;; This function calls:
  6443 ;;		_D
  6444 ;;		_OutputPins
  6445 ;;		___bmul
  6446 ;;		_button_reset
  6447 ;;		_delay_main
  6448 ;;		_display_val
  6449 ;;		_set_time_date
  6450 ;;		_start_date
  6451 ;;		_week
  6452 ;;		_write_str
  6453 ;;		_writecmd_4line
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _date_setting
  6461  03CA                     _date_setting:	
  6462                           
  6463                           ;clock_source.c: 367:     writecmd_4line(0x1);
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in _date_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6467  03CA  3001               	movlw	1
  6468  03CB  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6469                           
  6470                           ;clock_source.c: 368:     writecmd_4line(0x80);
  6471  03D0  3080               	movlw	128
  6472  03D1  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6473                           
  6474                           ;clock_source.c: 369:     write_str("Date Settings");
  6475  03D6  305B               	movlw	low (STR_30| (0+32768))
  6476  03D7  00F3               	movwf	write_str@array
  6477  03D8  3090               	movlw	high (STR_30| (0+32768))
  6478  03D9  00F4               	movwf	write_str@array+1
  6479  03DA  160A  118A  2160  120A  118A  	fcall	_write_str
  6480                           
  6481                           ;clock_source.c: 370:     writecmd_4line(0x90);
  6482  03DF  3090               	movlw	144
  6483  03E0  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6484                           
  6485                           ;clock_source.c: 371:     start_date();
  6486  03E5  160A  118A  272C  120A  118A  	fcall	_start_date
  6487                           
  6488                           ;clock_source.c: 372:     week(wkd);
  6489  03EA  0840               	movf	_wkd,w
  6490  03EB  00CA               	movwf	??_date_setting
  6491  03EC  01CB               	clrf	??_date_setting+1
  6492  03ED  084A               	movf	??_date_setting,w
  6493  03EE  00FC               	movwf	week@w
  6494  03EF  084B               	movf	??_date_setting+1,w
  6495  03F0  00FD               	movwf	week@w+1
  6496  03F1  120A  118A  2011  120A  118A  	fcall	_week
  6497                           
  6498                           ;clock_source.c: 373:     writecmd_4line(0x98);
  6499  03F6  3098               	movlw	152
  6500  03F7  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6501                           
  6502                           ;clock_source.c: 374:     write_str("Change date...");
  6503  03FC  303E               	movlw	low (STR_31| (0+32768))
  6504  03FD  00F3               	movwf	write_str@array
  6505  03FE  3090               	movlw	high (STR_31| (0+32768))
  6506  03FF  00F4               	movwf	write_str@array+1
  6507  0400  160A  118A  2160  120A  118A  	fcall	_write_str
  6508                           
  6509                           ;clock_source.c: 375:     int i=3;
  6510  0405  3003               	movlw	3
  6511  0406  00DB               	movwf	date_setting@i
  6512  0407  3000               	movlw	0
  6513  0408  00DC               	movwf	date_setting@i+1
  6514  0409                     l5126:	
  6515                           
  6516                           ;clock_source.c: 380:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  6517  0409  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6518  040E  3002               	movlw	2
  6519  040F  0642               	xorwf	_FirstRC,w
  6520  0410  1903               	btfsc	3,2
  6521  0411  0343               	decf	_SecondRC,w
  6522  0412  1903               	btfsc	3,2
  6523  0413  0008               	return
  6524  0414  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6525  0419  3002               	movlw	2
  6526  041A  0642               	xorwf	_FirstRC,w
  6527  041B  1D03               	btfss	3,2
  6528  041C  2C29               	goto	l5150
  6529  041D  3002               	movlw	2
  6530  041E  0643               	xorwf	_SecondRC,w
  6531  041F  1D03               	btfss	3,2
  6532  0420  2C29               	goto	l5150
  6533                           
  6534                           ;clock_source.c: 386:             table[5] = wkd;
  6535  0421  0840               	movf	_wkd,w
  6536  0422  00CA               	movwf	??_date_setting
  6537  0423  084A               	movf	??_date_setting,w
  6538  0424  00E2               	movwf	_table+5
  6539                           
  6540                           ;clock_source.c: 387:             set_time_date();
  6541  0425  160A  158A  268F   	fcall	_set_time_date
  6542  0428  0008               	return
  6543  0429                     l5150:	
  6544  0429  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6545  042E  3004               	movlw	4
  6546  042F  0642               	xorwf	_FirstRC,w
  6547  0430  1D03               	btfss	3,2
  6548  0431  2CA5               	goto	l5180
  6549  0432  0343               	decf	_SecondRC,w
  6550  0433  1D03               	btfss	3,2
  6551  0434  2CA5               	goto	l5180
  6552                           
  6553                           ;clock_source.c: 393:             button_reset();
  6554  0435  160A  158A  24F1  120A  118A  	fcall	_button_reset
  6555                           
  6556                           ;clock_source.c: 395:             if (i != 6){
  6557  043A  3006               	movlw	6
  6558  043B  065B               	xorwf	date_setting@i,w
  6559  043C  045C               	iorwf	date_setting@i+1,w
  6560  043D  1903               	btfsc	3,2
  6561  043E  2C83               	goto	l5174
  6562                           
  6563                           ;clock_source.c: 396:                 i++;
  6564  043F  3001               	movlw	1
  6565  0440  07DB               	addwf	date_setting@i,f
  6566  0441  1803               	skipnc
  6567  0442  0ADC               	incf	date_setting@i+1,f
  6568  0443  3000               	movlw	0
  6569  0444                     L8:	
  6570  0444  07DC               	addwf	date_setting@i+1,f
  6571                           
  6572                           ;clock_source.c: 397:                 if (i == 5){
  6573  0445  3005               	movlw	5
  6574  0446  065B               	xorwf	date_setting@i,w
  6575  0447  045C               	iorwf	date_setting@i+1,w
  6576  0448  1D03               	btfss	3,2
  6577  0449  2C61               	goto	l5168
  6578                           
  6579                           ;clock_source.c: 398:                     D('w','0',i);
  6580  044A  3077               	movlw	119
  6581  044B                     L5:	
  6582  044B  00C4               	movwf	D@D
  6583  044C  3000               	movlw	0
  6584  044D  00C5               	movwf	D@D+1
  6585  044E  3030               	movlw	48
  6586  044F  00C6               	movwf	D@C
  6587  0450  3000               	movlw	0
  6588  0451  00C7               	movwf	D@C+1
  6589  0452  085C               	movf	date_setting@i+1,w
  6590  0453  00C9               	movwf	D@i+1
  6591  0454  085B               	movf	date_setting@i,w
  6592  0455  00C8               	movwf	D@i
  6593  0456  160A  118A  241B  120A  118A  	fcall	_D
  6594  045B                     l5166:	
  6595                           
  6596                           ;clock_source.c: 399:                     delay_main();
  6597  045B  160A  158A  2571  120A  118A  	fcall	_delay_main
  6598                           
  6599                           ;clock_source.c: 400:                 }
  6600  0460  2C09               	goto	l5126
  6601  0461                     l5168:	
  6602  0461  3004               	movlw	4
  6603  0462  065B               	xorwf	date_setting@i,w
  6604  0463  045C               	iorwf	date_setting@i+1,w
  6605  0464  1D03               	btfss	3,2
  6606  0465  2C09               	goto	l5126
  6607                           
  6608                           ;clock_source.c: 402:                     D('m','0',i);
  6609  0466  306D               	movlw	109
  6610  0467  00C4               	movwf	D@D
  6611  0468  3000               	movlw	0
  6612  0469  00C5               	movwf	D@D+1
  6613  046A  3030               	movlw	48
  6614  046B  00C6               	movwf	D@C
  6615  046C  3000               	movlw	0
  6616  046D  00C7               	movwf	D@C+1
  6617  046E  085C               	movf	date_setting@i+1,w
  6618  046F  00C9               	movwf	D@i+1
  6619  0470  085B               	movf	date_setting@i,w
  6620  0471  00C8               	movwf	D@i
  6621  0472  160A  118A  241B  120A  118A  	fcall	_D
  6622                           
  6623                           ;clock_source.c: 403:                     display_val(i);
  6624  0477  1283               	bcf	3,5	;RP0=0, select bank0
  6625  0478  1303               	bcf	3,6	;RP1=0, select bank0
  6626  0479  085C               	movf	date_setting@i+1,w
  6627  047A  00F4               	movwf	display_val@i+1
  6628  047B  085B               	movf	date_setting@i,w
  6629  047C  00F3               	movwf	display_val@i
  6630  047D  120A  158A  200E  120A  118A  	fcall	_display_val
  6631  0482  2C5B               	goto	l5166
  6632  0483                     l5174:	
  6633  0483  3006               	movlw	6
  6634  0484  065B               	xorwf	date_setting@i,w
  6635  0485  045C               	iorwf	date_setting@i+1,w
  6636  0486  1D03               	btfss	3,2
  6637  0487  2C09               	goto	l5126
  6638                           
  6639                           ;clock_source.c: 408:                 D('y','0',i);
  6640  0488  3079               	movlw	121
  6641  0489  00C4               	movwf	D@D
  6642  048A  3000               	movlw	0
  6643  048B  00C5               	movwf	D@D+1
  6644  048C  3030               	movlw	48
  6645  048D  00C6               	movwf	D@C
  6646  048E  3000               	movlw	0
  6647  048F  00C7               	movwf	D@C+1
  6648  0490  085C               	movf	date_setting@i+1,w
  6649  0491  00C9               	movwf	D@i+1
  6650  0492  085B               	movf	date_setting@i,w
  6651  0493  00C8               	movwf	D@i
  6652  0494  160A  118A  241B  120A  118A  	fcall	_D
  6653                           
  6654                           ;clock_source.c: 409:                 display_val(i);
  6655  0499  1283               	bcf	3,5	;RP0=0, select bank0
  6656  049A  1303               	bcf	3,6	;RP1=0, select bank0
  6657  049B  085C               	movf	date_setting@i+1,w
  6658  049C  00F4               	movwf	display_val@i+1
  6659  049D  085B               	movf	date_setting@i,w
  6660  049E  00F3               	movwf	display_val@i
  6661  049F  120A  158A  200E  120A  118A  	fcall	_display_val
  6662  04A4  2C5B               	goto	l5166
  6663  04A5                     l5180:	
  6664                           ;clock_source.c: 412:         }
  6665                           
  6666  04A5  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6667  04AA  3003               	movlw	3
  6668  04AB  0642               	xorwf	_FirstRC,w
  6669  04AC  1D03               	btfss	3,2
  6670  04AD  2CC8               	goto	l5210
  6671  04AE  0343               	decf	_SecondRC,w
  6672  04AF  1D03               	btfss	3,2
  6673  04B0  2CC8               	goto	l5210
  6674                           
  6675                           ;clock_source.c: 416:             button_reset();
  6676  04B1  160A  158A  24F1  120A  118A  	fcall	_button_reset
  6677                           
  6678                           ;clock_source.c: 418:             if (i != 3){
  6679  04B6  3003               	movlw	3
  6680  04B7  065B               	xorwf	date_setting@i,w
  6681  04B8  045C               	iorwf	date_setting@i+1,w
  6682  04B9  1903               	btfsc	3,2
  6683  04BA  2CC1               	goto	l5204
  6684                           
  6685                           ;clock_source.c: 419:                 i--;
  6686  04BB  30FF               	movlw	255
  6687  04BC  07DB               	addwf	date_setting@i,f
  6688  04BD  1803               	skipnc
  6689  04BE  0ADC               	incf	date_setting@i+1,f
  6690  04BF  30FF               	movlw	255
  6691  04C0  2C44               	goto	L8
  6692  04C1                     l5204:	
  6693                           ;clock_source.c: 420:                 if (i == 5){
  6694                           
  6695  04C1  3003               	movlw	3
  6696  04C2  065B               	xorwf	date_setting@i,w
  6697  04C3  045C               	iorwf	date_setting@i+1,w
  6698  04C4  1D03               	btfss	3,2
  6699  04C5  2C09               	goto	l5126
  6700                           
  6701                           ;clock_source.c: 431:                 D('d','0',i);
  6702  04C6  3064               	movlw	100
  6703  04C7  2C4B               	goto	L5
  6704  04C8                     l5210:	
  6705  04C8  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6706  04CD  3003               	movlw	3
  6707  04CE  0642               	xorwf	_FirstRC,w
  6708  04CF  1D03               	btfss	3,2
  6709  04D0  2DC2               	goto	l5288
  6710  04D1  3002               	movlw	2
  6711  04D2  0643               	xorwf	_SecondRC,w
  6712  04D3  1D03               	btfss	3,2
  6713  04D4  2DC2               	goto	l5288
  6714                           
  6715                           ;clock_source.c: 438:             button_reset();
  6716  04D5  160A  158A  24F1  120A  118A  	fcall	_button_reset
  6717                           
  6718                           ;clock_source.c: 441:             if (i == 3){
  6719  04DA  3003               	movlw	3
  6720  04DB  065B               	xorwf	date_setting@i,w
  6721  04DC  045C               	iorwf	date_setting@i+1,w
  6722  04DD  1D03               	btfss	3,2
  6723  04DE  2CF1               	goto	l5222
  6724                           
  6725                           ;clock_source.c: 442:                 D('d','d',i);
  6726  04DF  3064               	movlw	100
  6727  04E0  00C4               	movwf	D@D
  6728  04E1  3000               	movlw	0
  6729  04E2  00C5               	movwf	D@D+1
  6730  04E3  3064               	movlw	100
  6731  04E4  00C6               	movwf	D@C
  6732  04E5  3000               	movlw	0
  6733  04E6  00C7               	movwf	D@C+1
  6734  04E7  085C               	movf	date_setting@i+1,w
  6735  04E8  00C9               	movwf	D@i+1
  6736  04E9  085B               	movf	date_setting@i,w
  6737  04EA  00C8               	movwf	D@i
  6738  04EB  160A  118A  241B  120A  118A  	fcall	_D
  6739                           
  6740                           ;clock_source.c: 443:             }
  6741  04F0  2C09               	goto	l5126
  6742  04F1                     l5222:	
  6743  04F1  3005               	movlw	5
  6744  04F2  065B               	xorwf	date_setting@i,w
  6745  04F3  045C               	iorwf	date_setting@i+1,w
  6746  04F4  1D03               	btfss	3,2
  6747  04F5  2D14               	goto	l5236
  6748                           
  6749                           ;clock_source.c: 448:                 if (wkd != 1){
  6750  04F6  0340               	decf	_wkd,w
  6751  04F7  1903               	btfsc	3,2
  6752  04F8  2C5B               	goto	l5166
  6753                           
  6754                           ;clock_source.c: 449:                     wkd--;
  6755  04F9  3001               	movlw	1
  6756  04FA  02C0               	subwf	_wkd,f
  6757                           
  6758                           ;clock_source.c: 450:                     writecmd_4line(0x8B);
  6759  04FB  308B               	movlw	139
  6760  04FC  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6761                           
  6762                           ;clock_source.c: 451:                     week(wkd);
  6763  0501  0840               	movf	_wkd,w
  6764  0502  00CA               	movwf	??_date_setting
  6765  0503  01CB               	clrf	??_date_setting+1
  6766  0504  084A               	movf	??_date_setting,w
  6767  0505  00FC               	movwf	week@w
  6768  0506  084B               	movf	??_date_setting+1,w
  6769  0507  00FD               	movwf	week@w+1
  6770  0508  120A  118A  2011  120A  118A  	fcall	_week
  6771                           
  6772                           ;clock_source.c: 452:                     writecmd_4line(0x8B);
  6773  050D  308B               	movlw	139
  6774  050E  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  6775  0513  2C5B               	goto	l5166
  6776  0514                     l5236:	
  6777  0514  3004               	movlw	4
  6778  0515  065B               	xorwf	date_setting@i,w
  6779  0516  045C               	iorwf	date_setting@i+1,w
  6780  0517  1D03               	btfss	3,2
  6781  0518  2D2B               	goto	l5240
  6782                           
  6783                           ;clock_source.c: 459:                 D('m','d',i);
  6784  0519  306D               	movlw	109
  6785  051A  00C4               	movwf	D@D
  6786  051B  3000               	movlw	0
  6787  051C  00C5               	movwf	D@D+1
  6788  051D  3064               	movlw	100
  6789  051E  00C6               	movwf	D@C
  6790  051F  3000               	movlw	0
  6791  0520  00C7               	movwf	D@C+1
  6792  0521  085C               	movf	date_setting@i+1,w
  6793  0522  00C9               	movwf	D@i+1
  6794  0523  085B               	movf	date_setting@i,w
  6795  0524  00C8               	movwf	D@i
  6796  0525  160A  118A  241B  120A  118A  	fcall	_D
  6797                           
  6798                           ;clock_source.c: 460:             }
  6799  052A  2C09               	goto	l5126
  6800  052B                     l5240:	
  6801  052B  3006               	movlw	6
  6802  052C  065B               	xorwf	date_setting@i,w
  6803  052D  045C               	iorwf	date_setting@i+1,w
  6804  052E  1D03               	btfss	3,2
  6805  052F  2C09               	goto	l5126
  6806                           
  6807                           ;clock_source.c: 464:                 D('0','1',i);;
  6808  0530  3030               	movlw	48
  6809  0531  00C4               	movwf	D@D
  6810  0532  3000               	movlw	0
  6811  0533  00C5               	movwf	D@D+1
  6812  0534  3031               	movlw	49
  6813  0535  00C6               	movwf	D@C
  6814  0536  3000               	movlw	0
  6815  0537  00C7               	movwf	D@C+1
  6816  0538  085C               	movf	date_setting@i+1,w
  6817  0539  00C9               	movwf	D@i+1
  6818  053A  085B               	movf	date_setting@i,w
  6819  053B  00C8               	movwf	D@i
  6820  053C  160A  118A  241B  120A  118A  	fcall	_D
  6821                           
  6822                           ;clock_source.c: 465:                 if (table[i] != 0x00){
  6823  0541  1283               	bcf	3,5	;RP0=0, select bank0
  6824  0542  1303               	bcf	3,6	;RP1=0, select bank0
  6825  0543  085B               	movf	date_setting@i,w
  6826  0544  3E5D               	addlw	(low (_table| 0))& (0+255)
  6827  0545  0084               	movwf	4
  6828  0546  1383               	bcf	3,7	;select IRP bank0
  6829  0547  0800               	movf	0,w
  6830  0548  1903               	btfsc	3,2
  6831  0549  2DB6               	goto	l5280
  6832                           
  6833                           ;clock_source.c: 466:                     if (table[i] == 0x10 || table[i] == 0x20
  6834  054A  085B               	movf	date_setting@i,w
  6835  054B  3E5D               	addlw	(low (_table| 0))& (0+255)
  6836  054C  0084               	movwf	4
  6837  054D  3010               	movlw	16
  6838  054E  0600               	xorwf	0,w
  6839  054F  1903               	btfsc	3,2
  6840  0550  2D89               	goto	l5264
  6841  0551  085B               	movf	date_setting@i,w
  6842  0552  3E5D               	addlw	(low (_table| 0))& (0+255)
  6843  0553  0084               	movwf	4
  6844  0554  3020               	movlw	32
  6845  0555  0600               	xorwf	0,w
  6846  0556  1903               	btfsc	3,2
  6847  0557  2D89               	goto	l5264
  6848  0558  085B               	movf	date_setting@i,w
  6849  0559  3E5D               	addlw	(low (_table| 0))& (0+255)
  6850  055A  0084               	movwf	4
  6851  055B  3030               	movlw	48
  6852  055C  0600               	xorwf	0,w
  6853  055D  1903               	btfsc	3,2
  6854  055E  2D89               	goto	l5264
  6855  055F  085B               	movf	date_setting@i,w
  6856  0560  3E5D               	addlw	(low (_table| 0))& (0+255)
  6857  0561  0084               	movwf	4
  6858  0562  3040               	movlw	64
  6859  0563  0600               	xorwf	0,w
  6860  0564  1903               	btfsc	3,2
  6861  0565  2D89               	goto	l5264
  6862  0566  085B               	movf	date_setting@i,w
  6863  0567  3E5D               	addlw	(low (_table| 0))& (0+255)
  6864  0568  0084               	movwf	4
  6865  0569  3050               	movlw	80
  6866  056A  0600               	xorwf	0,w
  6867  056B  1903               	btfsc	3,2
  6868  056C  2D89               	goto	l5264
  6869  056D  085B               	movf	date_setting@i,w
  6870  056E  3E5D               	addlw	(low (_table| 0))& (0+255)
  6871  056F  0084               	movwf	4
  6872  0570  3060               	movlw	96
  6873  0571  0600               	xorwf	0,w
  6874  0572  1903               	btfsc	3,2
  6875  0573  2D89               	goto	l5264
  6876  0574  085B               	movf	date_setting@i,w
  6877  0575  3E5D               	addlw	(low (_table| 0))& (0+255)
  6878  0576  0084               	movwf	4
  6879  0577  3070               	movlw	112
  6880  0578  0600               	xorwf	0,w
  6881  0579  1903               	btfsc	3,2
  6882  057A  2D89               	goto	l5264
  6883  057B  085B               	movf	date_setting@i,w
  6884  057C  3E5D               	addlw	(low (_table| 0))& (0+255)
  6885  057D  0084               	movwf	4
  6886  057E  3080               	movlw	128
  6887  057F  0600               	xorwf	0,w
  6888  0580  1903               	btfsc	3,2
  6889  0581  2D89               	goto	l5264
  6890  0582  085B               	movf	date_setting@i,w
  6891  0583  3E5D               	addlw	(low (_table| 0))& (0+255)
  6892  0584  0084               	movwf	4
  6893  0585  3090               	movlw	144
  6894  0586  0600               	xorwf	0,w
  6895  0587  1D03               	btfss	3,2
  6896  0588  2DB1               	goto	l5278
  6897  0589                     l5264:	
  6898                           
  6899                           ;clock_source.c: 471:                         || table[i] == 0x100){;clock_source.c: 472
      +                          :                         for (int j=0; j<6; j++){
  6900  0589  01CF               	clrf	date_setting@j
  6901  058A  01D0               	clrf	date_setting@j+1
  6902  058B                     l5266:	
  6903  058B  0850               	movf	date_setting@j+1,w
  6904  058C  3A80               	xorlw	128
  6905  058D  00FF               	movwf	127
  6906  058E  3080               	movlw	128
  6907  058F  027F               	subwf	127,w
  6908  0590  1D03               	skipz
  6909  0591  2D94               	goto	u5135
  6910  0592  3006               	movlw	6
  6911  0593  024F               	subwf	date_setting@j,w
  6912  0594                     u5135:	
  6913  0594  1803               	btfsc	3,0
  6914  0595  2DA5               	goto	l5276
  6915                           
  6916                           ;clock_source.c: 473:                             table[i]--;
  6917  0596  1283               	bcf	3,5	;RP0=0, select bank0
  6918  0597  1303               	bcf	3,6	;RP1=0, select bank0
  6919  0598  085B               	movf	date_setting@i,w
  6920  0599  3E5D               	addlw	(low (_table| 0))& (0+255)
  6921  059A  0084               	movwf	4
  6922  059B  3001               	movlw	1
  6923  059C  1383               	bcf	3,7	;select IRP bank0
  6924  059D  0280               	subwf	0,f
  6925                           
  6926                           ;clock_source.c: 474:                         }
  6927  059E  3001               	movlw	1
  6928  059F  07CF               	addwf	date_setting@j,f
  6929  05A0  1803               	skipnc
  6930  05A1  0AD0               	incf	date_setting@j+1,f
  6931  05A2  3000               	movlw	0
  6932  05A3  07D0               	addwf	date_setting@j+1,f
  6933  05A4  2D8B               	goto	l5266
  6934  05A5                     l5276:	
  6935                           
  6936                           ;clock_source.c: 475:                         display_val(i);
  6937  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6938  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6939  05A7  085C               	movf	date_setting@i+1,w
  6940  05A8  00F4               	movwf	display_val@i+1
  6941  05A9  085B               	movf	date_setting@i,w
  6942  05AA  00F3               	movwf	display_val@i
  6943  05AB  120A  158A  200E  120A  118A  	fcall	_display_val
  6944                           
  6945                           ;clock_source.c: 477:                     }
  6946  05B0  2C09               	goto	l5126
  6947  05B1                     l5278:	
  6948                           
  6949                           ;clock_source.c: 479:                         table[i]--;
  6950  05B1  085B               	movf	date_setting@i,w
  6951  05B2  3E5D               	addlw	(low (_table| 0))& (0+255)
  6952  05B3  0084               	movwf	4
  6953  05B4  3001               	movlw	1
  6954  05B5  0280               	subwf	0,f
  6955  05B6                     l5280:	
  6956                           
  6957                           ;clock_source.c: 480:                         display_val(i);
  6958  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  6959  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  6960  05B8  085C               	movf	date_setting@i+1,w
  6961  05B9  00F4               	movwf	display_val@i+1
  6962  05BA  085B               	movf	date_setting@i,w
  6963  05BB  00F3               	movwf	display_val@i
  6964  05BC  120A  158A  200E  120A  118A  	fcall	_display_val
  6965  05C1  2C5B               	goto	l5166
  6966  05C2                     l5288:	
  6967  05C2  160A  118A  2260  120A  118A  	fcall	_OutputPins
  6968  05C7  3004               	movlw	4
  6969  05C8  0642               	xorwf	_FirstRC,w
  6970  05C9  1D03               	btfss	3,2
  6971  05CA  2C09               	goto	l5126
  6972  05CB  3002               	movlw	2
  6973  05CC  0643               	xorwf	_SecondRC,w
  6974  05CD  1D03               	btfss	3,2
  6975  05CE  2C09               	goto	l5126
  6976                           
  6977                           ;clock_source.c: 493:             button_reset();
  6978  05CF  160A  158A  24F1  120A  118A  	fcall	_button_reset
  6979                           
  6980                           ;clock_source.c: 496:             if (i == 3){
  6981  05D4  3003               	movlw	3
  6982  05D5  065B               	xorwf	date_setting@i,w
  6983  05D6  045C               	iorwf	date_setting@i+1,w
  6984  05D7  1D03               	btfss	3,2
  6985  05D8  2EF3               	goto	l5426
  6986                           
  6987                           ;clock_source.c: 497:                 display_val(i);
  6988  05D9  085C               	movf	date_setting@i+1,w
  6989  05DA  00F4               	movwf	display_val@i+1
  6990  05DB  085B               	movf	date_setting@i,w
  6991  05DC  00F3               	movwf	display_val@i
  6992  05DD  120A  158A  200E  120A  118A  	fcall	_display_val
  6993                           
  6994                           ;clock_source.c: 500:                 if (table[4] == 0x02){
  6995  05E2  3002               	movlw	2
  6996  05E3  0661               	xorwf	_table+4,w
  6997  05E4  1D03               	btfss	3,2
  6998  05E5  2EB8               	goto	l5394
  6999                           
  7000                           ;clock_source.c: 504:                     unsigned char a = (table[6]&0xF0)>>4;
  7001  05E6  0863               	movf	_table+6,w
  7002  05E7  00CA               	movwf	??_date_setting
  7003  05E8  3004               	movlw	4
  7004  05E9                     u5185:	
  7005  05E9  1003               	clrc
  7006  05EA  0CCA               	rrf	??_date_setting,f
  7007  05EB  3EFF               	addlw	-1
  7008  05EC  1D03               	skipz
  7009  05ED  2DE9               	goto	u5185
  7010  05EE  084A               	movf	??_date_setting,w
  7011  05EF  390F               	andlw	15
  7012  05F0  00CB               	movwf	??_date_setting+1
  7013  05F1  084B               	movf	??_date_setting+1,w
  7014  05F2  00CC               	movwf	date_setting@a
  7015                           
  7016                           ;clock_source.c: 505:                     unsigned char b = (table[6]&0x0F);
  7017  05F3  0863               	movf	_table+6,w
  7018  05F4  390F               	andlw	15
  7019  05F5  00CA               	movwf	??_date_setting
  7020  05F6  084A               	movf	??_date_setting,w
  7021  05F7  00CD               	movwf	date_setting@b
  7022                           
  7023                           ;clock_source.c: 506:                     unsigned char y = a*10 + b;
  7024  05F8  300A               	movlw	10
  7025  05F9  00CA               	movwf	??_date_setting
  7026  05FA  084A               	movf	??_date_setting,w
  7027  05FB  00F0               	movwf	___bmul@multiplicand
  7028  05FC  084C               	movf	date_setting@a,w
  7029  05FD  160A  158A  252D  120A  118A  	fcall	___bmul
  7030  0602  074D               	addwf	date_setting@b,w
  7031  0603  00CB               	movwf	??_date_setting+1
  7032  0604  084B               	movf	??_date_setting+1,w
  7033  0605  00CE               	movwf	date_setting@y
  7034                           
  7035                           ;clock_source.c: 507:                     if (y%4 == 0){
  7036  0606  084E               	movf	date_setting@y,w
  7037  0607  3903               	andlw	3
  7038  0608  1D03               	btfss	3,2
  7039  0609  2E62               	goto	l5350
  7040                           
  7041                           ;clock_source.c: 509:                         if (table[3] == 0x30 || table[3] == 0x31){
  7042  060A  3030               	movlw	48
  7043  060B  0660               	xorwf	_table+3,w
  7044  060C  1903               	btfsc	3,2
  7045  060D  2E12               	goto	l5314
  7046  060E  3031               	movlw	49
  7047  060F  0660               	xorwf	_table+3,w
  7048  0610  1D03               	btfss	3,2
  7049  0611  2E24               	goto	l5320
  7050  0612                     l5314:	
  7051                           
  7052                           ;clock_source.c: 510:                             table[3] = 0x29;
  7053  0612  3029               	movlw	41
  7054  0613  00CA               	movwf	??_date_setting
  7055  0614  084A               	movf	??_date_setting,w
  7056  0615  00E0               	movwf	_table+3
  7057                           
  7058                           ;clock_source.c: 511:                             display_val(i);
  7059  0616  085C               	movf	date_setting@i+1,w
  7060  0617  00F4               	movwf	display_val@i+1
  7061  0618  085B               	movf	date_setting@i,w
  7062  0619  00F3               	movwf	display_val@i
  7063  061A  120A  158A  200E  120A  118A  	fcall	_display_val
  7064                           
  7065                           ;clock_source.c: 512:                             delay_main();
  7066  061F  160A  158A  2571  120A  118A  	fcall	_delay_main
  7067  0624                     l5320:	
  7068                           
  7069                           ;clock_source.c: 515:                         if (table[i] == 0x09 || table[i] == 0x19){
  7070  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0625  1303               	bcf	3,6	;RP1=0, select bank0
  7072  0626  085B               	movf	date_setting@i,w
  7073  0627  3E5D               	addlw	(low (_table| 0))& (0+255)
  7074  0628  0084               	movwf	4
  7075  0629  3009               	movlw	9
  7076  062A  1383               	bcf	3,7	;select IRP bank0
  7077  062B  0600               	xorwf	0,w
  7078  062C  1903               	btfsc	3,2
  7079  062D  2E35               	goto	l5324
  7080  062E  085B               	movf	date_setting@i,w
  7081  062F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7082  0630  0084               	movwf	4
  7083  0631  3019               	movlw	25
  7084  0632  0600               	xorwf	0,w
  7085  0633  1D03               	btfss	3,2
  7086  0634  2E53               	goto	l5340
  7087  0635                     l5324:	
  7088                           
  7089                           ;clock_source.c: 516:                             for (int j=0; j<7; j++){
  7090  0635  01D1               	clrf	date_setting@j_241
  7091  0636  01D2               	clrf	date_setting@j_241+1
  7092  0637                     l5326:	
  7093  0637  0852               	movf	date_setting@j_241+1,w
  7094  0638  3A80               	xorlw	128
  7095  0639  00FF               	movwf	127
  7096  063A  3080               	movlw	128
  7097  063B  027F               	subwf	127,w
  7098  063C  1D03               	skipz
  7099  063D  2E40               	goto	u5245
  7100  063E  3007               	movlw	7
  7101  063F  0251               	subwf	date_setting@j_241,w
  7102  0640                     u5245:	
  7103  0640  1803               	btfsc	3,0
  7104  0641  2DB6               	goto	l5280
  7105                           
  7106                           ;clock_source.c: 517:                                 table[i]++;
  7107  0642  3001               	movlw	1
  7108  0643  1283               	bcf	3,5	;RP0=0, select bank0
  7109  0644  1303               	bcf	3,6	;RP1=0, select bank0
  7110  0645  00CA               	movwf	??_date_setting
  7111  0646  085B               	movf	date_setting@i,w
  7112  0647  3E5D               	addlw	(low (_table| 0))& (0+255)
  7113  0648  0084               	movwf	4
  7114  0649  084A               	movf	??_date_setting,w
  7115  064A  1383               	bcf	3,7	;select IRP bank0
  7116  064B  0780               	addwf	0,f
  7117                           
  7118                           ;clock_source.c: 518:                             }
  7119  064C  3001               	movlw	1
  7120  064D  07D1               	addwf	date_setting@j_241,f
  7121  064E  1803               	skipnc
  7122  064F  0AD2               	incf	date_setting@j_241+1,f
  7123  0650  3000               	movlw	0
  7124  0651  07D2               	addwf	date_setting@j_241+1,f
  7125  0652  2E37               	goto	l5326
  7126  0653                     l5340:	
  7127  0653  085B               	movf	date_setting@i,w
  7128  0654  3E5D               	addlw	(low (_table| 0))& (0+255)
  7129  0655  0084               	movwf	4
  7130  0656  3029               	movlw	41
  7131  0657                     L6:	
  7132  0657  0600               	xorwf	0,w
  7133  0658  1903               	btfsc	3,2
  7134  0659  2C5B               	goto	l5166
  7135  065A                     l5342:	
  7136                           
  7137                           ;clock_source.c: 523:                             table[i]++;
  7138  065A  3001               	movlw	1
  7139  065B  00CA               	movwf	??_date_setting
  7140  065C  085B               	movf	date_setting@i,w
  7141  065D  3E5D               	addlw	(low (_table| 0))& (0+255)
  7142  065E  0084               	movwf	4
  7143  065F  084A               	movf	??_date_setting,w
  7144  0660  0780               	addwf	0,f
  7145  0661  2DB6               	goto	l5280
  7146  0662                     l5350:	
  7147  0662  0863               	movf	_table+6,w
  7148  0663  3903               	andlw	3
  7149  0664  1903               	btfsc	3,2
  7150  0665  2C09               	goto	l5126
  7151                           
  7152                           ;clock_source.c: 535:                         if (table[3] == 0x30 || table[3] == 0x31 |
      +                          | table[3] == 0x29){
  7153  0666  3030               	movlw	48
  7154  0667  0660               	xorwf	_table+3,w
  7155  0668  1903               	btfsc	3,2
  7156  0669  2E72               	goto	l5358
  7157  066A  3031               	movlw	49
  7158  066B  0660               	xorwf	_table+3,w
  7159  066C  1903               	btfsc	3,2
  7160  066D  2E72               	goto	l5358
  7161  066E  3029               	movlw	41
  7162  066F  0660               	xorwf	_table+3,w
  7163  0670  1D03               	btfss	3,2
  7164  0671  2E84               	goto	l5364
  7165  0672                     l5358:	
  7166                           
  7167                           ;clock_source.c: 536:                             table[3] = 0x28;
  7168  0672  3028               	movlw	40
  7169  0673  00CA               	movwf	??_date_setting
  7170  0674  084A               	movf	??_date_setting,w
  7171  0675  00E0               	movwf	_table+3
  7172                           
  7173                           ;clock_source.c: 537:                             display_val(i);
  7174  0676  085C               	movf	date_setting@i+1,w
  7175  0677  00F4               	movwf	display_val@i+1
  7176  0678  085B               	movf	date_setting@i,w
  7177  0679  00F3               	movwf	display_val@i
  7178  067A  120A  158A  200E  120A  118A  	fcall	_display_val
  7179                           
  7180                           ;clock_source.c: 538:                             delay_main();
  7181  067F  160A  158A  2571  120A  118A  	fcall	_delay_main
  7182  0684                     l5364:	
  7183                           
  7184                           ;clock_source.c: 541:                         if (table[i] == 0x09 || table[i] == 0x19){
  7185  0684  1283               	bcf	3,5	;RP0=0, select bank0
  7186  0685  1303               	bcf	3,6	;RP1=0, select bank0
  7187  0686  085B               	movf	date_setting@i,w
  7188  0687  3E5D               	addlw	(low (_table| 0))& (0+255)
  7189  0688  0084               	movwf	4
  7190  0689  3009               	movlw	9
  7191  068A  1383               	bcf	3,7	;select IRP bank0
  7192  068B  0600               	xorwf	0,w
  7193  068C  1903               	btfsc	3,2
  7194  068D  2E95               	goto	l5368
  7195  068E  085B               	movf	date_setting@i,w
  7196  068F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7197  0690  0084               	movwf	4
  7198  0691  3019               	movlw	25
  7199  0692  0600               	xorwf	0,w
  7200  0693  1D03               	btfss	3,2
  7201  0694  2EB3               	goto	l5384
  7202  0695                     l5368:	
  7203                           
  7204                           ;clock_source.c: 542:                             for (int j=0; j<7; j++){
  7205  0695  01D3               	clrf	date_setting@j_242
  7206  0696  01D4               	clrf	date_setting@j_242+1
  7207  0697                     l5370:	
  7208  0697  0854               	movf	date_setting@j_242+1,w
  7209  0698  3A80               	xorlw	128
  7210  0699  00FF               	movwf	127
  7211  069A  3080               	movlw	128
  7212  069B  027F               	subwf	127,w
  7213  069C  1D03               	skipz
  7214  069D  2EA0               	goto	u5325
  7215  069E  3007               	movlw	7
  7216  069F  0253               	subwf	date_setting@j_242,w
  7217  06A0                     u5325:	
  7218  06A0  1803               	btfsc	3,0
  7219  06A1  2DB6               	goto	l5280
  7220                           
  7221                           ;clock_source.c: 543:                                 table[i]++;
  7222  06A2  3001               	movlw	1
  7223  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  7224  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  7225  06A5  00CA               	movwf	??_date_setting
  7226  06A6  085B               	movf	date_setting@i,w
  7227  06A7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7228  06A8  0084               	movwf	4
  7229  06A9  084A               	movf	??_date_setting,w
  7230  06AA  1383               	bcf	3,7	;select IRP bank0
  7231  06AB  0780               	addwf	0,f
  7232                           
  7233                           ;clock_source.c: 544:                             }
  7234  06AC  3001               	movlw	1
  7235  06AD  07D3               	addwf	date_setting@j_242,f
  7236  06AE  1803               	skipnc
  7237  06AF  0AD4               	incf	date_setting@j_242+1,f
  7238  06B0  3000               	movlw	0
  7239  06B1  07D4               	addwf	date_setting@j_242+1,f
  7240  06B2  2E97               	goto	l5370
  7241  06B3                     l5384:	
  7242  06B3  085B               	movf	date_setting@i,w
  7243  06B4  3E5D               	addlw	(low (_table| 0))& (0+255)
  7244  06B5  0084               	movwf	4
  7245  06B6  3028               	movlw	40
  7246  06B7  2E57               	goto	L6
  7247  06B8                     l5394:	
  7248  06B8  085B               	movf	date_setting@i,w
  7249  06B9  3E5D               	addlw	(low (_table| 0))& (0+255)
  7250  06BA  0084               	movwf	4
  7251  06BB  3031               	movlw	49
  7252  06BC  1383               	bcf	3,7	;select IRP bank0
  7253  06BD  0600               	xorwf	0,w
  7254  06BE  1903               	btfsc	3,2
  7255  06BF  2C5B               	goto	l5166
  7256                           
  7257                           ;clock_source.c: 560:                     if (table[i] == 0x09 || table[i] == 0x19 || ta
      +                          ble[i] == 0x29){
  7258  06C0  085B               	movf	date_setting@i,w
  7259  06C1  3E5D               	addlw	(low (_table| 0))& (0+255)
  7260  06C2  0084               	movwf	4
  7261  06C3  3009               	movlw	9
  7262  06C4  0600               	xorwf	0,w
  7263  06C5  1903               	btfsc	3,2
  7264  06C6  2ED5               	goto	l5402
  7265  06C7  085B               	movf	date_setting@i,w
  7266  06C8  3E5D               	addlw	(low (_table| 0))& (0+255)
  7267  06C9  0084               	movwf	4
  7268  06CA  3019               	movlw	25
  7269  06CB  0600               	xorwf	0,w
  7270  06CC  1903               	btfsc	3,2
  7271  06CD  2ED5               	goto	l5402
  7272  06CE  085B               	movf	date_setting@i,w
  7273  06CF  3E5D               	addlw	(low (_table| 0))& (0+255)
  7274  06D0  0084               	movwf	4
  7275  06D1  3029               	movlw	41
  7276  06D2  0600               	xorwf	0,w
  7277  06D3  1D03               	btfss	3,2
  7278  06D4  2E5A               	goto	l5342
  7279  06D5                     l5402:	
  7280                           
  7281                           ;clock_source.c: 561:                         for (int j=0; j<7; j++){
  7282  06D5  01D5               	clrf	date_setting@j_243
  7283  06D6  01D6               	clrf	date_setting@j_243+1
  7284  06D7                     l5404:	
  7285  06D7  0856               	movf	date_setting@j_243+1,w
  7286  06D8  3A80               	xorlw	128
  7287  06D9  00FF               	movwf	127
  7288  06DA  3080               	movlw	128
  7289  06DB  027F               	subwf	127,w
  7290  06DC  1D03               	skipz
  7291  06DD  2EE0               	goto	u5385
  7292  06DE  3007               	movlw	7
  7293  06DF  0255               	subwf	date_setting@j_243,w
  7294  06E0                     u5385:	
  7295  06E0  1803               	btfsc	3,0
  7296  06E1  2DB6               	goto	l5280
  7297                           
  7298                           ;clock_source.c: 562:                             table[i]++;
  7299  06E2  3001               	movlw	1
  7300  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  7301  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  7302  06E5  00CA               	movwf	??_date_setting
  7303  06E6  085B               	movf	date_setting@i,w
  7304  06E7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7305  06E8  0084               	movwf	4
  7306  06E9  084A               	movf	??_date_setting,w
  7307  06EA  1383               	bcf	3,7	;select IRP bank0
  7308  06EB  0780               	addwf	0,f
  7309                           
  7310                           ;clock_source.c: 563:                         }
  7311  06EC  3001               	movlw	1
  7312  06ED  07D5               	addwf	date_setting@j_243,f
  7313  06EE  1803               	skipnc
  7314  06EF  0AD6               	incf	date_setting@j_243+1,f
  7315  06F0  3000               	movlw	0
  7316  06F1  07D6               	addwf	date_setting@j_243+1,f
  7317  06F2  2ED7               	goto	l5404
  7318  06F3                     l5426:	
  7319  06F3  3005               	movlw	5
  7320  06F4  065B               	xorwf	date_setting@i,w
  7321  06F5  045C               	iorwf	date_setting@i+1,w
  7322  06F6  1D03               	btfss	3,2
  7323  06F7  2F19               	goto	l5440
  7324                           
  7325                           ;clock_source.c: 580:                 if (wkd != 7){
  7326  06F8  3007               	movlw	7
  7327  06F9  0640               	xorwf	_wkd,w
  7328  06FA  1903               	btfsc	3,2
  7329  06FB  2C5B               	goto	l5166
  7330                           
  7331                           ;clock_source.c: 581:                     wkd++;
  7332  06FC  3001               	movlw	1
  7333  06FD  00CA               	movwf	??_date_setting
  7334  06FE  084A               	movf	??_date_setting,w
  7335  06FF  07C0               	addwf	_wkd,f
  7336                           
  7337                           ;clock_source.c: 582:                     writecmd_4line(0x8B);
  7338  0700  308B               	movlw	139
  7339  0701  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  7340                           
  7341                           ;clock_source.c: 583:                     week(wkd);
  7342  0706  0840               	movf	_wkd,w
  7343  0707  00CA               	movwf	??_date_setting
  7344  0708  01CB               	clrf	??_date_setting+1
  7345  0709  084A               	movf	??_date_setting,w
  7346  070A  00FC               	movwf	week@w
  7347  070B  084B               	movf	??_date_setting+1,w
  7348  070C  00FD               	movwf	week@w+1
  7349  070D  120A  118A  2011  120A  118A  	fcall	_week
  7350                           
  7351                           ;clock_source.c: 584:                     writecmd_4line(0x8B);
  7352  0712  308B               	movlw	139
  7353  0713  160A  158A  25CD  120A  118A  	fcall	_writecmd_4line
  7354  0718  2C5B               	goto	l5166
  7355  0719                     l5440:	
  7356  0719  3004               	movlw	4
  7357  071A  065B               	xorwf	date_setting@i,w
  7358  071B  045C               	iorwf	date_setting@i+1,w
  7359  071C  1D03               	btfss	3,2
  7360  071D  2F5E               	goto	l5474
  7361                           
  7362                           ;clock_source.c: 591:                 D('m','1',i);
  7363  071E  306D               	movlw	109
  7364  071F  00C4               	movwf	D@D
  7365  0720  3000               	movlw	0
  7366  0721  00C5               	movwf	D@D+1
  7367  0722  3031               	movlw	49
  7368  0723  00C6               	movwf	D@C
  7369  0724  3000               	movlw	0
  7370  0725  00C7               	movwf	D@C+1
  7371  0726  085C               	movf	date_setting@i+1,w
  7372  0727  00C9               	movwf	D@i+1
  7373  0728  085B               	movf	date_setting@i,w
  7374  0729  00C8               	movwf	D@i
  7375  072A  160A  118A  241B  120A  118A  	fcall	_D
  7376                           
  7377                           ;clock_source.c: 592:                 if (table[i] != 0x12){
  7378  072F  1283               	bcf	3,5	;RP0=0, select bank0
  7379  0730  1303               	bcf	3,6	;RP1=0, select bank0
  7380  0731  085B               	movf	date_setting@i,w
  7381  0732  3E5D               	addlw	(low (_table| 0))& (0+255)
  7382  0733  0084               	movwf	4
  7383  0734  3012               	movlw	18
  7384  0735  1383               	bcf	3,7	;select IRP bank0
  7385  0736  0600               	xorwf	0,w
  7386  0737  1903               	btfsc	3,2
  7387  0738  2DB6               	goto	l5280
  7388                           
  7389                           ;clock_source.c: 593:                     if (table[i] == 9){
  7390  0739  085B               	movf	date_setting@i,w
  7391  073A  3E5D               	addlw	(low (_table| 0))& (0+255)
  7392  073B  0084               	movwf	4
  7393  073C  3009               	movlw	9
  7394  073D  0600               	xorwf	0,w
  7395  073E  1D03               	btfss	3,2
  7396  073F  2E5A               	goto	l5342
  7397                           
  7398                           ;clock_source.c: 594:                         for (int j=0; j<7; j++){
  7399  0740  01D7               	clrf	date_setting@j_244
  7400  0741  01D8               	clrf	date_setting@j_244+1
  7401  0742                     l5450:	
  7402  0742  0858               	movf	date_setting@j_244+1,w
  7403  0743  3A80               	xorlw	128
  7404  0744  00FF               	movwf	127
  7405  0745  3080               	movlw	128
  7406  0746  027F               	subwf	127,w
  7407  0747  1D03               	skipz
  7408  0748  2F4B               	goto	u5445
  7409  0749  3007               	movlw	7
  7410  074A  0257               	subwf	date_setting@j_244,w
  7411  074B                     u5445:	
  7412  074B  1803               	btfsc	3,0
  7413  074C  2DB6               	goto	l5280
  7414                           
  7415                           ;clock_source.c: 595:                             table[i]++;
  7416  074D  3001               	movlw	1
  7417  074E  1283               	bcf	3,5	;RP0=0, select bank0
  7418  074F  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0750  00CA               	movwf	??_date_setting
  7420  0751  085B               	movf	date_setting@i,w
  7421  0752  3E5D               	addlw	(low (_table| 0))& (0+255)
  7422  0753  0084               	movwf	4
  7423  0754  084A               	movf	??_date_setting,w
  7424  0755  1383               	bcf	3,7	;select IRP bank0
  7425  0756  0780               	addwf	0,f
  7426                           
  7427                           ;clock_source.c: 596:                         }
  7428  0757  3001               	movlw	1
  7429  0758  07D7               	addwf	date_setting@j_244,f
  7430  0759  1803               	skipnc
  7431  075A  0AD8               	incf	date_setting@j_244+1,f
  7432  075B  3000               	movlw	0
  7433  075C  07D8               	addwf	date_setting@j_244+1,f
  7434  075D  2F42               	goto	l5450
  7435  075E                     l5474:	
  7436  075E  3006               	movlw	6
  7437  075F  065B               	xorwf	date_setting@i,w
  7438  0760  045C               	iorwf	date_setting@i+1,w
  7439  0761  1D03               	btfss	3,2
  7440  0762  2C09               	goto	l5126
  7441                           
  7442                           ;clock_source.c: 614:                 D('0','1',i);
  7443  0763  3030               	movlw	48
  7444  0764  00C4               	movwf	D@D
  7445  0765  3000               	movlw	0
  7446  0766  00C5               	movwf	D@D+1
  7447  0767  3031               	movlw	49
  7448  0768  00C6               	movwf	D@C
  7449  0769  3000               	movlw	0
  7450  076A  00C7               	movwf	D@C+1
  7451  076B  085C               	movf	date_setting@i+1,w
  7452  076C  00C9               	movwf	D@i+1
  7453  076D  085B               	movf	date_setting@i,w
  7454  076E  00C8               	movwf	D@i
  7455  076F  160A  118A  241B  120A  118A  	fcall	_D
  7456                           
  7457                           ;clock_source.c: 615:                 if (table[i] != 0x99){
  7458  0774  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0775  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0776  085B               	movf	date_setting@i,w
  7461  0777  3E5D               	addlw	(low (_table| 0))& (0+255)
  7462  0778  0084               	movwf	4
  7463  0779  3099               	movlw	153
  7464  077A  1383               	bcf	3,7	;select IRP bank0
  7465  077B  0600               	xorwf	0,w
  7466  077C  1903               	btfsc	3,2
  7467  077D  2DB6               	goto	l5280
  7468                           
  7469                           ;clock_source.c: 616:                     if (table[i] == 0x9 || table[i] == 0x19
  7470  077E  085B               	movf	date_setting@i,w
  7471  077F  3E5D               	addlw	(low (_table| 0))& (0+255)
  7472  0780  0084               	movwf	4
  7473  0781  3009               	movlw	9
  7474  0782  0600               	xorwf	0,w
  7475  0783  1903               	btfsc	3,2
  7476  0784  2FBD               	goto	l5498
  7477  0785  085B               	movf	date_setting@i,w
  7478  0786  3E5D               	addlw	(low (_table| 0))& (0+255)
  7479  0787  0084               	movwf	4
  7480  0788  3019               	movlw	25
  7481  0789  0600               	xorwf	0,w
  7482  078A  1903               	btfsc	3,2
  7483  078B  2FBD               	goto	l5498
  7484  078C  085B               	movf	date_setting@i,w
  7485  078D  3E5D               	addlw	(low (_table| 0))& (0+255)
  7486  078E  0084               	movwf	4
  7487  078F  3029               	movlw	41
  7488  0790  0600               	xorwf	0,w
  7489  0791  1903               	btfsc	3,2
  7490  0792  2FBD               	goto	l5498
  7491  0793  085B               	movf	date_setting@i,w
  7492  0794  3E5D               	addlw	(low (_table| 0))& (0+255)
  7493  0795  0084               	movwf	4
  7494  0796  3039               	movlw	57
  7495  0797  0600               	xorwf	0,w
  7496  0798  1903               	btfsc	3,2
  7497  0799  2FBD               	goto	l5498
  7498  079A  085B               	movf	date_setting@i,w
  7499  079B  3E5D               	addlw	(low (_table| 0))& (0+255)
  7500  079C  0084               	movwf	4
  7501  079D  3049               	movlw	73
  7502  079E  0600               	xorwf	0,w
  7503  079F  1903               	btfsc	3,2
  7504  07A0  2FBD               	goto	l5498
  7505  07A1  085B               	movf	date_setting@i,w
  7506  07A2  3E5D               	addlw	(low (_table| 0))& (0+255)
  7507  07A3  0084               	movwf	4
  7508  07A4  3059               	movlw	89
  7509  07A5  0600               	xorwf	0,w
  7510  07A6  1903               	btfsc	3,2
  7511  07A7  2FBD               	goto	l5498
  7512  07A8  085B               	movf	date_setting@i,w
  7513  07A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  7514  07AA  0084               	movwf	4
  7515  07AB  3069               	movlw	105
  7516  07AC  0600               	xorwf	0,w
  7517  07AD  1903               	btfsc	3,2
  7518  07AE  2FBD               	goto	l5498
  7519  07AF  085B               	movf	date_setting@i,w
  7520  07B0  3E5D               	addlw	(low (_table| 0))& (0+255)
  7521  07B1  0084               	movwf	4
  7522  07B2  3079               	movlw	121
  7523  07B3  0600               	xorwf	0,w
  7524  07B4  1903               	btfsc	3,2
  7525  07B5  2FBD               	goto	l5498
  7526  07B6  085B               	movf	date_setting@i,w
  7527  07B7  3E5D               	addlw	(low (_table| 0))& (0+255)
  7528  07B8  0084               	movwf	4
  7529  07B9  3089               	movlw	137
  7530  07BA  0600               	xorwf	0,w
  7531  07BB  1D03               	btfss	3,2
  7532  07BC  2E5A               	goto	l5342
  7533  07BD                     l5498:	
  7534                           
  7535                           ;clock_source.c: 620:                         || table[i] == 0x89){;clock_source.c: 621:
      +                                                   for (int j=0; j<7; j++){
  7536  07BD  01D9               	clrf	date_setting@j_245
  7537  07BE  01DA               	clrf	date_setting@j_245+1
  7538  07BF                     l5500:	
  7539  07BF  085A               	movf	date_setting@j_245+1,w
  7540  07C0  3A80               	xorlw	128
  7541  07C1  00FF               	movwf	127
  7542  07C2  3080               	movlw	128
  7543  07C3  027F               	subwf	127,w
  7544  07C4  1D03               	skipz
  7545  07C5  2FC8               	goto	u5565
  7546  07C6  3007               	movlw	7
  7547  07C7  0259               	subwf	date_setting@j_245,w
  7548  07C8                     u5565:	
  7549  07C8  1803               	btfsc	3,0
  7550  07C9  2DB6               	goto	l5280
  7551                           
  7552                           ;clock_source.c: 622:                             table[i]++;
  7553  07CA  3001               	movlw	1
  7554  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  7555  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  7556  07CD  00CA               	movwf	??_date_setting
  7557  07CE  085B               	movf	date_setting@i,w
  7558  07CF  3E5D               	addlw	(low (_table| 0))& (0+255)
  7559  07D0  0084               	movwf	4
  7560  07D1  084A               	movf	??_date_setting,w
  7561  07D2  1383               	bcf	3,7	;select IRP bank0
  7562  07D3  0780               	addwf	0,f
  7563                           
  7564                           ;clock_source.c: 623:                         }
  7565  07D4  3001               	movlw	1
  7566  07D5  07D9               	addwf	date_setting@j_245,f
  7567  07D6  1803               	skipnc
  7568  07D7  0ADA               	incf	date_setting@j_245+1,f
  7569  07D8  3000               	movlw	0
  7570  07D9  07DA               	addwf	date_setting@j_245+1,f
  7571  07DA  2FBF               	goto	l5500
  7572  07DB                     __end_of_date_setting:	
  7573                           
  7574                           	psect	text29
  7575  0011                     __ptext29:	
  7576 ;; *************** function _week *****************
  7577 ;; Defined at:
  7578 ;;		line 8 in file "clock_source.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  w               2   12[COMMON] unsigned int 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 300/0
  7589 ;;		On exit  : 300/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7592 ;;      Params:         2       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0
  7595 ;;      Totals:         2       0       0       0       0
  7596 ;;Total ram usage:        2 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    3
  7599 ;; This function calls:
  7600 ;;		_write_str
  7601 ;; This function is called by:
  7602 ;;		_display_clock
  7603 ;;		_date_setting
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _week
  7609  0011                     _week:	
  7610                           
  7611                           ;clock_source.c: 9:     if (w == 1)
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _week: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7615  0011  037C               	decf	week@w,w
  7616  0012  047D               	iorwf	week@w+1,w
  7617  0013  1D03               	btfss	3,2
  7618  0014  281D               	goto	l3884
  7619                           
  7620                           ;clock_source.c: 10:         write_str("Mon");
  7621  0015  30EB               	movlw	low (STR_1| (0+32768))
  7622  0016  00F3               	movwf	write_str@array
  7623  0017  3090               	movlw	high (STR_1| (0+32768))
  7624  0018  00F4               	movwf	write_str@array+1
  7625  0019  160A  118A  2160   	fcall	_write_str
  7626  001C  0008               	return
  7627  001D                     l3884:	
  7628  001D  3002               	movlw	2
  7629  001E  067C               	xorwf	week@w,w
  7630  001F  047D               	iorwf	week@w+1,w
  7631  0020  1D03               	btfss	3,2
  7632  0021  282A               	goto	l3888
  7633                           
  7634                           ;clock_source.c: 12:         write_str("Tue");
  7635  0022  30E3               	movlw	low (STR_2| (0+32768))
  7636  0023  00F3               	movwf	write_str@array
  7637  0024  3090               	movlw	high (STR_2| (0+32768))
  7638  0025  00F4               	movwf	write_str@array+1
  7639  0026  160A  118A  2160   	fcall	_write_str
  7640  0029  0008               	return
  7641  002A                     l3888:	
  7642  002A  3003               	movlw	3
  7643  002B  067C               	xorwf	week@w,w
  7644  002C  047D               	iorwf	week@w+1,w
  7645  002D  1D03               	btfss	3,2
  7646  002E  2837               	goto	l3892
  7647                           
  7648                           ;clock_source.c: 14:         write_str("Wed");
  7649  002F  30DF               	movlw	low (STR_3| (0+32768))
  7650  0030  00F3               	movwf	write_str@array
  7651  0031  3090               	movlw	high (STR_3| (0+32768))
  7652  0032  00F4               	movwf	write_str@array+1
  7653  0033  160A  118A  2160   	fcall	_write_str
  7654  0036  0008               	return
  7655  0037                     l3892:	
  7656  0037  3004               	movlw	4
  7657  0038  067C               	xorwf	week@w,w
  7658  0039  047D               	iorwf	week@w+1,w
  7659  003A  1D03               	btfss	3,2
  7660  003B  2844               	goto	l3896
  7661                           
  7662                           ;clock_source.c: 16:         write_str("Thu");
  7663  003C  30F7               	movlw	low (STR_4| (0+32768))
  7664  003D  00F3               	movwf	write_str@array
  7665  003E  3090               	movlw	high (STR_4| (0+32768))
  7666  003F  00F4               	movwf	write_str@array+1
  7667  0040  160A  118A  2160   	fcall	_write_str
  7668  0043  0008               	return
  7669  0044                     l3896:	
  7670  0044  3005               	movlw	5
  7671  0045  067C               	xorwf	week@w,w
  7672  0046  047D               	iorwf	week@w+1,w
  7673  0047  1D03               	btfss	3,2
  7674  0048  2851               	goto	l3900
  7675                           
  7676                           ;clock_source.c: 18:         write_str("Fri");
  7677  0049  30E7               	movlw	low (STR_5| (0+32768))
  7678  004A  00F3               	movwf	write_str@array
  7679  004B  3090               	movlw	high (STR_5| (0+32768))
  7680  004C  00F4               	movwf	write_str@array+1
  7681  004D  160A  118A  2160   	fcall	_write_str
  7682  0050  0008               	return
  7683  0051                     l3900:	
  7684  0051  3006               	movlw	6
  7685  0052  067C               	xorwf	week@w,w
  7686  0053  047D               	iorwf	week@w+1,w
  7687  0054  1D03               	btfss	3,2
  7688  0055  285E               	goto	l3904
  7689                           
  7690                           ;clock_source.c: 20:         write_str("Sat");
  7691  0056  30F3               	movlw	low (STR_6| (0+32768))
  7692  0057  00F3               	movwf	write_str@array
  7693  0058  3090               	movlw	high (STR_6| (0+32768))
  7694  0059  00F4               	movwf	write_str@array+1
  7695  005A  160A  118A  2160   	fcall	_write_str
  7696  005D  0008               	return
  7697  005E                     l3904:	
  7698  005E  3007               	movlw	7
  7699  005F  067C               	xorwf	week@w,w
  7700  0060  047D               	iorwf	week@w+1,w
  7701  0061  1D03               	btfss	3,2
  7702  0062  0008               	return
  7703                           
  7704                           ;clock_source.c: 22:         write_str("Sun");
  7705  0063  30EF               	movlw	low (STR_7| (0+32768))
  7706  0064  00F3               	movwf	write_str@array
  7707  0065  3090               	movlw	high (STR_7| (0+32768))
  7708  0066  00F4               	movwf	write_str@array+1
  7709  0067  160A  118A  2160   	fcall	_write_str
  7710  006A  0008               	return
  7711  006B                     __end_of_week:	
  7712                           
  7713                           	psect	text30
  7714  172C                     __ptext30:	
  7715 ;; *************** function _start_date *****************
  7716 ;; Defined at:
  7717 ;;		line 189 in file "clock_source.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;		None
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  i               2    0[BANK0 ] int 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 300/0
  7728 ;;		On exit  : 300/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7731 ;;      Params:         0       0       0       0       0
  7732 ;;      Locals:         0       2       0       0       0
  7733 ;;      Temps:          2       0       0       0       0
  7734 ;;      Totals:         2       2       0       0       0
  7735 ;;Total ram usage:        4 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    3
  7738 ;; This function calls:
  7739 ;;		_write_str
  7740 ;;		_writechar
  7741 ;;		_writecmd_4line
  7742 ;; This function is called by:
  7743 ;;		_date_setting
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           
  7748                           ;psect for function _start_date
  7749  172C                     _start_date:	
  7750                           
  7751                           ;clock_source.c: 190:     int i;;clock_source.c: 193:     i=table[3]&0xf0;
  7752                           
  7753                           ;incstack = 0
  7754                           ; Regs used in _start_date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7755  172C  0860               	movf	_table+3,w
  7756  172D  39F0               	andlw	240
  7757  172E  00FC               	movwf	??_start_date
  7758  172F  01FD               	clrf	??_start_date+1
  7759  1730  087C               	movf	??_start_date,w
  7760  1731  00C4               	movwf	start_date@i
  7761  1732  087D               	movf	??_start_date+1,w
  7762  1733  00C5               	movwf	start_date@i+1
  7763                           
  7764                           ;clock_source.c: 194:     i=i>>4;
  7765  1734  0E44               	swapf	start_date@i,w
  7766  1735  390F               	andlw	15
  7767  1736  00C4               	movwf	start_date@i
  7768  1737  0E45               	swapf	start_date@i+1,w
  7769  1738  39F0               	andlw	240
  7770  1739  04C4               	iorwf	start_date@i,f
  7771  173A  0E45               	swapf	start_date@i+1,w
  7772  173B  390F               	andlw	15
  7773  173C  00C5               	movwf	start_date@i+1
  7774  173D  30F0               	movlw	240
  7775  173E  1DC5               	btfss	start_date@i+1,3
  7776  173F  3000               	movlw	0
  7777  1740  04C5               	iorwf	start_date@i+1,f
  7778                           
  7779                           ;clock_source.c: 195:     writechar(i + '0');
  7780  1741  0844               	movf	start_date@i,w
  7781  1742  3E30               	addlw	48
  7782  1743  160A  158A  25B1  160A  118A  	fcall	_writechar
  7783                           
  7784                           ;clock_source.c: 196:     i=i<<4;
  7785  1748  0845               	movf	start_date@i+1,w
  7786  1749  00FD               	movwf	??_start_date+1
  7787  174A  0844               	movf	start_date@i,w
  7788  174B  00FC               	movwf	??_start_date
  7789  174C  0EFC               	swapf	??_start_date,f
  7790  174D  0EFD               	swapf	??_start_date+1,f
  7791  174E  30F0               	movlw	240
  7792  174F  05FD               	andwf	??_start_date+1,f
  7793  1750  087C               	movf	??_start_date,w
  7794  1751  390F               	andlw	15
  7795  1752  04FD               	iorwf	??_start_date+1,f
  7796  1753  30F0               	movlw	240
  7797  1754  05FC               	andwf	??_start_date,f
  7798  1755  087C               	movf	??_start_date,w
  7799  1756  00C4               	movwf	start_date@i
  7800  1757  087D               	movf	??_start_date+1,w
  7801  1758  00C5               	movwf	start_date@i+1
  7802                           
  7803                           ;clock_source.c: 197:     i = table[3]&0x0f;
  7804  1759  0860               	movf	_table+3,w
  7805  175A  390F               	andlw	15
  7806  175B  00FC               	movwf	??_start_date
  7807  175C  01FD               	clrf	??_start_date+1
  7808  175D  087C               	movf	??_start_date,w
  7809  175E  00C4               	movwf	start_date@i
  7810  175F  087D               	movf	??_start_date+1,w
  7811  1760  00C5               	movwf	start_date@i+1
  7812                           
  7813                           ;clock_source.c: 198:     writechar(i + '0');
  7814  1761  0844               	movf	start_date@i,w
  7815  1762  3E30               	addlw	48
  7816  1763  160A  158A  25B1  160A  118A  	fcall	_writechar
  7817                           
  7818                           ;clock_source.c: 199:     write_str("/ ");
  7819  1768  30FF               	movlw	low (STR_15| (0+32768))
  7820  1769  00F3               	movwf	write_str@array
  7821  176A  3090               	movlw	high (STR_15| (0+32768))
  7822  176B  00F4               	movwf	write_str@array+1
  7823  176C  160A  118A  2160  160A  118A  	fcall	_write_str
  7824                           
  7825                           ;clock_source.c: 202:     i=table[4]&0xf0;
  7826  1771  0861               	movf	_table+4,w
  7827  1772  39F0               	andlw	240
  7828  1773  00FC               	movwf	??_start_date
  7829  1774  01FD               	clrf	??_start_date+1
  7830  1775  087C               	movf	??_start_date,w
  7831  1776  00C4               	movwf	start_date@i
  7832  1777  087D               	movf	??_start_date+1,w
  7833  1778  00C5               	movwf	start_date@i+1
  7834                           
  7835                           ;clock_source.c: 203:     i=i>>4;
  7836  1779  0E44               	swapf	start_date@i,w
  7837  177A  390F               	andlw	15
  7838  177B  00C4               	movwf	start_date@i
  7839  177C  0E45               	swapf	start_date@i+1,w
  7840  177D  39F0               	andlw	240
  7841  177E  04C4               	iorwf	start_date@i,f
  7842  177F  0E45               	swapf	start_date@i+1,w
  7843  1780  390F               	andlw	15
  7844  1781  00C5               	movwf	start_date@i+1
  7845  1782  30F0               	movlw	240
  7846  1783  1DC5               	btfss	start_date@i+1,3
  7847  1784  3000               	movlw	0
  7848  1785  04C5               	iorwf	start_date@i+1,f
  7849                           
  7850                           ;clock_source.c: 204:     writechar(i + '0');
  7851  1786  0844               	movf	start_date@i,w
  7852  1787  3E30               	addlw	48
  7853  1788  160A  158A  25B1  160A  118A  	fcall	_writechar
  7854                           
  7855                           ;clock_source.c: 205:     i=i<<4;
  7856  178D  0845               	movf	start_date@i+1,w
  7857  178E  00FD               	movwf	??_start_date+1
  7858  178F  0844               	movf	start_date@i,w
  7859  1790  00FC               	movwf	??_start_date
  7860  1791  0EFC               	swapf	??_start_date,f
  7861  1792  0EFD               	swapf	??_start_date+1,f
  7862  1793  30F0               	movlw	240
  7863  1794  05FD               	andwf	??_start_date+1,f
  7864  1795  087C               	movf	??_start_date,w
  7865  1796  390F               	andlw	15
  7866  1797  04FD               	iorwf	??_start_date+1,f
  7867  1798  30F0               	movlw	240
  7868  1799  05FC               	andwf	??_start_date,f
  7869  179A  087C               	movf	??_start_date,w
  7870  179B  00C4               	movwf	start_date@i
  7871  179C  087D               	movf	??_start_date+1,w
  7872  179D  00C5               	movwf	start_date@i+1
  7873                           
  7874                           ;clock_source.c: 206:     i = table[4]&0x0f;
  7875  179E  0861               	movf	_table+4,w
  7876  179F  390F               	andlw	15
  7877  17A0  00FC               	movwf	??_start_date
  7878  17A1  01FD               	clrf	??_start_date+1
  7879  17A2  087C               	movf	??_start_date,w
  7880  17A3  00C4               	movwf	start_date@i
  7881  17A4  087D               	movf	??_start_date+1,w
  7882  17A5  00C5               	movwf	start_date@i+1
  7883                           
  7884                           ;clock_source.c: 207:     writechar(i + '0');
  7885  17A6  0844               	movf	start_date@i,w
  7886  17A7  3E30               	addlw	48
  7887  17A8  160A  158A  25B1  160A  118A  	fcall	_writechar
  7888                           
  7889                           ;clock_source.c: 208:     write_str("/ ");
  7890  17AD  30FF               	movlw	low (STR_15| (0+32768))
  7891  17AE  00F3               	movwf	write_str@array
  7892  17AF  3090               	movlw	high (STR_15| (0+32768))
  7893  17B0  00F4               	movwf	write_str@array+1
  7894  17B1  160A  118A  2160  160A  118A  	fcall	_write_str
  7895                           
  7896                           ;clock_source.c: 211:     i=table[6]&0xf0;
  7897  17B6  0863               	movf	_table+6,w
  7898  17B7  39F0               	andlw	240
  7899  17B8  00FC               	movwf	??_start_date
  7900  17B9  01FD               	clrf	??_start_date+1
  7901  17BA  087C               	movf	??_start_date,w
  7902  17BB  00C4               	movwf	start_date@i
  7903  17BC  087D               	movf	??_start_date+1,w
  7904  17BD  00C5               	movwf	start_date@i+1
  7905                           
  7906                           ;clock_source.c: 212:     i=i>>4;
  7907  17BE  0E44               	swapf	start_date@i,w
  7908  17BF  390F               	andlw	15
  7909  17C0  00C4               	movwf	start_date@i
  7910  17C1  0E45               	swapf	start_date@i+1,w
  7911  17C2  39F0               	andlw	240
  7912  17C3  04C4               	iorwf	start_date@i,f
  7913  17C4  0E45               	swapf	start_date@i+1,w
  7914  17C5  390F               	andlw	15
  7915  17C6  00C5               	movwf	start_date@i+1
  7916  17C7  30F0               	movlw	240
  7917  17C8  1DC5               	btfss	start_date@i+1,3
  7918  17C9  3000               	movlw	0
  7919  17CA  04C5               	iorwf	start_date@i+1,f
  7920                           
  7921                           ;clock_source.c: 213:     writechar(i + '0');
  7922  17CB  0844               	movf	start_date@i,w
  7923  17CC  3E30               	addlw	48
  7924  17CD  160A  158A  25B1  160A  118A  	fcall	_writechar
  7925                           
  7926                           ;clock_source.c: 214:     i=i<<4;
  7927  17D2  0845               	movf	start_date@i+1,w
  7928  17D3  00FD               	movwf	??_start_date+1
  7929  17D4  0844               	movf	start_date@i,w
  7930  17D5  00FC               	movwf	??_start_date
  7931  17D6  0EFC               	swapf	??_start_date,f
  7932  17D7  0EFD               	swapf	??_start_date+1,f
  7933  17D8  30F0               	movlw	240
  7934  17D9  05FD               	andwf	??_start_date+1,f
  7935  17DA  087C               	movf	??_start_date,w
  7936  17DB  390F               	andlw	15
  7937  17DC  04FD               	iorwf	??_start_date+1,f
  7938  17DD  30F0               	movlw	240
  7939  17DE  05FC               	andwf	??_start_date,f
  7940  17DF  087C               	movf	??_start_date,w
  7941  17E0  00C4               	movwf	start_date@i
  7942  17E1  087D               	movf	??_start_date+1,w
  7943  17E2  00C5               	movwf	start_date@i+1
  7944                           
  7945                           ;clock_source.c: 215:     i = table[6]&0x0f;
  7946  17E3  0863               	movf	_table+6,w
  7947  17E4  390F               	andlw	15
  7948  17E5  00FC               	movwf	??_start_date
  7949  17E6  01FD               	clrf	??_start_date+1
  7950  17E7  087C               	movf	??_start_date,w
  7951  17E8  00C4               	movwf	start_date@i
  7952  17E9  087D               	movf	??_start_date+1,w
  7953  17EA  00C5               	movwf	start_date@i+1
  7954                           
  7955                           ;clock_source.c: 216:     writechar(i + '0');
  7956  17EB  0844               	movf	start_date@i,w
  7957  17EC  3E30               	addlw	48
  7958  17ED  160A  158A  25B1  160A  118A  	fcall	_writechar
  7959                           
  7960                           ;clock_source.c: 219:     writecmd_4line(0x88);
  7961  17F2  3088               	movlw	136
  7962  17F3  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  7963                           
  7964                           ;clock_source.c: 220:     write_str("Week: ");
  7965  17F8  307E               	movlw	low (STR_17| (0+32768))
  7966  17F9  00F3               	movwf	write_str@array
  7967  17FA  3090               	movlw	high (STR_17| (0+32768))
  7968  17FB  00F4               	movwf	write_str@array+1
  7969  17FC  160A  118A  2160   	fcall	_write_str
  7970  17FF  0008               	return
  7971  1800                     __end_of_start_date:	
  7972                           
  7973                           	psect	text31
  7974  1D2D                     __ptext31:	
  7975 ;; *************** function ___bmul *****************
  7976 ;; Defined at:
  7977 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  multiplier      1    wreg     unsigned char 
  7980 ;;  multiplicand    1    0[COMMON] unsigned char 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  multiplier      1    3[COMMON] unsigned char 
  7983 ;;  product         1    2[COMMON] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      unsigned char 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 300/0
  7990 ;;		On exit  : 300/0
  7991 ;;		Unchanged: 300/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7993 ;;      Params:         1       0       0       0       0
  7994 ;;      Locals:         2       0       0       0       0
  7995 ;;      Temps:          1       0       0       0       0
  7996 ;;      Totals:         4       0       0       0       0
  7997 ;;Total ram usage:        4 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_date_setting
  8003 ;;		_temp_check_lower
  8004 ;;		_temp_check_rise
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function ___bmul
  8010  1D2D                     ___bmul:	
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8014                           ;___bmul@multiplier stored from wreg
  8015  1D2D  00F3               	movwf	___bmul@multiplier
  8016  1D2E  01F2               	clrf	___bmul@product
  8017  1D2F                     l3666:	
  8018  1D2F  1C73               	btfss	___bmul@multiplier,0
  8019  1D30  2D35               	goto	l3670
  8020  1D31  0870               	movf	___bmul@multiplicand,w
  8021  1D32  00F1               	movwf	??___bmul
  8022  1D33  0871               	movf	??___bmul,w
  8023  1D34  07F2               	addwf	___bmul@product,f
  8024  1D35                     l3670:	
  8025  1D35  1003               	clrc
  8026  1D36  0DF0               	rlf	___bmul@multiplicand,f
  8027  1D37  1003               	clrc
  8028  1D38  0CF3               	rrf	___bmul@multiplier,f
  8029  1D39  0873               	movf	___bmul@multiplier,w
  8030  1D3A  1D03               	btfss	3,2
  8031  1D3B  2D2F               	goto	l3666
  8032  1D3C  0872               	movf	___bmul@product,w
  8033  1D3D  0008               	return
  8034  1D3E                     __end_of___bmul:	
  8035                           
  8036                           	psect	text32
  8037  141B                     __ptext32:	
  8038 ;; *************** function _D *****************
  8039 ;; Defined at:
  8040 ;;		line 642 in file "clock_source.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  D               2    0[BANK0 ] PTR unsigned char 
  8043 ;;		 -> RAM(512), RAM(512), RAM(512), RAM(512), 
  8044 ;;		 -> RAM(512), 
  8045 ;;  C               2    2[BANK0 ] PTR unsigned char 
  8046 ;;		 -> RAM(512), RAM(512), RAM(512), 
  8047 ;;  i               2    4[BANK0 ] unsigned int 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  j               2   12[COMMON] int 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 300/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8059 ;;      Params:         0       6       0       0       0
  8060 ;;      Locals:         2       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0
  8062 ;;      Totals:         2       6       0       0       0
  8063 ;;Total ram usage:        8 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    3
  8066 ;; This function calls:
  8067 ;;		_delay_main
  8068 ;;		_display_val
  8069 ;;		_write_str
  8070 ;;		_writecmd_4line
  8071 ;; This function is called by:
  8072 ;;		_date_setting
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           
  8077                           ;psect for function _D
  8078  141B                     _D:	
  8079                           
  8080                           ;clock_source.c: 644:     if (C == '0'){
  8081                           
  8082                           ;incstack = 0
  8083                           ; Regs used in _D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8084  141B  3030               	movlw	48
  8085  141C  0646               	xorwf	D@C,w
  8086  141D  0447               	iorwf	D@C+1,w
  8087  141E  1D03               	btfss	3,2
  8088  141F  2C7C               	goto	l4238
  8089                           
  8090                           ;clock_source.c: 645:         writecmd_4line(0x98);
  8091  1420  3098               	movlw	152
  8092  1421  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  8093                           
  8094                           ;clock_source.c: 646:         write_str("                ");
  8095  1426  3000               	movlw	low (STR_22| (0+32768))
  8096  1427  00F3               	movwf	write_str@array
  8097  1428  3090               	movlw	high (STR_22| (0+32768))
  8098  1429  00F4               	movwf	write_str@array+1
  8099  142A  160A  118A  2160  160A  118A  	fcall	_write_str
  8100                           
  8101                           ;clock_source.c: 647:         writecmd_4line(0x98);
  8102  142F  3098               	movlw	152
  8103  1430  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  8104                           
  8105                           ;clock_source.c: 649:         if (D == 'd'){
  8106  1435  3064               	movlw	100
  8107  1436  0644               	xorwf	D@D,w
  8108  1437  0445               	iorwf	D@D+1,w
  8109  1438  1D03               	btfss	3,2
  8110  1439  2C50               	goto	l4224
  8111                           
  8112                           ;clock_source.c: 650:             write_str("Day");
  8113  143A  30FB               	movlw	low (STR_33| (0+32768))
  8114  143B  00F3               	movwf	write_str@array
  8115  143C  3090               	movlw	high (STR_33| (0+32768))
  8116  143D  00F4               	movwf	write_str@array+1
  8117  143E  160A  118A  2160  160A  118A  	fcall	_write_str
  8118                           
  8119                           ;clock_source.c: 651:             if (C == '0'){
  8120  1443  3030               	movlw	48
  8121  1444  0646               	xorwf	D@C,w
  8122  1445  0447               	iorwf	D@C+1,w
  8123  1446  1D03               	btfss	3,2
  8124  1447  2C7C               	goto	l4238
  8125                           
  8126                           ;clock_source.c: 652:                 display_val(i);
  8127  1448  0849               	movf	D@i+1,w
  8128  1449  00F4               	movwf	display_val@i+1
  8129  144A  0848               	movf	D@i,w
  8130  144B  00F3               	movwf	display_val@i
  8131  144C  120A  158A  200E   	fcall	_display_val
  8132  144F  0008               	return
  8133  1450                     l4224:	
  8134  1450  306D               	movlw	109
  8135  1451  0644               	xorwf	D@D,w
  8136  1452  0445               	iorwf	D@D+1,w
  8137  1453  1D03               	btfss	3,2
  8138  1454  2C59               	goto	l4228
  8139                           
  8140                           ;clock_source.c: 657:             write_str("Month");
  8141  1455  30B6               	movlw	low (STR_34| (0+32768))
  8142  1456  00F3               	movwf	write_str@array
  8143  1457  3090               	movlw	high (STR_34| (0+32768))
  8144  1458  2C76               	goto	L9
  8145  1459                     l4228:	
  8146                           ;clock_source.c: 658:         }
  8147                           
  8148  1459  3077               	movlw	119
  8149  145A  0644               	xorwf	D@D,w
  8150  145B  0445               	iorwf	D@D+1,w
  8151  145C  1D03               	btfss	3,2
  8152  145D  2C6E               	goto	l4234
  8153                           
  8154                           ;clock_source.c: 660:             write_str("Week");
  8155  145E  30D0               	movlw	low (STR_35| (0+32768))
  8156  145F  00F3               	movwf	write_str@array
  8157  1460  3090               	movlw	high (STR_35| (0+32768))
  8158  1461  00F4               	movwf	write_str@array+1
  8159  1462  160A  118A  2160  160A  118A  	fcall	_write_str
  8160                           
  8161                           ;clock_source.c: 661:             writecmd_4line(0x8B);
  8162  1467  308B               	movlw	139
  8163  1468  160A  158A  25CD  160A  118A  	fcall	_writecmd_4line
  8164                           
  8165                           ;clock_source.c: 662:         }
  8166  146D  2C7C               	goto	l4238
  8167  146E                     l4234:	
  8168  146E  3079               	movlw	121
  8169  146F  0644               	xorwf	D@D,w
  8170  1470  0445               	iorwf	D@D+1,w
  8171  1471  1D03               	btfss	3,2
  8172  1472  2C7C               	goto	l4238
  8173                           
  8174                           ;clock_source.c: 664:             write_str("Year");
  8175  1473  30D5               	movlw	low (STR_36| (0+32768))
  8176  1474  00F3               	movwf	write_str@array
  8177  1475  3090               	movlw	high (STR_36| (0+32768))
  8178  1476                     L9:	
  8179  1476  00F4               	movwf	write_str@array+1
  8180  1477  160A  118A  2160  160A  118A  	fcall	_write_str
  8181  147C                     l4238:	
  8182                           
  8183                           ;clock_source.c: 669:     if (D == 'd' || D == 'm' && C == 'd'){
  8184  147C  3064               	movlw	100
  8185  147D  0644               	xorwf	D@D,w
  8186  147E  0445               	iorwf	D@D+1,w
  8187  147F  1903               	btfsc	3,2
  8188  1480  2C8B               	goto	l4244
  8189  1481  306D               	movlw	109
  8190  1482  0644               	xorwf	D@D,w
  8191  1483  0445               	iorwf	D@D+1,w
  8192  1484  1D03               	btfss	3,2
  8193  1485  0008               	return
  8194  1486  3064               	movlw	100
  8195  1487  0646               	xorwf	D@C,w
  8196  1488  0447               	iorwf	D@C+1,w
  8197  1489  1D03               	btfss	3,2
  8198  148A  0008               	return
  8199  148B                     l4244:	
  8200                           
  8201                           ;clock_source.c: 670:         if (table[i] != 0x01){
  8202  148B  0848               	movf	D@i,w
  8203  148C  3E5D               	addlw	(low (_table| 0))& (0+255)
  8204  148D  0084               	movwf	4
  8205  148E  1383               	bcf	3,7	;select IRP bank0
  8206  148F  0300               	decf	0,w
  8207  1490  1903               	btfsc	3,2
  8208  1491  2CC2               	goto	l4264
  8209                           
  8210                           ;clock_source.c: 671:             if (table[i] == 0x10 || table[i] == 0x20 || table[i] =
      +                          = 0x30){
  8211  1492  0848               	movf	D@i,w
  8212  1493  3E5D               	addlw	(low (_table| 0))& (0+255)
  8213  1494  0084               	movwf	4
  8214  1495  3010               	movlw	16
  8215  1496  0600               	xorwf	0,w
  8216  1497  1903               	btfsc	3,2
  8217  1498  2CA7               	goto	l4252
  8218  1499  0848               	movf	D@i,w
  8219  149A  3E5D               	addlw	(low (_table| 0))& (0+255)
  8220  149B  0084               	movwf	4
  8221  149C  3020               	movlw	32
  8222  149D  0600               	xorwf	0,w
  8223  149E  1903               	btfsc	3,2
  8224  149F  2CA7               	goto	l4252
  8225  14A0  0848               	movf	D@i,w
  8226  14A1  3E5D               	addlw	(low (_table| 0))& (0+255)
  8227  14A2  0084               	movwf	4
  8228  14A3  3030               	movlw	48
  8229  14A4  0600               	xorwf	0,w
  8230  14A5  1D03               	btfss	3,2
  8231  14A6  2CD1               	goto	l4268
  8232  14A7                     l4252:	
  8233                           
  8234                           ;clock_source.c: 672:                 for (int j=0; j<7; j++){
  8235  14A7  01FC               	clrf	D@j
  8236  14A8  01FD               	clrf	D@j+1
  8237  14A9                     l4258:	
  8238                           
  8239                           ;clock_source.c: 673:                     table[i]--;
  8240  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  8241  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  8242  14AB  0848               	movf	D@i,w
  8243  14AC  3E5D               	addlw	(low (_table| 0))& (0+255)
  8244  14AD  0084               	movwf	4
  8245  14AE  3001               	movlw	1
  8246  14AF  1383               	bcf	3,7	;select IRP bank0
  8247  14B0  0280               	subwf	0,f
  8248                           
  8249                           ;clock_source.c: 674:                 }
  8250  14B1  3001               	movlw	1
  8251  14B2  07FC               	addwf	D@j,f
  8252  14B3  1803               	skipnc
  8253  14B4  0AFD               	incf	D@j+1,f
  8254  14B5  3000               	movlw	0
  8255  14B6  07FD               	addwf	D@j+1,f
  8256  14B7  087D               	movf	D@j+1,w
  8257  14B8  3A80               	xorlw	128
  8258  14B9  00FF               	movwf	127
  8259  14BA  3080               	movlw	128
  8260  14BB  027F               	subwf	127,w
  8261  14BC  1D03               	skipz
  8262  14BD  2CC0               	goto	u3985
  8263  14BE  3007               	movlw	7
  8264  14BF  027C               	subwf	D@j,w
  8265  14C0                     u3985:	
  8266  14C0  1C03               	skipc
  8267  14C1  2CA9               	goto	l4258
  8268  14C2                     l4264:	
  8269                           
  8270                           ;clock_source.c: 675:                 display_val(i);
  8271  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  8272  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  8273  14C4  0849               	movf	D@i+1,w
  8274  14C5  00F4               	movwf	display_val@i+1
  8275  14C6  0848               	movf	D@i,w
  8276  14C7  00F3               	movwf	display_val@i
  8277  14C8  120A  158A  200E  160A  118A  	fcall	_display_val
  8278                           
  8279                           ;clock_source.c: 676:                 delay_main();
  8280  14CD  160A  158A  2571   	fcall	_delay_main
  8281                           
  8282                           ;clock_source.c: 677:             }
  8283  14D0  0008               	return
  8284  14D1                     l4268:	
  8285                           
  8286                           ;clock_source.c: 679:                 table[i]--;
  8287  14D1  0848               	movf	D@i,w
  8288  14D2  3E5D               	addlw	(low (_table| 0))& (0+255)
  8289  14D3  0084               	movwf	4
  8290  14D4  3001               	movlw	1
  8291  14D5  0280               	subwf	0,f
  8292  14D6  2CC2               	goto	l4264
  8293  14D7                     __end_of_D:	
  8294                           
  8295                           	psect	text33
  8296  0A01                     __ptext33:	
  8297 ;; *************** function _clock_setting *****************
  8298 ;; Defined at:
  8299 ;;		line 252 in file "clock_source.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  i               2   12[BANK0 ] int 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 300/0
  8310 ;;		On exit  : 300/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8313 ;;      Params:         0       0       0       0       0
  8314 ;;      Locals:         0       2       0       0       0
  8315 ;;      Temps:          0       0       0       0       0
  8316 ;;      Totals:         0       2       0       0       0
  8317 ;;Total ram usage:        2 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    4
  8320 ;; This function calls:
  8321 ;;		_OutputPins
  8322 ;;		_T
  8323 ;;		_button_reset
  8324 ;;		_delay_main
  8325 ;;		_set_time_date
  8326 ;;		_start_time
  8327 ;;		_write_str
  8328 ;;		_writecmd_4line
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _clock_setting
  8336  0A01                     _clock_setting:	
  8337                           
  8338                           ;clock_source.c: 253:     writecmd_4line(0x1);
  8339                           
  8340                           ;incstack = 0
  8341                           ; Regs used in _clock_setting: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8342  0A01  3001               	movlw	1
  8343  0A02  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8344                           
  8345                           ;clock_source.c: 254:     writecmd_4line(0x80);
  8346  0A07  3080               	movlw	128
  8347  0A08  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8348                           
  8349                           ;clock_source.c: 255:     write_str("Time Settings");
  8350  0A0D  304D               	movlw	low (STR_20| (0+32768))
  8351  0A0E  00F3               	movwf	write_str@array
  8352  0A0F  3090               	movlw	high (STR_20| (0+32768))
  8353  0A10  00F4               	movwf	write_str@array+1
  8354  0A11  160A  118A  2160  120A  158A  	fcall	_write_str
  8355                           
  8356                           ;clock_source.c: 256:     writecmd_4line(0x90);
  8357  0A16  3090               	movlw	144
  8358  0A17  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8359                           
  8360                           ;clock_source.c: 257:     start_time();
  8361  0A1C  160A  118A  24D7  120A  158A  	fcall	_start_time
  8362                           
  8363                           ;clock_source.c: 258:     writecmd_4line(0x88);
  8364  0A21  3088               	movlw	136
  8365  0A22  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8366                           
  8367                           ;clock_source.c: 259:     write_str("Change time...");
  8368  0A27  302F               	movlw	low (STR_21| (0+32768))
  8369  0A28  00F3               	movwf	write_str@array
  8370  0A29  3090               	movlw	high (STR_21| (0+32768))
  8371  0A2A  00F4               	movwf	write_str@array+1
  8372  0A2B  160A  118A  2160  120A  158A  	fcall	_write_str
  8373                           
  8374                           ;clock_source.c: 260:     int i=0;
  8375  0A30  01D0               	clrf	clock_setting@i
  8376  0A31  01D1               	clrf	clock_setting@i+1
  8377  0A32                     l4988:	
  8378                           
  8379                           ;clock_source.c: 265:         if (OutputPins(),FirstRC == 2 && SecondRC == 1){
  8380  0A32  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8381  0A37  3002               	movlw	2
  8382  0A38  0642               	xorwf	_FirstRC,w
  8383  0A39  1903               	btfsc	3,2
  8384  0A3A  0343               	decf	_SecondRC,w
  8385  0A3B  1903               	btfsc	3,2
  8386  0A3C  0008               	return
  8387  0A3D  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8388  0A42  3002               	movlw	2
  8389  0A43  0642               	xorwf	_FirstRC,w
  8390  0A44  1D03               	btfss	3,2
  8391  0A45  2A4E               	goto	l5010
  8392  0A46  3002               	movlw	2
  8393  0A47  0643               	xorwf	_SecondRC,w
  8394  0A48  1D03               	btfss	3,2
  8395  0A49  2A4E               	goto	l5010
  8396                           
  8397                           ;clock_source.c: 269:             set_time_date();
  8398  0A4A  160A  158A  268F   	fcall	_set_time_date
  8399  0A4D  0008               	return
  8400  0A4E                     l5010:	
  8401  0A4E  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8402  0A53  3003               	movlw	3
  8403  0A54  0642               	xorwf	_FirstRC,w
  8404  0A55  1D03               	btfss	3,2
  8405  0A56  2AC8               	goto	l5042
  8406  0A57  0343               	decf	_SecondRC,w
  8407  0A58  1D03               	btfss	3,2
  8408  0A59  2AC8               	goto	l5042
  8409                           
  8410                           ;clock_source.c: 274:             button_reset();
  8411  0A5A  160A  158A  24F1  120A  158A  	fcall	_button_reset
  8412                           
  8413                           ;clock_source.c: 276:             if (i != 2){
  8414  0A5F  3002               	movlw	2
  8415  0A60  0650               	xorwf	clock_setting@i,w
  8416  0A61  0451               	iorwf	clock_setting@i+1,w
  8417  0A62  1903               	btfsc	3,2
  8418  0A63  2AA3               	goto	l5032
  8419                           
  8420                           ;clock_source.c: 277:                 i++;
  8421  0A64  3001               	movlw	1
  8422  0A65  07D0               	addwf	clock_setting@i,f
  8423  0A66  1803               	skipnc
  8424  0A67  0AD1               	incf	clock_setting@i+1,f
  8425  0A68  3000               	movlw	0
  8426  0A69                     L11:	
  8427  0A69  07D1               	addwf	clock_setting@i+1,f
  8428                           
  8429                           ;clock_source.c: 278:                 if (i == 1 ){
  8430  0A6A  0350               	decf	clock_setting@i,w
  8431  0A6B  0451               	iorwf	clock_setting@i+1,w
  8432  0A6C  1D03               	btfss	3,2
  8433  0A6D  2A32               	goto	l4988
  8434                           
  8435                           ;clock_source.c: 279:                     writecmd_4line(0x88);
  8436  0A6E  3088               	movlw	136
  8437  0A6F  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8438                           
  8439                           ;clock_source.c: 280:                     write_str("                ");
  8440  0A74  3000               	movlw	low (STR_22| (0+32768))
  8441  0A75  00F3               	movwf	write_str@array
  8442  0A76  3090               	movlw	high (STR_22| (0+32768))
  8443  0A77  00F4               	movwf	write_str@array+1
  8444  0A78  160A  118A  2160  120A  158A  	fcall	_write_str
  8445                           
  8446                           ;clock_source.c: 281:                     writecmd_4line(0x88);
  8447  0A7D  3088               	movlw	136
  8448  0A7E  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8449                           
  8450                           ;clock_source.c: 282:                     write_str("Minute");
  8451  0A83  3085               	movlw	low (STR_23| (0+32768))
  8452  0A84  00F3               	movwf	write_str@array
  8453  0A85  3090               	movlw	high (STR_23| (0+32768))
  8454  0A86  00F4               	movwf	write_str@array+1
  8455  0A87  160A  118A  2160  120A  158A  	fcall	_write_str
  8456                           
  8457                           ;clock_source.c: 283:                     T('m','0',i);
  8458  0A8C  306D               	movlw	109
  8459  0A8D                     L10:	
  8460  0A8D  00C4               	movwf	T@T
  8461  0A8E  3000               	movlw	0
  8462  0A8F  00C5               	movwf	T@T+1
  8463  0A90  3030               	movlw	48
  8464  0A91  00C6               	movwf	T@C
  8465  0A92  3000               	movlw	0
  8466  0A93  00C7               	movwf	T@C+1
  8467  0A94  0851               	movf	clock_setting@i+1,w
  8468  0A95  00C9               	movwf	T@i+1
  8469  0A96  0850               	movf	clock_setting@i,w
  8470  0A97  00C8               	movwf	T@i
  8471  0A98  120A  158A  20A3  120A  158A  	fcall	_T
  8472                           
  8473                           ;clock_source.c: 284:                     delay_main();
  8474  0A9D  160A  158A  2571  120A  158A  	fcall	_delay_main
  8475  0AA2  2A32               	goto	l4988
  8476  0AA3                     l5032:	
  8477  0AA3  3002               	movlw	2
  8478  0AA4  0650               	xorwf	clock_setting@i,w
  8479  0AA5  0451               	iorwf	clock_setting@i+1,w
  8480  0AA6  1D03               	btfss	3,2
  8481  0AA7  2A32               	goto	l4988
  8482                           
  8483                           ;clock_source.c: 288:                 writecmd_4line(0x88);
  8484  0AA8  3088               	movlw	136
  8485  0AA9  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8486                           
  8487                           ;clock_source.c: 289:                 write_str("                ");
  8488  0AAE  3000               	movlw	low (STR_22| (0+32768))
  8489  0AAF  00F3               	movwf	write_str@array
  8490  0AB0  3090               	movlw	high (STR_22| (0+32768))
  8491  0AB1  00F4               	movwf	write_str@array+1
  8492  0AB2  160A  118A  2160  120A  158A  	fcall	_write_str
  8493                           
  8494                           ;clock_source.c: 290:                 writecmd_4line(0x88);
  8495  0AB7  3088               	movlw	136
  8496  0AB8  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8497                           
  8498                           ;clock_source.c: 291:                 write_str("Hour");
  8499  0ABD  30DA               	movlw	low (STR_25| (0+32768))
  8500  0ABE  00F3               	movwf	write_str@array
  8501  0ABF  3090               	movlw	high (STR_25| (0+32768))
  8502  0AC0  00F4               	movwf	write_str@array+1
  8503  0AC1  160A  118A  2160  120A  158A  	fcall	_write_str
  8504                           
  8505                           ;clock_source.c: 292:                 T('h','0',i);
  8506  0AC6  3068               	movlw	104
  8507  0AC7  2A8D               	goto	L10
  8508  0AC8                     l5042:	
  8509  0AC8  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8510  0ACD  3004               	movlw	4
  8511  0ACE  0642               	xorwf	_FirstRC,w
  8512  0ACF  1D03               	btfss	3,2
  8513  0AD0  2B07               	goto	l5074
  8514  0AD1  0343               	decf	_SecondRC,w
  8515  0AD2  1D03               	btfss	3,2
  8516  0AD3  2B07               	goto	l5074
  8517                           
  8518                           ;clock_source.c: 298:             button_reset();
  8519  0AD4  160A  158A  24F1  120A  158A  	fcall	_button_reset
  8520                           
  8521                           ;clock_source.c: 300:             if (i != 0){
  8522  0AD9  0850               	movf	clock_setting@i,w
  8523  0ADA  0451               	iorwf	clock_setting@i+1,w
  8524  0ADB  1903               	btfsc	3,2
  8525  0ADC  2AE3               	goto	l5064
  8526                           
  8527                           ;clock_source.c: 301:                 i--;
  8528  0ADD  30FF               	movlw	255
  8529  0ADE  07D0               	addwf	clock_setting@i,f
  8530  0ADF  1803               	skipnc
  8531  0AE0  0AD1               	incf	clock_setting@i+1,f
  8532  0AE1  30FF               	movlw	255
  8533  0AE2  2A69               	goto	L11
  8534  0AE3                     l5064:	
  8535                           ;clock_source.c: 307:                     T('m','0',i);
  8536                           
  8537                           ;clock_source.c: 306:                     write_str("Minute");
  8538                           
  8539                           ;clock_source.c: 305:                     writecmd_4line(0x88);
  8540                           
  8541                           ;clock_source.c: 304:                     write_str("                ");
  8542                           
  8543                           ;clock_source.c: 303:                     writecmd_4line(0x88);
  8544                           
  8545                           ;clock_source.c: 302:                 if (i == 1){
  8546                           
  8547  0AE3  0850               	movf	clock_setting@i,w
  8548  0AE4  0451               	iorwf	clock_setting@i+1,w
  8549  0AE5  1D03               	btfss	3,2
  8550  0AE6  2A32               	goto	l4988
  8551                           
  8552                           ;clock_source.c: 312:                 writecmd_4line(0x88);
  8553  0AE7  3088               	movlw	136
  8554  0AE8  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8555                           
  8556                           ;clock_source.c: 313:                 write_str("                ");
  8557  0AED  3000               	movlw	low (STR_22| (0+32768))
  8558  0AEE  00F3               	movwf	write_str@array
  8559  0AEF  3090               	movlw	high (STR_22| (0+32768))
  8560  0AF0  00F4               	movwf	write_str@array+1
  8561  0AF1  160A  118A  2160  120A  158A  	fcall	_write_str
  8562                           
  8563                           ;clock_source.c: 314:                 writecmd_4line(0x88);
  8564  0AF6  3088               	movlw	136
  8565  0AF7  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  8566                           
  8567                           ;clock_source.c: 315:                 write_str("Seconds");
  8568  0AFC  3076               	movlw	low (STR_29| (0+32768))
  8569  0AFD  00F3               	movwf	write_str@array
  8570  0AFE  3090               	movlw	high (STR_29| (0+32768))
  8571  0AFF  00F4               	movwf	write_str@array+1
  8572  0B00  160A  118A  2160  120A  158A  	fcall	_write_str
  8573                           
  8574                           ;clock_source.c: 316:                 T('s','0',i);
  8575  0B05  3073               	movlw	115
  8576  0B06  2A8D               	goto	L10
  8577  0B07                     l5074:	
  8578                           ;clock_source.c: 319:         }
  8579                           
  8580  0B07  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8581  0B0C  3003               	movlw	3
  8582  0B0D  0642               	xorwf	_FirstRC,w
  8583  0B0E  1D03               	btfss	3,2
  8584  0B0F  2B5C               	goto	l5094
  8585  0B10  3002               	movlw	2
  8586  0B11  0643               	xorwf	_SecondRC,w
  8587  0B12  1D03               	btfss	3,2
  8588  0B13  2B5C               	goto	l5094
  8589                           
  8590                           ;clock_source.c: 323:             button_reset();
  8591  0B14  160A  158A  24F1  120A  158A  	fcall	_button_reset
  8592                           
  8593                           ;clock_source.c: 326:             if (i == 0){
  8594  0B19  0850               	movf	clock_setting@i,w
  8595  0B1A  0451               	iorwf	clock_setting@i+1,w
  8596  0B1B  1D03               	btfss	3,2
  8597  0B1C  2B2F               	goto	l5086
  8598                           
  8599                           ;clock_source.c: 327:                 T('s','d',i);
  8600  0B1D  3073               	movlw	115
  8601  0B1E  00C4               	movwf	T@T
  8602  0B1F  3000               	movlw	0
  8603  0B20  00C5               	movwf	T@T+1
  8604  0B21  3064               	movlw	100
  8605  0B22  00C6               	movwf	T@C
  8606  0B23  3000               	movlw	0
  8607  0B24  00C7               	movwf	T@C+1
  8608  0B25  0851               	movf	clock_setting@i+1,w
  8609  0B26  00C9               	movwf	T@i+1
  8610  0B27  0850               	movf	clock_setting@i,w
  8611  0B28  00C8               	movwf	T@i
  8612  0B29  120A  158A  20A3  120A  158A  	fcall	_T
  8613                           
  8614                           ;clock_source.c: 328:             }
  8615  0B2E  2A32               	goto	l4988
  8616  0B2F                     l5086:	
  8617  0B2F  0350               	decf	clock_setting@i,w
  8618  0B30  0451               	iorwf	clock_setting@i+1,w
  8619  0B31  1D03               	btfss	3,2
  8620  0B32  2B45               	goto	l5090
  8621                           
  8622                           ;clock_source.c: 332:                 T('m','d',i);
  8623  0B33  306D               	movlw	109
  8624  0B34  00C4               	movwf	T@T
  8625  0B35  3000               	movlw	0
  8626  0B36  00C5               	movwf	T@T+1
  8627  0B37  3064               	movlw	100
  8628  0B38  00C6               	movwf	T@C
  8629  0B39  3000               	movlw	0
  8630  0B3A  00C7               	movwf	T@C+1
  8631  0B3B  0851               	movf	clock_setting@i+1,w
  8632  0B3C  00C9               	movwf	T@i+1
  8633  0B3D  0850               	movf	clock_setting@i,w
  8634  0B3E  00C8               	movwf	T@i
  8635  0B3F  120A  158A  20A3  120A  158A  	fcall	_T
  8636                           
  8637                           ;clock_source.c: 333:             }
  8638  0B44  2A32               	goto	l4988
  8639  0B45                     l5090:	
  8640  0B45  3002               	movlw	2
  8641  0B46  0650               	xorwf	clock_setting@i,w
  8642  0B47  0451               	iorwf	clock_setting@i+1,w
  8643  0B48  1D03               	btfss	3,2
  8644  0B49  2A32               	goto	l4988
  8645                           
  8646                           ;clock_source.c: 337:                 T('h','d',i);
  8647  0B4A  3068               	movlw	104
  8648  0B4B  00C4               	movwf	T@T
  8649  0B4C  3000               	movlw	0
  8650  0B4D  00C5               	movwf	T@T+1
  8651  0B4E  3064               	movlw	100
  8652  0B4F  00C6               	movwf	T@C
  8653  0B50  3000               	movlw	0
  8654  0B51  00C7               	movwf	T@C+1
  8655  0B52  0851               	movf	clock_setting@i+1,w
  8656  0B53  00C9               	movwf	T@i+1
  8657  0B54  0850               	movf	clock_setting@i,w
  8658  0B55  00C8               	movwf	T@i
  8659  0B56  120A  158A  20A3  120A  158A  	fcall	_T
  8660  0B5B  2A32               	goto	l4988
  8661  0B5C                     l5094:	
  8662  0B5C  160A  118A  2260  120A  158A  	fcall	_OutputPins
  8663  0B61  3004               	movlw	4
  8664  0B62  0642               	xorwf	_FirstRC,w
  8665  0B63  1D03               	btfss	3,2
  8666  0B64  2A32               	goto	l4988
  8667  0B65  3002               	movlw	2
  8668  0B66  0643               	xorwf	_SecondRC,w
  8669  0B67  1D03               	btfss	3,2
  8670  0B68  2A32               	goto	l4988
  8671                           
  8672                           ;clock_source.c: 344:             button_reset();
  8673  0B69  160A  158A  24F1  120A  158A  	fcall	_button_reset
  8674                           
  8675                           ;clock_source.c: 347:             if (i == 0){
  8676  0B6E  0850               	movf	clock_setting@i,w
  8677  0B6F  0451               	iorwf	clock_setting@i+1,w
  8678  0B70  1D03               	btfss	3,2
  8679  0B71  2B84               	goto	l5106
  8680                           
  8681                           ;clock_source.c: 348:                 T('s','i',i);
  8682  0B72  3073               	movlw	115
  8683  0B73  00C4               	movwf	T@T
  8684  0B74  3000               	movlw	0
  8685  0B75  00C5               	movwf	T@T+1
  8686  0B76  3069               	movlw	105
  8687  0B77  00C6               	movwf	T@C
  8688  0B78  3000               	movlw	0
  8689  0B79  00C7               	movwf	T@C+1
  8690  0B7A  0851               	movf	clock_setting@i+1,w
  8691  0B7B  00C9               	movwf	T@i+1
  8692  0B7C  0850               	movf	clock_setting@i,w
  8693  0B7D  00C8               	movwf	T@i
  8694  0B7E  120A  158A  20A3  120A  158A  	fcall	_T
  8695                           
  8696                           ;clock_source.c: 349:             }
  8697  0B83  2A32               	goto	l4988
  8698  0B84                     l5106:	
  8699  0B84  0350               	decf	clock_setting@i,w
  8700  0B85  0451               	iorwf	clock_setting@i+1,w
  8701  0B86  1D03               	btfss	3,2
  8702  0B87  2B9A               	goto	l5110
  8703                           
  8704                           ;clock_source.c: 353:                 T('m','i',i);
  8705  0B88  306D               	movlw	109
  8706  0B89  00C4               	movwf	T@T
  8707  0B8A  3000               	movlw	0
  8708  0B8B  00C5               	movwf	T@T+1
  8709  0B8C  3069               	movlw	105
  8710  0B8D  00C6               	movwf	T@C
  8711  0B8E  3000               	movlw	0
  8712  0B8F  00C7               	movwf	T@C+1
  8713  0B90  0851               	movf	clock_setting@i+1,w
  8714  0B91  00C9               	movwf	T@i+1
  8715  0B92  0850               	movf	clock_setting@i,w
  8716  0B93  00C8               	movwf	T@i
  8717  0B94  120A  158A  20A3  120A  158A  	fcall	_T
  8718                           
  8719                           ;clock_source.c: 354:             }
  8720  0B99  2A32               	goto	l4988
  8721  0B9A                     l5110:	
  8722  0B9A  3002               	movlw	2
  8723  0B9B  0650               	xorwf	clock_setting@i,w
  8724  0B9C  0451               	iorwf	clock_setting@i+1,w
  8725  0B9D  1D03               	btfss	3,2
  8726  0B9E  2A32               	goto	l4988
  8727                           
  8728                           ;clock_source.c: 358:                 T('h','i',i);
  8729  0B9F  3068               	movlw	104
  8730  0BA0  00C4               	movwf	T@T
  8731  0BA1  3000               	movlw	0
  8732  0BA2  00C5               	movwf	T@T+1
  8733  0BA3  3069               	movlw	105
  8734  0BA4  00C6               	movwf	T@C
  8735  0BA5  3000               	movlw	0
  8736  0BA6  00C7               	movwf	T@C+1
  8737  0BA7  0851               	movf	clock_setting@i+1,w
  8738  0BA8  00C9               	movwf	T@i+1
  8739  0BA9  0850               	movf	clock_setting@i,w
  8740  0BAA  00C8               	movwf	T@i
  8741  0BAB  120A  158A  20A3  120A  158A  	fcall	_T
  8742  0BB0  2A32               	goto	l4988
  8743  0BB1                     __end_of_clock_setting:	
  8744                           
  8745                           	psect	text34
  8746  14D7                     __ptext34:	
  8747 ;; *************** function _start_time *****************
  8748 ;; Defined at:
  8749 ;;		line 224 in file "clock_source.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;		None
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  i               2    0[BANK0 ] int 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      void 
  8756 ;; Registers used:
  8757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8758 ;; Tracked objects:
  8759 ;;		On entry : 300/0
  8760 ;;		On exit  : 300/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8763 ;;      Params:         0       0       0       0       0
  8764 ;;      Locals:         0       2       0       0       0
  8765 ;;      Temps:          2       0       0       0       0
  8766 ;;      Totals:         2       2       0       0       0
  8767 ;;Total ram usage:        4 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    3
  8770 ;; This function calls:
  8771 ;;		_write_str
  8772 ;;		_writechar
  8773 ;; This function is called by:
  8774 ;;		_clock_setting
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           
  8779                           ;psect for function _start_time
  8780  14D7                     _start_time:	
  8781                           
  8782                           ;clock_source.c: 225:     int i;;clock_source.c: 226:     i=table[2]&0xf0;
  8783                           
  8784                           ;incstack = 0
  8785                           ; Regs used in _start_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8786  14D7  085F               	movf	_table+2,w
  8787  14D8  39F0               	andlw	240
  8788  14D9  00FC               	movwf	??_start_time
  8789  14DA  01FD               	clrf	??_start_time+1
  8790  14DB  087C               	movf	??_start_time,w
  8791  14DC  00C4               	movwf	start_time@i
  8792  14DD  087D               	movf	??_start_time+1,w
  8793  14DE  00C5               	movwf	start_time@i+1
  8794                           
  8795                           ;clock_source.c: 227:     i=i>>4;
  8796  14DF  0E44               	swapf	start_time@i,w
  8797  14E0  390F               	andlw	15
  8798  14E1  00C4               	movwf	start_time@i
  8799  14E2  0E45               	swapf	start_time@i+1,w
  8800  14E3  39F0               	andlw	240
  8801  14E4  04C4               	iorwf	start_time@i,f
  8802  14E5  0E45               	swapf	start_time@i+1,w
  8803  14E6  390F               	andlw	15
  8804  14E7  00C5               	movwf	start_time@i+1
  8805  14E8  30F0               	movlw	240
  8806  14E9  1DC5               	btfss	start_time@i+1,3
  8807  14EA  3000               	movlw	0
  8808  14EB  04C5               	iorwf	start_time@i+1,f
  8809                           
  8810                           ;clock_source.c: 228:     writechar(i + '0');
  8811  14EC  0844               	movf	start_time@i,w
  8812  14ED  3E30               	addlw	48
  8813  14EE  160A  158A  25B1  160A  118A  	fcall	_writechar
  8814                           
  8815                           ;clock_source.c: 229:     i=i<<4;
  8816  14F3  0845               	movf	start_time@i+1,w
  8817  14F4  00FD               	movwf	??_start_time+1
  8818  14F5  0844               	movf	start_time@i,w
  8819  14F6  00FC               	movwf	??_start_time
  8820  14F7  0EFC               	swapf	??_start_time,f
  8821  14F8  0EFD               	swapf	??_start_time+1,f
  8822  14F9  30F0               	movlw	240
  8823  14FA  05FD               	andwf	??_start_time+1,f
  8824  14FB  087C               	movf	??_start_time,w
  8825  14FC  390F               	andlw	15
  8826  14FD  04FD               	iorwf	??_start_time+1,f
  8827  14FE  30F0               	movlw	240
  8828  14FF  05FC               	andwf	??_start_time,f
  8829  1500  087C               	movf	??_start_time,w
  8830  1501  00C4               	movwf	start_time@i
  8831  1502  087D               	movf	??_start_time+1,w
  8832  1503  00C5               	movwf	start_time@i+1
  8833                           
  8834                           ;clock_source.c: 230:     i = table[2]&0x0f;
  8835  1504  085F               	movf	_table+2,w
  8836  1505  390F               	andlw	15
  8837  1506  00FC               	movwf	??_start_time
  8838  1507  01FD               	clrf	??_start_time+1
  8839  1508  087C               	movf	??_start_time,w
  8840  1509  00C4               	movwf	start_time@i
  8841  150A  087D               	movf	??_start_time+1,w
  8842  150B  00C5               	movwf	start_time@i+1
  8843                           
  8844                           ;clock_source.c: 231:     writechar(i +'0');
  8845  150C  0844               	movf	start_time@i,w
  8846  150D  3E30               	addlw	48
  8847  150E  160A  158A  25B1  160A  118A  	fcall	_writechar
  8848                           
  8849                           ;clock_source.c: 232:     write_str(": ");
  8850  1513  3082               	movlw	low ((STR_17+4)| (0+32768))
  8851  1514  00F3               	movwf	write_str@array
  8852  1515  3090               	movlw	high ((STR_17+4)| (0+32768))
  8853  1516  00F4               	movwf	write_str@array+1
  8854  1517  160A  118A  2160  160A  118A  	fcall	_write_str
  8855                           
  8856                           ;clock_source.c: 235:     i=table[1]&0xf0;
  8857  151C  085E               	movf	_table+1,w
  8858  151D  39F0               	andlw	240
  8859  151E  00FC               	movwf	??_start_time
  8860  151F  01FD               	clrf	??_start_time+1
  8861  1520  087C               	movf	??_start_time,w
  8862  1521  00C4               	movwf	start_time@i
  8863  1522  087D               	movf	??_start_time+1,w
  8864  1523  00C5               	movwf	start_time@i+1
  8865                           
  8866                           ;clock_source.c: 236:     i=i>>4;
  8867  1524  0E44               	swapf	start_time@i,w
  8868  1525  390F               	andlw	15
  8869  1526  00C4               	movwf	start_time@i
  8870  1527  0E45               	swapf	start_time@i+1,w
  8871  1528  39F0               	andlw	240
  8872  1529  04C4               	iorwf	start_time@i,f
  8873  152A  0E45               	swapf	start_time@i+1,w
  8874  152B  390F               	andlw	15
  8875  152C  00C5               	movwf	start_time@i+1
  8876  152D  30F0               	movlw	240
  8877  152E  1DC5               	btfss	start_time@i+1,3
  8878  152F  3000               	movlw	0
  8879  1530  04C5               	iorwf	start_time@i+1,f
  8880                           
  8881                           ;clock_source.c: 237:     writechar(i + '0');
  8882  1531  0844               	movf	start_time@i,w
  8883  1532  3E30               	addlw	48
  8884  1533  160A  158A  25B1  160A  118A  	fcall	_writechar
  8885                           
  8886                           ;clock_source.c: 238:     i=i<<4;
  8887  1538  0845               	movf	start_time@i+1,w
  8888  1539  00FD               	movwf	??_start_time+1
  8889  153A  0844               	movf	start_time@i,w
  8890  153B  00FC               	movwf	??_start_time
  8891  153C  0EFC               	swapf	??_start_time,f
  8892  153D  0EFD               	swapf	??_start_time+1,f
  8893  153E  30F0               	movlw	240
  8894  153F  05FD               	andwf	??_start_time+1,f
  8895  1540  087C               	movf	??_start_time,w
  8896  1541  390F               	andlw	15
  8897  1542  04FD               	iorwf	??_start_time+1,f
  8898  1543  30F0               	movlw	240
  8899  1544  05FC               	andwf	??_start_time,f
  8900  1545  087C               	movf	??_start_time,w
  8901  1546  00C4               	movwf	start_time@i
  8902  1547  087D               	movf	??_start_time+1,w
  8903  1548  00C5               	movwf	start_time@i+1
  8904                           
  8905                           ;clock_source.c: 239:     i = table[1]&0x0f;
  8906  1549  085E               	movf	_table+1,w
  8907  154A  390F               	andlw	15
  8908  154B  00FC               	movwf	??_start_time
  8909  154C  01FD               	clrf	??_start_time+1
  8910  154D  087C               	movf	??_start_time,w
  8911  154E  00C4               	movwf	start_time@i
  8912  154F  087D               	movf	??_start_time+1,w
  8913  1550  00C5               	movwf	start_time@i+1
  8914                           
  8915                           ;clock_source.c: 240:     writechar(i +'0');
  8916  1551  0844               	movf	start_time@i,w
  8917  1552  3E30               	addlw	48
  8918  1553  160A  158A  25B1  160A  118A  	fcall	_writechar
  8919                           
  8920                           ;clock_source.c: 241:     write_str(": ");
  8921  1558  3082               	movlw	low ((STR_17+4)| (0+32768))
  8922  1559  00F3               	movwf	write_str@array
  8923  155A  3090               	movlw	high ((STR_17+4)| (0+32768))
  8924  155B  00F4               	movwf	write_str@array+1
  8925  155C  160A  118A  2160  160A  118A  	fcall	_write_str
  8926                           
  8927                           ;clock_source.c: 244:     i=table[0]&0xf0;
  8928  1561  085D               	movf	_table,w
  8929  1562  39F0               	andlw	240
  8930  1563  00FC               	movwf	??_start_time
  8931  1564  01FD               	clrf	??_start_time+1
  8932  1565  087C               	movf	??_start_time,w
  8933  1566  00C4               	movwf	start_time@i
  8934  1567  087D               	movf	??_start_time+1,w
  8935  1568  00C5               	movwf	start_time@i+1
  8936                           
  8937                           ;clock_source.c: 245:     i=i>>4;
  8938  1569  0E44               	swapf	start_time@i,w
  8939  156A  390F               	andlw	15
  8940  156B  00C4               	movwf	start_time@i
  8941  156C  0E45               	swapf	start_time@i+1,w
  8942  156D  39F0               	andlw	240
  8943  156E  04C4               	iorwf	start_time@i,f
  8944  156F  0E45               	swapf	start_time@i+1,w
  8945  1570  390F               	andlw	15
  8946  1571  00C5               	movwf	start_time@i+1
  8947  1572  30F0               	movlw	240
  8948  1573  1DC5               	btfss	start_time@i+1,3
  8949  1574  3000               	movlw	0
  8950  1575  04C5               	iorwf	start_time@i+1,f
  8951                           
  8952                           ;clock_source.c: 246:     writechar(i + '0');
  8953  1576  0844               	movf	start_time@i,w
  8954  1577  3E30               	addlw	48
  8955  1578  160A  158A  25B1  160A  118A  	fcall	_writechar
  8956                           
  8957                           ;clock_source.c: 247:     i=i<<4;
  8958  157D  0845               	movf	start_time@i+1,w
  8959  157E  00FD               	movwf	??_start_time+1
  8960  157F  0844               	movf	start_time@i,w
  8961  1580  00FC               	movwf	??_start_time
  8962  1581  0EFC               	swapf	??_start_time,f
  8963  1582  0EFD               	swapf	??_start_time+1,f
  8964  1583  30F0               	movlw	240
  8965  1584  05FD               	andwf	??_start_time+1,f
  8966  1585  087C               	movf	??_start_time,w
  8967  1586  390F               	andlw	15
  8968  1587  04FD               	iorwf	??_start_time+1,f
  8969  1588  30F0               	movlw	240
  8970  1589  05FC               	andwf	??_start_time,f
  8971  158A  087C               	movf	??_start_time,w
  8972  158B  00C4               	movwf	start_time@i
  8973  158C  087D               	movf	??_start_time+1,w
  8974  158D  00C5               	movwf	start_time@i+1
  8975                           
  8976                           ;clock_source.c: 248:     i = table[0]&0x0f;
  8977  158E  085D               	movf	_table,w
  8978  158F  390F               	andlw	15
  8979  1590  00FC               	movwf	??_start_time
  8980  1591  01FD               	clrf	??_start_time+1
  8981  1592  087C               	movf	??_start_time,w
  8982  1593  00C4               	movwf	start_time@i
  8983  1594  087D               	movf	??_start_time+1,w
  8984  1595  00C5               	movwf	start_time@i+1
  8985                           
  8986                           ;clock_source.c: 249:     writechar(i +'0');
  8987  1596  0844               	movf	start_time@i,w
  8988  1597  3E30               	addlw	48
  8989  1598  160A  158A  25B1   	fcall	_writechar
  8990  159B  0008               	return
  8991  159C                     __end_of_start_time:	
  8992                           
  8993                           	psect	text35
  8994  1160                     __ptext35:	
  8995 ;; *************** function _write_str *****************
  8996 ;; Defined at:
  8997 ;;		line 4 in file "lcd.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;  array           2    3[COMMON] PTR unsigned char 
  9000 ;;		 -> STR_81(6), STR_80(6), STR_79(6), STR_78(6), 
  9001 ;;		 -> STR_77(6), STR_76(6), STR_75(5), STR_74(6), 
  9002 ;;		 -> STR_73(5), STR_72(2), STR_71(2), STR_70(2), 
  9003 ;;		 -> STR_69(2), STR_68(2), STR_67(5), STR_66(11), 
  9004 ;;		 -> STR_65(2), STR_64(5), STR_63(11), STR_62(2), 
  9005 ;;		 -> STR_61(5), STR_60(2), STR_59(5), STR_58(15), 
  9006 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  9007 ;;		 -> STR_53(2), STR_52(5), STR_51(11), STR_50(2), 
  9008 ;;		 -> STR_49(5), STR_48(11), STR_47(2), STR_46(5), 
  9009 ;;		 -> STR_45(2), STR_44(5), STR_43(13), STR_42(6), 
  9010 ;;		 -> STR_41(4), STR_40(15), STR_39(2), STR_38(2), 
  9011 ;;		 -> STR_37(6), STR_36(5), STR_35(5), STR_34(6), 
  9012 ;;		 -> STR_33(4), STR_32(17), STR_31(15), STR_30(14), 
  9013 ;;		 -> STR_29(8), STR_28(17), STR_27(7), STR_26(17), 
  9014 ;;		 -> STR_25(5), STR_24(17), STR_23(7), STR_22(17), 
  9015 ;;		 -> STR_21(15), STR_20(14), STR_19(3), STR_18(3), 
  9016 ;;		 -> STR_17(7), STR_16(3), STR_15(3), STR_14(2), 
  9017 ;;		 -> STR_13(2), STR_12(6), STR_11(6), STR_10(2), 
  9018 ;;		 -> STR_9(2), STR_8(6), STR_7(4), STR_6(4), 
  9019 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  9020 ;;		 -> STR_1(4), 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  i               2   10[COMMON] int 
  9023 ;;  p               2    8[COMMON] PTR unsigned char 
  9024 ;;		 -> STR_81(6), STR_80(6), STR_79(6), STR_78(6), 
  9025 ;;		 -> STR_77(6), STR_76(6), STR_75(5), STR_74(6), 
  9026 ;;		 -> STR_73(5), STR_72(2), STR_71(2), STR_70(2), 
  9027 ;;		 -> STR_69(2), STR_68(2), STR_67(5), STR_66(11), 
  9028 ;;		 -> STR_65(2), STR_64(5), STR_63(11), STR_62(2), 
  9029 ;;		 -> STR_61(5), STR_60(2), STR_59(5), STR_58(15), 
  9030 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  9031 ;;		 -> STR_53(2), STR_52(5), STR_51(11), STR_50(2), 
  9032 ;;		 -> STR_49(5), STR_48(11), STR_47(2), STR_46(5), 
  9033 ;;		 -> STR_45(2), STR_44(5), STR_43(13), STR_42(6), 
  9034 ;;		 -> STR_41(4), STR_40(15), STR_39(2), STR_38(2), 
  9035 ;;		 -> STR_37(6), STR_36(5), STR_35(5), STR_34(6), 
  9036 ;;		 -> STR_33(4), STR_32(17), STR_31(15), STR_30(14), 
  9037 ;;		 -> STR_29(8), STR_28(17), STR_27(7), STR_26(17), 
  9038 ;;		 -> STR_25(5), STR_24(17), STR_23(7), STR_22(17), 
  9039 ;;		 -> STR_21(15), STR_20(14), STR_19(3), STR_18(3), 
  9040 ;;		 -> STR_17(7), STR_16(3), STR_15(3), STR_14(2), 
  9041 ;;		 -> STR_13(2), STR_12(6), STR_11(6), STR_10(2), 
  9042 ;;		 -> STR_9(2), STR_8(6), STR_7(4), STR_6(4), 
  9043 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  9044 ;;		 -> STR_1(4), 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 300/0
  9051 ;;		On exit  : 300/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9054 ;;      Params:         2       0       0       0       0
  9055 ;;      Locals:         4       0       0       0       0
  9056 ;;      Temps:          3       0       0       0       0
  9057 ;;      Totals:         9       0       0       0       0
  9058 ;;Total ram usage:        9 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    2
  9061 ;; This function calls:
  9062 ;;		_writechar
  9063 ;; This function is called by:
  9064 ;;		_week
  9065 ;;		_display_clock
  9066 ;;		_start_date
  9067 ;;		_start_time
  9068 ;;		_clock_setting
  9069 ;;		_date_setting
  9070 ;;		_D
  9071 ;;		_display_temp
  9072 ;;		_temp_setting
  9073 ;;		_set_day
  9074 ;;		_set_night
  9075 ;;		_cool
  9076 ;;		_heat
  9077 ;;		_OK
  9078 ;;		_main
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _write_str
  9084  1160                     _write_str:	
  9085                           
  9086                           ;lcd.c: 4: void write_str(unsigned char *array);lcd.c: 5: {;lcd.c: 6:     char * p; int 
      +                          i = 0;
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _write_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9090  1160  01FA               	clrf	write_str@i
  9091  1161  01FB               	clrf	write_str@i+1
  9092                           
  9093                           ;lcd.c: 7:     for (p = array; *p != '\0'; p++){
  9094  1162  0873               	movf	write_str@array,w
  9095  1163  00F8               	movwf	write_str@p
  9096  1164  0874               	movf	write_str@array+1,w
  9097  1165  00F9               	movwf	write_str@p+1
  9098  1166                     l3688:	
  9099  1166  0879               	movf	write_str@p+1,w
  9100  1167  00FF               	movwf	127
  9101  1168  0878               	movf	write_str@p,w
  9102  1169  0084               	movwf	4
  9103  116A  160A  158A  2000  160A  118A  	fcall	stringtab
  9104  116F  3A00               	xorlw	0
  9105  1170  1903               	btfsc	3,2
  9106  1171  0008               	return
  9107                           
  9108                           ;lcd.c: 8:         writechar(array[i]);
  9109  1172  087A               	movf	write_str@i,w
  9110  1173  0773               	addwf	write_str@array,w
  9111  1174  00F6               	movwf	??_write_str+1
  9112  1175  0874               	movf	write_str@array+1,w
  9113  1176  00F5               	movwf	??_write_str
  9114  1177  1803               	skipnc
  9115  1178  0AF5               	incf	??_write_str,f
  9116  1179  1BFA               	btfsc	write_str@i,7
  9117  117A  03F5               	decf	??_write_str,f
  9118  117B  0875               	movf	??_write_str,w
  9119  117C  00F7               	movwf	??_write_str+2
  9120  117D  0877               	movf	??_write_str+2,w
  9121  117E  1283               	bcf	3,5	;RP0=0, select bank0
  9122  117F  1303               	bcf	3,6	;RP1=0, select bank0
  9123  1180  00FF               	movwf	127
  9124  1181  0876               	movf	??_write_str+1,w
  9125  1182  0084               	movwf	4
  9126  1183  160A  158A  2000  160A  118A  	fcall	stringtab
  9127  1188  160A  158A  25B1  160A  118A  	fcall	_writechar
  9128                           
  9129                           ;lcd.c: 9:         i++;
  9130  118D  3001               	movlw	1
  9131  118E  07FA               	addwf	write_str@i,f
  9132  118F  1803               	skipnc
  9133  1190  0AFB               	incf	write_str@i+1,f
  9134  1191  3000               	movlw	0
  9135  1192  07FB               	addwf	write_str@i+1,f
  9136                           
  9137                           ;lcd.c: 10:     }
  9138  1193  3001               	movlw	1
  9139  1194  07F8               	addwf	write_str@p,f
  9140  1195  1803               	skipnc
  9141  1196  0AF9               	incf	write_str@p+1,f
  9142  1197  3000               	movlw	0
  9143  1198  07F9               	addwf	write_str@p+1,f
  9144  1199  2966               	goto	l3688
  9145  119A                     __end_of_write_str:	
  9146                           
  9147                           	psect	text36
  9148  1CF1                     __ptext36:	
  9149 ;; *************** function _button_reset *****************
  9150 ;; Defined at:
  9151 ;;		line 60 in file "button_press.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;		None
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;		None
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      void 
  9158 ;; Registers used:
  9159 ;;		status,2
  9160 ;; Tracked objects:
  9161 ;;		On entry : 300/0
  9162 ;;		On exit  : 300/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9165 ;;      Params:         0       0       0       0       0
  9166 ;;      Locals:         0       0       0       0       0
  9167 ;;      Temps:          0       0       0       0       0
  9168 ;;      Totals:         0       0       0       0       0
  9169 ;;Total ram usage:        0 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; This function calls:
  9172 ;;		Nothing
  9173 ;; This function is called by:
  9174 ;;		_clock_setting
  9175 ;;		_date_setting
  9176 ;;		_temp_setting
  9177 ;;		_set_day
  9178 ;;		_set_night
  9179 ;;		_main
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           
  9184                           ;psect for function _button_reset
  9185  1CF1                     _button_reset:	
  9186                           
  9187                           ;button_press.c: 61:     SecondRC = 0;
  9188                           
  9189                           ;incstack = 0
  9190                           ; Regs used in _button_reset: [status,2]
  9191  1CF1  01C3               	clrf	_SecondRC
  9192                           
  9193                           ;button_press.c: 62:     FirstRC = 0;
  9194  1CF2  01C2               	clrf	_FirstRC
  9195                           
  9196                           ;button_press.c: 63:     OutputRC = 0;
  9197  1CF3  01C1               	clrf	_OutputRC
  9198  1CF4  0008               	return
  9199  1CF5                     __end_of_button_reset:	
  9200                           
  9201                           	psect	text37
  9202  08A3                     __ptext37:	
  9203 ;; *************** function _T *****************
  9204 ;; Defined at:
  9205 ;;		line 691 in file "clock_source.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  T               2    0[BANK0 ] PTR unsigned char 
  9208 ;;		 -> RAM(512), RAM(512), RAM(512), 
  9209 ;;  C               2    2[BANK0 ] PTR unsigned char 
  9210 ;;		 -> RAM(512), RAM(512), RAM(512), 
  9211 ;;  i               2    4[BANK0 ] unsigned int 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  j               2   10[BANK0 ] int 
  9214 ;;  j               2    8[BANK0 ] int 
  9215 ;;  j               2    6[BANK0 ] int 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 300/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9225 ;;      Params:         0       6       0       0       0
  9226 ;;      Locals:         0       6       0       0       0
  9227 ;;      Temps:          1       0       0       0       0
  9228 ;;      Totals:         1      12       0       0       0
  9229 ;;Total ram usage:       13 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    3
  9232 ;; This function calls:
  9233 ;;		_delay_main
  9234 ;;		_display_val
  9235 ;; This function is called by:
  9236 ;;		_clock_setting
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           
  9241                           ;psect for function _T
  9242  08A3                     _T:	
  9243                           
  9244                           ;clock_source.c: 694:     if ( C == 'd' && table[i] != 0x00){
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _T: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9248  08A3  3064               	movlw	100
  9249  08A4  0646               	xorwf	T@C,w
  9250  08A5  0447               	iorwf	T@C+1,w
  9251  08A6  1D03               	btfss	3,2
  9252  08A7  2909               	goto	l4076
  9253  08A8  0848               	movf	T@i,w
  9254  08A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  9255  08AA  0084               	movwf	4
  9256  08AB  1383               	bcf	3,7	;select IRP bank0
  9257  08AC  0800               	movf	0,w
  9258  08AD  1903               	btfsc	3,2
  9259  08AE  2909               	goto	l4076
  9260                           
  9261                           ;clock_source.c: 695:         if (table[i] == 0x10 || table[i] == 0x20 || table[i] == 0x
      +                          30
  9262  08AF  0848               	movf	T@i,w
  9263  08B0  3E5D               	addlw	(low (_table| 0))& (0+255)
  9264  08B1  0084               	movwf	4
  9265  08B2  3010               	movlw	16
  9266  08B3  0600               	xorwf	0,w
  9267  08B4  1903               	btfsc	3,2
  9268  08B5  28D9               	goto	l4054
  9269  08B6  0848               	movf	T@i,w
  9270  08B7  3E5D               	addlw	(low (_table| 0))& (0+255)
  9271  08B8  0084               	movwf	4
  9272  08B9  3020               	movlw	32
  9273  08BA  0600               	xorwf	0,w
  9274  08BB  1903               	btfsc	3,2
  9275  08BC  28D9               	goto	l4054
  9276  08BD  0848               	movf	T@i,w
  9277  08BE  3E5D               	addlw	(low (_table| 0))& (0+255)
  9278  08BF  0084               	movwf	4
  9279  08C0  3030               	movlw	48
  9280  08C1  0600               	xorwf	0,w
  9281  08C2  1903               	btfsc	3,2
  9282  08C3  28D9               	goto	l4054
  9283  08C4  0848               	movf	T@i,w
  9284  08C5  3E5D               	addlw	(low (_table| 0))& (0+255)
  9285  08C6  0084               	movwf	4
  9286  08C7  3040               	movlw	64
  9287  08C8  0600               	xorwf	0,w
  9288  08C9  1903               	btfsc	3,2
  9289  08CA  28D9               	goto	l4054
  9290  08CB  0848               	movf	T@i,w
  9291  08CC  3E5D               	addlw	(low (_table| 0))& (0+255)
  9292  08CD  0084               	movwf	4
  9293  08CE  3050               	movlw	80
  9294  08CF  0600               	xorwf	0,w
  9295  08D0  1903               	btfsc	3,2
  9296  08D1  28D9               	goto	l4054
  9297  08D2  0848               	movf	T@i,w
  9298  08D3  3E5D               	addlw	(low (_table| 0))& (0+255)
  9299  08D4  0084               	movwf	4
  9300  08D5  3060               	movlw	96
  9301  08D6  0600               	xorwf	0,w
  9302  08D7  1D03               	btfss	3,2
  9303  08D8  2903               	goto	l4070
  9304  08D9                     l4054:	
  9305                           
  9306                           ;clock_source.c: 697:             || table[i] == 0x60){;clock_source.c: 698:            
      +                           for (int j=0; j<7; j++){
  9307  08D9  01CA               	clrf	T@j
  9308  08DA  01CB               	clrf	T@j+1
  9309  08DB                     l4060:	
  9310                           
  9311                           ;clock_source.c: 699:                 table[i]--;
  9312  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  9313  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  9314  08DD  0848               	movf	T@i,w
  9315  08DE  3E5D               	addlw	(low (_table| 0))& (0+255)
  9316  08DF  0084               	movwf	4
  9317  08E0  3001               	movlw	1
  9318  08E1  1383               	bcf	3,7	;select IRP bank0
  9319  08E2  0280               	subwf	0,f
  9320                           
  9321                           ;clock_source.c: 700:             }
  9322  08E3  3001               	movlw	1
  9323  08E4  07CA               	addwf	T@j,f
  9324  08E5  1803               	skipnc
  9325  08E6  0ACB               	incf	T@j+1,f
  9326  08E7  3000               	movlw	0
  9327  08E8  07CB               	addwf	T@j+1,f
  9328  08E9  084B               	movf	T@j+1,w
  9329  08EA  3A80               	xorlw	128
  9330  08EB  00FF               	movwf	127
  9331  08EC  3080               	movlw	128
  9332  08ED  027F               	subwf	127,w
  9333  08EE  1D03               	skipz
  9334  08EF  28F2               	goto	u3565
  9335  08F0  3007               	movlw	7
  9336  08F1  024A               	subwf	T@j,w
  9337  08F2                     u3565:	
  9338  08F2  1C03               	skipc
  9339  08F3  28DB               	goto	l4060
  9340  08F4                     l4066:	
  9341                           
  9342                           ;clock_source.c: 701:             display_val(i);
  9343  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  9344  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  9345  08F6  0849               	movf	T@i+1,w
  9346  08F7  00F4               	movwf	display_val@i+1
  9347  08F8  0848               	movf	T@i,w
  9348  08F9  00F3               	movwf	display_val@i
  9349  08FA  120A  158A  200E  120A  158A  	fcall	_display_val
  9350                           
  9351                           ;clock_source.c: 702:             delay_main();
  9352  08FF  160A  158A  2571   	fcall	_delay_main
  9353                           
  9354                           ;clock_source.c: 703:         }
  9355  0902  0008               	return
  9356  0903                     l4070:	
  9357                           
  9358                           ;clock_source.c: 705:             table[i]--;
  9359  0903  0848               	movf	T@i,w
  9360  0904  3E5D               	addlw	(low (_table| 0))& (0+255)
  9361  0905  0084               	movwf	4
  9362  0906  3001               	movlw	1
  9363  0907  0280               	subwf	0,f
  9364  0908  28F4               	goto	l4066
  9365  0909                     l4076:	
  9366  0909  3068               	movlw	104
  9367  090A  0644               	xorwf	T@T,w
  9368  090B  0445               	iorwf	T@T+1,w
  9369  090C  1D03               	btfss	3,2
  9370  090D  294F               	goto	l4108
  9371  090E  3069               	movlw	105
  9372  090F  0646               	xorwf	T@C,w
  9373  0910  0447               	iorwf	T@C+1,w
  9374  0911  1D03               	btfss	3,2
  9375  0912  294F               	goto	l4108
  9376  0913  0848               	movf	T@i,w
  9377  0914  3E5D               	addlw	(low (_table| 0))& (0+255)
  9378  0915  0084               	movwf	4
  9379  0916  3023               	movlw	35
  9380  0917  1383               	bcf	3,7	;select IRP bank0
  9381  0918  0600               	xorwf	0,w
  9382  0919  1903               	btfsc	3,2
  9383  091A  294F               	goto	l4108
  9384                           
  9385                           ;clock_source.c: 713:         if (table[i] == 0x09 || table[i] == 0x19){
  9386  091B  0848               	movf	T@i,w
  9387  091C  3E5D               	addlw	(low (_table| 0))& (0+255)
  9388  091D  0084               	movwf	4
  9389  091E  3009               	movlw	9
  9390  091F  0600               	xorwf	0,w
  9391  0920  1903               	btfsc	3,2
  9392  0921  2929               	goto	l4086
  9393  0922  0848               	movf	T@i,w
  9394  0923  3E5D               	addlw	(low (_table| 0))& (0+255)
  9395  0924  0084               	movwf	4
  9396  0925  3019               	movlw	25
  9397  0926  0600               	xorwf	0,w
  9398  0927  1D03               	btfss	3,2
  9399  0928  2947               	goto	l4102
  9400  0929                     l4086:	
  9401                           
  9402                           ;clock_source.c: 714:             for (int j=0; j<7; j++){
  9403  0929  01CC               	clrf	T@j_261
  9404  092A  01CD               	clrf	T@j_261+1
  9405  092B                     l4092:	
  9406                           
  9407                           ;clock_source.c: 715:                 table[i]++;
  9408  092B  3001               	movlw	1
  9409  092C  00F9               	movwf	??_T
  9410  092D  1283               	bcf	3,5	;RP0=0, select bank0
  9411  092E  1303               	bcf	3,6	;RP1=0, select bank0
  9412  092F  0848               	movf	T@i,w
  9413  0930  3E5D               	addlw	(low (_table| 0))& (0+255)
  9414  0931  0084               	movwf	4
  9415  0932  0879               	movf	??_T,w
  9416  0933  1383               	bcf	3,7	;select IRP bank0
  9417  0934  0780               	addwf	0,f
  9418                           
  9419                           ;clock_source.c: 716:             }
  9420  0935  3001               	movlw	1
  9421  0936  07CC               	addwf	T@j_261,f
  9422  0937  1803               	skipnc
  9423  0938  0ACD               	incf	T@j_261+1,f
  9424  0939  3000               	movlw	0
  9425  093A  07CD               	addwf	T@j_261+1,f
  9426  093B  084D               	movf	T@j_261+1,w
  9427  093C  3A80               	xorlw	128
  9428  093D  00FF               	movwf	127
  9429  093E  3080               	movlw	128
  9430  093F  027F               	subwf	127,w
  9431  0940  1D03               	skipz
  9432  0941  2944               	goto	u3625
  9433  0942  3007               	movlw	7
  9434  0943  024C               	subwf	T@j_261,w
  9435  0944                     u3625:	
  9436  0944  1803               	btfsc	3,0
  9437  0945  28F4               	goto	l4066
  9438  0946  292B               	goto	l4092
  9439  0947                     l4102:	
  9440                           
  9441                           ;clock_source.c: 721:             table[i]++;
  9442  0947  3001               	movlw	1
  9443  0948  00F9               	movwf	??_T
  9444  0949  0848               	movf	T@i,w
  9445  094A  3E5D               	addlw	(low (_table| 0))& (0+255)
  9446  094B  0084               	movwf	4
  9447  094C  0879               	movf	??_T,w
  9448  094D  0780               	addwf	0,f
  9449  094E  28F4               	goto	l4066
  9450  094F                     l4108:	
  9451                           ;clock_source.c: 725:     }
  9452                           
  9453                           ;clock_source.c: 724:         }
  9454                           
  9455  094F  3068               	movlw	104
  9456  0950  0644               	xorwf	T@T,w
  9457  0951  0445               	iorwf	T@T+1,w
  9458  0952  1D03               	btfss	3,2
  9459  0953  2966               	goto	l4120
  9460  0954  3069               	movlw	105
  9461  0955  0646               	xorwf	T@C,w
  9462  0956  0447               	iorwf	T@C+1,w
  9463  0957  1D03               	btfss	3,2
  9464  0958  2966               	goto	l4120
  9465  0959  0848               	movf	T@i,w
  9466  095A  3E5D               	addlw	(low (_table| 0))& (0+255)
  9467  095B  0084               	movwf	4
  9468  095C  3023               	movlw	35
  9469  095D  1383               	bcf	3,7	;select IRP bank0
  9470  095E  0600               	xorwf	0,w
  9471  095F  1D03               	btfss	3,2
  9472  0960  2966               	goto	l4120
  9473  0961                     l4114:	
  9474                           
  9475                           ;clock_source.c: 727:             table[i] = 0x00;
  9476  0961  0848               	movf	T@i,w
  9477  0962  3E5D               	addlw	(low (_table| 0))& (0+255)
  9478  0963  0084               	movwf	4
  9479  0964  0180               	clrf	0
  9480  0965  28F4               	goto	l4066
  9481  0966                     l4120:	
  9482  0966  3068               	movlw	104
  9483  0967  0644               	xorwf	T@T,w
  9484  0968  0445               	iorwf	T@T+1,w
  9485  0969  1903               	btfsc	3,2
  9486  096A  29C0               	goto	l4160
  9487  096B  3069               	movlw	105
  9488  096C  0646               	xorwf	T@C,w
  9489  096D  0447               	iorwf	T@C+1,w
  9490  096E  1D03               	btfss	3,2
  9491  096F  29C0               	goto	l4160
  9492  0970  0848               	movf	T@i,w
  9493  0971  3E5D               	addlw	(low (_table| 0))& (0+255)
  9494  0972  0084               	movwf	4
  9495  0973  3059               	movlw	89
  9496  0974  1383               	bcf	3,7	;select IRP bank0
  9497  0975  0600               	xorwf	0,w
  9498  0976  1903               	btfsc	3,2
  9499  0977  29C0               	goto	l4160
  9500                           
  9501                           ;clock_source.c: 735:         if (table[i] == 0x09 || table[i] == 0x19 || table[i] == 0x
      +                          29
  9502  0978  0848               	movf	T@i,w
  9503  0979  3E5D               	addlw	(low (_table| 0))& (0+255)
  9504  097A  0084               	movwf	4
  9505  097B  3009               	movlw	9
  9506  097C  0600               	xorwf	0,w
  9507  097D  1903               	btfsc	3,2
  9508  097E  29A2               	goto	l4138
  9509  097F  0848               	movf	T@i,w
  9510  0980  3E5D               	addlw	(low (_table| 0))& (0+255)
  9511  0981  0084               	movwf	4
  9512  0982  3019               	movlw	25
  9513  0983  0600               	xorwf	0,w
  9514  0984  1903               	btfsc	3,2
  9515  0985  29A2               	goto	l4138
  9516  0986  0848               	movf	T@i,w
  9517  0987  3E5D               	addlw	(low (_table| 0))& (0+255)
  9518  0988  0084               	movwf	4
  9519  0989  3029               	movlw	41
  9520  098A  0600               	xorwf	0,w
  9521  098B  1903               	btfsc	3,2
  9522  098C  29A2               	goto	l4138
  9523  098D  0848               	movf	T@i,w
  9524  098E  3E5D               	addlw	(low (_table| 0))& (0+255)
  9525  098F  0084               	movwf	4
  9526  0990  3039               	movlw	57
  9527  0991  0600               	xorwf	0,w
  9528  0992  1903               	btfsc	3,2
  9529  0993  29A2               	goto	l4138
  9530  0994  0848               	movf	T@i,w
  9531  0995  3E5D               	addlw	(low (_table| 0))& (0+255)
  9532  0996  0084               	movwf	4
  9533  0997  3049               	movlw	73
  9534  0998  0600               	xorwf	0,w
  9535  0999  1903               	btfsc	3,2
  9536  099A  29A2               	goto	l4138
  9537  099B  0848               	movf	T@i,w
  9538  099C  3E5D               	addlw	(low (_table| 0))& (0+255)
  9539  099D  0084               	movwf	4
  9540  099E  3059               	movlw	89
  9541  099F  0600               	xorwf	0,w
  9542  09A0  1D03               	btfss	3,2
  9543  09A1  2947               	goto	l4102
  9544  09A2                     l4138:	
  9545                           
  9546                           ;clock_source.c: 737:             || table[i] == 0x59){;clock_source.c: 738:            
      +                           for (int j=0; j<7; j++){
  9547  09A2  01CE               	clrf	T@j_262
  9548  09A3  01CF               	clrf	T@j_262+1
  9549  09A4                     l4144:	
  9550                           
  9551                           ;clock_source.c: 739:                 table[i]++;
  9552  09A4  3001               	movlw	1
  9553  09A5  00F9               	movwf	??_T
  9554  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  9555  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  9556  09A8  0848               	movf	T@i,w
  9557  09A9  3E5D               	addlw	(low (_table| 0))& (0+255)
  9558  09AA  0084               	movwf	4
  9559  09AB  0879               	movf	??_T,w
  9560  09AC  1383               	bcf	3,7	;select IRP bank0
  9561  09AD  0780               	addwf	0,f
  9562                           
  9563                           ;clock_source.c: 740:             }
  9564  09AE  3001               	movlw	1
  9565  09AF  07CE               	addwf	T@j_262,f
  9566  09B0  1803               	skipnc
  9567  09B1  0ACF               	incf	T@j_262+1,f
  9568  09B2  3000               	movlw	0
  9569  09B3  07CF               	addwf	T@j_262+1,f
  9570  09B4  084F               	movf	T@j_262+1,w
  9571  09B5  3A80               	xorlw	128
  9572  09B6  00FF               	movwf	127
  9573  09B7  3080               	movlw	128
  9574  09B8  027F               	subwf	127,w
  9575  09B9  1D03               	skipz
  9576  09BA  29BD               	goto	u3755
  9577  09BB  3007               	movlw	7
  9578  09BC  024E               	subwf	T@j_262,w
  9579  09BD                     u3755:	
  9580  09BD  1803               	btfsc	3,0
  9581  09BE  28F4               	goto	l4066
  9582  09BF  29A4               	goto	l4144
  9583  09C0                     l4160:	
  9584  09C0  3069               	movlw	105
  9585  09C1  0646               	xorwf	T@C,w
  9586  09C2  0447               	iorwf	T@C+1,w
  9587  09C3  1D03               	btfss	3,2
  9588  09C4  29CD               	goto	l4170
  9589  09C5  0848               	movf	T@i,w
  9590  09C6  3E5D               	addlw	(low (_table| 0))& (0+255)
  9591  09C7  0084               	movwf	4
  9592  09C8  3059               	movlw	89
  9593  09C9  1383               	bcf	3,7	;select IRP bank0
  9594  09CA  0600               	xorwf	0,w
  9595  09CB  1903               	btfsc	3,2
  9596  09CC  2961               	goto	l4114
  9597  09CD                     l4170:	
  9598  09CD  3064               	movlw	100
  9599  09CE  0646               	xorwf	T@C,w
  9600  09CF  0447               	iorwf	T@C+1,w
  9601  09D0  1D03               	btfss	3,2
  9602  09D1  28F4               	goto	l4066
  9603                           
  9604                           ;clock_source.c: 756:         if (T == 'h' && table[i] == 0x00){
  9605  09D2  3068               	movlw	104
  9606  09D3  0644               	xorwf	T@T,w
  9607  09D4  0445               	iorwf	T@T+1,w
  9608  09D5  1D03               	btfss	3,2
  9609  09D6  29E0               	goto	l4182
  9610  09D7  0848               	movf	T@i,w
  9611  09D8  3E5D               	addlw	(low (_table| 0))& (0+255)
  9612  09D9  0084               	movwf	4
  9613  09DA  1383               	bcf	3,7	;select IRP bank0
  9614  09DB  0800               	movf	0,w
  9615  09DC  1D03               	btfss	3,2
  9616  09DD  29E0               	goto	l4182
  9617                           
  9618                           ;clock_source.c: 757:                 table[i] = 0x23;
  9619  09DE  3023               	movlw	35
  9620  09DF  29ED               	goto	L12
  9621  09E0                     l4182:	
  9622  09E0  306D               	movlw	109
  9623  09E1  0644               	xorwf	T@T,w
  9624  09E2  0445               	iorwf	T@T+1,w
  9625  09E3  1D03               	btfss	3,2
  9626  09E4  29F4               	goto	l4192
  9627  09E5  0848               	movf	T@i,w
  9628  09E6  3E5D               	addlw	(low (_table| 0))& (0+255)
  9629  09E7  0084               	movwf	4
  9630  09E8  1383               	bcf	3,7	;select IRP bank0
  9631  09E9  0800               	movf	0,w
  9632  09EA  1D03               	btfss	3,2
  9633  09EB  29F4               	goto	l4192
  9634  09EC                     l4186:	
  9635                           
  9636                           ;clock_source.c: 762:                 table[i] = 0x59;
  9637  09EC  3059               	movlw	89
  9638  09ED                     L12:	
  9639  09ED  00F9               	movwf	??_T
  9640  09EE  0848               	movf	T@i,w
  9641  09EF  3E5D               	addlw	(low (_table| 0))& (0+255)
  9642  09F0  0084               	movwf	4
  9643  09F1  0879               	movf	??_T,w
  9644  09F2  0080               	movwf	0
  9645  09F3  28F4               	goto	l4066
  9646  09F4                     l4192:	
  9647  09F4  3073               	movlw	115
  9648  09F5  0644               	xorwf	T@T,w
  9649  09F6  0445               	iorwf	T@T+1,w
  9650  09F7  1D03               	btfss	3,2
  9651  09F8  0008               	return
  9652  09F9  0848               	movf	T@i,w
  9653  09FA  3E5D               	addlw	(low (_table| 0))& (0+255)
  9654  09FB  0084               	movwf	4
  9655  09FC  1383               	bcf	3,7	;select IRP bank0
  9656  09FD  0800               	movf	0,w
  9657  09FE  1D03               	btfss	3,2
  9658  09FF  0008               	return
  9659  0A00  29EC               	goto	l4186
  9660  0A01                     __end_of_T:	
  9661                           
  9662                           	psect	text38
  9663  080E                     __ptext38:	
  9664 ;; *************** function _display_val *****************
  9665 ;; Defined at:
  9666 ;;		line 17 in file "functions_source.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  i               2    3[COMMON] unsigned int 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  t               2    7[COMMON] int 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 300/0
  9677 ;;		On exit  : 300/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9680 ;;      Params:         2       0       0       0       0
  9681 ;;      Locals:         2       0       0       0       0
  9682 ;;      Temps:          2       0       0       0       0
  9683 ;;      Totals:         6       0       0       0       0
  9684 ;;Total ram usage:        6 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    2
  9687 ;; This function calls:
  9688 ;;		_writechar
  9689 ;;		_writecmd_4line
  9690 ;; This function is called by:
  9691 ;;		_date_setting
  9692 ;;		_D
  9693 ;;		_T
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _display_val
  9699  080E                     _display_val:	
  9700                           
  9701                           ;functions_source.c: 18:     if (i == 0 || i == 6){
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _display_val: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9705  080E  0873               	movf	display_val@i,w
  9706  080F  0474               	iorwf	display_val@i+1,w
  9707  0810  1903               	btfsc	3,2
  9708  0811  2817               	goto	l3738
  9709  0812  3006               	movlw	6
  9710  0813  0673               	xorwf	display_val@i,w
  9711  0814  0474               	iorwf	display_val@i+1,w
  9712  0815  1D03               	btfss	3,2
  9713  0816  2819               	goto	l3740
  9714  0817                     l3738:	
  9715                           
  9716                           ;functions_source.c: 19:         writecmd_4line(0x94);
  9717  0817  3094               	movlw	148
  9718  0818  282F               	goto	L13
  9719  0819                     l3740:	
  9720                           ;functions_source.c: 20:     }
  9721                           
  9722  0819  0373               	decf	display_val@i,w
  9723  081A  0474               	iorwf	display_val@i+1,w
  9724  081B  1903               	btfsc	3,2
  9725  081C  2822               	goto	l3744
  9726  081D  3004               	movlw	4
  9727  081E  0673               	xorwf	display_val@i,w
  9728  081F  0474               	iorwf	display_val@i+1,w
  9729  0820  1D03               	btfss	3,2
  9730  0821  2824               	goto	l3746
  9731  0822                     l3744:	
  9732                           
  9733                           ;functions_source.c: 22:         writecmd_4line(0x92);
  9734  0822  3092               	movlw	146
  9735  0823  282F               	goto	L13
  9736  0824                     l3746:	
  9737                           ;functions_source.c: 23:     }
  9738                           
  9739  0824  3002               	movlw	2
  9740  0825  0673               	xorwf	display_val@i,w
  9741  0826  0474               	iorwf	display_val@i+1,w
  9742  0827  1903               	btfsc	3,2
  9743  0828  282E               	goto	l3750
  9744  0829  3003               	movlw	3
  9745  082A  0673               	xorwf	display_val@i,w
  9746  082B  0474               	iorwf	display_val@i+1,w
  9747  082C  1D03               	btfss	3,2
  9748  082D  2834               	goto	l3752
  9749  082E                     l3750:	
  9750                           
  9751                           ;functions_source.c: 25:         writecmd_4line(0x90);
  9752  082E  3090               	movlw	144
  9753  082F                     L13:	
  9754  082F  160A  158A  25CD  120A  158A  	fcall	_writecmd_4line
  9755  0834                     l3752:	
  9756                           
  9757                           ;functions_source.c: 28:     int t;;functions_source.c: 29:     t = table[i]&0xf0;
  9758  0834  0873               	movf	display_val@i,w
  9759  0835  3E5D               	addlw	(low (_table| 0))& (0+255)
  9760  0836  0084               	movwf	4
  9761  0837  1383               	bcf	3,7	;select IRP bank0
  9762  0838  0800               	movf	0,w
  9763  0839  39F0               	andlw	240
  9764  083A  00F5               	movwf	??_display_val
  9765  083B  01F6               	clrf	??_display_val+1
  9766  083C  0875               	movf	??_display_val,w
  9767  083D  00F7               	movwf	display_val@t
  9768  083E  0876               	movf	??_display_val+1,w
  9769  083F  00F8               	movwf	display_val@t+1
  9770                           
  9771                           ;functions_source.c: 30:     t=t>>4;
  9772  0840  0E77               	swapf	display_val@t,w
  9773  0841  390F               	andlw	15
  9774  0842  00F7               	movwf	display_val@t
  9775  0843  0E78               	swapf	display_val@t+1,w
  9776  0844  39F0               	andlw	240
  9777  0845  04F7               	iorwf	display_val@t,f
  9778  0846  0E78               	swapf	display_val@t+1,w
  9779  0847  390F               	andlw	15
  9780  0848  00F8               	movwf	display_val@t+1
  9781  0849  30F0               	movlw	240
  9782  084A  1DF8               	btfss	display_val@t+1,3
  9783  084B  3000               	movlw	0
  9784  084C  04F8               	iorwf	display_val@t+1,f
  9785                           
  9786                           ;functions_source.c: 31:     writechar(t + '0');
  9787  084D  0877               	movf	display_val@t,w
  9788  084E  3E30               	addlw	48
  9789  084F  160A  158A  25B1  120A  158A  	fcall	_writechar
  9790                           
  9791                           ;functions_source.c: 32:     t=t<<4;
  9792  0854  0878               	movf	display_val@t+1,w
  9793  0855  00F6               	movwf	??_display_val+1
  9794  0856  0877               	movf	display_val@t,w
  9795  0857  00F5               	movwf	??_display_val
  9796  0858  0EF5               	swapf	??_display_val,f
  9797  0859  0EF6               	swapf	??_display_val+1,f
  9798  085A  30F0               	movlw	240
  9799  085B  05F6               	andwf	??_display_val+1,f
  9800  085C  0875               	movf	??_display_val,w
  9801  085D  390F               	andlw	15
  9802  085E  04F6               	iorwf	??_display_val+1,f
  9803  085F  30F0               	movlw	240
  9804  0860  05F5               	andwf	??_display_val,f
  9805  0861  0875               	movf	??_display_val,w
  9806  0862  00F7               	movwf	display_val@t
  9807  0863  0876               	movf	??_display_val+1,w
  9808  0864  00F8               	movwf	display_val@t+1
  9809                           
  9810                           ;functions_source.c: 33:     t = table[i]&0x0f;
  9811  0865  0873               	movf	display_val@i,w
  9812  0866  3E5D               	addlw	(low (_table| 0))& (0+255)
  9813  0867  0084               	movwf	4
  9814  0868  1383               	bcf	3,7	;select IRP bank0
  9815  0869  0800               	movf	0,w
  9816  086A  390F               	andlw	15
  9817  086B  00F5               	movwf	??_display_val
  9818  086C  01F6               	clrf	??_display_val+1
  9819  086D  0875               	movf	??_display_val,w
  9820  086E  00F7               	movwf	display_val@t
  9821  086F  0876               	movf	??_display_val+1,w
  9822  0870  00F8               	movwf	display_val@t+1
  9823                           
  9824                           ;functions_source.c: 34:     writechar(t + '0');
  9825  0871  0877               	movf	display_val@t,w
  9826  0872  3E30               	addlw	48
  9827  0873  160A  158A  25B1  120A  158A  	fcall	_writechar
  9828                           
  9829                           ;functions_source.c: 36:     if (i == 0 || i == 6){
  9830  0878  0873               	movf	display_val@i,w
  9831  0879  0474               	iorwf	display_val@i+1,w
  9832  087A  1903               	btfsc	3,2
  9833  087B  2881               	goto	l3768
  9834  087C  3006               	movlw	6
  9835  087D  0673               	xorwf	display_val@i,w
  9836  087E  0474               	iorwf	display_val@i+1,w
  9837  087F  1D03               	btfss	3,2
  9838  0880  2886               	goto	l3770
  9839  0881                     l3768:	
  9840                           
  9841                           ;functions_source.c: 37:         writecmd_4line(0x94);
  9842  0881  3094               	movlw	148
  9843  0882  160A  158A  25CD   	fcall	_writecmd_4line
  9844                           
  9845                           ;functions_source.c: 38:     }
  9846  0885  0008               	return
  9847  0886                     l3770:	
  9848  0886  0373               	decf	display_val@i,w
  9849  0887  0474               	iorwf	display_val@i+1,w
  9850  0888  1903               	btfsc	3,2
  9851  0889  288F               	goto	l3774
  9852  088A  3004               	movlw	4
  9853  088B  0673               	xorwf	display_val@i,w
  9854  088C  0474               	iorwf	display_val@i+1,w
  9855  088D  1D03               	btfss	3,2
  9856  088E  2894               	goto	l3776
  9857  088F                     l3774:	
  9858                           
  9859                           ;functions_source.c: 40:         writecmd_4line(0x92);
  9860  088F  3092               	movlw	146
  9861  0890  160A  158A  25CD   	fcall	_writecmd_4line
  9862                           
  9863                           ;functions_source.c: 41:     }
  9864  0893  0008               	return
  9865  0894                     l3776:	
  9866  0894  3002               	movlw	2
  9867  0895  0673               	xorwf	display_val@i,w
  9868  0896  0474               	iorwf	display_val@i+1,w
  9869  0897  1903               	btfsc	3,2
  9870  0898  289E               	goto	l3780
  9871  0899  3003               	movlw	3
  9872  089A  0673               	xorwf	display_val@i,w
  9873  089B  0474               	iorwf	display_val@i+1,w
  9874  089C  1D03               	btfss	3,2
  9875  089D  0008               	return
  9876  089E                     l3780:	
  9877                           
  9878                           ;functions_source.c: 43:         writecmd_4line(0x90);
  9879  089E  3090               	movlw	144
  9880  089F  160A  158A  25CD   	fcall	_writecmd_4line
  9881  08A2  0008               	return
  9882  08A3                     __end_of_display_val:	
  9883                           
  9884                           	psect	text39
  9885  1DCD                     __ptext39:	
  9886 ;; *************** function _writecmd_4line *****************
  9887 ;; Defined at:
  9888 ;;		line 38 in file "lcd.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  x               1    wreg     unsigned char 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  x               1    2[COMMON] unsigned char 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      void 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 300/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9902 ;;      Params:         0       0       0       0       0
  9903 ;;      Locals:         1       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0
  9905 ;;      Totals:         1       0       0       0       0
  9906 ;;Total ram usage:        1 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:    1
  9909 ;; This function calls:
  9910 ;;		_delay_lcd
  9911 ;; This function is called by:
  9912 ;;		_lcd_init
  9913 ;;		_display_clock
  9914 ;;		_start_date
  9915 ;;		_clock_setting
  9916 ;;		_date_setting
  9917 ;;		_D
  9918 ;;		_display_temp
  9919 ;;		_temp_setting
  9920 ;;		_set_day
  9921 ;;		_set_night
  9922 ;;		_cool
  9923 ;;		_heat
  9924 ;;		_OK
  9925 ;;		_display_val
  9926 ;;		_main
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           
  9931                           ;psect for function _writecmd_4line
  9932  1DCD                     _writecmd_4line:	
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in _writecmd_4line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9936                           ;writecmd_4line@x stored from wreg
  9937  1DCD  00F2               	movwf	writecmd_4line@x
  9938                           
  9939                           ;lcd.c: 38: void writecmd_4line(unsigned char x);lcd.c: 39: {;lcd.c: 40:     RA5=0;
  9940  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9941  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  9942  1DD0  1285               	bcf	5,5	;volatile
  9943                           
  9944                           ;lcd.c: 41:     RA4=0;
  9945  1DD1  1205               	bcf	5,4	;volatile
  9946                           
  9947                           ;lcd.c: 42:     RA3=0;
  9948  1DD2  1185               	bcf	5,3	;volatile
  9949                           
  9950                           ;lcd.c: 43:     delay_lcd();
  9951  1DD3  160A  158A  2585  160A  158A  	fcall	_delay_lcd
  9952                           
  9953                           ;lcd.c: 44:     RA3=1;
  9954  1DD8  1283               	bcf	3,5	;RP0=0, select bank0
  9955  1DD9  1303               	bcf	3,6	;RP1=0, select bank0
  9956  1DDA  1585               	bsf	5,3	;volatile
  9957                           
  9958                           ;lcd.c: 45:     delay_lcd();
  9959  1DDB  160A  158A  2585  160A  158A  	fcall	_delay_lcd
  9960                           
  9961                           ;lcd.c: 46:     PORTD=x;
  9962  1DE0  0872               	movf	writecmd_4line@x,w
  9963  1DE1  1283               	bcf	3,5	;RP0=0, select bank0
  9964  1DE2  1303               	bcf	3,6	;RP1=0, select bank0
  9965  1DE3  0088               	movwf	8	;volatile
  9966                           
  9967                           ;lcd.c: 47:     delay_lcd();
  9968  1DE4  160A  158A  2585   	fcall	_delay_lcd
  9969                           
  9970                           ;lcd.c: 48:     RA3=0;
  9971  1DE7  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1DE8  1303               	bcf	3,6	;RP1=0, select bank0
  9973  1DE9  1185               	bcf	5,3	;volatile
  9974  1DEA  0008               	return
  9975  1DEB                     __end_of_writecmd_4line:	
  9976                           
  9977                           	psect	text40
  9978  1DB1                     __ptext40:	
  9979 ;; *************** function _writechar *****************
  9980 ;; Defined at:
  9981 ;;		line 23 in file "lcd.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  x               1    wreg     unsigned char 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  x               1    2[COMMON] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 300/0
  9992 ;;		On exit  : 300/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9995 ;;      Params:         0       0       0       0       0
  9996 ;;      Locals:         1       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0
  9998 ;;      Totals:         1       0       0       0       0
  9999 ;;Total ram usage:        1 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    1
 10002 ;; This function calls:
 10003 ;;		_delay_lcd
 10004 ;; This function is called by:
 10005 ;;		_write_str
 10006 ;;		_display_clock
 10007 ;;		_start_date
 10008 ;;		_start_time
 10009 ;;		_display_temp
 10010 ;;		_set_day
 10011 ;;		_set_night
 10012 ;;		_display_val
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _writechar
 10018  1DB1                     _writechar:	
 10019                           
 10020                           ;incstack = 0
 10021                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10022                           ;writechar@x stored from wreg
 10023  1DB1  00F2               	movwf	writechar@x
 10024                           
 10025                           ;lcd.c: 23: void writechar(unsigned char x);lcd.c: 24: {;lcd.c: 25:     RA5=1;
 10026  1DB2  1685               	bsf	5,5	;volatile
 10027                           
 10028                           ;lcd.c: 26:     RA4=0;
 10029  1DB3  1205               	bcf	5,4	;volatile
 10030                           
 10031                           ;lcd.c: 27:     RA3=0;
 10032  1DB4  1185               	bcf	5,3	;volatile
 10033                           
 10034                           ;lcd.c: 28:     delay_lcd();
 10035  1DB5  160A  158A  2585  160A  158A  	fcall	_delay_lcd
 10036                           
 10037                           ;lcd.c: 29:     RA3=1;
 10038  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
 10039  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
 10040  1DBC  1585               	bsf	5,3	;volatile
 10041                           
 10042                           ;lcd.c: 30:     delay_lcd();
 10043  1DBD  160A  158A  2585  160A  158A  	fcall	_delay_lcd
 10044                           
 10045                           ;lcd.c: 31:     PORTD=x;
 10046  1DC2  0872               	movf	writechar@x,w
 10047  1DC3  1283               	bcf	3,5	;RP0=0, select bank0
 10048  1DC4  1303               	bcf	3,6	;RP1=0, select bank0
 10049  1DC5  0088               	movwf	8	;volatile
 10050                           
 10051                           ;lcd.c: 32:     delay_lcd();
 10052  1DC6  160A  158A  2585   	fcall	_delay_lcd
 10053                           
 10054                           ;lcd.c: 33:     RA3=0;
 10055  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
 10056  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
 10057  1DCB  1185               	bcf	5,3	;volatile
 10058  1DCC  0008               	return
 10059  1DCD                     __end_of_writechar:	
 10060                           
 10061                           	psect	text41
 10062  1D85                     __ptext41:	
 10063 ;; *************** function _delay_lcd *****************
 10064 ;; Defined at:
 10065 ;;		line 15 in file "lcd.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;  i               2    0[COMMON] int 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      void 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, btemp+1
 10074 ;; Tracked objects:
 10075 ;;		On entry : 300/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10079 ;;      Params:         0       0       0       0       0
 10080 ;;      Locals:         2       0       0       0       0
 10081 ;;      Temps:          0       0       0       0       0
 10082 ;;      Totals:         2       0       0       0       0
 10083 ;;Total ram usage:        2 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_writechar
 10089 ;;		_writecmd_4line
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           
 10094                           ;psect for function _delay_lcd
 10095  1D85                     _delay_lcd:	
 10096                           
 10097                           ;lcd.c: 17:     int i;;lcd.c: 18: for(i=0;i<60;i++);
 10098                           
 10099                           ;incstack = 0
 10100                           ; Regs used in _delay_lcd: [wreg+status,2+btemp+1]
 10101  1D85  01F0               	clrf	delay_lcd@i
 10102  1D86  01F1               	clrf	delay_lcd@i+1
 10103  1D87                     l3614:	
 10104  1D87  3001               	movlw	1
 10105  1D88  07F0               	addwf	delay_lcd@i,f
 10106  1D89  1803               	skipnc
 10107  1D8A  0AF1               	incf	delay_lcd@i+1,f
 10108  1D8B  3000               	movlw	0
 10109  1D8C  07F1               	addwf	delay_lcd@i+1,f
 10110  1D8D  0871               	movf	delay_lcd@i+1,w
 10111  1D8E  3A80               	xorlw	128
 10112  1D8F  00FF               	movwf	127
 10113  1D90  3080               	movlw	128
 10114  1D91  027F               	subwf	127,w
 10115  1D92  1D03               	skipz
 10116  1D93  2D96               	goto	u2975
 10117  1D94  303C               	movlw	60
 10118  1D95  0270               	subwf	delay_lcd@i,w
 10119  1D96                     u2975:	
 10120  1D96  1803               	btfsc	3,0
 10121  1D97  0008               	return
 10122  1D98  2D87               	goto	l3614
 10123  1D99                     __end_of_delay_lcd:	
 10124                           
 10125                           	psect	text42
 10126  1D71                     __ptext42:	
 10127 ;; *************** function _delay_main *****************
 10128 ;; Defined at:
 10129 ;;		line 12 in file "functions_source.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  i               2    0[COMMON] int 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, btemp+1
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10143 ;;      Params:         0       0       0       0       0
 10144 ;;      Locals:         2       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0
 10146 ;;      Totals:         2       0       0       0       0
 10147 ;;Total ram usage:        2 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_clock_setting
 10153 ;;		_date_setting
 10154 ;;		_D
 10155 ;;		_T
 10156 ;;		_temp_increment
 10157 ;;		_temp_decrement
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           
 10162                           ;psect for function _delay_main
 10163  1D71                     _delay_main:	
 10164                           
 10165                           ;functions_source.c: 13:     for (int i=0;i<10000;i++){
 10166                           
 10167                           ;incstack = 0
 10168                           ; Regs used in _delay_main: [wreg+status,2+btemp+1]
 10169  1D71  01F0               	clrf	delay_main@i
 10170  1D72  01F1               	clrf	delay_main@i+1
 10171  1D73                     l3660:	
 10172                           
 10173                           ;functions_source.c: 14:     }
 10174  1D73  3001               	movlw	1
 10175  1D74  07F0               	addwf	delay_main@i,f
 10176  1D75  1803               	skipnc
 10177  1D76  0AF1               	incf	delay_main@i+1,f
 10178  1D77  3000               	movlw	0
 10179  1D78  07F1               	addwf	delay_main@i+1,f
 10180  1D79  0871               	movf	delay_main@i+1,w
 10181  1D7A  3A80               	xorlw	128
 10182  1D7B  00FF               	movwf	127
 10183  1D7C  30A7               	movlw	167
 10184  1D7D  027F               	subwf	127,w
 10185  1D7E  1D03               	skipz
 10186  1D7F  2D82               	goto	u3025
 10187  1D80  3010               	movlw	16
 10188  1D81  0270               	subwf	delay_main@i,w
 10189  1D82                     u3025:	
 10190  1D82  1803               	btfsc	3,0
 10191  1D83  0008               	return
 10192  1D84  2D73               	goto	l3660
 10193  1D85                     __end_of_delay_main:	
 10194                           
 10195                           	psect	text43
 10196  1260                     __ptext43:	
 10197 ;; *************** function _OutputPins *****************
 10198 ;; Defined at:
 10199 ;;		line 11 in file "button_press.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;		None
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      void 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0, pclath, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 300/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10213 ;;      Params:         0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0
 10215 ;;      Temps:          2       0       0       0       0
 10216 ;;      Totals:         2       0       0       0       0
 10217 ;;Total ram usage:        2 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    1
 10220 ;; This function calls:
 10221 ;;		_InputPins
 10222 ;; This function is called by:
 10223 ;;		_clock_setting
 10224 ;;		_date_setting
 10225 ;;		_temp_setting
 10226 ;;		_set_day
 10227 ;;		_set_night
 10228 ;;		_main
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _OutputPins
 10234  1260                     _OutputPins:	
 10235                           
 10236                           ;button_press.c: 13:     PORTCbits.RC0 = 1;
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _OutputPins: [wreg+status,2+status,0+pclath+cstack]
 10240  1260  1283               	bcf	3,5	;RP0=0, select bank0
 10241  1261  1303               	bcf	3,6	;RP1=0, select bank0
 10242  1262  1407               	bsf	7,0	;volatile
 10243                           
 10244                           ;button_press.c: 14:     OutputRC = 1;
 10245  1263  01C1               	clrf	_OutputRC
 10246  1264  0AC1               	incf	_OutputRC,f
 10247                           
 10248                           ;button_press.c: 15:     InputPins(OutputRC);
 10249  1265  0841               	movf	_OutputRC,w
 10250  1266  00F3               	movwf	??_OutputPins
 10251  1267  01F4               	clrf	??_OutputPins+1
 10252  1268  0873               	movf	??_OutputPins,w
 10253  1269  00F0               	movwf	InputPins@RC
 10254  126A  0874               	movf	??_OutputPins+1,w
 10255  126B  00F1               	movwf	InputPins@RC+1
 10256  126C  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10257                           
 10258                           ;button_press.c: 16:     PORTCbits.RC0 = 0;
 10259  1271  1007               	bcf	7,0	;volatile
 10260                           
 10261                           ;button_press.c: 18:     PORTCbits.RC1 = 1;
 10262  1272  1487               	bsf	7,1	;volatile
 10263                           
 10264                           ;button_press.c: 19:     OutputRC = 2;
 10265  1273  3002               	movlw	2
 10266  1274  00F3               	movwf	??_OutputPins
 10267  1275  0873               	movf	??_OutputPins,w
 10268  1276  00C1               	movwf	_OutputRC
 10269                           
 10270                           ;button_press.c: 20:     InputPins(OutputRC);
 10271  1277  0841               	movf	_OutputRC,w
 10272  1278  00F3               	movwf	??_OutputPins
 10273  1279  01F4               	clrf	??_OutputPins+1
 10274  127A  0873               	movf	??_OutputPins,w
 10275  127B  00F0               	movwf	InputPins@RC
 10276  127C  0874               	movf	??_OutputPins+1,w
 10277  127D  00F1               	movwf	InputPins@RC+1
 10278  127E  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10279                           
 10280                           ;button_press.c: 21:     PORTCbits.RC1 = 0;
 10281  1283  1087               	bcf	7,1	;volatile
 10282                           
 10283                           ;button_press.c: 23:     PORTCbits.RC2 = 1;
 10284  1284  1507               	bsf	7,2	;volatile
 10285                           
 10286                           ;button_press.c: 24:     OutputRC = 3;
 10287  1285  3003               	movlw	3
 10288  1286  00F3               	movwf	??_OutputPins
 10289  1287  0873               	movf	??_OutputPins,w
 10290  1288  00C1               	movwf	_OutputRC
 10291                           
 10292                           ;button_press.c: 25:     InputPins(OutputRC);
 10293  1289  0841               	movf	_OutputRC,w
 10294  128A  00F3               	movwf	??_OutputPins
 10295  128B  01F4               	clrf	??_OutputPins+1
 10296  128C  0873               	movf	??_OutputPins,w
 10297  128D  00F0               	movwf	InputPins@RC
 10298  128E  0874               	movf	??_OutputPins+1,w
 10299  128F  00F1               	movwf	InputPins@RC+1
 10300  1290  160A  158A  26B7  160A  118A  	fcall	_InputPins
 10301                           
 10302                           ;button_press.c: 26:     PORTCbits.RC2 = 0;
 10303  1295  1107               	bcf	7,2	;volatile
 10304                           
 10305                           ;button_press.c: 28:     PORTCbits.RC3 = 1;
 10306  1296  1587               	bsf	7,3	;volatile
 10307                           
 10308                           ;button_press.c: 29:     OutputRC = 4;
 10309  1297  3004               	movlw	4
 10310  1298  00F3               	movwf	??_OutputPins
 10311  1299  0873               	movf	??_OutputPins,w
 10312  129A  00C1               	movwf	_OutputRC
 10313                           
 10314                           ;button_press.c: 30:     InputPins(OutputRC);
 10315  129B  0841               	movf	_OutputRC,w
 10316  129C  00F3               	movwf	??_OutputPins
 10317  129D  01F4               	clrf	??_OutputPins+1
 10318  129E  0873               	movf	??_OutputPins,w
 10319  129F  00F0               	movwf	InputPins@RC
 10320  12A0  0874               	movf	??_OutputPins+1,w
 10321  12A1  00F1               	movwf	InputPins@RC+1
 10322  12A2  160A  158A  26B7   	fcall	_InputPins
 10323                           
 10324                           ;button_press.c: 31:     PORTCbits.RC3 = 0;
 10325  12A5  1187               	bcf	7,3	;volatile
 10326  12A6  0008               	return
 10327  12A7                     __end_of_OutputPins:	
 10328                           
 10329                           	psect	text44
 10330  1EB7                     __ptext44:	
 10331 ;; *************** function _InputPins *****************
 10332 ;; Defined at:
 10333 ;;		line 36 in file "button_press.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  RC              2    0[COMMON] unsigned int 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg
 10342 ;; Tracked objects:
 10343 ;;		On entry : 300/0
 10344 ;;		On exit  : 300/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10347 ;;      Params:         2       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0
 10349 ;;      Temps:          1       0       0       0       0
 10350 ;;      Totals:         3       0       0       0       0
 10351 ;;Total ram usage:        3 bytes
 10352 ;; Hardware stack levels used:    1
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_OutputPins
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           
 10361                           ;psect for function _InputPins
 10362  1EB7                     _InputPins:	
 10363                           
 10364                           ;button_press.c: 38:     if (PORTCbits.RC4 == 1){
 10365                           
 10366                           ;incstack = 0
 10367                           ; Regs used in _InputPins: [wreg]
 10368  1EB7  1E07               	btfss	7,4	;volatile
 10369  1EB8  2EC0               	goto	l63
 10370                           
 10371                           ;button_press.c: 39:         SecondRC = 1;
 10372  1EB9  01C3               	clrf	_SecondRC
 10373  1EBA  0AC3               	incf	_SecondRC,f
 10374                           
 10375                           ;button_press.c: 40:         FirstRC = RC;
 10376  1EBB  0870               	movf	InputPins@RC,w
 10377  1EBC  00F2               	movwf	??_InputPins
 10378  1EBD  0872               	movf	??_InputPins,w
 10379  1EBE  00C2               	movwf	_FirstRC
 10380                           
 10381                           ;button_press.c: 42:     }
 10382  1EBF  0008               	return
 10383  1EC0                     l63:	
 10384                           ;button_press.c: 43:     else if (PORTCbits.RC5 == 1){
 10385                           
 10386  1EC0  1E87               	btfss	7,5	;volatile
 10387  1EC1  2ECB               	goto	l65
 10388                           
 10389                           ;button_press.c: 44:         SecondRC = 2;
 10390  1EC2  3002               	movlw	2
 10391  1EC3  00F2               	movwf	??_InputPins
 10392  1EC4  0872               	movf	??_InputPins,w
 10393  1EC5  00C3               	movwf	_SecondRC
 10394                           
 10395                           ;button_press.c: 45:         FirstRC = RC;
 10396  1EC6  0870               	movf	InputPins@RC,w
 10397  1EC7  00F2               	movwf	??_InputPins
 10398  1EC8  0872               	movf	??_InputPins,w
 10399  1EC9  00C2               	movwf	_FirstRC
 10400                           
 10401                           ;button_press.c: 47:     }
 10402  1ECA  0008               	return
 10403  1ECB                     l65:	
 10404                           ;button_press.c: 48:     else if (PORTCbits.RC6 == 1){
 10405                           
 10406  1ECB  1F07               	btfss	7,6	;volatile
 10407  1ECC  2ED6               	goto	l67
 10408                           
 10409                           ;button_press.c: 49:         SecondRC = 3;
 10410  1ECD  3003               	movlw	3
 10411  1ECE  00F2               	movwf	??_InputPins
 10412  1ECF  0872               	movf	??_InputPins,w
 10413  1ED0  00C3               	movwf	_SecondRC
 10414                           
 10415                           ;button_press.c: 50:         FirstRC = RC;
 10416  1ED1  0870               	movf	InputPins@RC,w
 10417  1ED2  00F2               	movwf	??_InputPins
 10418  1ED3  0872               	movf	??_InputPins,w
 10419  1ED4  00C2               	movwf	_FirstRC
 10420                           
 10421                           ;button_press.c: 52:     }
 10422  1ED5  0008               	return
 10423  1ED6                     l67:	
 10424                           ;button_press.c: 53:     else if (PORTCbits.RC7 == 1){
 10425                           
 10426  1ED6  1F87               	btfss	7,7	;volatile
 10427  1ED7  0008               	return
 10428                           
 10429                           ;button_press.c: 54:         SecondRC = 4;
 10430  1ED8  3004               	movlw	4
 10431  1ED9  00F2               	movwf	??_InputPins
 10432  1EDA  0872               	movf	??_InputPins,w
 10433  1EDB  00C3               	movwf	_SecondRC
 10434                           
 10435                           ;button_press.c: 55:         FirstRC = RC;
 10436  1EDC  0870               	movf	InputPins@RC,w
 10437  1EDD  00F2               	movwf	??_InputPins
 10438  1EDE  0872               	movf	??_InputPins,w
 10439  1EDF  00C2               	movwf	_FirstRC
 10440  1EE0  0008               	return
 10441  1EE1                     __end_of_InputPins:	
 10442                           
 10443                           	psect	text45
 10444  0800                     __ptext45:	
 10445 ;; *************** function _clock_init *****************
 10446 ;; Defined at:
 10447 ;;		line 183 in file "clock_source.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;		None
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;		None
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10456 ;; Tracked objects:
 10457 ;;		On entry : B00/0
 10458 ;;		On exit  : 300/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10461 ;;      Params:         0       0       0       0       0
 10462 ;;      Locals:         0       0       0       0       0
 10463 ;;      Temps:          0       0       0       0       0
 10464 ;;      Totals:         0       0       0       0       0
 10465 ;;Total ram usage:        0 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; Hardware stack levels required when called:    2
 10468 ;; This function calls:
 10469 ;;		_ds1302_init
 10470 ;;		_port_init
 10471 ;;		_set_time_date
 10472 ;; This function is called by:
 10473 ;;		_main
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           
 10478                           ;psect for function _clock_init
 10479  0800                     _clock_init:	
 10480                           
 10481                           ;clock_source.c: 184:     port_init();
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _clock_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10485  0800  160A  158A  24FC  120A  158A  	fcall	_port_init
 10486                           
 10487                           ;clock_source.c: 185:     ds1302_init();
 10488  0805  160A  158A  251D  120A  158A  	fcall	_ds1302_init
 10489                           
 10490                           ;clock_source.c: 186:     set_time_date();
 10491  080A  160A  158A  268F   	fcall	_set_time_date
 10492  080D  0008               	return
 10493  080E                     __end_of_clock_init:	
 10494                           
 10495                           	psect	text46
 10496  1E8F                     __ptext46:	
 10497 ;; *************** function _set_time_date *****************
 10498 ;; Defined at:
 10499 ;;		line 38 in file "clock_source.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  i               2    5[COMMON] int 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 300/0
 10510 ;;		On exit  : 300/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10513 ;;      Params:         0       0       0       0       0
 10514 ;;      Locals:         2       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0
 10516 ;;      Totals:         2       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    1
 10520 ;; This function calls:
 10521 ;;		_time_write_1
 10522 ;; This function is called by:
 10523 ;;		_clock_init
 10524 ;;		_clock_setting
 10525 ;;		_date_setting
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _set_time_date
 10531  1E8F                     _set_time_date:	
 10532                           
 10533                           ;clock_source.c: 39:    int i;;clock_source.c: 40:    RB5=1;
 10534                           
 10535                           ;incstack = 0
 10536                           ; Regs used in _set_time_date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10537  1E8F  1686               	bsf	6,5	;volatile
 10538                           
 10539                           ;clock_source.c: 41:    time_write_1(0xbe);
 10540  1E90  30BE               	movlw	190
 10541  1E91  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10542                           
 10543                           ;clock_source.c: 43:    for(i=0;i<8;i++)
 10544  1E96  01F5               	clrf	set_time_date@i
 10545  1E97  01F6               	clrf	set_time_date@i+1
 10546  1E98                     l3924:	
 10547                           
 10548                           ;clock_source.c: 44:     {;clock_source.c: 45:        time_write_1(table[i]);
 10549  1E98  0875               	movf	set_time_date@i,w
 10550  1E99  3E5D               	addlw	(low (_table| 0))& (0+255)
 10551  1E9A  0084               	movwf	4
 10552  1E9B  1383               	bcf	3,7	;select IRP bank0
 10553  1E9C  0800               	movf	0,w
 10554  1E9D  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10555                           
 10556                           ;clock_source.c: 46:     }
 10557  1EA2  3001               	movlw	1
 10558  1EA3  07F5               	addwf	set_time_date@i,f
 10559  1EA4  1803               	skipnc
 10560  1EA5  0AF6               	incf	set_time_date@i+1,f
 10561  1EA6  3000               	movlw	0
 10562  1EA7  07F6               	addwf	set_time_date@i+1,f
 10563  1EA8  0876               	movf	set_time_date@i+1,w
 10564  1EA9  3A80               	xorlw	128
 10565  1EAA  00FF               	movwf	127
 10566  1EAB  3080               	movlw	128
 10567  1EAC  027F               	subwf	127,w
 10568  1EAD  1D03               	skipz
 10569  1EAE  2EB1               	goto	u3455
 10570  1EAF  3008               	movlw	8
 10571  1EB0  0275               	subwf	set_time_date@i,w
 10572  1EB1                     u3455:	
 10573  1EB1  1C03               	skipc
 10574  1EB2  2E98               	goto	l3924
 10575                           
 10576                           ;clock_source.c: 47:    RB5=0;
 10577  1EB3  1283               	bcf	3,5	;RP0=0, select bank0
 10578  1EB4  1303               	bcf	3,6	;RP1=0, select bank0
 10579  1EB5  1286               	bcf	6,5	;volatile
 10580  1EB6  0008               	return
 10581  1EB7                     __end_of_set_time_date:	
 10582                           
 10583                           	psect	text47
 10584  1CFC                     __ptext47:	
 10585 ;; *************** function _port_init *****************
 10586 ;; Defined at:
 10587 ;;		line 102 in file "clock_source.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;		None
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;		None
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2
 10596 ;; Tracked objects:
 10597 ;;		On entry : B00/0
 10598 ;;		On exit  : B00/100
 10599 ;;		Unchanged: 800/0
 10600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10601 ;;      Params:         0       0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0
 10604 ;;      Totals:         0       0       0       0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_clock_init
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           
 10615                           ;psect for function _port_init
 10616  1CFC                     _port_init:	
 10617                           
 10618                           ;clock_source.c: 103:     ADCON1=0X06;
 10619                           
 10620                           ;incstack = 0
 10621                           ; Regs used in _port_init: [wreg+status,2]
 10622  1CFC  3006               	movlw	6
 10623  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
 10624  1CFE  009F               	movwf	31	;volatile
 10625                           
 10626                           ;clock_source.c: 104:     TRISB=0X02;
 10627  1CFF  3002               	movlw	2
 10628  1D00  0086               	movwf	6	;volatile
 10629                           
 10630                           ;clock_source.c: 105:     OPTION_REG=0X00;
 10631  1D01  0181               	clrf	1	;volatile
 10632  1D02  0008               	return
 10633  1D03                     __end_of_port_init:	
 10634                           
 10635                           	psect	text48
 10636  1D1D                     __ptext48:	
 10637 ;; *************** function _ds1302_init *****************
 10638 ;; Defined at:
 10639 ;;		line 27 in file "clock_source.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      void 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : B00/100
 10650 ;;		On exit  : 300/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10653 ;;      Params:         0       0       0       0       0
 10654 ;;      Locals:         0       0       0       0       0
 10655 ;;      Temps:          0       0       0       0       0
 10656 ;;      Totals:         0       0       0       0       0
 10657 ;;Total ram usage:        0 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    1
 10660 ;; This function calls:
 10661 ;;		_time_write_1
 10662 ;; This function is called by:
 10663 ;;		_clock_init
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _ds1302_init
 10669  1D1D                     _ds1302_init:	
 10670                           
 10671                           ;clock_source.c: 28:    RB0=0;
 10672                           
 10673                           ;incstack = 0
 10674                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10675  1D1D  1283               	bcf	3,5	;RP0=0, select bank0
 10676  1D1E  1006               	bcf	6,0	;volatile
 10677                           
 10678                           ;clock_source.c: 29:    RB5 =0;
 10679  1D1F  1286               	bcf	6,5	;volatile
 10680                           
 10681                           ;clock_source.c: 30:    RB5=1;
 10682  1D20  1686               	bsf	6,5	;volatile
 10683                           
 10684                           ;clock_source.c: 31:    time_write_1(0x8e);
 10685  1D21  308E               	movlw	142
 10686  1D22  160A  158A  2669  160A  158A  	fcall	_time_write_1
 10687                           
 10688                           ;clock_source.c: 32:    time_write_1(0);
 10689  1D27  3000               	movlw	0
 10690  1D28  160A  158A  2669   	fcall	_time_write_1
 10691                           
 10692                           ;clock_source.c: 33:    RB5=0;
 10693  1D2B  1286               	bcf	6,5	;volatile
 10694  1D2C  0008               	return
 10695  1D2D                     __end_of_ds1302_init:	
 10696                           
 10697                           	psect	text49
 10698  1E69                     __ptext49:	
 10699 ;; *************** function _time_write_1 *****************
 10700 ;; Defined at:
 10701 ;;		line 65 in file "clock_source.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;  time_tx         1    wreg     unsigned char 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;  time_tx         1    4[COMMON] unsigned char 
 10706 ;;  j               2    2[COMMON] int 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0, btemp+1
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 300/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10716 ;;      Params:         0       0       0       0       0
 10717 ;;      Locals:         3       0       0       0       0
 10718 ;;      Temps:          2       0       0       0       0
 10719 ;;      Totals:         5       0       0       0       0
 10720 ;;Total ram usage:        5 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_ds1302_init
 10726 ;;		_set_time_date
 10727 ;;		_get_time
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           
 10732                           ;psect for function _time_write_1
 10733  1E69                     _time_write_1:	
 10734                           
 10735                           ;incstack = 0
 10736                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
 10737                           ;time_write_1@time_tx stored from wreg
 10738  1E69  00F4               	movwf	time_write_1@time_tx
 10739                           
 10740                           ;clock_source.c: 66:     int j;;clock_source.c: 67:     for(j=0;j<8;j++)
 10741  1E6A  01F2               	clrf	time_write_1@j
 10742  1E6B  01F3               	clrf	time_write_1@j+1
 10743  1E6C                     l205:	
 10744                           
 10745                           ;clock_source.c: 68:     {;clock_source.c: 69:         RB4=0;
 10746  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
 10747  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
 10748  1E6E  1206               	bcf	6,4	;volatile
 10749                           
 10750                           ;clock_source.c: 70:         RB0=0;
 10751  1E6F  1006               	bcf	6,0	;volatile
 10752                           
 10753                           ;clock_source.c: 71:         if(time_tx&0x01)
 10754  1E70  1874               	btfsc	time_write_1@time_tx,0
 10755                           
 10756                           ;clock_source.c: 72:           {;clock_source.c: 73:             RB4=1;
 10757  1E71  1606               	bsf	6,4	;volatile
 10758                           
 10759                           ;clock_source.c: 75:         time_tx=time_tx>>1;
 10760  1E72  0874               	movf	time_write_1@time_tx,w
 10761  1E73  00F0               	movwf	??_time_write_1
 10762  1E74  1003               	clrc
 10763  1E75  0C70               	rrf	??_time_write_1,w
 10764  1E76  00F1               	movwf	??_time_write_1+1
 10765  1E77  0871               	movf	??_time_write_1+1,w
 10766  1E78  00F4               	movwf	time_write_1@time_tx
 10767                           
 10768                           ;clock_source.c: 76:         RB0=1;
 10769  1E79  1406               	bsf	6,0	;volatile
 10770                           
 10771                           ;clock_source.c: 77:     }
 10772  1E7A  3001               	movlw	1
 10773  1E7B  07F2               	addwf	time_write_1@j,f
 10774  1E7C  1803               	skipnc
 10775  1E7D  0AF3               	incf	time_write_1@j+1,f
 10776  1E7E  3000               	movlw	0
 10777  1E7F  07F3               	addwf	time_write_1@j+1,f
 10778  1E80  0873               	movf	time_write_1@j+1,w
 10779  1E81  3A80               	xorlw	128
 10780  1E82  00FF               	movwf	127
 10781  1E83  3080               	movlw	128
 10782  1E84  027F               	subwf	127,w
 10783  1E85  1D03               	skipz
 10784  1E86  2E89               	goto	u3085
 10785  1E87  3008               	movlw	8
 10786  1E88  0272               	subwf	time_write_1@j,w
 10787  1E89                     u3085:	
 10788  1E89  1C03               	skipc
 10789  1E8A  2E6C               	goto	l205
 10790                           
 10791                           ;clock_source.c: 78:     RB0=0;
 10792  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
 10793  1E8C  1303               	bcf	3,6	;RP1=0, select bank0
 10794  1E8D  1006               	bcf	6,0	;volatile
 10795  1E8E  0008               	return
 10796  1E8F                     __end_of_time_write_1:	
 10797                           
 10798                           	psect	text50
 10799  1CF5                     __ptext50:	
 10800 ;; *************** function _buzzer_init *****************
 10801 ;; Defined at:
 10802 ;;		line 16 in file "buzzer.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2
 10811 ;; Tracked objects:
 10812 ;;		On entry : B00/0
 10813 ;;		On exit  : B00/0
 10814 ;;		Unchanged: 800/0
 10815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10816 ;;      Params:         0       0       0       0       0
 10817 ;;      Locals:         0       0       0       0       0
 10818 ;;      Temps:          0       0       0       0       0
 10819 ;;      Totals:         0       0       0       0       0
 10820 ;;Total ram usage:        0 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; This function calls:
 10823 ;;		Nothing
 10824 ;; This function is called by:
 10825 ;;		_main
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           
 10830                           ;psect for function _buzzer_init
 10831  1CF5                     _buzzer_init:	
 10832                           
 10833                           ;incstack = 0
 10834                           ; Regs used in _buzzer_init: [wreg+status,2]
 10835  1CF5  3007               	movlw	7
 10836  1CF6  1683               	bsf	3,5	;RP0=1, select bank1
 10837  1CF7  009F               	movwf	31	;volatile
 10838  1CF8  0189               	clrf	9	;volatile
 10839  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
 10840  1CFA  0189               	clrf	9	;volatile
 10841  1CFB  0008               	return
 10842  1CFC                     __end_of_buzzer_init:	
 10843  007E                     btemp	set	126	;btemp
 10844  007E                     wtemp0	set	126


Data Sizes:
    Strings     262
    Constant    0
    Data        27
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      78
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    T@T	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    T@C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    D@D	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 
		 -> RAM(DATA[512]), 

    D@C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 

    write_str@array	PTR unsigned char  size(2) Largest target is 17
		 -> STR_81(CODE[6]), STR_80(CODE[6]), STR_79(CODE[6]), STR_78(CODE[6]), 
		 -> STR_77(CODE[6]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[6]), 
		 -> STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[2]), 
		 -> STR_69(CODE[2]), STR_68(CODE[2]), STR_67(CODE[5]), STR_66(CODE[11]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[11]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[2]), STR_59(CODE[5]), STR_58(CODE[15]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[2]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[13]), STR_42(CODE[6]), 
		 -> STR_41(CODE[4]), STR_40(CODE[15]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_37(CODE[6]), STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[6]), 
		 -> STR_33(CODE[4]), STR_32(CODE[17]), STR_31(CODE[15]), STR_30(CODE[14]), 
		 -> STR_29(CODE[8]), STR_28(CODE[17]), STR_27(CODE[7]), STR_26(CODE[17]), 
		 -> STR_25(CODE[5]), STR_24(CODE[17]), STR_23(CODE[7]), STR_22(CODE[17]), 
		 -> STR_21(CODE[15]), STR_20(CODE[14]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[7]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[6]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    write_str@p	PTR unsigned char  size(2) Largest target is 17
		 -> STR_81(CODE[6]), STR_80(CODE[6]), STR_79(CODE[6]), STR_78(CODE[6]), 
		 -> STR_77(CODE[6]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[6]), 
		 -> STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[2]), 
		 -> STR_69(CODE[2]), STR_68(CODE[2]), STR_67(CODE[5]), STR_66(CODE[11]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[11]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[2]), STR_59(CODE[5]), STR_58(CODE[15]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[2]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[13]), STR_42(CODE[6]), 
		 -> STR_41(CODE[4]), STR_40(CODE[15]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_37(CODE[6]), STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[6]), 
		 -> STR_33(CODE[4]), STR_32(CODE[17]), STR_31(CODE[15]), STR_30(CODE[14]), 
		 -> STR_29(CODE[8]), STR_28(CODE[17]), STR_27(CODE[7]), STR_26(CODE[17]), 
		 -> STR_25(CODE[5]), STR_24(CODE[17]), STR_23(CODE[7]), STR_22(CODE[17]), 
		 -> STR_21(CODE[15]), STR_20(CODE[14]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[7]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[6]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _temp_setting->_set_day
    _temp_setting->_set_night
    _set_night->_write_str
    _set_day->_write_str
    _temp_increment->_delay_main
    _temp_decrement->_delay_main
    _heat->_write_str
    _temp_check_rise->___bmul
    _cool->_write_str
    _temp_check_lower->___bmul
    _OK->_write_str
    _lcd_init->_writecmd_4line
    _get_time->_time_read_1
    _get_time->_time_write_1
    _write_byte->_delay_temp
    _reset->_delay_temp
    _read_byte->_delay_temp
    _display_temp->_write_str
    _display_clock->_week
    _date_setting->_D
    _date_setting->_start_date
    _date_setting->_week
    _week->_write_str
    _start_date->_write_str
    _D->_write_str
    _clock_setting->_start_time
    _start_time->_write_str
    _write_str->_writechar
    _T->_display_val
    _display_val->_writechar
    _display_val->_writecmd_4line
    _writecmd_4line->_delay_lcd
    _writechar->_delay_lcd
    _OutputPins->_InputPins
    _clock_init->_set_time_date
    _set_time_date->_time_write_1
    _ds1302_init->_time_write_1

Critical Paths under _main in BANK0

    _main->_date_setting
    _temp_setting->_set_day
    _temp_setting->_set_night
    _date_setting->_D
    _clock_setting->_T

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  157541
                         _OutputPins
                       _button_reset
                        _buzzer_init
                         _clock_init
                      _clock_setting
                       _date_setting
                      _display_clock
                           _get_temp
                           _get_time
                     _initialisation
                           _lcd_init
                           _temp_day
                         _temp_night
                       _temp_setting
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _temp_setting                                         0     0      0   20882
                         _OutputPins
                       _button_reset
                            _set_day
                          _set_night
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _set_night                                            4     4      0    7053
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                         _OutputPins
                       _button_reset
                     _temp_decrement
                     _temp_increment
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _set_day                                              4     4      0    7053
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                         _OutputPins
                       _button_reset
                     _temp_decrement
                     _temp_increment
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_increment                                       0     0      0      46
                         _delay_main
 ---------------------------------------------------------------------------------
 (3) _temp_decrement                                       2     2      0      72
                                              2 COMMON     2     2      0
                         _delay_main
 ---------------------------------------------------------------------------------
 (1) _temp_night                                          14    14      0   22889
                                              0 BANK0     14    14      0
                                 _OK
                             ___wmul
                               _cool
                               _heat
 ---------------------------------------------------------------------------------
 (1) _temp_day                                            14    14      0   22889
                                              0 BANK0     14    14      0
                                 _OK
                             ___wmul
                               _cool
                               _heat
 ---------------------------------------------------------------------------------
 (2) _heat                                                 0     0      0    7205
                    _temp_check_rise
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_check_rise                                      5     5      0     821
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _cool                                                 0     0      0    7205
                   _temp_check_lower
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _temp_check_lower                                     5     5      0     821
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1916
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _OK                                                   0     0      0    6384
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      68
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             4     4      0    8790
                                              0 BANK0      4     4      0
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                       _display_temp
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset                                                2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _display_temp                                         0     0      0    6452
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     235
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              5     4      1     238
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0   13800
                                              0 BANK0      4     4      0
                               _week
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _date_setting                                        19    19      0   39729
                                              6 BANK0     19    19      0
                                  _D
                         _OutputPins
                             ___bmul
                       _button_reset
                         _delay_main
                        _display_val
                      _set_time_date
                         _start_date
                               _week
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _week                                                 2     0      2    6774
                                             12 COMMON     2     0      2
                          _write_str
 ---------------------------------------------------------------------------------
 (2) _start_date                                           4     4      0    6728
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _write_str
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     776
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _D                                                    8     2      6   12750
                                             12 COMMON     2     2      0
                                              0 BANK0      6     0      6
                         _delay_main
                        _display_val
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _clock_setting                                        2     2      0   21194
                                             12 BANK0      2     2      0
                         _OutputPins
                                  _T
                       _button_reset
                         _delay_main
                      _set_time_date
                         _start_time
                          _write_str
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (2) _start_time                                           4     4      0    6660
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _write_str
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _write_str                                            9     7      2    6316
                                              3 COMMON     9     7      2
                          _writechar
 ---------------------------------------------------------------------------------
 (3) _button_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _T                                                   13     7      6    7066
                                              9 COMMON     1     1      0
                                              0 BANK0     12     6      6
                         _delay_main
                        _display_val
 ---------------------------------------------------------------------------------
 (2) _display_val                                          6     4      2    3348
                                              3 COMMON     6     4      2
                          _writechar
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (1) _writecmd_4line                                       1     1      0      68
                                              2 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (2) _delay_lcd                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _delay_main                                           2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _OutputPins                                           2     2      0     392
                                              3 COMMON     2     2      0
                          _InputPins
 ---------------------------------------------------------------------------------
 (4) _InputPins                                            3     1      2     392
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _clock_init                                           0     0      0     250
                        _ds1302_init
                          _port_init
                      _set_time_date
 ---------------------------------------------------------------------------------
 (2) _set_time_date                                        2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OutputPins
     _InputPins
   _button_reset
   _buzzer_init
   _clock_init
     _ds1302_init
       _time_write_1
     _port_init
     _set_time_date
       _time_write_1
   _clock_setting
     _OutputPins
       _InputPins
     _T
       _delay_main
       _display_val
         _writechar
           _delay_lcd
         _writecmd_4line
           _delay_lcd
     _button_reset
     _delay_main
     _set_time_date
       _time_write_1
     _start_time
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _date_setting
     _D
       _delay_main
       _display_val
         _writechar
           _delay_lcd
         _writecmd_4line
           _delay_lcd
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _OutputPins
       _InputPins
     ___bmul
     _button_reset
     _delay_main
     _display_val
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _set_time_date
       _time_write_1
     _start_date
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _week
       _write_str
         _writechar
           _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _display_clock
     _week
       _write_str
         _writechar
           _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writechar
       _delay_lcd
     _writecmd_4line
       _delay_lcd
   _get_temp
     ___lbdiv
     ___lbmod
     ___lwdiv
     _display_temp
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _read_byte
       _delay_temp
     _reset
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _initialisation
   _lcd_init
     _writecmd_4line
       _delay_lcd
   _temp_day
     _OK
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     ___wmul
     _cool
       _temp_check_lower
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _heat
       _temp_check_rise
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
   _temp_night
     _OK
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     ___wmul
     _cool
       _temp_check_lower
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
     _heat
       _temp_check_rise
         ___bmul
       _write_str
         _writechar
           _delay_lcd
       _writecmd_4line
         _delay_lcd
   _temp_setting
     _OutputPins
       _InputPins
     _button_reset
     _set_day
       _OutputPins
         _InputPins
       _button_reset
       _temp_decrement
         _delay_main
       _temp_increment
         _delay_main
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _set_night
       _OutputPins
         _InputPins
       _button_reset
       _temp_decrement
         _delay_main
       _temp_increment
         _delay_main
       _write_str
         _writechar
           _delay_lcd
       _writechar
         _delay_lcd
       _writecmd_4line
         _delay_lcd
     _write_str
       _writechar
         _delay_lcd
     _writecmd_4line
       _delay_lcd
   _write_str
     _writechar
       _delay_lcd
   _writecmd_4line
     _delay_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       A       7       12.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 02:04:07 2019

                        _D 141B                          _T 08A3                          pc 0002  
           ___bmul@product 0072                         D@C 0046                         D@D 0044  
                       D@i 0048                         D@j 007C                         ?_D 0044  
                       ?_T 0044                         T@C 0046                         T@T 0044  
                       T@i 0048                         T@j 004A                         l63 1EC0  
                       l65 1ECB                         l67 1ED6               ?_display_val 0073  
                       _OK 1D3E                         _TX 003C                         _TZ 003D  
                       _ge 003A                         _wd 002F                         fsr 0004  
      ___wmul@multiplicand 0072                        ??_D 007C                        ??_T 0079  
          ??_clock_setting 007E                        ?_OK 0070                        l211 1F6D  
                      l205 1E6C                        l537 0004                        l676 11F1  
                      l686 1236                        l946 1E52                        _RA2 002A  
                      _RB0 0030                        _RA3 002B                        _RA4 002C  
                      _RA5 002D                        _RB4 0034                        _RB5 0035  
                      _RE0 0048                        _RE2 004A                        _THV 003E  
            ?_display_temp 0070                        _TLV 003F                        _shi 003B  
                      _wkd 0040                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000                       ??_OK 007C               __CFG_LVP$OFF 0000  
                     l1156 1124            _temp_check_rise 121B                       l4102 0947  
                     l4120 0966                       l4114 0961                       l5010 0A4E  
                     l4108 094F                       l4060 08DB                       l4300 1FBF  
                     l4070 0903                       l4054 08D9                       l5110 0B9A  
                     l4302 1FC0                       l4144 09A4                       l4160 09C0  
                     l5032 0AA3                       l4224 1450                       l4304 1F99  
                     l4312 112F                       l4170 09CD                       l4138 09A2  
                     l4066 08F4                       l5106 0B84                       l5042 0AC8  
                     l4234 146E                       l5210 04C8                       l4092 092B  
                     l4076 0909                       l4252 14A7                       l4244 148B  
                     l4228 1459                       l5204 04C1                       l4332 1144  
                     l4420 0DEE                       l3614 1D87                       l4182 09E0  
                     l4086 0929                       l4238 147C                       l5222 04F1  
                     l5150 0429                       l5126 0409                       l4192 09F4  
                     l5064 0AE3                       l4264 14C2                       l5320 0624  
                     l5240 052B                       l3800 1EFA                       l4432 0DFE  
                     l4186 09EC                       l5090 0B45                       l5074 0B07  
                     l4258 14A9                       l5402 06D5                       l5314 0612  
                     l4354 1F3D                       l3802 1EFE                       l3660 1D73  
                     l3740 0819                       l4268 14D1                       l3900 0051  
                     l5500 07BF                       l5404 06D7                       l5340 0653  
                     l5324 0635                       l5236 0514                       l5180 04A5  
                     l4508 0EFB                       l4524 0F4C                       l3750 082E  
                     l5086 0B2F                       l5094 0B5C                       l3670 1D35  
                     l5342 065A                       l5326 0637                       l5350 0662  
                     l5166 045B                       l5174 0483                       l3806 1F05  
                     l3744 0822                       l3752 0834                       l3904 005E  
                     l5440 0719                       l5264 0589                       l5280 05B6  
                     l5168 0461                       l4624 0210                       l3770 0886  
                     l3746 0824                       l3738 0817                       l3666 1D2F  
                     l5450 0742                       l5370 0697                       l5426 06F3  
                     l5266 058B                       l3842 12EE                       l3826 12C8  
                     l4458 0E46                       l4714 0379                       l4650 0262  
                     l3924 1E98                       l3780 089E                       l5364 0684  
                     l5276 05A5                       l3860 1214                       l3836 12E3  
                     l4548 0FAF                       l4484 0E98                       l3774 088F  
                     l5358 0672                       l5278 05B1                       l4806 110D  
                     l4830 11B0                       l3838 12E7                       l5702 00E9  
                     l3776 0894                       l3768 0881                       l3688 1166  
                     l5384 06B3                       l5368 0695                       l5288 05C2  
                     l4840 11D1                       l3784 0008                       l3944 1F7E  
                     l5624 1644                       l5640 170C                       l5608 134A  
                     l5720 010F                       l5474 075E                       l5394 06B8  
                     l5570 1400                       l5562 13EC                       l4674 02C5  
                     l4690 0316                       l4586 01B8                       l3892 0037  
                     l3884 001D                       l4836 11C6                       l4828 11A2  
                     l4764 1E4A                       l3876 1259                       l5628 1650  
                     l5644 1718                       l5740 013D                       l5716 0107  
                     l5574 140A                       l5566 13F6                       l4598 01C8  
                     l5726 0124                       l3896 0044                       l3888 002A  
                     l4872 1F17             ?_display_clock 0070                       l5498 07BD  
                     l4786 1E2E                       l5690 00CC                       l5658 007F  
                     l4788 1E37                       l5588 1328                       l4798 1E46  
                     l5678 00AF                       l4988 0A32                       STR_1 10EB  
                     STR_2 10E3                       STR_3 10DF                       STR_4 10F7  
                     STR_5 10E7                       STR_6 10F3                       STR_7 10EF  
                     STR_8 10AA                       STR_9 1104                       u3025 1D82  
                     u3085 1E89                       u3455 1EB1                       u5135 0594  
                     u3625 0944                       u4515 11B1                       u3475 1F8E  
                     u3565 08F2                       u5325 06A0                       u5245 0640  
                     u4525 11BD                       u4455 1110                       u4535 11C7  
                     u5185 05E9                       u4385 1E53                       u3755 09BD  
                     u4555 1F32                       u4395 1E5A                       u5445 074B  
                     u2975 1D96                       u4495 11A5                       u5385 06E0  
                     u5705 163E                       u5715 164A                       u5565 07C8  
                     u5725 1656                       u5575 13A4                       u5735 165E  
                     u3985 14C0                       u5585 13AF                       u5745 1706  
                     u5595 13BC                       u5755 1712                       u5765 171E  
                     u5775 1726           ??_initialisation 0070                       _heat 1E09  
                     _cool 1DEB                       _main 006B                       _pass 0035  
                     _week 0011                       btemp 007E              write_byte@val 0077  
         set_night@min_max 0044                       start 0000          ___bmul@multiplier 0073  
     __end_of_date_setting 07DB           _temp_check_lower 11D6                      ?_heat 0070  
                    ?_cool 0070                      ?_main 0070             ??_display_temp 007C  
          __end_of___lbdiv 1E48                      STR_10 1104                      STR_11 10B0  
                    STR_12 10A4                      STR_20 104D                      STR_13 10A8  
                    STR_21 102F                      STR_14 10A8                      STR_30 105B  
                    STR_22 1000                      STR_15 10FF                      STR_23 1085  
                    STR_31 103E                      STR_32 1000                      STR_24 1000  
                    STR_16 10FF                      STR_40 1011                      STR_41 10FB  
                    STR_33 10FB                      STR_25 10DA                      STR_17 107E  
            __CFG_WDTE$OFF 0000                      STR_26 1000                      STR_18 1082  
                    STR_50 103C                      STR_34 10B6                      STR_42 109E  
                    STR_51 1006                      STR_19 1082                      STR_27 1085  
                    STR_35 10D0                      STR_43 1069                      STR_28 1000  
                    STR_60 103C                      STR_52 10C1                      STR_36 10D5  
                    STR_44 10C6                      STR_53 103C                      STR_45 103C  
                    STR_61 10C1                      STR_37 1098                      STR_29 1076  
                    STR_70 103C                      STR_62 103C                      STR_54 103C  
                    STR_38 103C                      STR_46 10C1                      STR_63 1006  
                    STR_71 103C                      STR_55 103C                      STR_47 103C  
                    STR_39 1102                      STR_48 1006                      STR_72 103C  
                    STR_56 103C                      STR_64 10C6                      STR_80 109E  
                    STR_81 108C                      STR_65 103C                      STR_57 103C  
                    STR_49 10C6                      STR_73 10CB                      STR_66 1006  
                    STR_74 1092                      STR_58 1020                      STR_67 10C1  
                    STR_59 10C6                      STR_75 10BC                      STR_68 103C  
                    STR_76 109E            __end_of___lbmod 112A                      ?_week 007C  
                    STR_69 103C                      STR_77 109E                      STR_78 108C  
                    STR_79 109E            __end_of___lwdiv 11D6                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089              __CFG_PWRTE$ON 0000                      _table 005D  
                    _reset 1F97             write_byte@temp 0076             __CFG_BOREN$OFF 0000  
          __end_of_set_day 1000                      pclath 000A                      week@w 007C  
   temp_check_lower@temp_e 0078               display_val@i 0073               display_val@t 0077  
                    status 0003                      wtemp0 007E            ___lbdiv@divisor 0070  
          ___lbdiv@counter 0073              ??_ds1302_init 0075               ?_buzzer_init 0070  
          __initialization 07DB               __end_of_heat 1E27               __end_of_cool 1E09  
             __end_of_main 0147               __end_of_week 006B                     ??_heat 007C  
                   ??_cool 007C                     ??_main 007E                     ??_week 007E  
  __end_of_temp_check_rise 1260             write_str@array 0073           ??_writecmd_4line 0072  
          ??_display_clock 0044                     T@j_261 004C                     T@j_262 004E  
                   _ADCON1 009F                     ?_reset 0070                     _TRISB4 0434  
                   _TRISE0 0448              ?_button_reset 0070         __size_of_InputPins 002A  
         __end_of_lcd_init 1DB1           __end_of_get_temp 141B           __end_of_get_time 1F38  
                   ___bmul 1D2D                     ___wmul 1E48                  ??___lbdiv 0071  
                ??___lbmod 0071                  ??___lwdiv 0074        __end_of_ds1302_init 1D2D  
                   _table1 0020                     _table2 00A0                InputPins@RC 0070  
                   _shifen 0039                     _temp_d 0033                     _temp_p 0034  
          writecmd_4line@x 0072       __size_of_display_val 0095               ?_time_read_1 0070  
      time_write_1@time_tx 0074           __end_of_temp_day 1664                  ??_set_day 007C  
         ___lbdiv@dividend 0072            ___lbmod@divisor 0070    __end_of__initialization 07FC  
          ___lbmod@counter 0075                 _OutputPins 1260      __size_of_date_setting 0411  
     __end_of_display_temp 2000             ??_button_reset 0070        ___bmul@multiplicand 0070  
           __pcstackCOMMON 0070               __pidataBANK0 1D60               __pidataBANK1 1D13  
            __end_of_reset 1FCB             set_day@min_max 0044           ___lbdiv@quotient 0074  
               __end_of_OK 1D4F         __size_of_delay_lcd 0014           temp_day@temp_max 004C  
         temp_day@temp_min 004E           ?_temp_check_rise 0070      __end_of_set_time_date 1EB7  
        __end_of_InputPins 1EE1               _date_setting 03CA                    ??_reset 0074  
               __pbssBANK0 0020   __end_of_temp_check_lower 121B    __size_of_temp_decrement 004E  
       __size_of_read_byte 002F                _ds1302_init 1D1D                 _delay_main 1D71  
               _delay_temp 0003                 __pmaintext 006B       __size_of_buzzer_init 0007  
                  ?___bmul 0070                    ?___wmul 0070         time_read_1@time_rx 0074  
               _clock_init 0800         __size_of_set_night 0283                 __size_of_D 00BC  
               __size_of_T 015E      __end_of_clock_setting 0BB1         __size_of_port_init 0007  
  __size_of_temp_increment 002B                  ?_lcd_init 0070                  ?_get_temp 0070  
                ?_get_time 0070                 __stringtab 1800          __end_of_delay_lcd 1D99  
              ?_OutputPins 0070                    _FirstRC 0042         __size_of_writechar 001C  
       __size_of_write_str 003A              _night_dec_max 0038              _night_dec_min 0036  
                ?_temp_day 0070            __size_of___bmul 0011                    ___lbdiv 1E27  
                  ___lbmod 1107            __size_of___wmul 0021                    ___lwdiv 119A  
            _night_one_max 0066              _night_one_min 0037              _night_ten_max 0067  
            _night_ten_min 0065                    __ptext1 12F5                    __ptext2 0147  
                  __ptext3 0D7D                    __ptext4 1EE1                    __ptext5 12A7  
                  __ptext6 1664                    __ptext7 159C                    __ptext8 1E09  
                  __ptext9 121B                 _buzz_count 002D       __end_of_button_reset 1CF5  
        __end_of_read_byte 1F67       __size_of_time_read_1 0030                    _set_day 0D7D  
            ?_temp_setting 0070                    clrloop0 1D0C                 ??_lcd_init 0073  
               delay_lcd@i 0070                 ??_get_temp 0044                 ??_get_time 0075  
    __size_of_display_temp 0035       end_of_initialization 07FC          __end_of_set_night 03CA  
           display_clock@i 0046              ?_time_write_1 0070                ?_delay_main 0070  
              ?_delay_temp 0070                 ??_temp_day 0044          __end_of_port_init 1D03  
  __size_of_initialisation 0008                 _temp_night 1664               __pstringtext 1000  
              ?_clock_init 0070                  _PORTCbits 0007              date_setting@a 004C  
            date_setting@b 004D              date_setting@i 005B              date_setting@j 004F  
            date_setting@y 004E        __size_of_OutputPins 0047               _display_temp 1FCB  
        __end_of_writechar 1DCD          __end_of_write_str 119A             ??_temp_setting 007E  
         ___lbmod@dividend 0074      __end_of_display_clock 0D7D                 _start_date 172C  
               _start_time 14D7                ___lbmod@rem 0076             ??_time_write_1 0070  
           _temp_decrement 12A7              ??_display_val 0075             __end_of___bmul 1D3E  
           __end_of___wmul 1E69                 _write_byte 112A        start_initialization 07DB  
    temp_check_rise@temp_e 0078             _temp_increment 1EE1        __size_of_delay_main 0014  
      __size_of_delay_temp 000E                  _InputPins 1EB7     __end_of_temp_decrement 12F5  
  __size_of_writecmd_4line 001E          ?_temp_check_lower 0070        __size_of_clock_init 000E  
             ?_ds1302_init 0070         ??_temp_check_lower 0074              reset@presence 0075  
                 ??___bmul 0071                   ??___wmul 0074                ?_temp_night 0070  
               init_fetch0 1D4F                __pdataBANK0 005D                __pdataBANK1 00A0  
              start_date@i 0044      __size_of_button_reset 0004                 read_byte@i 0076  
               read_byte@j 0031                start_time@i 0044     __end_of_temp_increment 1F0C  
      __end_of_display_val 08A3             set_time_date@i 0075                  ___latbits 0002  
            __pcstackBANK0 0044                  __end_of_D 14D7                  __end_of_T 0A01  
              ?_start_date 0070                ?_start_time 0070   __size_of_temp_check_rise 0045  
               ?_InputPins 0070            ?_temp_decrement 0070          __size_of_lcd_init 0018  
             ??_OutputPins 0073          __size_of_get_temp 00BA          __size_of_get_time 002C  
              _day_dec_max 006B                _day_dec_min 0068              ??_buzzer_init 0070  
             _button_reset 1CF1           ___lwdiv@dividend 0072                  _delay_lcd 1D85  
     __end_of_temp_setting 1361             _initialisation 1D03                _day_one_max 006C  
              _day_one_min 0069                   ?___lbdiv 0070     __size_of_set_time_date 0028  
                 ?___lbmod 0070                _day_ten_max 006D                _day_ten_min 006A  
                 ?___lwdiv 0070          __size_of_temp_day 00C8                ?_write_byte 0070  
                __pstrings 1800             temp_night@temp 0050            ?_temp_increment 0070  
       __end_of_OutputPins 12A7       __end_of_time_write_1 1E8F                   ?_set_day 0070  
         ___lwdiv@quotient 0075                  _read_byte 1F38             __size_of_reset 0034  
        temp_decrement@end 0072        __size_of_temp_night 00C8                __size_of_OK 0011  
           ___wmul@product 0074                  clear_ram0 1D0B               ??_delay_main 0070  
   __end_of_initialisation 1D0B               ??_delay_temp 0071                 ?_delay_lcd 0070  
   __size_of_clock_setting 01B0                  _set_night 0147        __end_of_buzzer_init 1CFC  
              _display_val 080E                  _port_init 1CFC        __size_of_start_date 00D4  
             ??_clock_init 0077        __size_of_start_time 00C5                __stringbase 1812  
            ??_time_read_1 0070          ___wmul@multiplier 0070                  get_time@i 0076  
              write_byte@i 0078         __end_of_delay_main 1D85              _set_time_date 1E8F  
       __end_of_delay_temp 0011                  _writechar 1DB1                 ?_read_byte 0070  
                _write_str 1160                ??_InputPins 0072             _writecmd_4line 1DCD  
      __size_of_write_byte 0036                   _SecondRC 0043         __end_of_clock_init 080E  
          ?_initialisation 0070          ??_temp_check_rise 0074                 ?_set_night 0070  
     __size_of_ds1302_init 0010           __size_of___lbdiv 0021           __size_of___lbmod 0023  
                 _OutputRC 0041           __size_of___lwdiv 003C                 ?_port_init 0070  
       __end_of__stringtab 1812              _clock_setting 0A01            ___lwdiv@divisor 0070  
        date_setting@j_241 0051          date_setting@j_242 0053          date_setting@j_243 0055  
        date_setting@j_244 0057          date_setting@j_245 0059             ?_set_time_date 0070  
          ___lwdiv@counter 0077              ?_date_setting 0070                   __ptext10 1DEB  
                 __ptext11 11D6                   __ptext20 1F97                   __ptext12 1E48  
                 __ptext21 1F38                   __ptext13 1D3E                   __ptext30 172C  
                 __ptext22 0003                   __ptext14 1D99                   __ptext31 1D2D  
                 __ptext23 1FCB                   __ptext15 1D03                   __ptext40 1DB1  
                 __ptext32 141B                   __ptext24 119A                   __ptext16 1F0C  
                 __ptext41 1D85                   __ptext33 0A01                   __ptext25 1107  
                 __ptext17 1F67                   __ptext50 1CF5                   __ptext42 1D71  
                 __ptext34 14D7                   __ptext26 1E27                   __ptext18 1361  
                 __ptext43 1260                   __ptext35 1160                   __ptext27 0BB1  
                 __ptext19 112A                   __ptext44 1EB7                   __ptext36 1CF1  
                 __ptext28 03CA                   __ptext45 0800                   __ptext37 08A3  
                 __ptext29 0011                   __ptext46 1E8F                   __ptext38 080E  
                 __ptext47 1CFC                   __ptext39 1DCD                   __ptext48 1D1D  
                 __ptext49 1E69           __size_of_set_day 0283        __end_of_time_read_1 1F97  
               ?_writechar 0070                   _lcd_init 1D99                 ?_write_str 0073  
                 _get_temp 1361                   _get_time 1F0C     __end_of_writecmd_4line 1DEB  
    __size_of_temp_setting 006C              __size_of_heat 001E              __size_of_cool 001E  
            __size_of_main 00DC              __size_of_week 005A                _buzzer_init 1CF5  
           clock_setting@i 0050                ??_delay_lcd 0070                   _temp_dec 0027  
                 _temp_day 159C                   _temp_sec 0032                   _temp_one 0029  
                 _temp_ten 002B               ??_temp_night 0044      __size_of_time_write_1 0026  
   __size_of_display_clock 01CC                 writechar@x 0072                 write_str@i 007A  
               write_str@p 0078  __size_of_temp_check_lower 0045                delay_main@i 0070  
              delay_temp@x 0072                delay_temp@y 0070                delay_temp@z 0073  
             temp_day@temp 0050             ?_clock_setting 0070             ??_date_setting 004A  
           read_byte@value 0075               _temp_setting 12F5                   init_ram0 1D53  
         ??_temp_decrement 0072                ??_read_byte 0074               ??_start_date 007C  
          ?_writecmd_4line 0070               ??_start_time 007C         __end_of_temp_night 172C  
                stringcode 180A               _time_write_1 1E69                ??_set_night 007C  
         ??_temp_increment 0072                ??_port_init 0070               ??_write_byte 0074  
       __end_of_start_date 1800         __end_of_start_time 159C                 _OPTION_REG 0081  
              _time_read_1 1F67               time_read_1@j 0072            ??_set_time_date 0075  
                 stringtab 1800                ??_writechar 0072                ??_write_str 0075  
       temp_night@temp_max 004C         temp_night@temp_min 004E              _display_clock 0BB1  
            time_write_1@j 0072         __end_of_write_byte 1160  
