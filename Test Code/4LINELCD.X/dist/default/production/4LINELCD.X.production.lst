

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 04 17:06:45 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  06FD                     __pidataBANK0:	
   177                           
   178                           ;initializer for main@F876
   179  06FD  3449               	retlw	73
   180  06FE  3427               	retlw	39
   181  06FF  346D               	retlw	109
   182  0700  3420               	retlw	32
   183  0701  3463               	retlw	99
   184  0702  3468               	retlw	104
   185  0703  3469               	retlw	105
   186  0704  346C               	retlw	108
   187  0705  346C               	retlw	108
   188  0706  3400               	retlw	0
   189                           
   190                           ;initializer for main@F872
   191  0707  3457               	retlw	87
   192  0708  3475               	retlw	117
   193  0709  3473               	retlw	115
   194  070A  3420               	retlw	32
   195  070B  3467               	retlw	103
   196  070C  3475               	retlw	117
   197  070D  3464               	retlw	100
   198  070E  3400               	retlw	0
   199                           
   200                           ;initializer for main@F878
   201  070F  346D               	retlw	109
   202  0710  3479               	retlw	121
   203  0711  3420               	retlw	32
   204  0712  3467               	retlw	103
   205  0713  3475               	retlw	117
   206  0714  3479               	retlw	121
   207  0715  3400               	retlw	0
   208                           
   209                           ;initializer for main@F874
   210  0716  3401               	retlw	low ((STR_1-__stringbase)| (0+32768))
   211  0008                     _PORTD	set	8
   212  002B                     _RA3	set	43
   213  002C                     _RA4	set	44
   214  002D                     _RA5	set	45
   215  002A                     _RA2	set	42
   216  0088                     _TRISD	set	136
   217  0085                     _TRISA	set	133
   218  009F                     _ADCON1	set	159
   219                           
   220                           	psect	strings
   221  0003                     __pstrings:	
   222  0003                     stringtab:	
   223  0003                     __stringtab:	
   224                           
   225                           ;	String table - string pointers are 1 byte each
   226  0003  1BFF               	btfsc	btemp+1,7
   227  0004  280D               	ljmp	stringcode
   228  0005  1383               	bcf	3,7
   229  0006  187F               	btfsc	btemp+1,0
   230  0007  1783               	bsf	3,7
   231  0008  0800               	movf	0,w
   232  0009  0A84               	incf	4,f
   233  000A  1903               	skipnz
   234  000B  0AFF               	incf	btemp+1,f
   235  000C  0008               	return
   236  000D                     stringcode:	
   237  000D                     stringdir:	
   238  000D  3000               	movlw	high stringdir
   239  000E  008A               	movwf	10
   240  000F  0804               	movf	4,w
   241  0010  0A84               	incf	4,f
   242  0011  0782               	addwf	2,f
   243  0012                     __stringbase:	
   244  0012  3400               	retlw	0
   245  0013                     __end_of__stringtab:	
   246  0013                     STR_1:	
   247  0013  346D               	retlw	109	;'m'
   248  0014  3479               	retlw	121	;'y'
   249  0015  3420               	retlw	32	;' '
   250  0016  3447               	retlw	71	;'G'
   251  0017  343F               	retlw	63	;'?'
   252  0018  3400               	retlw	0
   253                           
   254                           ; #config settings
   255  0000                     
   256                           	psect	cinit
   257  07EE                     start_initialization:	
   258  07EE                     __initialization:	
   259                           
   260                           ; Initialize objects allocated to BANK0
   261  07EE  1383               	bcf	3,7	;select IRP bank0
   262  07EF  3058               	movlw	low (__pdataBANK0+26)
   263  07F0  00FD               	movwf	btemp+-1
   264  07F1  3006               	movlw	high __pidataBANK0
   265  07F2  00FE               	movwf	btemp
   266  07F3  30FD               	movlw	low __pidataBANK0
   267  07F4  00FF               	movwf	btemp+1
   268  07F5  303E               	movlw	low __pdataBANK0
   269  07F6  0084               	movwf	4
   270  07F7  120A  118A  26C2  120A  118A  	fcall	init_ram0
   271  07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  07FC                     __end_of__initialization:	
   275  07FC  0183               	clrf	3
   276  07FD  120A  118A  2F57   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	dataBANK0
   279  003E                     __pdataBANK0:	
   280  003E                     main@F876:	
   281  003E                     	ds	10
   282  0048                     main@F872:	
   283  0048                     	ds	8
   284  0050                     main@F878:	
   285  0050                     	ds	7
   286  0057                     main@F874:	
   287  0057                     	ds	1
   288                           
   289                           	psect	inittext
   290  06BE                     init_fetch0:	
   291                           ;	Called with low address in FSR and high address in W
   292                           
   293  06BE  087E               	movf	btemp,w
   294  06BF  008A               	movwf	10
   295  06C0  087F               	movf	btemp+1,w
   296  06C1  0082               	movwf	2
   297  06C2                     init_ram0:	
   298                           ;Called with:
   299                           ;	high address of idata address in btemp 
   300                           ;	low address of idata address in btemp+1 
   301                           ;	low address of data in FSR
   302                           ;	high address + 1 of data in btemp-1
   303                           
   304  06C2  120A  118A  26BE  120A  118A  	fcall	init_fetch0
   305  06C7  0080               	movwf	0
   306  06C8  0A84               	incf	4,f
   307  06C9  0804               	movf	4,w
   308  06CA  067D               	xorwf	btemp+-1,w
   309  06CB  1903               	btfsc	3,2
   310  06CC  3400               	retlw	0
   311  06CD  0AFF               	incf	btemp+1,f
   312  06CE  1903               	btfsc	3,2
   313  06CF  0AFE               	incf	btemp,f
   314  06D0  2EC2               	goto	init_ram0
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_writecmd:	
   319  0070                     ?_delay:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ??_delay:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_init:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_init:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_lcd_init:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_writechar:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     delay@i:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 2 bytes @ 0x0
   345  0070                     	ds	2
   346  0072                     ??_writecmd:	
   347  0072                     ??_writechar:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     writechar@x:	
   351                           ; 1 bytes @ 0x2
   352                           
   353  0072                     writecmd@x:	
   354                           ; 1 bytes @ 0x2
   355                           
   356                           
   357                           ; 1 bytes @ 0x2
   358  0072                     	ds	1
   359  0073                     ??_lcd_init:	
   360  0073                     ?_yeet:	
   361                           ; 1 bytes @ 0x3
   362                           
   363  0073                     yeet@array:	
   364                           ; 1 bytes @ 0x3
   365                           
   366                           
   367                           ; 2 bytes @ 0x3
   368  0073                     	ds	2
   369  0075                     ??_yeet:	
   370                           
   371                           ; 1 bytes @ 0x5
   372  0075                     	ds	3
   373  0078                     yeet@p:	
   374                           
   375                           ; 2 bytes @ 0x8
   376  0078                     	ds	2
   377  007A                     yeet@i:	
   378                           
   379                           ; 2 bytes @ 0xA
   380  007A                     	ds	2
   381                           
   382                           	psect	cstackBANK0
   383  0020                     __pcstackBANK0:	
   384  0020                     ??_main:	
   385                           
   386                           ; 1 bytes @ 0x0
   387  0020                     	ds	4
   388  0024                     main@str3:	
   389                           
   390                           ; 10 bytes @ 0x4
   391  0024                     	ds	10
   392  002E                     main@str:	
   393                           
   394                           ; 8 bytes @ 0xE
   395  002E                     	ds	8
   396  0036                     main@str4:	
   397                           
   398                           ; 7 bytes @ 0x16
   399  0036                     	ds	7
   400  003D                     main@str2:	
   401                           
   402                           ; 1 bytes @ 0x1D
   403  003D                     	ds	1
   404                           
   405                           	psect	maintext
   406  0757                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 80 in file "4line.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  str3           10    4[BANK0 ] unsigned char [10]
   417 ;;  str             8   14[BANK0 ] unsigned char [8]
   418 ;;  str4            7   22[BANK0 ] unsigned char [7]
   419 ;;  str2            1   29[BANK0 ] PTR unsigned char [1]
   420 ;;		 -> STR_1(6), 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0      26       0       0       0
   432 ;;      Temps:          0       4       0       0       0
   433 ;;      Totals:         0      30       0       0       0
   434 ;;Total ram usage:       30 bytes
   435 ;; Hardware stack levels required when called:    3
   436 ;; This function calls:
   437 ;;		_init
   438 ;;		_lcd_init
   439 ;;		_writecmd
   440 ;;		_yeet
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  0757                     _main:	
   449  0757                     l786:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   452                           
   453  0757  120A  118A  2695  120A  118A  	fcall	_init
   454  075C                     l788:	
   455  075C  120A  118A  26E7  120A  118A  	fcall	_lcd_init
   456  0761                     l790:	
   457  0761  300F               	movlw	15
   458  0762  120A  118A  269C  120A  118A  	fcall	_writecmd
   459  0767                     l792:	
   460  0767  302E               	movlw	main@str& (0+255)
   461  0768  0084               	movwf	4
   462  0769  3048               	movlw	low main@F872
   463  076A  1283               	bcf	3,5	;RP0=0, select bank0
   464  076B  1303               	bcf	3,6	;RP1=0, select bank0
   465  076C  00A0               	movwf	??_main
   466  076D  0804               	movf	4,w
   467  076E  00A1               	movwf	??_main+1
   468  076F  3008               	movlw	8
   469  0770  00A2               	movwf	??_main+2
   470  0771                     u100:	
   471  0771  0820               	movf	??_main,w
   472  0772  0084               	movwf	4
   473  0773  1383               	bcf	3,7	;select IRP bank0
   474  0774  0800               	movf	0,w
   475  0775  00A3               	movwf	??_main+3
   476  0776  0AA0               	incf	??_main,f
   477  0777  0821               	movf	??_main+1,w
   478  0778  0084               	movwf	4
   479  0779  0823               	movf	??_main+3,w
   480  077A  0080               	movwf	0
   481  077B  0AA1               	incf	??_main+1,f
   482  077C  0BA2               	decfsz	??_main+2,f
   483  077D  2F71               	goto	u100
   484  077E                     l794:	
   485  077E  302E               	movlw	(low (main@str| 0))& (0+255)
   486  077F  00F3               	movwf	yeet@array
   487  0780  3000               	movlw	0
   488  0781  00F4               	movwf	yeet@array+1
   489  0782  120A  118A  2717  120A  118A  	fcall	_yeet
   490  0787                     l796:	
   491  0787  3090               	movlw	144
   492  0788  120A  118A  269C  120A  118A  	fcall	_writecmd
   493  078D                     l798:	
   494  078D  1283               	bcf	3,5	;RP0=0, select bank0
   495  078E  1303               	bcf	3,6	;RP1=0, select bank0
   496  078F  0857               	movf	main@F874,w
   497  0790  00A0               	movwf	??_main
   498  0791  0820               	movf	??_main,w
   499  0792  00BD               	movwf	main@str2
   500  0793                     l800:	
   501  0793  083D               	movf	main@str2,w
   502  0794  00F3               	movwf	yeet@array
   503  0795  3000               	movlw	0
   504  0796  1D03               	btfss	3,2
   505  0797  3080               	movlw	128
   506  0798  00F4               	movwf	yeet@array+1
   507  0799  120A  118A  2717  120A  118A  	fcall	_yeet
   508  079E                     l802:	
   509  079E  3088               	movlw	136
   510  079F  120A  118A  269C  120A  118A  	fcall	_writecmd
   511  07A4                     l804:	
   512  07A4  3024               	movlw	main@str3& (0+255)
   513  07A5  0084               	movwf	4
   514  07A6  303E               	movlw	low main@F876
   515  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   516  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   517  07A9  00A0               	movwf	??_main
   518  07AA  0804               	movf	4,w
   519  07AB  00A1               	movwf	??_main+1
   520  07AC  300A               	movlw	10
   521  07AD  00A2               	movwf	??_main+2
   522  07AE                     u110:	
   523  07AE  0820               	movf	??_main,w
   524  07AF  0084               	movwf	4
   525  07B0  1383               	bcf	3,7	;select IRP bank0
   526  07B1  0800               	movf	0,w
   527  07B2  00A3               	movwf	??_main+3
   528  07B3  0AA0               	incf	??_main,f
   529  07B4  0821               	movf	??_main+1,w
   530  07B5  0084               	movwf	4
   531  07B6  0823               	movf	??_main+3,w
   532  07B7  0080               	movwf	0
   533  07B8  0AA1               	incf	??_main+1,f
   534  07B9  0BA2               	decfsz	??_main+2,f
   535  07BA  2FAE               	goto	u110
   536  07BB                     l806:	
   537  07BB  3024               	movlw	(low (main@str3| 0))& (0+255)
   538  07BC  00F3               	movwf	yeet@array
   539  07BD  3000               	movlw	0
   540  07BE  00F4               	movwf	yeet@array+1
   541  07BF  120A  118A  2717  120A  118A  	fcall	_yeet
   542  07C4                     l808:	
   543  07C4  3098               	movlw	152
   544  07C5  120A  118A  269C  120A  118A  	fcall	_writecmd
   545  07CA                     l810:	
   546  07CA  3036               	movlw	main@str4& (0+255)
   547  07CB  0084               	movwf	4
   548  07CC  3050               	movlw	low main@F878
   549  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   550  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   551  07CF  00A0               	movwf	??_main
   552  07D0  0804               	movf	4,w
   553  07D1  00A1               	movwf	??_main+1
   554  07D2  3007               	movlw	7
   555  07D3  00A2               	movwf	??_main+2
   556  07D4                     u120:	
   557  07D4  0820               	movf	??_main,w
   558  07D5  0084               	movwf	4
   559  07D6  1383               	bcf	3,7	;select IRP bank0
   560  07D7  0800               	movf	0,w
   561  07D8  00A3               	movwf	??_main+3
   562  07D9  0AA0               	incf	??_main,f
   563  07DA  0821               	movf	??_main+1,w
   564  07DB  0084               	movwf	4
   565  07DC  0823               	movf	??_main+3,w
   566  07DD  0080               	movwf	0
   567  07DE  0AA1               	incf	??_main+1,f
   568  07DF  0BA2               	decfsz	??_main+2,f
   569  07E0  2FD4               	goto	u120
   570  07E1                     l812:	
   571  07E1  3036               	movlw	(low (main@str4| 0))& (0+255)
   572  07E2  00F3               	movwf	yeet@array
   573  07E3  3000               	movlw	0
   574  07E4  00F4               	movwf	yeet@array+1
   575  07E5  120A  118A  2717  120A  118A  	fcall	_yeet
   576  07EA                     l57:	
   577  07EA                     l58:	
   578  07EA  2FEA               	goto	l57
   579  07EB  120A  118A  2800   	ljmp	start
   580  07EE                     __end_of_main:	
   581                           
   582                           	psect	text1
   583  0717                     __ptext1:	
   584 ;; *************** function _yeet *****************
   585 ;; Defined at:
   586 ;;		line 72 in file "4line.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  array           2    3[COMMON] PTR unsigned char 
   589 ;;		 -> main@str4(7), main@str3(10), STR_1(6), main@str(8), 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  i               2   10[COMMON] int 
   592 ;;  p               2    8[COMMON] PTR unsigned char 
   593 ;;		 -> main@str4(7), main@str3(10), STR_1(6), main@str(8), 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         2       0       0       0       0
   604 ;;      Locals:         4       0       0       0       0
   605 ;;      Temps:          3       0       0       0       0
   606 ;;      Totals:         9       0       0       0       0
   607 ;;Total ram usage:        9 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    2
   610 ;; This function calls:
   611 ;;		_writechar
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _yeet
   619  0717                     _yeet:	
   620  0717                     l774:	
   621                           ;incstack = 0
   622                           ; Regs used in _yeet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   623                           
   624  0717  01FA               	clrf	yeet@i
   625  0718  01FB               	clrf	yeet@i+1
   626  0719                     l776:	
   627  0719  0873               	movf	yeet@array,w
   628  071A  00F8               	movwf	yeet@p
   629  071B  0874               	movf	yeet@array+1,w
   630  071C  00F9               	movwf	yeet@p+1
   631  071D  2F46               	goto	l784
   632  071E                     l778:	
   633  071E  087A               	movf	yeet@i,w
   634  071F  0773               	addwf	yeet@array,w
   635  0720  00F6               	movwf	??_yeet+1
   636  0721  0874               	movf	yeet@array+1,w
   637  0722  00F5               	movwf	??_yeet
   638  0723  1803               	skipnc
   639  0724  0AF5               	incf	??_yeet,f
   640  0725  1FFA               	btfss	yeet@i,7
   641  0726  2F28               	goto	u80
   642  0727  03F5               	decf	??_yeet,f
   643  0728                     u80:	
   644  0728  0875               	movf	??_yeet,w
   645  0729  00F7               	movwf	??_yeet+2
   646  072A  0877               	movf	??_yeet+2,w
   647  072B  1283               	bcf	3,5	;RP0=0, select bank0
   648  072C  1303               	bcf	3,6	;RP1=0, select bank0
   649  072D  00FF               	movwf	btemp+1
   650  072E  0876               	movf	??_yeet+1,w
   651  072F  0084               	movwf	4
   652  0730  120A  118A  2003  120A  118A  	fcall	stringtab
   653  0735  120A  118A  26AD  120A  118A  	fcall	_writechar
   654  073A                     l780:	
   655  073A  3001               	movlw	1
   656  073B  07FA               	addwf	yeet@i,f
   657  073C  1803               	skipnc
   658  073D  0AFB               	incf	yeet@i+1,f
   659  073E  3000               	movlw	0
   660  073F  07FB               	addwf	yeet@i+1,f
   661  0740                     l782:	
   662  0740  3001               	movlw	1
   663  0741  07F8               	addwf	yeet@p,f
   664  0742  1803               	skipnc
   665  0743  0AF9               	incf	yeet@p+1,f
   666  0744  3000               	movlw	0
   667  0745  07F9               	addwf	yeet@p+1,f
   668  0746                     l784:	
   669  0746  0879               	movf	yeet@p+1,w
   670  0747  1283               	bcf	3,5	;RP0=0, select bank0
   671  0748  1303               	bcf	3,6	;RP1=0, select bank0
   672  0749  00FF               	movwf	btemp+1
   673  074A  0878               	movf	yeet@p,w
   674  074B  0084               	movwf	4
   675  074C  120A  118A  2003  120A  118A  	fcall	stringtab
   676  0751  3A00               	xorlw	0
   677  0752  1D03               	skipz
   678  0753  2F55               	goto	u91
   679  0754  2F56               	goto	u90
   680  0755                     u91:	
   681  0755  2F1E               	goto	l778
   682  0756                     u90:	
   683  0756                     l43:	
   684  0756  0008               	return
   685  0757                     __end_of_yeet:	
   686                           
   687                           	psect	text2
   688  06AD                     __ptext2:	
   689 ;; *************** function _writechar *****************
   690 ;; Defined at:
   691 ;;		line 42 in file "4line.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  x               1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  x               1    2[COMMON] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0
   708 ;;      Totals:         1       0       0       0       0
   709 ;;Total ram usage:        1 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		_delay
   714 ;; This function is called by:
   715 ;;		_yeet
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _writechar
   721  06AD                     _writechar:	
   722                           
   723                           ;incstack = 0
   724                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   725                           ;writechar@x stored from wreg
   726  06AD  00F2               	movwf	writechar@x
   727  06AE                     l754:	
   728  06AE  1283               	bcf	3,5	;RP0=0, select bank0
   729  06AF  1303               	bcf	3,6	;RP1=0, select bank0
   730  06B0  1685               	bsf	5,5	;volatile
   731  06B1  1205               	bcf	5,4	;volatile
   732  06B2                     l756:	
   733  06B2  0872               	movf	writechar@x,w
   734  06B3  0088               	movwf	8	;volatile
   735  06B4                     l758:	
   736  06B4  1185               	bcf	5,3	;volatile
   737  06B5                     l760:	
   738  06B5  120A  118A  26D1  120A  118A  	fcall	_delay
   739  06BA                     l762:	
   740  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   741  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   742  06BC  1585               	bsf	5,3	;volatile
   743  06BD                     l29:	
   744  06BD  0008               	return
   745  06BE                     __end_of_writechar:	
   746                           
   747                           	psect	text3
   748  06E7                     __ptext3:	
   749 ;; *************** function _lcd_init *****************
   750 ;; Defined at:
   751 ;;		line 32 in file "4line.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		_writecmd
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _lcd_init
   781  06E7                     _lcd_init:	
   782  06E7                     l770:	
   783                           ;incstack = 0
   784                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   785                           
   786  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   787  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   788  06E9  1505               	bsf	5,2	;volatile
   789  06EA                     l772:	
   790  06EA  300E               	movlw	14
   791  06EB  120A  118A  269C  120A  118A  	fcall	_writecmd
   792  06F0  3001               	movlw	1
   793  06F1  120A  118A  269C  120A  118A  	fcall	_writecmd
   794  06F6  3038               	movlw	56
   795  06F7  120A  118A  269C  120A  118A  	fcall	_writecmd
   796  06FC                     l26:	
   797  06FC  0008               	return
   798  06FD                     __end_of_lcd_init:	
   799                           
   800                           	psect	text4
   801  069C                     __ptext4:	
   802 ;; *************** function _writecmd *****************
   803 ;; Defined at:
   804 ;;		line 53 in file "4line.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  x               1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  x               1    2[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         1       0       0       0       0
   822 ;;Total ram usage:        1 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    1
   825 ;; This function calls:
   826 ;;		_delay
   827 ;; This function is called by:
   828 ;;		_lcd_init
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _writecmd
   835  069C                     _writecmd:	
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _writecmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   839                           ;writecmd@x stored from wreg
   840  069C  00F2               	movwf	writecmd@x
   841  069D                     l744:	
   842  069D  1283               	bcf	3,5	;RP0=0, select bank0
   843  069E  1303               	bcf	3,6	;RP1=0, select bank0
   844  069F  1285               	bcf	5,5	;volatile
   845  06A0  1205               	bcf	5,4	;volatile
   846  06A1                     l746:	
   847  06A1  0872               	movf	writecmd@x,w
   848  06A2  0088               	movwf	8	;volatile
   849  06A3                     l748:	
   850  06A3  1185               	bcf	5,3	;volatile
   851  06A4                     l750:	
   852  06A4  120A  118A  26D1  120A  118A  	fcall	_delay
   853  06A9                     l752:	
   854  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   855  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   856  06AB  1585               	bsf	5,3	;volatile
   857  06AC                     l32:	
   858  06AC  0008               	return
   859  06AD                     __end_of_writecmd:	
   860                           
   861                           	psect	text5
   862  06D1                     __ptext5:	
   863 ;; *************** function _delay *****************
   864 ;; Defined at:
   865 ;;		line 64 in file "4line.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  i               2    0[COMMON] int 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, btemp+1
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         2       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         2       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_writechar
   889 ;;		_writecmd
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _delay
   895  06D1                     _delay:	
   896  06D1                     l734:	
   897                           ;incstack = 0
   898                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   899                           
   900  06D1  01F0               	clrf	delay@i
   901  06D2  01F1               	clrf	delay@i+1
   902  06D3                     l740:	
   903  06D3  3001               	movlw	1
   904  06D4  07F0               	addwf	delay@i,f
   905  06D5  1803               	skipnc
   906  06D6  0AF1               	incf	delay@i+1,f
   907  06D7  3000               	movlw	0
   908  06D8  07F1               	addwf	delay@i+1,f
   909  06D9                     l742:	
   910  06D9  0871               	movf	delay@i+1,w
   911  06DA  3A80               	xorlw	128
   912  06DB  00FF               	movwf	btemp+1
   913  06DC  3093               	movlw	147
   914  06DD  027F               	subwf	btemp+1,w
   915  06DE  1D03               	skipz
   916  06DF  2EE2               	goto	u75
   917  06E0  3088               	movlw	136
   918  06E1  0270               	subwf	delay@i,w
   919  06E2                     u75:	
   920  06E2  1C03               	skipc
   921  06E3  2EE5               	goto	u71
   922  06E4  2EE6               	goto	u70
   923  06E5                     u71:	
   924  06E5  2ED3               	goto	l740
   925  06E6                     u70:	
   926  06E6                     l37:	
   927  06E6  0008               	return
   928  06E7                     __end_of_delay:	
   929                           
   930                           	psect	text6
   931  0695                     __ptext6:	
   932 ;; *************** function _init *****************
   933 ;; Defined at:
   934 ;;		line 24 in file "4line.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _init
   963  0695                     _init:	
   964  0695                     l764:	
   965                           ;incstack = 0
   966                           ; Regs used in _init: [wreg+status,2]
   967                           
   968  0695  3007               	movlw	7
   969  0696  1683               	bsf	3,5	;RP0=1, select bank1
   970  0697  1303               	bcf	3,6	;RP1=0, select bank1
   971  0698  009F               	movwf	31	;volatile
   972  0699                     l766:	
   973  0699  0185               	clrf	5	;volatile
   974  069A                     l768:	
   975  069A  0188               	clrf	8	;volatile
   976  069B                     l23:	
   977  069B  0008               	return
   978  069C                     __end_of_init:	
   979  007E                     btemp	set	126	;btemp
   980  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        26
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     30      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@str2	PTR unsigned char [1] size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    main@F874	PTR unsigned char [1] size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    yeet@array	PTR unsigned char  size(2) Largest target is 10
		 -> main@str4(BANK0[7]), main@str3(BANK0[10]), STR_1(CODE[6]), main@str(BANK0[8]), 

    yeet@p	PTR unsigned char  size(2) Largest target is 10
		 -> main@str4(BANK0[7]), main@str3(BANK0[10]), STR_1(CODE[6]), main@str(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_yeet
    _yeet->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0     698
                                              0 BANK0     30    30      0
                               _init
                           _lcd_init
                           _writecmd
                               _yeet
 ---------------------------------------------------------------------------------
 (1) _yeet                                                 9     7      2     464
                                              3 COMMON     9     7      2
                          _writechar
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      68
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _writecmd                                             1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _lcd_init
     _writecmd
       _delay
   _writecmd
     _delay
   _yeet
     _writechar
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      44       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 04 17:06:45 2019

                      pc 0002                       l23 069B                       l32 06AC  
                     l26 06FC                       l43 0756                       l37 06E6  
                     l29 06BD                       l57 07EA                       l58 07EA  
                     u70 06E6                       u71 06E5                       u80 0728  
                     u90 0756                       u75 06E2                       u91 0755  
                     fsr 0004                      l800 0793                      l810 07CA  
                    l802 079E                      l740 06D3                      l812 07E1  
                    l804 07A4                      l742 06D9                      l734 06D1  
                    l750 06A4                      l806 07BB                      l752 06A9  
                    l744 069D                      l760 06B5                      l808 07C4  
                    l746 06A1                      l770 06E7                      l762 06BA  
                    l754 06AE                      l764 0695                      l748 06A3  
                    l772 06EA                      l756 06B2                      l780 073A  
                    l766 0699                      l758 06B4                      l782 0740  
                    l774 0717                      l790 0761                      l768 069A  
                    l784 0746                      l776 0719                      l792 0767  
                    l778 071E                      l794 077E                      l786 0757  
                    l796 0787                      l788 075C                      l798 078D  
                    _RA2 002A                      _RA3 002B                      _RA4 002C  
                    _RA5 002D                      u100 0771                      u110 07AE  
                    u120 07D4                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     STR_1 0013  
                   _main 0757                     _init 0695                     _yeet 0717  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070            __CFG_WDTE$OFF 0000                    ?_yeet 0073  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _delay 06D1           __CFG_BOREN$OFF 0000  
                  pclath 000A                    yeet@i 007A                    yeet@p 0078  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE             __end_of_init 069C             __end_of_yeet 0757  
                 ??_main 0020                   ??_init 0070                   ??_yeet 0075  
                 ?_delay 0070                   _ADCON1 009F         __end_of_lcd_init 06FD  
                 delay@i 0070         __end_of_writecmd 06AD  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06FD            __end_of_delay 06E7  
                ??_delay 0070               __pmaintext 0757                ?_lcd_init 0070  
             __stringtab 0003       __size_of_writechar 0011                  __ptext1 0717  
                __ptext2 06AD                  __ptext3 06E7                  __ptext4 069C  
                __ptext5 06D1                  __ptext6 0695                ?_writecmd 0070  
             ??_lcd_init 0073                  main@str 002E     end_of_initialization 07FC  
             ??_writecmd 0072        __end_of_writechar 06BE      start_initialization 07EE  
             init_fetch0 06BE              __pdataBANK0 003E                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_init 0016                __pstrings 0003  
      __size_of_writecmd 0011           __size_of_delay 0016              __stringbase 0012  
              _writechar 06AD       __end_of__stringtab 0013               ?_writechar 0070  
               _lcd_init 06E7            __size_of_main 0097            __size_of_init 0007  
          __size_of_yeet 0040                 main@F872 0048                 main@F874 0057  
               main@F876 003E                 main@F878 0050                yeet@array 0073  
               main@str2 003D                 main@str3 0024                 main@str4 0036  
             writechar@x 0072                 _writecmd 069C                 init_ram0 06C2  
              stringcode 000D                writecmd@x 0072                 stringdir 000D  
               stringtab 0003              ??_writechar 0072  
