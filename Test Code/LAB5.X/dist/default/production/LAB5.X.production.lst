

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 08 15:35:16 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  06FC                     __pidataBANK0:	
   177                           
   178                           ;initializer for main@F872
   179  06FC  3457               	retlw	87
   180  06FD  3475               	retlw	117
   181  06FE  3473               	retlw	115
   182  06FF  3420               	retlw	32
   183  0700  3467               	retlw	103
   184  0701  3475               	retlw	117
   185  0702  3464               	retlw	100
   186  0703  3400               	retlw	0
   187                           
   188                           ;initializer for main@F874
   189  0704  3401               	retlw	low ((STR_1-__stringbase)| (0+32768))
   190  0008                     _PORTD	set	8
   191  002B                     _RA3	set	43
   192  002A                     _RA2	set	42
   193  0029                     _RA1	set	41
   194  0088                     _TRISD	set	136
   195  0085                     _TRISA	set	133
   196  009F                     _ADCON1	set	159
   197                           
   198                           	psect	strings
   199  0003                     __pstrings:	
   200  0003                     stringtab:	
   201  0003                     __stringtab:	
   202                           
   203                           ;	String table - string pointers are 1 byte each
   204  0003  1BFF               	btfsc	btemp+1,7
   205  0004  280D               	ljmp	stringcode
   206  0005  1383               	bcf	3,7
   207  0006  187F               	btfsc	btemp+1,0
   208  0007  1783               	bsf	3,7
   209  0008  0800               	movf	0,w
   210  0009  0A84               	incf	4,f
   211  000A  1903               	skipnz
   212  000B  0AFF               	incf	btemp+1,f
   213  000C  0008               	return
   214  000D                     stringcode:	
   215  000D                     stringdir:	
   216  000D  3000               	movlw	high stringdir
   217  000E  008A               	movwf	10
   218  000F  0804               	movf	4,w
   219  0010  0A84               	incf	4,f
   220  0011  0782               	addwf	2,f
   221  0012                     __stringbase:	
   222  0012  3400               	retlw	0
   223  0013                     __end_of__stringtab:	
   224  0013                     STR_1:	
   225  0013  346D               	retlw	109	;'m'
   226  0014  3479               	retlw	121	;'y'
   227  0015  3420               	retlw	32	;' '
   228  0016  3447               	retlw	71	;'G'
   229  0017  343F               	retlw	63	;'?'
   230  0018  3400               	retlw	0
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  07EE                     start_initialization:	
   236  07EE                     __initialization:	
   237                           
   238                           ; Initialize objects allocated to BANK0
   239  07EE  1383               	bcf	3,7	;select IRP bank0
   240  07EF  3036               	movlw	low (__pdataBANK0+9)
   241  07F0  00FD               	movwf	btemp+-1
   242  07F1  3006               	movlw	high __pidataBANK0
   243  07F2  00FE               	movwf	btemp
   244  07F3  30FC               	movlw	low __pidataBANK0
   245  07F4  00FF               	movwf	btemp+1
   246  07F5  302D               	movlw	low __pdataBANK0
   247  07F6  0084               	movwf	4
   248  07F7  120A  118A  273E  120A  118A  	fcall	init_ram0
   249  07FC                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  07FC                     __end_of__initialization:	
   253  07FC  0183               	clrf	3
   254  07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	dataBANK0
   257  002D                     __pdataBANK0:	
   258  002D                     main@F872:	
   259  002D                     	ds	8
   260  0035                     main@F874:	
   261  0035                     	ds	1
   262                           
   263                           	psect	inittext
   264  073A                     init_fetch0:	
   265                           ;	Called with low address in FSR and high address in W
   266                           
   267  073A  087E               	movf	btemp,w
   268  073B  008A               	movwf	10
   269  073C  087F               	movf	btemp+1,w
   270  073D  0082               	movwf	2
   271  073E                     init_ram0:	
   272                           ;Called with:
   273                           ;	high address of idata address in btemp 
   274                           ;	low address of idata address in btemp+1 
   275                           ;	low address of data in FSR
   276                           ;	high address + 1 of data in btemp-1
   277                           
   278  073E  120A  118A  273A  120A  118A  	fcall	init_fetch0
   279  0743  0080               	movwf	0
   280  0744  0A84               	incf	4,f
   281  0745  0804               	movf	4,w
   282  0746  067D               	xorwf	btemp+-1,w
   283  0747  1903               	btfsc	3,2
   284  0748  3400               	retlw	0
   285  0749  0AFF               	incf	btemp+1,f
   286  074A  1903               	btfsc	3,2
   287  074B  0AFE               	incf	btemp,f
   288  074C  2F3E               	goto	init_ram0
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:	
   292  0070                     ?_writecmd:	
   293  0070                     ?_delay:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_delay:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_init:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ??_init:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_lcd_init:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_writechar:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     delay@i:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 2 bytes @ 0x0
   319  0070                     	ds	2
   320  0072                     ??_writecmd:	
   321  0072                     ??_writechar:	
   322                           ; 1 bytes @ 0x2
   323                           
   324  0072                     writechar@x:	
   325                           ; 1 bytes @ 0x2
   326                           
   327  0072                     writecmd@x:	
   328                           ; 1 bytes @ 0x2
   329                           
   330                           
   331                           ; 1 bytes @ 0x2
   332  0072                     	ds	1
   333  0073                     ??_lcd_init:	
   334  0073                     ?_yeet:	
   335                           ; 1 bytes @ 0x3
   336                           
   337  0073                     yeet@array:	
   338                           ; 1 bytes @ 0x3
   339                           
   340                           
   341                           ; 2 bytes @ 0x3
   342  0073                     	ds	2
   343  0075                     ??_yeet:	
   344                           
   345                           ; 1 bytes @ 0x5
   346  0075                     	ds	3
   347  0078                     yeet@p:	
   348                           
   349                           ; 2 bytes @ 0x8
   350  0078                     	ds	2
   351  007A                     yeet@i:	
   352                           
   353                           ; 2 bytes @ 0xA
   354  007A                     	ds	2
   355                           
   356                           	psect	cstackBANK0
   357  0020                     __pcstackBANK0:	
   358  0020                     ??_main:	
   359                           
   360                           ; 1 bytes @ 0x0
   361  0020                     	ds	4
   362  0024                     main@str:	
   363                           
   364                           ; 8 bytes @ 0x4
   365  0024                     	ds	8
   366  002C                     main@str2:	
   367                           
   368                           ; 1 bytes @ 0xC
   369  002C                     	ds	1
   370                           
   371                           	psect	maintext
   372  07A3                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 77 in file "lab 5 LCD.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  str             8    4[BANK0 ] unsigned char [8]
   383 ;;  str2            1   12[BANK0 ] PTR unsigned char [1]
   384 ;;		 -> STR_1(6), 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       9       0       0       0
   396 ;;      Temps:          0       4       0       0       0
   397 ;;      Totals:         0      13       0       0       0
   398 ;;Total ram usage:       13 bytes
   399 ;; Hardware stack levels required when called:    3
   400 ;; This function calls:
   401 ;;		_init
   402 ;;		_lcd_init
   403 ;;		_writecmd
   404 ;;		_yeet
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _main
   412  07A3                     _main:	
   413  07A3                     l764:	
   414                           ;incstack = 0
   415                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   416                           
   417                           
   418                           ;lab 5 LCD.c: 79:         yeet(*str2);
   419  07A3  120A  118A  26F5  120A  118A  	fcall	_init
   420  07A8                     l766:	
   421                           
   422                           ;lab 5 LCD.c: 80:         while(1);
   423  07A8  120A  118A  2727  120A  118A  	fcall	_lcd_init
   424  07AD                     l768:	
   425                           
   426                           ;lab 5 LCD.c: 81:      }
   427  07AD  300F               	movlw	15
   428  07AE  120A  118A  2705  120A  118A  	fcall	_writecmd
   429  07B3                     l770:	
   430  07B3  3024               	movlw	main@str& (0+255)
   431  07B4  0084               	movwf	4
   432  07B5  302D               	movlw	low main@F872
   433  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   434  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   435  07B8  00A0               	movwf	??_main
   436  07B9  0804               	movf	4,w
   437  07BA  00A1               	movwf	??_main+1
   438  07BB  3008               	movlw	8
   439  07BC  00A2               	movwf	??_main+2
   440  07BD                     u80:	
   441  07BD  0820               	movf	??_main,w
   442  07BE  0084               	movwf	4
   443  07BF  1383               	bcf	3,7	;select IRP bank0
   444  07C0  0800               	movf	0,w
   445  07C1  00A3               	movwf	??_main+3
   446  07C2  0AA0               	incf	??_main,f
   447  07C3  0821               	movf	??_main+1,w
   448  07C4  0084               	movwf	4
   449  07C5  0823               	movf	??_main+3,w
   450  07C6  0080               	movwf	0
   451  07C7  0AA1               	incf	??_main+1,f
   452  07C8  0BA2               	decfsz	??_main+2,f
   453  07C9  2FBD               	goto	u80
   454  07CA                     l772:	
   455  07CA  3024               	movlw	(low (main@str| 0))& (0+255)
   456  07CB  00F3               	movwf	yeet@array
   457  07CC  3000               	movlw	0
   458  07CD  00F4               	movwf	yeet@array+1
   459  07CE  120A  118A  2763  120A  118A  	fcall	_yeet
   460  07D3                     l774:	
   461  07D3  30C0               	movlw	192
   462  07D4  120A  118A  2705  120A  118A  	fcall	_writecmd
   463  07D9                     l776:	
   464  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   465  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   466  07DB  0835               	movf	main@F874,w
   467  07DC  00A0               	movwf	??_main
   468  07DD  0820               	movf	??_main,w
   469  07DE  00AC               	movwf	main@str2
   470  07DF                     l778:	
   471  07DF  082C               	movf	main@str2,w
   472  07E0  00F3               	movwf	yeet@array
   473  07E1  3000               	movlw	0
   474  07E2  1D03               	btfss	3,2
   475  07E3  3080               	movlw	128
   476  07E4  00F4               	movwf	yeet@array+1
   477  07E5  120A  118A  2763  120A  118A  	fcall	_yeet
   478  07EA                     l51:	
   479  07EA                     l52:	
   480  07EA  2FEA               	goto	l51
   481  07EB  120A  118A  2800   	ljmp	start
   482  07EE                     __end_of_main:	
   483                           
   484                           	psect	text1
   485  0763                     __ptext1:	
   486 ;; *************** function _yeet *****************
   487 ;; Defined at:
   488 ;;		line 69 in file "lab 5 LCD.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  array           2    3[COMMON] PTR unsigned char 
   491 ;;		 -> STR_1(6), main@str(8), 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  i               2   10[COMMON] int 
   494 ;;  p               2    8[COMMON] PTR unsigned char 
   495 ;;		 -> STR_1(6), main@str(8), 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         2       0       0       0       0
   506 ;;      Locals:         4       0       0       0       0
   507 ;;      Temps:          3       0       0       0       0
   508 ;;      Totals:         9       0       0       0       0
   509 ;;Total ram usage:        9 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    2
   512 ;; This function calls:
   513 ;;		_writechar
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _yeet
   521  0763                     _yeet:	
   522  0763                     l752:	
   523                           ;incstack = 0
   524                           ; Regs used in _yeet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   525                           
   526                           
   527                           ;lab 5 LCD.c: 70:     init();
   528  0763  01FA               	clrf	yeet@i
   529  0764  01FB               	clrf	yeet@i+1
   530  0765                     l754:	
   531                           
   532                           ;lab 5 LCD.c: 71:     lcd_init();
   533  0765  0873               	movf	yeet@array,w
   534  0766  00F8               	movwf	yeet@p
   535  0767  0874               	movf	yeet@array+1,w
   536  0768  00F9               	movwf	yeet@p+1
   537  0769  2F92               	goto	l762
   538  076A                     l756:	
   539                           
   540                           ;lab 5 LCD.c: 72:     writecmd(0x0F);
   541  076A  087A               	movf	yeet@i,w
   542  076B  0773               	addwf	yeet@array,w
   543  076C  00F6               	movwf	??_yeet+1
   544  076D  0874               	movf	yeet@array+1,w
   545  076E  00F5               	movwf	??_yeet
   546  076F  1803               	skipnc
   547  0770  0AF5               	incf	??_yeet,f
   548  0771  1FFA               	btfss	yeet@i,7
   549  0772  2F74               	goto	u60
   550  0773  03F5               	decf	??_yeet,f
   551  0774                     u60:	
   552  0774  0875               	movf	??_yeet,w
   553  0775  00F7               	movwf	??_yeet+2
   554  0776  0877               	movf	??_yeet+2,w
   555  0777  1283               	bcf	3,5	;RP0=0, select bank0
   556  0778  1303               	bcf	3,6	;RP1=0, select bank0
   557  0779  00FF               	movwf	btemp+1
   558  077A  0876               	movf	??_yeet+1,w
   559  077B  0084               	movwf	4
   560  077C  120A  118A  2003  120A  118A  	fcall	stringtab
   561  0781  120A  118A  2716  120A  118A  	fcall	_writechar
   562  0786                     l758:	
   563                           
   564                           ;lab 5 LCD.c: 73:     while(1)
   565  0786  3001               	movlw	1
   566  0787  07FA               	addwf	yeet@i,f
   567  0788  1803               	skipnc
   568  0789  0AFB               	incf	yeet@i+1,f
   569  078A  3000               	movlw	0
   570  078B  07FB               	addwf	yeet@i+1,f
   571  078C                     l760:	
   572                           
   573                           ;lab 5 LCD.c: 74:     {
   574  078C  3001               	movlw	1
   575  078D  07F8               	addwf	yeet@p,f
   576  078E  1803               	skipnc
   577  078F  0AF9               	incf	yeet@p+1,f
   578  0790  3000               	movlw	0
   579  0791  07F9               	addwf	yeet@p+1,f
   580  0792                     l762:	
   581  0792  0879               	movf	yeet@p+1,w
   582  0793  1283               	bcf	3,5	;RP0=0, select bank0
   583  0794  1303               	bcf	3,6	;RP1=0, select bank0
   584  0795  00FF               	movwf	btemp+1
   585  0796  0878               	movf	yeet@p,w
   586  0797  0084               	movwf	4
   587  0798  120A  118A  2003  120A  118A  	fcall	stringtab
   588  079D  3A00               	xorlw	0
   589  079E  1D03               	skipz
   590  079F  2FA1               	goto	u71
   591  07A0  2FA2               	goto	u70
   592  07A1                     u71:	
   593  07A1  2F6A               	goto	l756
   594  07A2                     u70:	
   595  07A2                     l41:	
   596  07A2  0008               	return
   597  07A3                     __end_of_yeet:	
   598                           
   599                           	psect	text2
   600  0716                     __ptext2:	
   601 ;; *************** function _writechar *****************
   602 ;; Defined at:
   603 ;;		line 39 in file "lab 5 LCD.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  x               1    wreg     unsigned char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  x               1    2[COMMON] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         1       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    1
   624 ;; This function calls:
   625 ;;		_delay
   626 ;; This function is called by:
   627 ;;		_yeet
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _writechar
   633  0716                     _writechar:	
   634                           
   635                           ;incstack = 0
   636                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   637                           ;writechar@x stored from wreg
   638  0716  00F2               	movwf	writechar@x
   639  0717                     l734:	
   640                           
   641                           ;lab 5 LCD.c: 39: ;lab 5 LCD.c: 40: ;lab 5 LCD.c: 41: void writecmd(char x)
   642  0717  1283               	bcf	3,5	;RP0=0, select bank0
   643  0718  1303               	bcf	3,6	;RP1=0, select bank0
   644  0719  1485               	bsf	5,1	;volatile
   645                           
   646                           ;lab 5 LCD.c: 42: {
   647  071A  1105               	bcf	5,2	;volatile
   648  071B                     l736:	
   649                           
   650                           ;lab 5 LCD.c: 43:     RA1=0;
   651  071B  0872               	movf	writechar@x,w
   652  071C  0088               	movwf	8	;volatile
   653  071D                     l738:	
   654                           
   655                           ;lab 5 LCD.c: 44:     RA2=0;
   656  071D  1185               	bcf	5,3	;volatile
   657  071E                     l740:	
   658                           
   659                           ;lab 5 LCD.c: 45:     PORTD=x;
   660  071E  120A  118A  274D  120A  118A  	fcall	_delay
   661  0723                     l742:	
   662                           
   663                           ;lab 5 LCD.c: 46:     RA3=0;
   664  0723  1283               	bcf	3,5	;RP0=0, select bank0
   665  0724  1303               	bcf	3,6	;RP1=0, select bank0
   666  0725  1585               	bsf	5,3	;volatile
   667  0726                     l27:	
   668  0726  0008               	return
   669  0727                     __end_of_writechar:	
   670                           
   671                           	psect	text3
   672  0727                     __ptext3:	
   673 ;; *************** function _lcd_init *****************
   674 ;; Defined at:
   675 ;;		line 30 in file "lab 5 LCD.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    2
   696 ;; This function calls:
   697 ;;		_writecmd
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _lcd_init
   705  0727                     _lcd_init:	
   706  0727                     l750:	
   707                           ;incstack = 0
   708                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   709                           
   710                           
   711                           ;lab 5 LCD.c: 32:     RA1=1;
   712  0727  300E               	movlw	14
   713  0728  120A  118A  2705  120A  118A  	fcall	_writecmd
   714                           
   715                           ;lab 5 LCD.c: 33:     RA2=0;
   716  072D  3001               	movlw	1
   717  072E  120A  118A  2705  120A  118A  	fcall	_writecmd
   718                           
   719                           ;lab 5 LCD.c: 34:     PORTD=x;
   720  0733  3038               	movlw	56
   721  0734  120A  118A  2705  120A  118A  	fcall	_writecmd
   722  0739                     l24:	
   723  0739  0008               	return
   724  073A                     __end_of_lcd_init:	
   725                           
   726                           	psect	text4
   727  0705                     __ptext4:	
   728 ;; *************** function _writecmd *****************
   729 ;; Defined at:
   730 ;;		line 50 in file "lab 5 LCD.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  x               1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  x               1    2[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    1
   751 ;; This function calls:
   752 ;;		_delay
   753 ;; This function is called by:
   754 ;;		_lcd_init
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _writecmd
   761  0705                     _writecmd:	
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _writecmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   765                           ;writecmd@x stored from wreg
   766  0705  00F2               	movwf	writecmd@x
   767  0706                     l724:	
   768                           
   769                           ;lab 5 LCD.c: 50: ;lab 5 LCD.c: 51: ;lab 5 LCD.c: 52: void delay()
   770  0706  1283               	bcf	3,5	;RP0=0, select bank0
   771  0707  1303               	bcf	3,6	;RP1=0, select bank0
   772  0708  1085               	bcf	5,1	;volatile
   773                           
   774                           ;lab 5 LCD.c: 53: {
   775  0709  1105               	bcf	5,2	;volatile
   776  070A                     l726:	
   777                           
   778                           ;lab 5 LCD.c: 54:     int i;
   779  070A  0872               	movf	writecmd@x,w
   780  070B  0088               	movwf	8	;volatile
   781  070C                     l728:	
   782                           
   783                           ;lab 5 LCD.c: 55: for(i=0;i<5000;i++);
   784  070C  1185               	bcf	5,3	;volatile
   785  070D                     l730:	
   786                           
   787                           ;lab 5 LCD.c: 56: }
   788  070D  120A  118A  274D  120A  118A  	fcall	_delay
   789  0712                     l732:	
   790                           
   791                           ;lab 5 LCD.c: 57: 
   792  0712  1283               	bcf	3,5	;RP0=0, select bank0
   793  0713  1303               	bcf	3,6	;RP1=0, select bank0
   794  0714  1585               	bsf	5,3	;volatile
   795  0715                     l30:	
   796  0715  0008               	return
   797  0716                     __end_of_writecmd:	
   798                           
   799                           	psect	text5
   800  074D                     __ptext5:	
   801 ;; *************** function _delay *****************
   802 ;; Defined at:
   803 ;;		line 61 in file "lab 5 LCD.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  i               2    0[COMMON] int 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, btemp+1
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         2       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         2       0       0       0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_writechar
   827 ;;		_writecmd
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _delay
   833  074D                     _delay:	
   834  074D                     l714:	
   835                           ;incstack = 0
   836                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   837                           
   838                           
   839                           ;lab 5 LCD.c: 63:         writechar(array[i]);;lab 5 LCD.c: 64:         i++;
   840  074D  01F0               	clrf	delay@i
   841  074E  01F1               	clrf	delay@i+1
   842  074F                     l720:	
   843  074F  3001               	movlw	1
   844  0750  07F0               	addwf	delay@i,f
   845  0751  1803               	skipnc
   846  0752  0AF1               	incf	delay@i+1,f
   847  0753  3000               	movlw	0
   848  0754  07F1               	addwf	delay@i+1,f
   849  0755                     l722:	
   850  0755  0871               	movf	delay@i+1,w
   851  0756  3A80               	xorlw	128
   852  0757  00FF               	movwf	btemp+1
   853  0758  3093               	movlw	147
   854  0759  027F               	subwf	btemp+1,w
   855  075A  1D03               	skipz
   856  075B  2F5E               	goto	u55
   857  075C  3088               	movlw	136
   858  075D  0270               	subwf	delay@i,w
   859  075E                     u55:	
   860  075E  1C03               	skipc
   861  075F  2F61               	goto	u51
   862  0760  2F62               	goto	u50
   863  0761                     u51:	
   864  0761  2F4F               	goto	l720
   865  0762                     u50:	
   866  0762                     l35:	
   867  0762  0008               	return
   868  0763                     __end_of_delay:	
   869                           
   870                           	psect	text6
   871  06F5                     __ptext6:	
   872 ;; *************** function _init *****************
   873 ;; Defined at:
   874 ;;		line 22 in file "lab 5 LCD.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _init
   903  06F5                     _init:	
   904  06F5                     l744:	
   905                           ;incstack = 0
   906                           ; Regs used in _init: [wreg+status,2]
   907                           
   908                           
   909                           ;lab 5 LCD.c: 24:     writecmd(0x1);
   910  06F5  3007               	movlw	7
   911  06F6  1683               	bsf	3,5	;RP0=1, select bank1
   912  06F7  1303               	bcf	3,6	;RP1=0, select bank1
   913  06F8  009F               	movwf	31	;volatile
   914  06F9                     l746:	
   915                           
   916                           ;lab 5 LCD.c: 25:     writecmd(0x38);
   917  06F9  0185               	clrf	5	;volatile
   918  06FA                     l748:	
   919                           
   920                           ;lab 5 LCD.c: 26: }
   921  06FA  0188               	clrf	8	;volatile
   922  06FB                     l21:	
   923  06FB  0008               	return
   924  06FC                     __end_of_init:	
   925  007E                     btemp	set	126	;btemp
   926  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     13      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@str2	PTR unsigned char [1] size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    main@F874	PTR unsigned char [1] size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    yeet@array	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[6]), main@str(BANK0[8]), 

    yeet@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[6]), main@str(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_yeet
    _yeet->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     496
                                              0 BANK0     13    13      0
                               _init
                           _lcd_init
                           _writecmd
                               _yeet
 ---------------------------------------------------------------------------------
 (1) _yeet                                                 9     7      2     312
                                              3 COMMON     9     7      2
                          _writechar
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      68
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _writecmd                                             1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _lcd_init
     _writecmd
       _delay
   _writecmd
     _delay
   _yeet
     _writechar
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 08 15:35:16 2019

                      pc 0002                       l21 06FB                       l30 0715  
                     l24 0739                       l41 07A2                       l35 0762  
                     l27 0726                       l51 07EA                       l52 07EA  
                     u50 0762                       u51 0761                       u60 0774  
                     u70 07A2                       u55 075E                       u71 07A1  
                     u80 07BD                       fsr 0004                      l720 074F  
                    l722 0755                      l714 074D                      l730 070D  
                    l732 0712                      l724 0706                      l740 071E  
                    l726 070A                      l750 0727                      l742 0723  
                    l734 0717                      l744 06F5                      l728 070C  
                    l736 071B                      l760 078C                      l752 0763  
                    l746 06F9                      l738 071D                      l762 0792  
                    l754 0765                      l770 07B3                      l748 06FA  
                    l756 076A                      l772 07CA                      l764 07A3  
                    l758 0786                      l774 07D3                      l766 07A8  
                    l776 07D9                      l768 07AD                      l778 07DF  
                    _RA1 0029                      _RA2 002A                      _RA3 002B  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     STR_1 0013                     _main 07A3  
                   _init 06F5                     _yeet 0763                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
          __CFG_WDTE$OFF 0000                    ?_yeet 0073                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088            __CFG_PWRTE$ON 0000  
                  _delay 074D           __CFG_BOREN$OFF 0000                    pclath 000A  
                  yeet@i 007A                    yeet@p 0078                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
           __end_of_init 06FC             __end_of_yeet 07A3                   ??_main 0020  
                 ??_init 0070                   ??_yeet 0075                   ?_delay 0070  
                 _ADCON1 009F         __end_of_lcd_init 073A                   delay@i 0070  
       __end_of_writecmd 0716  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06FC            __end_of_delay 0763                  ??_delay 0070  
             __pmaintext 07A3                ?_lcd_init 0070               __stringtab 0003  
     __size_of_writechar 0011                  __ptext1 0763                  __ptext2 0716  
                __ptext3 0727                  __ptext4 0705                  __ptext5 074D  
                __ptext6 06F5                ?_writecmd 0070               ??_lcd_init 0073  
                main@str 0024     end_of_initialization 07FC               ??_writecmd 0072  
      __end_of_writechar 0727      start_initialization 07EE               init_fetch0 073A  
            __pdataBANK0 002D                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_init 0013                __pstrings 0003        __size_of_writecmd 0011  
         __size_of_delay 0016              __stringbase 0012                _writechar 0716  
     __end_of__stringtab 0013               ?_writechar 0070                 _lcd_init 0727  
          __size_of_main 004B            __size_of_init 0007            __size_of_yeet 0040  
               main@F872 002D                 main@F874 0035                yeet@array 0073  
               main@str2 002C               writechar@x 0072                 _writecmd 0705  
               init_ram0 073E                stringcode 000D                writecmd@x 0072  
               stringdir 000D                 stringtab 0003              ??_writechar 0072  
