

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 15 15:34:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0088                     	;# 
   226  0089                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306                           
   307                           	psect	idataBANK0
   308  03A4                     __pidataBANK0:	
   309                           
   310                           ;initializer for _num
   311  03A4  3430               	retlw	48
   312  03A5  3431               	retlw	49
   313  03A6  3432               	retlw	50
   314  03A7  3433               	retlw	51
   315  03A8  3434               	retlw	52
   316  03A9  3435               	retlw	53
   317  03AA  3436               	retlw	54
   318  03AB  3437               	retlw	55
   319  03AC  3438               	retlw	56
   320  03AD  3439               	retlw	57
   321                           
   322                           ;initializer for _table
   323  03AE  34C0               	retlw	192
   324  03AF  34F9               	retlw	249
   325  03B0  34A4               	retlw	164
   326  03B1  34B0               	retlw	176
   327  03B2  3499               	retlw	153
   328  03B3  3492               	retlw	146
   329  03B4  3482               	retlw	130
   330  03B5  34F8               	retlw	248
   331  03B6  3480               	retlw	128
   332  03B7  3490               	retlw	144
   333                           
   334                           	psect	idataBANK1
   335  0390                     __pidataBANK1:	
   336                           
   337                           ;initializer for dispcmd@F865
   338  0390  344C               	retlw	76
   339  0391  3449               	retlw	73
   340  0392  344E               	retlw	78
   341  0393  3445               	retlw	69
   342  0394  3420               	retlw	32
   343  0395  3444               	retlw	68
   344  0396  344F               	retlw	79
   345  0397  3445               	retlw	69
   346  0398  3453               	retlw	83
   347  0399  3420               	retlw	32
   348  039A  344E               	retlw	78
   349  039B  344F               	retlw	79
   350  039C  3454               	retlw	84
   351  039D  3420               	retlw	32
   352  039E  3445               	retlw	69
   353  039F  3458               	retlw	88
   354  03A0  3449               	retlw	73
   355  03A1  3453               	retlw	83
   356  03A2  3454               	retlw	84
   357  03A3  3400               	retlw	0
   358  0008                     _PORTD	set	8
   359  002A                     _RA2	set	42
   360  002B                     _RA3	set	43
   361  002C                     _RA4	set	44
   362  002D                     _RA5	set	45
   363  0028                     _RA0	set	40
   364  0088                     _TRISD	set	136
   365  0085                     _TRISA	set	133
   366  009F                     _ADCON1	set	159
   367  0428                     _TRISA0	set	1064
   368                           
   369                           ; #config settings
   370  0000                     
   371                           	psect	cinit
   372  07D3                     start_initialization:	
   373  07D3                     __initialization:	
   374                           
   375                           ; Initialize objects allocated to BANK1
   376  07D3  1383               	bcf	3,7	;select IRP bank0
   377  07D4  30B4               	movlw	low (__pdataBANK1+20)
   378  07D5  00FD               	movwf	btemp+-1
   379  07D6  3003               	movlw	high __pidataBANK1
   380  07D7  00FE               	movwf	btemp
   381  07D8  3090               	movlw	low __pidataBANK1
   382  07D9  00FF               	movwf	btemp+1
   383  07DA  30A0               	movlw	low __pdataBANK1
   384  07DB  0084               	movwf	4
   385  07DC  120A  118A  2381  120A  118A  	fcall	init_ram0
   386                           
   387                           ; Initialize objects allocated to BANK0
   388  07E1  3052               	movlw	low (__pdataBANK0+20)
   389  07E2  00FD               	movwf	btemp+-1
   390  07E3  3003               	movlw	high __pidataBANK0
   391  07E4  00FE               	movwf	btemp
   392  07E5  30A4               	movlw	low __pidataBANK0
   393  07E6  00FF               	movwf	btemp+1
   394  07E7  303E               	movlw	low __pdataBANK0
   395  07E8  0084               	movwf	4
   396  07E9  120A  118A  2381  120A  118A  	fcall	init_ram0
   397                           
   398                           ; Clear objects allocated to BANK0
   399  07EE  01D2               	clrf	__pbssBANK0& (0+127)
   400  07EF  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   401  07F0  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   402  07F1  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   403  07F2  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   404  07F3  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   405  07F4  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   406  07F5  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   407  07F6  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   408  07F7  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   409  07F8  01DC               	clrf	(__pbssBANK0+10)& (0+127)
   410  07F9  01DD               	clrf	(__pbssBANK0+11)& (0+127)
   411  07FA  01DE               	clrf	(__pbssBANK0+12)& (0+127)
   412  07FB  01DF               	clrf	(__pbssBANK0+13)& (0+127)
   413  07FC                     end_of_initialization:	
   414                           ;End of C runtime variable initialization code
   415                           
   416  07FC                     __end_of__initialization:	
   417  07FC  0183               	clrf	3
   418  07FD  120A  118A  2B6A   	ljmp	_main	;jump to C main() function
   419                           
   420                           	psect	bssBANK0
   421  0052                     __pbssBANK0:	
   422  0052                     _wd:	
   423  0052                     	ds	2
   424  0054                     read_byte@j:	
   425  0054                     	ds	1
   426  0055                     display@F870:	
   427  0055                     	ds	1
   428  0056                     _wanfen:	
   429  0056                     	ds	1
   430  0057                     _qianfen:	
   431  0057                     	ds	1
   432  0058                     _baifen:	
   433  0058                     	ds	1
   434  0059                     _shifen:	
   435  0059                     	ds	1
   436  005A                     _ge:	
   437  005A                     	ds	1
   438  005B                     _shi:	
   439  005B                     	ds	1
   440  005C                     _TX:	
   441  005C                     	ds	1
   442  005D                     _TZ:	
   443  005D                     	ds	1
   444  005E                     _THV:	
   445  005E                     	ds	1
   446  005F                     _TLV:	
   447  005F                     	ds	1
   448                           
   449                           	psect	dataBANK0
   450  003E                     __pdataBANK0:	
   451  003E                     _num:	
   452  003E                     	ds	10
   453  0048                     _table:	
   454  0048                     	ds	10
   455                           
   456                           	psect	dataBANK1
   457  00A0                     __pdataBANK1:	
   458  00A0                     dispcmd@F865:	
   459  00A0                     	ds	20
   460                           
   461                           	psect	inittext
   462  037D                     init_fetch0:	
   463                           ;	Called with low address in FSR and high address in W
   464                           
   465  037D  087E               	movf	btemp,w
   466  037E  008A               	movwf	10
   467  037F  087F               	movf	btemp+1,w
   468  0380  0082               	movwf	2
   469  0381                     init_ram0:	
   470                           ;Called with:
   471                           ;	high address of idata address in btemp 
   472                           ;	low address of idata address in btemp+1 
   473                           ;	low address of data in FSR
   474                           ;	high address + 1 of data in btemp-1
   475                           
   476  0381  120A  118A  237D  120A  118A  	fcall	init_fetch0
   477  0386  0080               	movwf	0
   478  0387  0A84               	incf	4,f
   479  0388  0804               	movf	4,w
   480  0389  067D               	xorwf	btemp+-1,w
   481  038A  1903               	btfsc	3,2
   482  038B  3400               	retlw	0
   483  038C  0AFF               	incf	btemp+1,f
   484  038D  1903               	btfsc	3,2
   485  038E  0AFE               	incf	btemp,f
   486  038F  2B81               	goto	init_ram0
   487                           
   488                           	psect	cstackCOMMON
   489  0070                     __pcstackCOMMON:	
   490  0070                     ?_delay_temp:	
   491  0070                     ?_writecmd:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_yeet:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_writechar:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_display:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_init_temp:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_init_temp:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_write_byte:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_read_byte:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_get_temp:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_delay:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_delay:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_reset:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?___awdiv:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0070                     ?___awmod:	
   534                           ; 2 bytes @ 0x0
   535                           
   536  0070                     ?___lwmod:	
   537                           ; 2 bytes @ 0x0
   538                           
   539  0070                     delay_temp@y:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     delay@i:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ___awdiv@divisor:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     ___awmod@divisor:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     ___lwmod@divisor:	
   552                           ; 2 bytes @ 0x0
   553                           
   554                           
   555                           ; 2 bytes @ 0x0
   556  0070                     	ds	1
   557  0071                     ??_delay_temp:	
   558                           
   559                           ; 1 bytes @ 0x1
   560  0071                     	ds	1
   561  0072                     ??_writecmd:	
   562  0072                     ??_writechar:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     delay_temp@x:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     writechar@x:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     writecmd@x:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ___awdiv@dividend:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ___awmod@dividend:	
   578                           ; 2 bytes @ 0x2
   579                           
   580  0072                     ___lwmod@dividend:	
   581                           ; 2 bytes @ 0x2
   582                           
   583                           
   584                           ; 2 bytes @ 0x2
   585  0072                     	ds	1
   586  0073                     ??_yeet:	
   587  0073                     delay_temp@z:	
   588                           ; 1 bytes @ 0x3
   589                           
   590                           
   591                           ; 1 bytes @ 0x3
   592  0073                     	ds	1
   593  0074                     ??_reset:	
   594  0074                     ??_write_byte:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0074                     ??_read_byte:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     ??___awdiv:	
   601                           ; 1 bytes @ 0x4
   602                           
   603  0074                     ??___awmod:	
   604                           ; 1 bytes @ 0x4
   605                           
   606  0074                     ??___lwmod:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     yeet@i:	
   610                           ; 1 bytes @ 0x4
   611                           
   612                           
   613                           ; 2 bytes @ 0x4
   614  0074                     	ds	1
   615  0075                     reset@presence:	
   616  0075                     read_byte@value:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0075                     ___awdiv@counter:	
   620                           ; 1 bytes @ 0x5
   621                           
   622  0075                     ___awmod@counter:	
   623                           ; 1 bytes @ 0x5
   624                           
   625  0075                     ___lwmod@counter:	
   626                           ; 1 bytes @ 0x5
   627                           
   628                           
   629                           ; 1 bytes @ 0x5
   630  0075                     	ds	1
   631  0076                     ?___lwdiv:	
   632  0076                     write_byte@temp:	
   633                           ; 2 bytes @ 0x6
   634                           
   635  0076                     read_byte@i:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0076                     yeet@p:	
   639                           ; 1 bytes @ 0x6
   640                           
   641  0076                     ___awdiv@sign:	
   642                           ; 1 bytes @ 0x6
   643                           
   644  0076                     ___awmod@sign:	
   645                           ; 1 bytes @ 0x6
   646                           
   647  0076                     ___lwdiv@divisor:	
   648                           ; 1 bytes @ 0x6
   649                           
   650                           
   651                           ; 2 bytes @ 0x6
   652  0076                     	ds	1
   653  0077                     write_byte@val:	
   654  0077                     yeet@array:	
   655                           ; 1 bytes @ 0x7
   656                           
   657  0077                     ___awdiv@quotient:	
   658                           ; 1 bytes @ 0x7
   659                           
   660                           
   661                           ; 2 bytes @ 0x7
   662  0077                     	ds	1
   663  0078                     ?_dispcmd:	
   664  0078                     write_byte@i:	
   665                           ; 1 bytes @ 0x8
   666                           
   667  0078                     dispcmd@line:	
   668                           ; 1 bytes @ 0x8
   669                           
   670  0078                     ___lwdiv@dividend:	
   671                           ; 2 bytes @ 0x8
   672                           
   673                           
   674                           ; 2 bytes @ 0x8
   675  0078                     	ds	2
   676  007A                     ??___lwdiv:	
   677  007A                     dispcmd@linetxt:	
   678                           ; 1 bytes @ 0xA
   679                           
   680                           
   681                           ; 1 bytes @ 0xA
   682  007A                     	ds	1
   683  007B                     ??_display:	
   684  007B                     ___lwdiv@quotient:	
   685                           ; 1 bytes @ 0xB
   686                           
   687                           
   688                           ; 2 bytes @ 0xB
   689  007B                     	ds	1
   690  007C                     display@tempstr:	
   691                           
   692                           ; 1 bytes @ 0xC
   693  007C                     	ds	1
   694  007D                     ___lwdiv@counter:	
   695                           
   696                           ; 1 bytes @ 0xD
   697  007D                     	ds	1
   698  007E                     ??_main:	
   699                           
   700                           	psect	cstackBANK0
   701  0020                     __pcstackBANK0:	
   702                           ; 1 bytes @ 0xE
   703                           
   704  0020                     ??_dispcmd:	
   705                           
   706                           ; 1 bytes @ 0x0
   707  0020                     	ds	4
   708  0024                     dispcmd@error:	
   709                           
   710                           ; 20 bytes @ 0x4
   711  0024                     	ds	20
   712  0038                     ??_get_temp:	
   713                           
   714                           ; 1 bytes @ 0x18
   715  0038                     	ds	4
   716  003C                     get_temp@i:	
   717                           
   718                           ; 2 bytes @ 0x1C
   719  003C                     	ds	2
   720                           
   721                           	psect	maintext
   722  036A                     __pmaintext:	
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 183 in file "Tempmain.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : B00/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels required when called:    6
   748 ;; This function calls:
   749 ;;		_display
   750 ;;		_get_temp
   751 ;;		_init_temp
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _main
   759  036A                     _main:	
   760  036A                     l1572:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;Tempmain.c: 185:    init_temp();
   766  036A  120A  118A  232F  120A  118A  	fcall	_init_temp
   767  036F                     l1574:	
   768                           
   769                           ;Tempmain.c: 187:      {;Tempmain.c: 188:        get_temp();
   770  036F  120A  118A  268A  120A  118A  	fcall	_get_temp
   771  0374                     l1576:	
   772                           
   773                           ;Tempmain.c: 189:        display();
   774  0374  120A  118A  23CE  120A  118A  	fcall	_display
   775  0379  2B6F               	goto	l1574
   776  037A  120A  118A  2800   	ljmp	start
   777  037D                     __end_of_main:	
   778                           
   779                           	psect	text1
   780  032F                     __ptext1:	
   781 ;; *************** function _init_temp *****************
   782 ;; Defined at:
   783 ;;		line 66 in file "Tempmain.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _init_temp
   812  032F                     _init_temp:	
   813  032F                     l1106:	
   814                           ;incstack = 0
   815                           ; Regs used in _init_temp: [wreg+status,2]
   816                           
   817                           
   818                           ;Tempmain.c: 68:   ADCON1=0X07;
   819  032F  3007               	movlw	7
   820  0330  1683               	bsf	3,5	;RP0=1, select bank1
   821  0331  1303               	bcf	3,6	;RP1=0, select bank1
   822  0332  009F               	movwf	31	;volatile
   823  0333                     l1108:	
   824                           
   825                           ;Tempmain.c: 69:   TRISA=0X00;
   826  0333  0185               	clrf	5	;volatile
   827  0334                     l1110:	
   828                           
   829                           ;Tempmain.c: 70:   TRISD=0X00;
   830  0334  0188               	clrf	8	;volatile
   831  0335                     l50:	
   832  0335  0008               	return
   833  0336                     __end_of_init_temp:	
   834                           
   835                           	psect	text2
   836  068A                     __ptext2:	
   837 ;; *************** function _get_temp *****************
   838 ;; Defined at:
   839 ;;		line 146 in file "Tempmain.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  i               2   28[BANK0 ] int 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       2       0       0       0
   855 ;;      Temps:          0       4       0       0       0
   856 ;;      Totals:         0       6       0       0       0
   857 ;;Total ram usage:        6 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    5
   860 ;; This function calls:
   861 ;;		___awdiv
   862 ;;		___awmod
   863 ;;		___lwdiv
   864 ;;		___lwmod
   865 ;;		_display
   866 ;;		_read_byte
   867 ;;		_reset
   868 ;;		_write_byte
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _get_temp
   876  068A                     _get_temp:	
   877  068A                     l1516:	
   878                           ;incstack = 0
   879                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   880                           
   881                           
   882                           ;Tempmain.c: 148: int i;;Tempmain.c: 149: TRISA0 =1;
   883  068A  1683               	bsf	3,5	;RP0=1, select bank1
   884  068B  1303               	bcf	3,6	;RP1=0, select bank1
   885  068C  1405               	bsf	5,0	;volatile
   886  068D                     l1518:	
   887                           
   888                           ;Tempmain.c: 150: reset();
   889  068D  120A  118A  247C  120A  118A  	fcall	_reset
   890                           
   891                           ;Tempmain.c: 151: write_byte(0XCC);
   892  0692  30CC               	movlw	204
   893  0693  120A  118A  24B6  120A  118A  	fcall	_write_byte
   894                           
   895                           ;Tempmain.c: 152: write_byte(0X44);
   896  0698  3044               	movlw	68
   897  0699  120A  118A  24B6  120A  118A  	fcall	_write_byte
   898  069E                     l1520:	
   899                           
   900                           ;Tempmain.c: 153: for(i=20;i>0;i--)
   901  069E  3014               	movlw	20
   902  069F  1283               	bcf	3,5	;RP0=0, select bank0
   903  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   904  06A1  00BC               	movwf	get_temp@i
   905  06A2  3000               	movlw	0
   906  06A3  00BD               	movwf	get_temp@i+1
   907  06A4                     l1526:	
   908                           
   909                           ;Tempmain.c: 154:     {;Tempmain.c: 156:         display();
   910  06A4  120A  118A  23CE  120A  118A  	fcall	_display
   911  06A9                     l1528:	
   912                           
   913                           ;Tempmain.c: 157:     }
   914  06A9  30FF               	movlw	255
   915  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   916  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   917  06AC  07BC               	addwf	get_temp@i,f
   918  06AD  1803               	skipnc
   919  06AE  0ABD               	incf	get_temp@i+1,f
   920  06AF  30FF               	movlw	255
   921  06B0  07BD               	addwf	get_temp@i+1,f
   922  06B1                     l1530:	
   923  06B1  083D               	movf	get_temp@i+1,w
   924  06B2  3A80               	xorlw	128
   925  06B3  00FF               	movwf	btemp+1
   926  06B4  3080               	movlw	128
   927  06B5  027F               	subwf	btemp+1,w
   928  06B6  1D03               	skipz
   929  06B7  2EBA               	goto	u1155
   930  06B8  3001               	movlw	1
   931  06B9  023C               	subwf	get_temp@i,w
   932  06BA                     u1155:	
   933  06BA  1803               	skipnc
   934  06BB  2EBD               	goto	u1151
   935  06BC  2EBE               	goto	u1150
   936  06BD                     u1151:	
   937  06BD  2EA4               	goto	l1526
   938  06BE                     u1150:	
   939  06BE                     l1532:	
   940                           
   941                           ;Tempmain.c: 158: reset();
   942  06BE  120A  118A  247C  120A  118A  	fcall	_reset
   943                           
   944                           ;Tempmain.c: 159: write_byte(0XCC);
   945  06C3  30CC               	movlw	204
   946  06C4  120A  118A  24B6  120A  118A  	fcall	_write_byte
   947                           
   948                           ;Tempmain.c: 160: write_byte(0XBE);
   949  06C9  30BE               	movlw	190
   950  06CA  120A  118A  24B6  120A  118A  	fcall	_write_byte
   951                           
   952                           ;Tempmain.c: 161: TLV=read_byte();
   953  06CF  120A  118A  240D  120A  118A  	fcall	_read_byte
   954  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   955  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   956  06D6  00B8               	movwf	??_get_temp
   957  06D7  0838               	movf	??_get_temp,w
   958  06D8  00DF               	movwf	_TLV
   959                           
   960                           ;Tempmain.c: 162: THV=read_byte();
   961  06D9  120A  118A  240D  120A  118A  	fcall	_read_byte
   962  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   963  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   964  06E0  00B8               	movwf	??_get_temp
   965  06E1  0838               	movf	??_get_temp,w
   966  06E2  00DE               	movwf	_THV
   967  06E3                     l1534:	
   968                           
   969                           ;Tempmain.c: 163: TRISA0 =1;
   970  06E3  1683               	bsf	3,5	;RP0=1, select bank1
   971  06E4  1303               	bcf	3,6	;RP1=0, select bank1
   972  06E5  1405               	bsf	5,0	;volatile
   973  06E6                     l1536:	
   974                           
   975                           ;Tempmain.c: 164: TZ=(TLV>>4)|(THV<<4)&0X3f;
   976  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   977  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   978  06E8  085E               	movf	_THV,w
   979  06E9  00B8               	movwf	??_get_temp
   980  06EA  3004               	movlw	4
   981  06EB                     u1165:	
   982  06EB  1003               	clrc
   983  06EC  0DB8               	rlf	??_get_temp,f
   984  06ED  3EFF               	addlw	-1
   985  06EE  1D03               	skipz
   986  06EF  2EEB               	goto	u1165
   987  06F0  303F               	movlw	63
   988  06F1  0538               	andwf	??_get_temp,w
   989  06F2  00B9               	movwf	??_get_temp+1
   990  06F3  085F               	movf	_TLV,w
   991  06F4  00BA               	movwf	??_get_temp+2
   992  06F5  3004               	movlw	4
   993  06F6                     u1175:	
   994  06F6  1003               	clrc
   995  06F7  0CBA               	rrf	??_get_temp+2,f
   996  06F8  3EFF               	addlw	-1
   997  06F9  1D03               	skipz
   998  06FA  2EF6               	goto	u1175
   999  06FB  083A               	movf	??_get_temp+2,w
  1000  06FC  0439               	iorwf	??_get_temp+1,w
  1001  06FD  00BB               	movwf	??_get_temp+3
  1002  06FE  083B               	movf	??_get_temp+3,w
  1003  06FF  00DD               	movwf	_TZ
  1004  0700                     l1538:	
  1005                           
  1006                           ;Tempmain.c: 165: TX=TLV<<4;
  1007  0700  085F               	movf	_TLV,w
  1008  0701  00B8               	movwf	??_get_temp
  1009  0702  3003               	movlw	3
  1010  0703                     u1185:	
  1011  0703  1003               	clrc
  1012  0704  0DB8               	rlf	??_get_temp,f
  1013  0705  3EFF               	addlw	-1
  1014  0706  1D03               	skipz
  1015  0707  2F03               	goto	u1185
  1016  0708  1003               	clrc
  1017  0709  0D38               	rlf	??_get_temp,w
  1018  070A  00B9               	movwf	??_get_temp+1
  1019  070B  0839               	movf	??_get_temp+1,w
  1020  070C  00DC               	movwf	_TX
  1021  070D                     l1542:	
  1022                           
  1023                           ;Tempmain.c: 167: ge=TZ%10;
  1024  070D  300A               	movlw	10
  1025  070E  00F0               	movwf	___awmod@divisor
  1026  070F  3000               	movlw	0
  1027  0710  00F1               	movwf	___awmod@divisor+1
  1028  0711  085D               	movf	_TZ,w
  1029  0712  00B8               	movwf	??_get_temp
  1030  0713  01B9               	clrf	??_get_temp+1
  1031  0714  0838               	movf	??_get_temp,w
  1032  0715  00F2               	movwf	___awmod@dividend
  1033  0716  0839               	movf	??_get_temp+1,w
  1034  0717  00F3               	movwf	___awmod@dividend+1
  1035  0718  120A  118A  2535  120A  118A  	fcall	___awmod
  1036  071D  0870               	movf	?___awmod,w
  1037  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1038  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0720  00BA               	movwf	??_get_temp+2
  1040  0721  083A               	movf	??_get_temp+2,w
  1041  0722  00DA               	movwf	_ge
  1042                           
  1043                           ;Tempmain.c: 168: shi=TZ/10;
  1044  0723  300A               	movlw	10
  1045  0724  00F0               	movwf	___awdiv@divisor
  1046  0725  3000               	movlw	0
  1047  0726  00F1               	movwf	___awdiv@divisor+1
  1048  0727  085D               	movf	_TZ,w
  1049  0728  00B8               	movwf	??_get_temp
  1050  0729  01B9               	clrf	??_get_temp+1
  1051  072A  0838               	movf	??_get_temp,w
  1052  072B  00F2               	movwf	___awdiv@dividend
  1053  072C  0839               	movf	??_get_temp+1,w
  1054  072D  00F3               	movwf	___awdiv@dividend+1
  1055  072E  120A  118A  258E  120A  118A  	fcall	___awdiv
  1056  0733  0870               	movf	?___awdiv,w
  1057  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0736  00BA               	movwf	??_get_temp+2
  1060  0737  083A               	movf	??_get_temp+2,w
  1061  0738  00DB               	movwf	_shi
  1062  0739                     l1544:	
  1063                           
  1064                           ;Tempmain.c: 169: wd=0;
  1065  0739  01D2               	clrf	_wd
  1066  073A  01D3               	clrf	_wd+1
  1067  073B                     l1546:	
  1068                           
  1069                           ;Tempmain.c: 170: if (TX & 0x80) wd=wd+5000;
  1070  073B  1FDC               	btfss	_TX,7
  1071  073C  2F3E               	goto	u1191
  1072  073D  2F3F               	goto	u1190
  1073  073E                     u1191:	
  1074  073E  2F47               	goto	l1550
  1075  073F                     u1190:	
  1076  073F                     l1548:	
  1077  073F  0852               	movf	_wd,w
  1078  0740  3E88               	addlw	136
  1079  0741  00D2               	movwf	_wd
  1080  0742  0853               	movf	_wd+1,w
  1081  0743  1803               	skipnc
  1082  0744  3E01               	addlw	1
  1083  0745  3E13               	addlw	19
  1084  0746  00D3               	movwf	_wd+1
  1085  0747                     l1550:	
  1086                           
  1087                           ;Tempmain.c: 171: if (TX & 0x40) wd=wd+2500;
  1088  0747  1F5C               	btfss	_TX,6
  1089  0748  2F4A               	goto	u1201
  1090  0749  2F4B               	goto	u1200
  1091  074A                     u1201:	
  1092  074A  2F53               	goto	l1554
  1093  074B                     u1200:	
  1094  074B                     l1552:	
  1095  074B  0852               	movf	_wd,w
  1096  074C  3EC4               	addlw	196
  1097  074D  00D2               	movwf	_wd
  1098  074E  0853               	movf	_wd+1,w
  1099  074F  1803               	skipnc
  1100  0750  3E01               	addlw	1
  1101  0751  3E09               	addlw	9
  1102  0752  00D3               	movwf	_wd+1
  1103  0753                     l1554:	
  1104                           
  1105                           ;Tempmain.c: 172: if (TX & 0x20) wd=wd+1250;
  1106  0753  1EDC               	btfss	_TX,5
  1107  0754  2F56               	goto	u1211
  1108  0755  2F57               	goto	u1210
  1109  0756                     u1211:	
  1110  0756  2F5F               	goto	l1558
  1111  0757                     u1210:	
  1112  0757                     l1556:	
  1113  0757  0852               	movf	_wd,w
  1114  0758  3EE2               	addlw	226
  1115  0759  00D2               	movwf	_wd
  1116  075A  0853               	movf	_wd+1,w
  1117  075B  1803               	skipnc
  1118  075C  3E01               	addlw	1
  1119  075D  3E04               	addlw	4
  1120  075E  00D3               	movwf	_wd+1
  1121  075F                     l1558:	
  1122                           
  1123                           ;Tempmain.c: 173: if (TX & 0x10) wd=wd+625;
  1124  075F  1E5C               	btfss	_TX,4
  1125  0760  2F62               	goto	u1221
  1126  0761  2F63               	goto	u1220
  1127  0762                     u1221:	
  1128  0762  2F6B               	goto	l1562
  1129  0763                     u1220:	
  1130  0763                     l1560:	
  1131  0763  0852               	movf	_wd,w
  1132  0764  3E71               	addlw	113
  1133  0765  00D2               	movwf	_wd
  1134  0766  0853               	movf	_wd+1,w
  1135  0767  1803               	skipnc
  1136  0768  3E01               	addlw	1
  1137  0769  3E02               	addlw	2
  1138  076A  00D3               	movwf	_wd+1
  1139  076B                     l1562:	
  1140                           
  1141                           ;Tempmain.c: 174: shifen=wd/1000;
  1142  076B  30E8               	movlw	232
  1143  076C  00F6               	movwf	___lwdiv@divisor
  1144  076D  3003               	movlw	3
  1145  076E  00F7               	movwf	___lwdiv@divisor+1
  1146  076F  0853               	movf	_wd+1,w
  1147  0770  00F9               	movwf	___lwdiv@dividend+1
  1148  0771  0852               	movf	_wd,w
  1149  0772  00F8               	movwf	___lwdiv@dividend
  1150  0773  120A  118A  24F1  120A  118A  	fcall	___lwdiv
  1151  0778  0876               	movf	?___lwdiv,w
  1152  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1153  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1154  077B  00B8               	movwf	??_get_temp
  1155  077C  0838               	movf	??_get_temp,w
  1156  077D  00D9               	movwf	_shifen
  1157  077E                     l1564:	
  1158                           
  1159                           ;Tempmain.c: 175: baifen=(wd%1000)/100;
  1160  077E  3064               	movlw	100
  1161  077F  00F6               	movwf	___lwdiv@divisor
  1162  0780  3000               	movlw	0
  1163  0781  00F7               	movwf	___lwdiv@divisor+1
  1164  0782  0853               	movf	_wd+1,w
  1165  0783  00F3               	movwf	___lwmod@dividend+1
  1166  0784  0852               	movf	_wd,w
  1167  0785  00F2               	movwf	___lwmod@dividend
  1168  0786  30E8               	movlw	232
  1169  0787  00F0               	movwf	___lwmod@divisor
  1170  0788  3003               	movlw	3
  1171  0789  00F1               	movwf	___lwmod@divisor+1
  1172  078A  120A  118A  2442  120A  118A  	fcall	___lwmod
  1173  078F  0871               	movf	?___lwmod+1,w
  1174  0790  00F9               	movwf	___lwdiv@dividend+1
  1175  0791  0870               	movf	?___lwmod,w
  1176  0792  00F8               	movwf	___lwdiv@dividend
  1177  0793  120A  118A  24F1  120A  118A  	fcall	___lwdiv
  1178  0798  0876               	movf	?___lwdiv,w
  1179  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1180  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1181  079B  00B8               	movwf	??_get_temp
  1182  079C  0838               	movf	??_get_temp,w
  1183  079D  00D8               	movwf	_baifen
  1184  079E                     l1566:	
  1185                           
  1186                           ;Tempmain.c: 176: qianfen=(wd%100)/10;
  1187  079E  300A               	movlw	10
  1188  079F  00F6               	movwf	___lwdiv@divisor
  1189  07A0  3000               	movlw	0
  1190  07A1  00F7               	movwf	___lwdiv@divisor+1
  1191  07A2  0853               	movf	_wd+1,w
  1192  07A3  00F3               	movwf	___lwmod@dividend+1
  1193  07A4  0852               	movf	_wd,w
  1194  07A5  00F2               	movwf	___lwmod@dividend
  1195  07A6  3064               	movlw	100
  1196  07A7  00F0               	movwf	___lwmod@divisor
  1197  07A8  3000               	movlw	0
  1198  07A9  00F1               	movwf	___lwmod@divisor+1
  1199  07AA  120A  118A  2442  120A  118A  	fcall	___lwmod
  1200  07AF  0871               	movf	?___lwmod+1,w
  1201  07B0  00F9               	movwf	___lwdiv@dividend+1
  1202  07B1  0870               	movf	?___lwmod,w
  1203  07B2  00F8               	movwf	___lwdiv@dividend
  1204  07B3  120A  118A  24F1  120A  118A  	fcall	___lwdiv
  1205  07B8  0876               	movf	?___lwdiv,w
  1206  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1207  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1208  07BB  00B8               	movwf	??_get_temp
  1209  07BC  0838               	movf	??_get_temp,w
  1210  07BD  00D7               	movwf	_qianfen
  1211  07BE                     l1568:	
  1212                           
  1213                           ;Tempmain.c: 177: wanfen=wd%10;
  1214  07BE  300A               	movlw	10
  1215  07BF  00F0               	movwf	___lwmod@divisor
  1216  07C0  3000               	movlw	0
  1217  07C1  00F1               	movwf	___lwmod@divisor+1
  1218  07C2  0853               	movf	_wd+1,w
  1219  07C3  00F3               	movwf	___lwmod@dividend+1
  1220  07C4  0852               	movf	_wd,w
  1221  07C5  00F2               	movwf	___lwmod@dividend
  1222  07C6  120A  118A  2442  120A  118A  	fcall	___lwmod
  1223  07CB  0870               	movf	?___lwmod,w
  1224  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1225  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1226  07CE  00B8               	movwf	??_get_temp
  1227  07CF  0838               	movf	??_get_temp,w
  1228  07D0  00D6               	movwf	_wanfen
  1229  07D1                     l1570:	
  1230                           
  1231                           ;Tempmain.c: 178: __nop();
  1232  07D1  0000               	nop
  1233  07D2                     l82:	
  1234  07D2  0008               	return
  1235  07D3                     __end_of_get_temp:	
  1236                           
  1237                           	psect	text3
  1238  04B6                     __ptext3:	
  1239 ;; *************** function _write_byte *****************
  1240 ;; Defined at:
  1241 ;;		line 92 in file "Tempmain.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  val             1    wreg     unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  val             1    7[COMMON] unsigned char 
  1246 ;;  i               1    8[COMMON] unsigned char 
  1247 ;;  temp            1    6[COMMON] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         3       0       0       0       0
  1259 ;;      Temps:          2       0       0       0       0
  1260 ;;      Totals:         5       0       0       0       0
  1261 ;;Total ram usage:        5 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    1
  1264 ;; This function calls:
  1265 ;;		_delay_temp
  1266 ;; This function is called by:
  1267 ;;		_get_temp
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _write_byte
  1273  04B6                     _write_byte:	
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1277                           ;write_byte@val stored from wreg
  1278  04B6  00F7               	movwf	write_byte@val
  1279  04B7                     l1294:	
  1280                           
  1281                           ;Tempmain.c: 92: void write_byte(unsigned char val);Tempmain.c: 93: {;Tempmain.c: 94:  u
      +                          nsigned char i;;Tempmain.c: 95:  unsigned char temp;;Tempmain.c: 96:  for(i=8;i>0;i--)
  1282  04B7  3008               	movlw	8
  1283  04B8  00F4               	movwf	??_write_byte
  1284  04B9  0874               	movf	??_write_byte,w
  1285  04BA  00F8               	movwf	write_byte@i
  1286  04BB                     l1300:	
  1287                           
  1288                           ;Tempmain.c: 97:  {;Tempmain.c: 98:    temp=val&0x01;
  1289  04BB  0877               	movf	write_byte@val,w
  1290  04BC  3901               	andlw	1
  1291  04BD  00F4               	movwf	??_write_byte
  1292  04BE  0874               	movf	??_write_byte,w
  1293  04BF  00F6               	movwf	write_byte@temp
  1294  04C0                     l1302:	
  1295                           
  1296                           ;Tempmain.c: 99:    RA0 = 0; TRISA0 = 0;
  1297  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1298  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1299  04C2  1005               	bcf	5,0	;volatile
  1300  04C3                     l1304:	
  1301  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1302  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1303  04C5  1005               	bcf	5,0	;volatile
  1304  04C6                     l1306:	
  1305                           
  1306                           ;Tempmain.c: 100:    __nop();
  1307  04C6  0000               	nop
  1308  04C7                     l1308:	
  1309                           
  1310                           ;Tempmain.c: 101:    __nop();
  1311  04C7  0000               	nop
  1312  04C8                     l1310:	
  1313                           
  1314                           ;Tempmain.c: 102:    __nop();
  1315  04C8  0000               	nop
  1316  04C9                     l1312:	
  1317                           
  1318                           ;Tempmain.c: 103:    __nop();
  1319  04C9  0000               	nop
  1320  04CA                     l1314:	
  1321                           
  1322                           ;Tempmain.c: 104:    __nop();
  1323  04CA  0000               	nop
  1324  04CB                     l1316:	
  1325                           
  1326                           ;Tempmain.c: 105:    if(temp==1) TRISA0 =1;
  1327  04CB  0376               	decf	write_byte@temp,w
  1328  04CC  1D03               	btfss	3,2
  1329  04CD  2CCF               	goto	u791
  1330  04CE  2CD0               	goto	u790
  1331  04CF                     u791:	
  1332  04CF  2CD3               	goto	l1320
  1333  04D0                     u790:	
  1334  04D0                     l1318:	
  1335  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1336  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1337  04D2  1405               	bsf	5,0	;volatile
  1338  04D3                     l1320:	
  1339                           
  1340                           ;Tempmain.c: 106:    delay_temp(2,7);
  1341  04D3  3007               	movlw	7
  1342  04D4  00F4               	movwf	??_write_byte
  1343  04D5  0874               	movf	??_write_byte,w
  1344  04D6  00F0               	movwf	delay_temp@y
  1345  04D7  3002               	movlw	2
  1346  04D8  120A  118A  2358  120A  118A  	fcall	_delay_temp
  1347  04DD                     l1322:	
  1348                           
  1349                           ;Tempmain.c: 107:    TRISA0 =1;
  1350  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1351  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1352  04DF  1405               	bsf	5,0	;volatile
  1353  04E0                     l1324:	
  1354                           
  1355                           ;Tempmain.c: 108:    __nop();
  1356  04E0  0000               	nop
  1357  04E1                     l1326:	
  1358                           
  1359                           ;Tempmain.c: 109:    __nop();
  1360  04E1  0000               	nop
  1361  04E2                     l1328:	
  1362                           
  1363                           ;Tempmain.c: 110:    val=val>>1;
  1364  04E2  0877               	movf	write_byte@val,w
  1365  04E3  00F4               	movwf	??_write_byte
  1366  04E4  1003               	clrc
  1367  04E5  0C74               	rrf	??_write_byte,w
  1368  04E6  00F5               	movwf	??_write_byte+1
  1369  04E7  0875               	movf	??_write_byte+1,w
  1370  04E8  00F7               	movwf	write_byte@val
  1371  04E9                     l1330:	
  1372                           
  1373                           ;Tempmain.c: 111:   }
  1374  04E9  3001               	movlw	1
  1375  04EA  02F8               	subwf	write_byte@i,f
  1376  04EB                     l1332:	
  1377  04EB  0878               	movf	write_byte@i,w
  1378  04EC  1D03               	btfss	3,2
  1379  04ED  2CEF               	goto	u801
  1380  04EE  2CF0               	goto	u800
  1381  04EF                     u801:	
  1382  04EF  2CBB               	goto	l1300
  1383  04F0                     u800:	
  1384  04F0                     l64:	
  1385  04F0  0008               	return
  1386  04F1                     __end_of_write_byte:	
  1387                           
  1388                           	psect	text4
  1389  047C                     __ptext4:	
  1390 ;; *************** function _reset *****************
  1391 ;; Defined at:
  1392 ;;		line 75 in file "Tempmain.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  presence        1    5[COMMON] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2   52[None  ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0
  1408 ;;      Temps:          1       0       0       0       0
  1409 ;;      Totals:         2       0       0       0       0
  1410 ;;Total ram usage:        2 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    1
  1413 ;; This function calls:
  1414 ;;		_delay_temp
  1415 ;; This function is called by:
  1416 ;;		_get_temp
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _reset
  1422  047C                     _reset:	
  1423  047C                     l1278:	
  1424                           ;incstack = 0
  1425                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  1426                           
  1427                           
  1428                           ;Tempmain.c: 77:   char presence=1;
  1429  047C  01F5               	clrf	reset@presence
  1430  047D  0AF5               	incf	reset@presence,f
  1431                           
  1432                           ;Tempmain.c: 78:   while(presence)
  1433  047E  2CB0               	goto	l1292
  1434  047F                     l54:	
  1435                           
  1436                           ;Tempmain.c: 79:   {;Tempmain.c: 80:     RA0 = 0; TRISA0 = 0 ;
  1437  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0481  1005               	bcf	5,0	;volatile
  1440  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0484  1005               	bcf	5,0	;volatile
  1443  0485                     l1280:	
  1444                           
  1445                           ;Tempmain.c: 81:     delay_temp(2,70);
  1446  0485  3046               	movlw	70
  1447  0486  00F4               	movwf	??_reset
  1448  0487  0874               	movf	??_reset,w
  1449  0488  00F0               	movwf	delay_temp@y
  1450  0489  3002               	movlw	2
  1451  048A  120A  118A  2358  120A  118A  	fcall	_delay_temp
  1452  048F                     l1282:	
  1453                           
  1454                           ;Tempmain.c: 82:     TRISA0 =1;
  1455  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0491  1405               	bsf	5,0	;volatile
  1458                           
  1459                           ;Tempmain.c: 83:     delay_temp(2,8);
  1460  0492  3008               	movlw	8
  1461  0493  00F4               	movwf	??_reset
  1462  0494  0874               	movf	??_reset,w
  1463  0495  00F0               	movwf	delay_temp@y
  1464  0496  3002               	movlw	2
  1465  0497  120A  118A  2358  120A  118A  	fcall	_delay_temp
  1466  049C                     l1284:	
  1467                           
  1468                           ;Tempmain.c: 84:     if(RA0==1) presence=1;
  1469  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1470  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1471  049E  1C05               	btfss	5,0	;volatile
  1472  049F  2CA1               	goto	u771
  1473  04A0  2CA2               	goto	u770
  1474  04A1                     u771:	
  1475  04A1  2CA5               	goto	l1288
  1476  04A2                     u770:	
  1477  04A2                     l1286:	
  1478  04A2  01F5               	clrf	reset@presence
  1479  04A3  0AF5               	incf	reset@presence,f
  1480  04A4  2CA6               	goto	l1290
  1481  04A5                     l1288:	
  1482  04A5  01F5               	clrf	reset@presence
  1483  04A6                     l1290:	
  1484                           
  1485                           ;Tempmain.c: 86:     delay_temp(2,60);
  1486  04A6  303C               	movlw	60
  1487  04A7  00F4               	movwf	??_reset
  1488  04A8  0874               	movf	??_reset,w
  1489  04A9  00F0               	movwf	delay_temp@y
  1490  04AA  3002               	movlw	2
  1491  04AB  120A  118A  2358  120A  118A  	fcall	_delay_temp
  1492  04B0                     l1292:	
  1493                           
  1494                           ;Tempmain.c: 78:   while(presence)
  1495  04B0  0875               	movf	reset@presence,w
  1496  04B1  1D03               	btfss	3,2
  1497  04B2  2CB4               	goto	u781
  1498  04B3  2CB5               	goto	u780
  1499  04B4                     u781:	
  1500  04B4  2C7F               	goto	l54
  1501  04B5                     u780:	
  1502  04B5                     l58:	
  1503  04B5  0008               	return
  1504  04B6                     __end_of_reset:	
  1505                           
  1506                           	psect	text5
  1507  040D                     __ptext5:	
  1508 ;; *************** function _read_byte *****************
  1509 ;; Defined at:
  1510 ;;		line 116 in file "Tempmain.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  i               1    6[COMMON] unsigned char 
  1515 ;;  value           1    5[COMMON] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      unsigned char 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         2       0       0       0       0
  1527 ;;      Temps:          1       0       0       0       0
  1528 ;;      Totals:         3       0       0       0       0
  1529 ;;Total ram usage:        3 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    1
  1532 ;; This function calls:
  1533 ;;		_delay_temp
  1534 ;; This function is called by:
  1535 ;;		_get_temp
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _read_byte
  1541  040D                     _read_byte:	
  1542  040D                     l1334:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  1545                           
  1546                           
  1547                           ;Tempmain.c: 118:  unsigned char i;;Tempmain.c: 119:  unsigned char value=0;
  1548  040D  01F5               	clrf	read_byte@value
  1549  040E                     l1336:	
  1550                           
  1551                           ;Tempmain.c: 120:  static char j;;Tempmain.c: 121:  for(i=8;i>0;i--)
  1552  040E  3008               	movlw	8
  1553  040F  00F4               	movwf	??_read_byte
  1554  0410  0874               	movf	??_read_byte,w
  1555  0411  00F6               	movwf	read_byte@i
  1556  0412                     l1342:	
  1557                           
  1558                           ;Tempmain.c: 122:  {;Tempmain.c: 123:    value>>=1;
  1559  0412  1003               	clrc
  1560  0413  0CF5               	rrf	read_byte@value,f
  1561  0414                     l1344:	
  1562                           
  1563                           ;Tempmain.c: 124:    RA0 = 0; TRISA0 = 0;
  1564  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0416  1005               	bcf	5,0	;volatile
  1567  0417                     l1346:	
  1568  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0418  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0419  1005               	bcf	5,0	;volatile
  1571  041A                     l1348:	
  1572                           
  1573                           ;Tempmain.c: 125:    __nop();
  1574  041A  0000               	nop
  1575  041B                     l1350:	
  1576                           
  1577                           ;Tempmain.c: 126:    __nop();
  1578  041B  0000               	nop
  1579  041C                     l1352:	
  1580                           
  1581                           ;Tempmain.c: 127:    __nop();
  1582  041C  0000               	nop
  1583  041D                     l1354:	
  1584                           
  1585                           ;Tempmain.c: 128:    __nop();
  1586  041D  0000               	nop
  1587  041E                     l1356:	
  1588                           
  1589                           ;Tempmain.c: 129:    __nop();
  1590  041E  0000               	nop
  1591  041F                     l1358:	
  1592                           
  1593                           ;Tempmain.c: 130:    __nop();
  1594  041F  0000               	nop
  1595  0420                     l1360:	
  1596                           
  1597                           ;Tempmain.c: 131:    TRISA0 =1;
  1598  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1600  0422  1405               	bsf	5,0	;volatile
  1601  0423                     l1362:	
  1602                           
  1603                           ;Tempmain.c: 132:    __nop();
  1604  0423  0000               	nop
  1605  0424                     l1364:	
  1606                           
  1607                           ;Tempmain.c: 133:    __nop();
  1608  0424  0000               	nop
  1609  0425                     l1366:	
  1610                           
  1611                           ;Tempmain.c: 134:    __nop();
  1612  0425  0000               	nop
  1613  0426                     l1368:	
  1614                           
  1615                           ;Tempmain.c: 135:    __nop();
  1616  0426  0000               	nop
  1617  0427                     l1370:	
  1618                           
  1619                           ;Tempmain.c: 136:    __nop();
  1620  0427  0000               	nop
  1621  0428                     l1372:	
  1622                           
  1623                           ;Tempmain.c: 138:    if(RA0 == 1) value|=0x80;
  1624  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1626  042A  1C05               	btfss	5,0	;volatile
  1627  042B  2C2D               	goto	u811
  1628  042C  2C2E               	goto	u810
  1629  042D                     u811:	
  1630  042D  2C2F               	goto	l1376
  1631  042E                     u810:	
  1632  042E                     l1374:	
  1633  042E  17F5               	bsf	read_byte@value,7
  1634  042F                     l1376:	
  1635                           
  1636                           ;Tempmain.c: 139:    delay_temp(2,7);
  1637  042F  3007               	movlw	7
  1638  0430  00F4               	movwf	??_read_byte
  1639  0431  0874               	movf	??_read_byte,w
  1640  0432  00F0               	movwf	delay_temp@y
  1641  0433  3002               	movlw	2
  1642  0434  120A  118A  2358  120A  118A  	fcall	_delay_temp
  1643  0439                     l1378:	
  1644                           
  1645                           ;Tempmain.c: 140:   }
  1646  0439  3001               	movlw	1
  1647  043A  02F6               	subwf	read_byte@i,f
  1648  043B                     l1380:	
  1649  043B  0876               	movf	read_byte@i,w
  1650  043C  1D03               	btfss	3,2
  1651  043D  2C3F               	goto	u821
  1652  043E  2C40               	goto	u820
  1653  043F                     u821:	
  1654  043F  2C12               	goto	l1342
  1655  0440                     u820:	
  1656  0440                     l1382:	
  1657                           
  1658                           ;Tempmain.c: 141:   return(value);
  1659  0440  0875               	movf	read_byte@value,w
  1660  0441                     l72:	
  1661  0441  0008               	return
  1662  0442                     __end_of_read_byte:	
  1663                           
  1664                           	psect	text6
  1665  0358                     __ptext6:	
  1666 ;; *************** function _delay_temp *****************
  1667 ;; Defined at:
  1668 ;;		line 65 in file "tempsource.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  x               1    wreg     unsigned char 
  1671 ;;  y               1    0[COMMON] unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  x               1    2[COMMON] unsigned char 
  1674 ;;  z               1    3[COMMON] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         1       0       0       0       0
  1685 ;;      Locals:         2       0       0       0       0
  1686 ;;      Temps:          1       0       0       0       0
  1687 ;;      Totals:         4       0       0       0       0
  1688 ;;Total ram usage:        4 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_reset
  1694 ;;		_write_byte
  1695 ;;		_read_byte
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _delay_temp
  1701  0358                     _delay_temp:	
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  1705                           ;delay_temp@x stored from wreg
  1706  0358  00F2               	movwf	delay_temp@x
  1707  0359                     l117:	
  1708                           ;tempsource.c: 65: void delay_temp(char x,char y);tempsource.c: 66: {;tempsource.c: 67: 
      +                            char z;;tempsource.c: 68:   do{
  1709                           
  1710  0359                     l1266:	
  1711                           
  1712                           ;tempsource.c: 69:       z=y;
  1713  0359  0870               	movf	delay_temp@y,w
  1714  035A  00F1               	movwf	??_delay_temp
  1715  035B  0871               	movf	??_delay_temp,w
  1716  035C  00F3               	movwf	delay_temp@z
  1717  035D                     l1268:	
  1718  035D  3001               	movlw	1
  1719  035E  02F3               	subwf	delay_temp@z,f
  1720  035F  1D03               	btfss	3,2
  1721  0360  2B62               	goto	u751
  1722  0361  2B63               	goto	u750
  1723  0362                     u751:	
  1724  0362  2B5D               	goto	l1268
  1725  0363                     u750:	
  1726  0363                     l1270:	
  1727                           
  1728                           ;tempsource.c: 71:      }while(--x);
  1729  0363  3001               	movlw	1
  1730  0364  02F2               	subwf	delay_temp@x,f
  1731  0365  1D03               	btfss	3,2
  1732  0366  2B68               	goto	u761
  1733  0367  2B69               	goto	u760
  1734  0368                     u761:	
  1735  0368  2B59               	goto	l117
  1736  0369                     u760:	
  1737  0369                     l121:	
  1738  0369  0008               	return
  1739  036A                     __end_of_delay_temp:	
  1740                           
  1741                           	psect	text7
  1742  03CE                     __ptext7:	
  1743 ;; *************** function _display *****************
  1744 ;; Defined at:
  1745 ;;		line 58 in file "Tempmain.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  tempstr         1   12[COMMON] unsigned char [1]
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         2       0       0       0       0
  1763 ;;Total ram usage:        2 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    4
  1766 ;; This function calls:
  1767 ;;		_dispcmd
  1768 ;; This function is called by:
  1769 ;;		_get_temp
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _display
  1776  03CE                     _display:	
  1777  03CE                     l1272:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1780                           
  1781                           
  1782                           ;Tempmain.c: 60:     char tempstr[] = {num[shi]};
  1783  03CE  01FC               	clrf	display@tempstr
  1784  03CF                     l1274:	
  1785  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1786  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1787  03D1  085B               	movf	_shi,w
  1788  03D2  3E3E               	addlw	(low (_num| 0))& (0+255)
  1789  03D3  0084               	movwf	4
  1790  03D4  1383               	bcf	3,7	;select IRP bank0
  1791  03D5  0800               	movf	0,w
  1792  03D6  00FB               	movwf	??_display
  1793  03D7  087B               	movf	??_display,w
  1794  03D8  00FC               	movwf	display@tempstr
  1795  03D9                     l1276:	
  1796                           
  1797                           ;Tempmain.c: 61:     dispcmd(1, tempstr);
  1798  03D9  3001               	movlw	1
  1799  03DA  00F8               	movwf	dispcmd@line
  1800  03DB  3000               	movlw	0
  1801  03DC  00F9               	movwf	dispcmd@line+1
  1802  03DD  307C               	movlw	(low (display@tempstr| 0))& (0+255)
  1803  03DE  00FB               	movwf	??_display
  1804  03DF  087B               	movf	??_display,w
  1805  03E0  00FA               	movwf	dispcmd@linetxt
  1806  03E1  120A  118A  25F5  120A  118A  	fcall	_dispcmd
  1807  03E6                     l47:	
  1808  03E6  0008               	return
  1809  03E7                     __end_of_display:	
  1810                           
  1811                           	psect	text8
  1812  05F5                     __ptext8:	
  1813 ;; *************** function _dispcmd *****************
  1814 ;; Defined at:
  1815 ;;		line 16 in file "4linelcddriver.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  line            2    8[COMMON] int 
  1818 ;;  linetxt         1   10[COMMON] PTR unsigned char 
  1819 ;;		 -> display@tempstr(1), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  error          20    4[BANK0 ] unsigned char [20]
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         3       0       0       0       0
  1832 ;;      Locals:         0      20       0       0       0
  1833 ;;      Temps:          0       4       0       0       0
  1834 ;;      Totals:         3      24       0       0       0
  1835 ;;Total ram usage:       27 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		_writecmd
  1840 ;;		_yeet
  1841 ;; This function is called by:
  1842 ;;		_display
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _dispcmd
  1848  05F5                     _dispcmd:	
  1849  05F5                     l1226:	
  1850                           ;incstack = 0
  1851                           ; Regs used in _dispcmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1852                           
  1853  05F5  0878               	movf	dispcmd@line,w
  1854  05F6  0479               	iorwf	dispcmd@line+1,w
  1855  05F7  1903               	btfsc	3,2
  1856  05F8  2DFA               	goto	u641
  1857  05F9  2DFB               	goto	u640
  1858  05FA                     u641:	
  1859  05FA  2E01               	goto	l1230
  1860  05FB                     u640:	
  1861  05FB                     l1228:	
  1862  05FB  0378               	decf	dispcmd@line,w
  1863  05FC  0479               	iorwf	dispcmd@line+1,w
  1864  05FD  1D03               	btfss	3,2
  1865  05FE  2E00               	goto	u651
  1866  05FF  2E01               	goto	u650
  1867  0600                     u651:	
  1868  0600  2E0E               	goto	l1234
  1869  0601                     u650:	
  1870  0601                     l1230:	
  1871  0601  3080               	movlw	128
  1872  0602  120A  118A  2336  120A  118A  	fcall	_writecmd
  1873  0607                     l1232:	
  1874  0607  087A               	movf	dispcmd@linetxt,w
  1875  0608  120A  118A  23E7  120A  118A  	fcall	_yeet
  1876  060D  2E89               	goto	l159
  1877  060E                     l1234:	
  1878  060E  3002               	movlw	2
  1879  060F  0678               	xorwf	dispcmd@line,w
  1880  0610  0479               	iorwf	dispcmd@line+1,w
  1881  0611  1D03               	btfss	3,2
  1882  0612  2E14               	goto	u661
  1883  0613  2E15               	goto	u660
  1884  0614                     u661:	
  1885  0614  2E22               	goto	l1240
  1886  0615                     u660:	
  1887  0615                     l1236:	
  1888  0615  3090               	movlw	144
  1889  0616  120A  118A  2336  120A  118A  	fcall	_writecmd
  1890  061B                     l1238:	
  1891  061B  087A               	movf	dispcmd@linetxt,w
  1892  061C  120A  118A  23E7  120A  118A  	fcall	_yeet
  1893  0621  2E89               	goto	l159
  1894  0622                     l1240:	
  1895  0622  3003               	movlw	3
  1896  0623  0678               	xorwf	dispcmd@line,w
  1897  0624  0479               	iorwf	dispcmd@line+1,w
  1898  0625  1D03               	btfss	3,2
  1899  0626  2E28               	goto	u671
  1900  0627  2E29               	goto	u670
  1901  0628                     u671:	
  1902  0628  2E36               	goto	l1246
  1903  0629                     u670:	
  1904  0629                     l1242:	
  1905  0629  3088               	movlw	136
  1906  062A  120A  118A  2336  120A  118A  	fcall	_writecmd
  1907  062F                     l1244:	
  1908  062F  087A               	movf	dispcmd@linetxt,w
  1909  0630  120A  118A  23E7  120A  118A  	fcall	_yeet
  1910  0635  2E89               	goto	l159
  1911  0636                     l1246:	
  1912  0636  3004               	movlw	4
  1913  0637  0678               	xorwf	dispcmd@line,w
  1914  0638  0479               	iorwf	dispcmd@line+1,w
  1915  0639  1D03               	btfss	3,2
  1916  063A  2E3C               	goto	u681
  1917  063B  2E3D               	goto	u680
  1918  063C                     u681:	
  1919  063C  2E4A               	goto	l1252
  1920  063D                     u680:	
  1921  063D                     l1248:	
  1922  063D  3098               	movlw	152
  1923  063E  120A  118A  2336  120A  118A  	fcall	_writecmd
  1924  0643                     l1250:	
  1925  0643  087A               	movf	dispcmd@linetxt,w
  1926  0644  120A  118A  23E7  120A  118A  	fcall	_yeet
  1927  0649  2E89               	goto	l159
  1928  064A                     l1252:	
  1929  064A  0878               	movf	dispcmd@line,w
  1930  064B  0479               	iorwf	dispcmd@line+1,w
  1931  064C  1903               	btfsc	3,2
  1932  064D  2E4F               	goto	u691
  1933  064E  2E50               	goto	u690
  1934  064F                     u691:	
  1935  064F  2E89               	goto	l151
  1936  0650                     u690:	
  1937  0650                     l1254:	
  1938  0650  0378               	decf	dispcmd@line,w
  1939  0651  0479               	iorwf	dispcmd@line+1,w
  1940  0652  1903               	btfsc	3,2
  1941  0653  2E55               	goto	u701
  1942  0654  2E56               	goto	u700
  1943  0655                     u701:	
  1944  0655  2E89               	goto	l151
  1945  0656                     u700:	
  1946  0656                     l1256:	
  1947  0656  3002               	movlw	2
  1948  0657  0678               	xorwf	dispcmd@line,w
  1949  0658  0479               	iorwf	dispcmd@line+1,w
  1950  0659  1903               	btfsc	3,2
  1951  065A  2E5C               	goto	u711
  1952  065B  2E5D               	goto	u710
  1953  065C                     u711:	
  1954  065C  2E89               	goto	l151
  1955  065D                     u710:	
  1956  065D                     l1258:	
  1957  065D  3003               	movlw	3
  1958  065E  0678               	xorwf	dispcmd@line,w
  1959  065F  0479               	iorwf	dispcmd@line+1,w
  1960  0660  1903               	btfsc	3,2
  1961  0661  2E63               	goto	u721
  1962  0662  2E64               	goto	u720
  1963  0663                     u721:	
  1964  0663  2E89               	goto	l151
  1965  0664                     u720:	
  1966  0664                     l1260:	
  1967  0664  3004               	movlw	4
  1968  0665  0678               	xorwf	dispcmd@line,w
  1969  0666  0479               	iorwf	dispcmd@line+1,w
  1970  0667  1903               	btfsc	3,2
  1971  0668  2E6A               	goto	u731
  1972  0669  2E6B               	goto	u730
  1973  066A                     u731:	
  1974  066A  2E89               	goto	l151
  1975  066B                     u730:	
  1976  066B                     l1262:	
  1977  066B  3024               	movlw	dispcmd@error& (0+255)
  1978  066C  0084               	movwf	4
  1979  066D  30A0               	movlw	low dispcmd@F865
  1980  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1981  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0670  00A0               	movwf	??_dispcmd
  1983  0671  0804               	movf	4,w
  1984  0672  00A1               	movwf	??_dispcmd+1
  1985  0673  3014               	movlw	20
  1986  0674  00A2               	movwf	??_dispcmd+2
  1987  0675                     u740:	
  1988  0675  0820               	movf	??_dispcmd,w
  1989  0676  0084               	movwf	4
  1990  0677  1383               	bcf	3,7	;select IRP bank1
  1991  0678  0800               	movf	0,w
  1992  0679  00A3               	movwf	??_dispcmd+3
  1993  067A  0AA0               	incf	??_dispcmd,f
  1994  067B  0821               	movf	??_dispcmd+1,w
  1995  067C  0084               	movwf	4
  1996  067D  0823               	movf	??_dispcmd+3,w
  1997  067E  0080               	movwf	0
  1998  067F  0AA1               	incf	??_dispcmd+1,f
  1999  0680  0BA2               	decfsz	??_dispcmd+2,f
  2000  0681  2E75               	goto	u740
  2001  0682                     l1264:	
  2002  0682  3024               	movlw	(low (dispcmd@error| 0))& (0+255)
  2003  0683  120A  118A  23E7  120A  118A  	fcall	_yeet
  2004  0688  2E89               	goto	l159
  2005  0689                     l151:	
  2006  0689                     l159:	
  2007  0689  0008               	return
  2008  068A                     __end_of_dispcmd:	
  2009                           
  2010                           	psect	text9
  2011  03E7                     __ptext9:	
  2012 ;; *************** function _yeet *****************
  2013 ;; Defined at:
  2014 ;;		line 41 in file "4linelcddriver.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  array           1    wreg     PTR unsigned char 
  2017 ;;		 -> dispcmd@error(20), display@tempstr(1), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  array           1    7[COMMON] PTR unsigned char 
  2020 ;;		 -> dispcmd@error(20), display@tempstr(1), 
  2021 ;;  i               2    4[COMMON] int 
  2022 ;;  p               1    6[COMMON] PTR unsigned char 
  2023 ;;		 -> dispcmd@error(20), display@tempstr(1), 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0
  2034 ;;      Locals:         4       0       0       0       0
  2035 ;;      Temps:          1       0       0       0       0
  2036 ;;      Totals:         5       0       0       0       0
  2037 ;;Total ram usage:        5 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		_writechar
  2042 ;; This function is called by:
  2043 ;;		_dispcmd
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _yeet
  2049  03E7                     _yeet:	
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _yeet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2053                           ;yeet@array stored from wreg
  2054  03E7  00F7               	movwf	yeet@array
  2055  03E8                     l1214:	
  2056  03E8  01F4               	clrf	yeet@i
  2057  03E9  01F5               	clrf	yeet@i+1
  2058  03EA                     l1216:	
  2059  03EA  0877               	movf	yeet@array,w
  2060  03EB  00F3               	movwf	??_yeet
  2061  03EC  0873               	movf	??_yeet,w
  2062  03ED  00F6               	movwf	yeet@p
  2063  03EE  2C04               	goto	l1224
  2064  03EF                     l1218:	
  2065  03EF  0874               	movf	yeet@i,w
  2066  03F0  0777               	addwf	yeet@array,w
  2067  03F1  00F3               	movwf	??_yeet
  2068  03F2  0873               	movf	??_yeet,w
  2069  03F3  0084               	movwf	4
  2070  03F4  0800               	movf	0,w
  2071  03F5  120A  118A  2347  120A  118A  	fcall	_writechar
  2072  03FA                     l1220:	
  2073  03FA  3001               	movlw	1
  2074  03FB  07F4               	addwf	yeet@i,f
  2075  03FC  1803               	skipnc
  2076  03FD  0AF5               	incf	yeet@i+1,f
  2077  03FE  3000               	movlw	0
  2078  03FF  07F5               	addwf	yeet@i+1,f
  2079  0400                     l1222:	
  2080  0400  3001               	movlw	1
  2081  0401  00F3               	movwf	??_yeet
  2082  0402  0873               	movf	??_yeet,w
  2083  0403  07F6               	addwf	yeet@p,f
  2084  0404                     l1224:	
  2085  0404  0876               	movf	yeet@p,w
  2086  0405  0084               	movwf	4
  2087  0406  1383               	bcf	3,7	;select IRP bank0
  2088  0407  0800               	movf	0,w
  2089  0408  1D03               	btfss	3,2
  2090  0409  2C0B               	goto	u631
  2091  040A  2C0C               	goto	u630
  2092  040B                     u631:	
  2093  040B  2BEF               	goto	l1218
  2094  040C                     u630:	
  2095  040C                     l165:	
  2096  040C  0008               	return
  2097  040D                     __end_of_yeet:	
  2098                           
  2099                           	psect	text10
  2100  0347                     __ptext10:	
  2101 ;; *************** function _writechar *****************
  2102 ;; Defined at:
  2103 ;;		line 59 in file "4linelcddriver.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  x               1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  x               1    2[COMMON] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0
  2120 ;;      Totals:         1       0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    1
  2124 ;; This function calls:
  2125 ;;		_delay
  2126 ;; This function is called by:
  2127 ;;		_yeet
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _writechar
  2133  0347                     _writechar:	
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2137                           ;writechar@x stored from wreg
  2138  0347  00F2               	movwf	writechar@x
  2139  0348                     l1194:	
  2140  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2142  034A  1685               	bsf	5,5	;volatile
  2143  034B  1205               	bcf	5,4	;volatile
  2144  034C                     l1196:	
  2145  034C  0872               	movf	writechar@x,w
  2146  034D  0088               	movwf	8	;volatile
  2147  034E                     l1198:	
  2148  034E  1185               	bcf	5,3	;volatile
  2149  034F                     l1200:	
  2150  034F  120A  118A  23B8  120A  118A  	fcall	_delay
  2151  0354                     l1202:	
  2152  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0356  1585               	bsf	5,3	;volatile
  2155  0357                     l173:	
  2156  0357  0008               	return
  2157  0358                     __end_of_writechar:	
  2158                           
  2159                           	psect	text11
  2160  0336                     __ptext11:	
  2161 ;; *************** function _writecmd *****************
  2162 ;; Defined at:
  2163 ;;		line 71 in file "4linelcddriver.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  x               1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  x               1    2[COMMON] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         1       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0
  2180 ;;      Totals:         1       0       0       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    1
  2184 ;; This function calls:
  2185 ;;		_delay
  2186 ;; This function is called by:
  2187 ;;		_dispcmd
  2188 ;;		_lcd_init
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _writecmd
  2194  0336                     _writecmd:	
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in _writecmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2198                           ;writecmd@x stored from wreg
  2199  0336  00F2               	movwf	writecmd@x
  2200  0337                     l1204:	
  2201  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0339  1285               	bcf	5,5	;volatile
  2204  033A  1205               	bcf	5,4	;volatile
  2205  033B                     l1206:	
  2206  033B  0872               	movf	writecmd@x,w
  2207  033C  0088               	movwf	8	;volatile
  2208  033D                     l1208:	
  2209  033D  1185               	bcf	5,3	;volatile
  2210  033E                     l1210:	
  2211  033E  120A  118A  23B8  120A  118A  	fcall	_delay
  2212  0343                     l1212:	
  2213  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0345  1585               	bsf	5,3	;volatile
  2216  0346                     l176:	
  2217  0346  0008               	return
  2218  0347                     __end_of_writecmd:	
  2219                           
  2220                           	psect	text12
  2221  03B8                     __ptext12:	
  2222 ;; *************** function _delay *****************
  2223 ;; Defined at:
  2224 ;;		line 51 in file "4linelcddriver.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  i               2    0[COMMON] int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, btemp+1
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         2       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         2       0       0       0       0
  2242 ;;Total ram usage:        2 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_writechar
  2248 ;;		_writecmd
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _delay
  2254  03B8                     _delay:	
  2255  03B8                     l1184:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2258                           
  2259  03B8  01F0               	clrf	delay@i
  2260  03B9  01F1               	clrf	delay@i+1
  2261  03BA                     l1190:	
  2262  03BA  3001               	movlw	1
  2263  03BB  07F0               	addwf	delay@i,f
  2264  03BC  1803               	skipnc
  2265  03BD  0AF1               	incf	delay@i+1,f
  2266  03BE  3000               	movlw	0
  2267  03BF  07F1               	addwf	delay@i+1,f
  2268  03C0                     l1192:	
  2269  03C0  0871               	movf	delay@i+1,w
  2270  03C1  3A80               	xorlw	128
  2271  03C2  00FF               	movwf	btemp+1
  2272  03C3  3093               	movlw	147
  2273  03C4  027F               	subwf	btemp+1,w
  2274  03C5  1D03               	skipz
  2275  03C6  2BC9               	goto	u625
  2276  03C7  3088               	movlw	136
  2277  03C8  0270               	subwf	delay@i,w
  2278  03C9                     u625:	
  2279  03C9  1C03               	skipc
  2280  03CA  2BCC               	goto	u621
  2281  03CB  2BCD               	goto	u620
  2282  03CC                     u621:	
  2283  03CC  2BBA               	goto	l1190
  2284  03CD                     u620:	
  2285  03CD                     l170:	
  2286  03CD  0008               	return
  2287  03CE                     __end_of_delay:	
  2288                           
  2289                           	psect	text13
  2290  0442                     __ptext13:	
  2291 ;; *************** function ___lwmod *****************
  2292 ;; Defined at:
  2293 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  divisor         2    0[COMMON] unsigned int 
  2296 ;;  dividend        2    2[COMMON] unsigned int 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  counter         1    5[COMMON] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2    0[COMMON] unsigned int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         4       0       0       0       0
  2309 ;;      Locals:         1       0       0       0       0
  2310 ;;      Temps:          1       0       0       0       0
  2311 ;;      Totals:         6       0       0       0       0
  2312 ;;Total ram usage:        6 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_get_temp
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function ___lwmod
  2323  0442                     ___lwmod:	
  2324  0442                     l1494:	
  2325                           ;incstack = 0
  2326                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2327                           
  2328  0442  0870               	movf	___lwmod@divisor,w
  2329  0443  0471               	iorwf	___lwmod@divisor+1,w
  2330  0444  1903               	btfsc	3,2
  2331  0445  2C47               	goto	u1091
  2332  0446  2C48               	goto	u1090
  2333  0447                     u1091:	
  2334  0447  2C77               	goto	l1512
  2335  0448                     u1090:	
  2336  0448                     l1496:	
  2337  0448  01F5               	clrf	___lwmod@counter
  2338  0449  0AF5               	incf	___lwmod@counter,f
  2339  044A  2C56               	goto	l1502
  2340  044B                     l1498:	
  2341  044B  3001               	movlw	1
  2342  044C                     u1105:	
  2343  044C  1003               	clrc
  2344  044D  0DF0               	rlf	___lwmod@divisor,f
  2345  044E  0DF1               	rlf	___lwmod@divisor+1,f
  2346  044F  3EFF               	addlw	-1
  2347  0450  1D03               	skipz
  2348  0451  2C4C               	goto	u1105
  2349  0452                     l1500:	
  2350  0452  3001               	movlw	1
  2351  0453  00F4               	movwf	??___lwmod
  2352  0454  0874               	movf	??___lwmod,w
  2353  0455  07F5               	addwf	___lwmod@counter,f
  2354  0456                     l1502:	
  2355  0456  1FF1               	btfss	___lwmod@divisor+1,7
  2356  0457  2C59               	goto	u1111
  2357  0458  2C5A               	goto	u1110
  2358  0459                     u1111:	
  2359  0459  2C4B               	goto	l1498
  2360  045A                     u1110:	
  2361  045A                     l1504:	
  2362  045A  0871               	movf	___lwmod@divisor+1,w
  2363  045B  0273               	subwf	___lwmod@dividend+1,w
  2364  045C  1D03               	skipz
  2365  045D  2C60               	goto	u1125
  2366  045E  0870               	movf	___lwmod@divisor,w
  2367  045F  0272               	subwf	___lwmod@dividend,w
  2368  0460                     u1125:	
  2369  0460  1C03               	skipc
  2370  0461  2C63               	goto	u1121
  2371  0462  2C64               	goto	u1120
  2372  0463                     u1121:	
  2373  0463  2C6A               	goto	l1508
  2374  0464                     u1120:	
  2375  0464                     l1506:	
  2376  0464  0870               	movf	___lwmod@divisor,w
  2377  0465  02F2               	subwf	___lwmod@dividend,f
  2378  0466  0871               	movf	___lwmod@divisor+1,w
  2379  0467  1C03               	skipc
  2380  0468  03F3               	decf	___lwmod@dividend+1,f
  2381  0469  02F3               	subwf	___lwmod@dividend+1,f
  2382  046A                     l1508:	
  2383  046A  3001               	movlw	1
  2384  046B                     u1135:	
  2385  046B  1003               	clrc
  2386  046C  0CF1               	rrf	___lwmod@divisor+1,f
  2387  046D  0CF0               	rrf	___lwmod@divisor,f
  2388  046E  3EFF               	addlw	-1
  2389  046F  1D03               	skipz
  2390  0470  2C6B               	goto	u1135
  2391  0471                     l1510:	
  2392  0471  3001               	movlw	1
  2393  0472  02F5               	subwf	___lwmod@counter,f
  2394  0473  1D03               	btfss	3,2
  2395  0474  2C76               	goto	u1141
  2396  0475  2C77               	goto	u1140
  2397  0476                     u1141:	
  2398  0476  2C5A               	goto	l1504
  2399  0477                     u1140:	
  2400  0477                     l1512:	
  2401  0477  0873               	movf	___lwmod@dividend+1,w
  2402  0478  00F1               	movwf	?___lwmod+1
  2403  0479  0872               	movf	___lwmod@dividend,w
  2404  047A  00F0               	movwf	?___lwmod
  2405  047B                     l550:	
  2406  047B  0008               	return
  2407  047C                     __end_of___lwmod:	
  2408                           
  2409                           	psect	text14
  2410  04F1                     __ptext14:	
  2411 ;; *************** function ___lwdiv *****************
  2412 ;; Defined at:
  2413 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  divisor         2    6[COMMON] unsigned int 
  2416 ;;  dividend        2    8[COMMON] unsigned int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  quotient        2   11[COMMON] unsigned int 
  2419 ;;  counter         1   13[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    6[COMMON] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         4       0       0       0       0
  2430 ;;      Locals:         3       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0
  2432 ;;      Totals:         8       0       0       0       0
  2433 ;;Total ram usage:        8 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_get_temp
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function ___lwdiv
  2444  04F1                     ___lwdiv:	
  2445  04F1                     l1468:	
  2446                           ;incstack = 0
  2447                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2448                           
  2449  04F1  01FB               	clrf	___lwdiv@quotient
  2450  04F2  01FC               	clrf	___lwdiv@quotient+1
  2451  04F3                     l1470:	
  2452  04F3  0876               	movf	___lwdiv@divisor,w
  2453  04F4  0477               	iorwf	___lwdiv@divisor+1,w
  2454  04F5  1903               	btfsc	3,2
  2455  04F6  2CF8               	goto	u1021
  2456  04F7  2CF9               	goto	u1020
  2457  04F8                     u1021:	
  2458  04F8  2D30               	goto	l1490
  2459  04F9                     u1020:	
  2460  04F9                     l1472:	
  2461  04F9  01FD               	clrf	___lwdiv@counter
  2462  04FA  0AFD               	incf	___lwdiv@counter,f
  2463  04FB  2D07               	goto	l1478
  2464  04FC                     l1474:	
  2465  04FC  3001               	movlw	1
  2466  04FD                     u1035:	
  2467  04FD  1003               	clrc
  2468  04FE  0DF6               	rlf	___lwdiv@divisor,f
  2469  04FF  0DF7               	rlf	___lwdiv@divisor+1,f
  2470  0500  3EFF               	addlw	-1
  2471  0501  1D03               	skipz
  2472  0502  2CFD               	goto	u1035
  2473  0503                     l1476:	
  2474  0503  3001               	movlw	1
  2475  0504  00FA               	movwf	??___lwdiv
  2476  0505  087A               	movf	??___lwdiv,w
  2477  0506  07FD               	addwf	___lwdiv@counter,f
  2478  0507                     l1478:	
  2479  0507  1FF7               	btfss	___lwdiv@divisor+1,7
  2480  0508  2D0A               	goto	u1041
  2481  0509  2D0B               	goto	u1040
  2482  050A                     u1041:	
  2483  050A  2CFC               	goto	l1474
  2484  050B                     u1040:	
  2485  050B                     l1480:	
  2486  050B  3001               	movlw	1
  2487  050C                     u1055:	
  2488  050C  1003               	clrc
  2489  050D  0DFB               	rlf	___lwdiv@quotient,f
  2490  050E  0DFC               	rlf	___lwdiv@quotient+1,f
  2491  050F  3EFF               	addlw	-1
  2492  0510  1D03               	skipz
  2493  0511  2D0C               	goto	u1055
  2494  0512  0877               	movf	___lwdiv@divisor+1,w
  2495  0513  0279               	subwf	___lwdiv@dividend+1,w
  2496  0514  1D03               	skipz
  2497  0515  2D18               	goto	u1065
  2498  0516  0876               	movf	___lwdiv@divisor,w
  2499  0517  0278               	subwf	___lwdiv@dividend,w
  2500  0518                     u1065:	
  2501  0518  1C03               	skipc
  2502  0519  2D1B               	goto	u1061
  2503  051A  2D1C               	goto	u1060
  2504  051B                     u1061:	
  2505  051B  2D23               	goto	l1486
  2506  051C                     u1060:	
  2507  051C                     l1482:	
  2508  051C  0876               	movf	___lwdiv@divisor,w
  2509  051D  02F8               	subwf	___lwdiv@dividend,f
  2510  051E  0877               	movf	___lwdiv@divisor+1,w
  2511  051F  1C03               	skipc
  2512  0520  03F9               	decf	___lwdiv@dividend+1,f
  2513  0521  02F9               	subwf	___lwdiv@dividend+1,f
  2514  0522                     l1484:	
  2515  0522  147B               	bsf	___lwdiv@quotient,0
  2516  0523                     l1486:	
  2517  0523  3001               	movlw	1
  2518  0524                     u1075:	
  2519  0524  1003               	clrc
  2520  0525  0CF7               	rrf	___lwdiv@divisor+1,f
  2521  0526  0CF6               	rrf	___lwdiv@divisor,f
  2522  0527  3EFF               	addlw	-1
  2523  0528  1D03               	skipz
  2524  0529  2D24               	goto	u1075
  2525  052A                     l1488:	
  2526  052A  3001               	movlw	1
  2527  052B  02FD               	subwf	___lwdiv@counter,f
  2528  052C  1D03               	btfss	3,2
  2529  052D  2D2F               	goto	u1081
  2530  052E  2D30               	goto	u1080
  2531  052F                     u1081:	
  2532  052F  2D0B               	goto	l1480
  2533  0530                     u1080:	
  2534  0530                     l1490:	
  2535  0530  087C               	movf	___lwdiv@quotient+1,w
  2536  0531  00F7               	movwf	?___lwdiv+1
  2537  0532  087B               	movf	___lwdiv@quotient,w
  2538  0533  00F6               	movwf	?___lwdiv
  2539  0534                     l540:	
  2540  0534  0008               	return
  2541  0535                     __end_of___lwdiv:	
  2542                           
  2543                           	psect	text15
  2544  0535                     __ptext15:	
  2545 ;; *************** function ___awmod *****************
  2546 ;; Defined at:
  2547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  divisor         2    0[COMMON] int 
  2550 ;;  dividend        2    2[COMMON] int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  sign            1    6[COMMON] unsigned char 
  2553 ;;  counter         1    5[COMMON] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2    0[COMMON] int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         4       0       0       0       0
  2564 ;;      Locals:         2       0       0       0       0
  2565 ;;      Temps:          1       0       0       0       0
  2566 ;;      Totals:         7       0       0       0       0
  2567 ;;Total ram usage:        7 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_get_temp
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function ___awmod
  2578  0535                     ___awmod:	
  2579  0535                     l1430:	
  2580                           ;incstack = 0
  2581                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2582                           
  2583  0535  01F6               	clrf	___awmod@sign
  2584  0536                     l1432:	
  2585  0536  1FF3               	btfss	___awmod@dividend+1,7
  2586  0537  2D39               	goto	u931
  2587  0538  2D3A               	goto	u930
  2588  0539                     u931:	
  2589  0539  2D41               	goto	l1438
  2590  053A                     u930:	
  2591  053A                     l1434:	
  2592  053A  09F2               	comf	___awmod@dividend,f
  2593  053B  09F3               	comf	___awmod@dividend+1,f
  2594  053C  0AF2               	incf	___awmod@dividend,f
  2595  053D  1903               	skipnz
  2596  053E  0AF3               	incf	___awmod@dividend+1,f
  2597  053F                     l1436:	
  2598  053F  01F6               	clrf	___awmod@sign
  2599  0540  0AF6               	incf	___awmod@sign,f
  2600  0541                     l1438:	
  2601  0541  1FF1               	btfss	___awmod@divisor+1,7
  2602  0542  2D44               	goto	u941
  2603  0543  2D45               	goto	u940
  2604  0544                     u941:	
  2605  0544  2D4A               	goto	l1442
  2606  0545                     u940:	
  2607  0545                     l1440:	
  2608  0545  09F0               	comf	___awmod@divisor,f
  2609  0546  09F1               	comf	___awmod@divisor+1,f
  2610  0547  0AF0               	incf	___awmod@divisor,f
  2611  0548  1903               	skipnz
  2612  0549  0AF1               	incf	___awmod@divisor+1,f
  2613  054A                     l1442:	
  2614  054A  0870               	movf	___awmod@divisor,w
  2615  054B  0471               	iorwf	___awmod@divisor+1,w
  2616  054C  1903               	btfsc	3,2
  2617  054D  2D4F               	goto	u951
  2618  054E  2D50               	goto	u950
  2619  054F                     u951:	
  2620  054F  2D7F               	goto	l1460
  2621  0550                     u950:	
  2622  0550                     l1444:	
  2623  0550  01F5               	clrf	___awmod@counter
  2624  0551  0AF5               	incf	___awmod@counter,f
  2625  0552  2D5E               	goto	l1450
  2626  0553                     l1446:	
  2627  0553  3001               	movlw	1
  2628  0554                     u965:	
  2629  0554  1003               	clrc
  2630  0555  0DF0               	rlf	___awmod@divisor,f
  2631  0556  0DF1               	rlf	___awmod@divisor+1,f
  2632  0557  3EFF               	addlw	-1
  2633  0558  1D03               	skipz
  2634  0559  2D54               	goto	u965
  2635  055A                     l1448:	
  2636  055A  3001               	movlw	1
  2637  055B  00F4               	movwf	??___awmod
  2638  055C  0874               	movf	??___awmod,w
  2639  055D  07F5               	addwf	___awmod@counter,f
  2640  055E                     l1450:	
  2641  055E  1FF1               	btfss	___awmod@divisor+1,7
  2642  055F  2D61               	goto	u971
  2643  0560  2D62               	goto	u970
  2644  0561                     u971:	
  2645  0561  2D53               	goto	l1446
  2646  0562                     u970:	
  2647  0562                     l1452:	
  2648  0562  0871               	movf	___awmod@divisor+1,w
  2649  0563  0273               	subwf	___awmod@dividend+1,w
  2650  0564  1D03               	skipz
  2651  0565  2D68               	goto	u985
  2652  0566  0870               	movf	___awmod@divisor,w
  2653  0567  0272               	subwf	___awmod@dividend,w
  2654  0568                     u985:	
  2655  0568  1C03               	skipc
  2656  0569  2D6B               	goto	u981
  2657  056A  2D6C               	goto	u980
  2658  056B                     u981:	
  2659  056B  2D72               	goto	l1456
  2660  056C                     u980:	
  2661  056C                     l1454:	
  2662  056C  0870               	movf	___awmod@divisor,w
  2663  056D  02F2               	subwf	___awmod@dividend,f
  2664  056E  0871               	movf	___awmod@divisor+1,w
  2665  056F  1C03               	skipc
  2666  0570  03F3               	decf	___awmod@dividend+1,f
  2667  0571  02F3               	subwf	___awmod@dividend+1,f
  2668  0572                     l1456:	
  2669  0572  3001               	movlw	1
  2670  0573                     u995:	
  2671  0573  1003               	clrc
  2672  0574  0CF1               	rrf	___awmod@divisor+1,f
  2673  0575  0CF0               	rrf	___awmod@divisor,f
  2674  0576  3EFF               	addlw	-1
  2675  0577  1D03               	skipz
  2676  0578  2D73               	goto	u995
  2677  0579                     l1458:	
  2678  0579  3001               	movlw	1
  2679  057A  02F5               	subwf	___awmod@counter,f
  2680  057B  1D03               	btfss	3,2
  2681  057C  2D7E               	goto	u1001
  2682  057D  2D7F               	goto	u1000
  2683  057E                     u1001:	
  2684  057E  2D62               	goto	l1452
  2685  057F                     u1000:	
  2686  057F                     l1460:	
  2687  057F  0876               	movf	___awmod@sign,w
  2688  0580  1903               	btfsc	3,2
  2689  0581  2D83               	goto	u1011
  2690  0582  2D84               	goto	u1010
  2691  0583                     u1011:	
  2692  0583  2D89               	goto	l1464
  2693  0584                     u1010:	
  2694  0584                     l1462:	
  2695  0584  09F2               	comf	___awmod@dividend,f
  2696  0585  09F3               	comf	___awmod@dividend+1,f
  2697  0586  0AF2               	incf	___awmod@dividend,f
  2698  0587  1903               	skipnz
  2699  0588  0AF3               	incf	___awmod@dividend+1,f
  2700  0589                     l1464:	
  2701  0589  0873               	movf	___awmod@dividend+1,w
  2702  058A  00F1               	movwf	?___awmod+1
  2703  058B  0872               	movf	___awmod@dividend,w
  2704  058C  00F0               	movwf	?___awmod
  2705  058D                     l434:	
  2706  058D  0008               	return
  2707  058E                     __end_of___awmod:	
  2708                           
  2709                           	psect	text16
  2710  058E                     __ptext16:	
  2711 ;; *************** function ___awdiv *****************
  2712 ;; Defined at:
  2713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  divisor         2    0[COMMON] int 
  2716 ;;  dividend        2    2[COMMON] int 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  quotient        2    7[COMMON] int 
  2719 ;;  sign            1    6[COMMON] unsigned char 
  2720 ;;  counter         1    5[COMMON] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMMON] int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         4       0       0       0       0
  2731 ;;      Locals:         4       0       0       0       0
  2732 ;;      Temps:          1       0       0       0       0
  2733 ;;      Totals:         9       0       0       0       0
  2734 ;;Total ram usage:        9 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_get_temp
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function ___awdiv
  2745  058E                     ___awdiv:	
  2746  058E                     l1386:	
  2747                           ;incstack = 0
  2748                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2749                           
  2750  058E  01F6               	clrf	___awdiv@sign
  2751  058F                     l1388:	
  2752  058F  1FF1               	btfss	___awdiv@divisor+1,7
  2753  0590  2D92               	goto	u831
  2754  0591  2D93               	goto	u830
  2755  0592                     u831:	
  2756  0592  2D9A               	goto	l1394
  2757  0593                     u830:	
  2758  0593                     l1390:	
  2759  0593  09F0               	comf	___awdiv@divisor,f
  2760  0594  09F1               	comf	___awdiv@divisor+1,f
  2761  0595  0AF0               	incf	___awdiv@divisor,f
  2762  0596  1903               	skipnz
  2763  0597  0AF1               	incf	___awdiv@divisor+1,f
  2764  0598                     l1392:	
  2765  0598  01F6               	clrf	___awdiv@sign
  2766  0599  0AF6               	incf	___awdiv@sign,f
  2767  059A                     l1394:	
  2768  059A  1FF3               	btfss	___awdiv@dividend+1,7
  2769  059B  2D9D               	goto	u841
  2770  059C  2D9E               	goto	u840
  2771  059D                     u841:	
  2772  059D  2DA7               	goto	l1400
  2773  059E                     u840:	
  2774  059E                     l1396:	
  2775  059E  09F2               	comf	___awdiv@dividend,f
  2776  059F  09F3               	comf	___awdiv@dividend+1,f
  2777  05A0  0AF2               	incf	___awdiv@dividend,f
  2778  05A1  1903               	skipnz
  2779  05A2  0AF3               	incf	___awdiv@dividend+1,f
  2780  05A3                     l1398:	
  2781  05A3  3001               	movlw	1
  2782  05A4  00F4               	movwf	??___awdiv
  2783  05A5  0874               	movf	??___awdiv,w
  2784  05A6  06F6               	xorwf	___awdiv@sign,f
  2785  05A7                     l1400:	
  2786  05A7  01F7               	clrf	___awdiv@quotient
  2787  05A8  01F8               	clrf	___awdiv@quotient+1
  2788  05A9                     l1402:	
  2789  05A9  0870               	movf	___awdiv@divisor,w
  2790  05AA  0471               	iorwf	___awdiv@divisor+1,w
  2791  05AB  1903               	btfsc	3,2
  2792  05AC  2DAE               	goto	u851
  2793  05AD  2DAF               	goto	u850
  2794  05AE                     u851:	
  2795  05AE  2DE6               	goto	l1422
  2796  05AF                     u850:	
  2797  05AF                     l1404:	
  2798  05AF  01F5               	clrf	___awdiv@counter
  2799  05B0  0AF5               	incf	___awdiv@counter,f
  2800  05B1  2DBD               	goto	l1410
  2801  05B2                     l1406:	
  2802  05B2  3001               	movlw	1
  2803  05B3                     u865:	
  2804  05B3  1003               	clrc
  2805  05B4  0DF0               	rlf	___awdiv@divisor,f
  2806  05B5  0DF1               	rlf	___awdiv@divisor+1,f
  2807  05B6  3EFF               	addlw	-1
  2808  05B7  1D03               	skipz
  2809  05B8  2DB3               	goto	u865
  2810  05B9                     l1408:	
  2811  05B9  3001               	movlw	1
  2812  05BA  00F4               	movwf	??___awdiv
  2813  05BB  0874               	movf	??___awdiv,w
  2814  05BC  07F5               	addwf	___awdiv@counter,f
  2815  05BD                     l1410:	
  2816  05BD  1FF1               	btfss	___awdiv@divisor+1,7
  2817  05BE  2DC0               	goto	u871
  2818  05BF  2DC1               	goto	u870
  2819  05C0                     u871:	
  2820  05C0  2DB2               	goto	l1406
  2821  05C1                     u870:	
  2822  05C1                     l1412:	
  2823  05C1  3001               	movlw	1
  2824  05C2                     u885:	
  2825  05C2  1003               	clrc
  2826  05C3  0DF7               	rlf	___awdiv@quotient,f
  2827  05C4  0DF8               	rlf	___awdiv@quotient+1,f
  2828  05C5  3EFF               	addlw	-1
  2829  05C6  1D03               	skipz
  2830  05C7  2DC2               	goto	u885
  2831  05C8  0871               	movf	___awdiv@divisor+1,w
  2832  05C9  0273               	subwf	___awdiv@dividend+1,w
  2833  05CA  1D03               	skipz
  2834  05CB  2DCE               	goto	u895
  2835  05CC  0870               	movf	___awdiv@divisor,w
  2836  05CD  0272               	subwf	___awdiv@dividend,w
  2837  05CE                     u895:	
  2838  05CE  1C03               	skipc
  2839  05CF  2DD1               	goto	u891
  2840  05D0  2DD2               	goto	u890
  2841  05D1                     u891:	
  2842  05D1  2DD9               	goto	l1418
  2843  05D2                     u890:	
  2844  05D2                     l1414:	
  2845  05D2  0870               	movf	___awdiv@divisor,w
  2846  05D3  02F2               	subwf	___awdiv@dividend,f
  2847  05D4  0871               	movf	___awdiv@divisor+1,w
  2848  05D5  1C03               	skipc
  2849  05D6  03F3               	decf	___awdiv@dividend+1,f
  2850  05D7  02F3               	subwf	___awdiv@dividend+1,f
  2851  05D8                     l1416:	
  2852  05D8  1477               	bsf	___awdiv@quotient,0
  2853  05D9                     l1418:	
  2854  05D9  3001               	movlw	1
  2855  05DA                     u905:	
  2856  05DA  1003               	clrc
  2857  05DB  0CF1               	rrf	___awdiv@divisor+1,f
  2858  05DC  0CF0               	rrf	___awdiv@divisor,f
  2859  05DD  3EFF               	addlw	-1
  2860  05DE  1D03               	skipz
  2861  05DF  2DDA               	goto	u905
  2862  05E0                     l1420:	
  2863  05E0  3001               	movlw	1
  2864  05E1  02F5               	subwf	___awdiv@counter,f
  2865  05E2  1D03               	btfss	3,2
  2866  05E3  2DE5               	goto	u911
  2867  05E4  2DE6               	goto	u910
  2868  05E5                     u911:	
  2869  05E5  2DC1               	goto	l1412
  2870  05E6                     u910:	
  2871  05E6                     l1422:	
  2872  05E6  0876               	movf	___awdiv@sign,w
  2873  05E7  1903               	btfsc	3,2
  2874  05E8  2DEA               	goto	u921
  2875  05E9  2DEB               	goto	u920
  2876  05EA                     u921:	
  2877  05EA  2DF0               	goto	l1426
  2878  05EB                     u920:	
  2879  05EB                     l1424:	
  2880  05EB  09F7               	comf	___awdiv@quotient,f
  2881  05EC  09F8               	comf	___awdiv@quotient+1,f
  2882  05ED  0AF7               	incf	___awdiv@quotient,f
  2883  05EE  1903               	skipnz
  2884  05EF  0AF8               	incf	___awdiv@quotient+1,f
  2885  05F0                     l1426:	
  2886  05F0  0878               	movf	___awdiv@quotient+1,w
  2887  05F1  00F1               	movwf	?___awdiv+1
  2888  05F2  0877               	movf	___awdiv@quotient,w
  2889  05F3  00F0               	movwf	?___awdiv
  2890  05F4                     l421:	
  2891  05F4  0008               	return
  2892  05F5                     __end_of___awdiv:	
  2893  007E                     btemp	set	126	;btemp
  2894  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      64
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    yeet@array	PTR unsigned char  size(1) Largest target is 20
		 -> dispcmd@error(BANK0[20]), display@tempstr(COMMON[1]), 

    yeet@p	PTR unsigned char  size(1) Largest target is 20
		 -> dispcmd@error(BANK0[20]), display@tempstr(COMMON[1]), 

    dispcmd@linetxt	PTR unsigned char  size(1) Largest target is 1
		 -> display@tempstr(COMMON[1]), 


Critical Paths under _main in COMMON

    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset->_delay_temp
    _read_byte->_delay_temp
    _display->_dispcmd
    _dispcmd->_yeet
    _yeet->_writechar
    _writechar->_delay
    _writecmd->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_get_temp
    _display->_dispcmd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5538
                            _display
                           _get_temp
                          _init_temp
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    4634
                                             24 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                            _display
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset                                                2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _display                                              2     2      0     904
                                             11 COMMON     2     2      0
                            _dispcmd
 ---------------------------------------------------------------------------------
 (3) _dispcmd                                             27    24      3     878
                                              8 COMMON     3     0      3
                                              0 BANK0     24    24      0
                           _writecmd
                               _yeet
 ---------------------------------------------------------------------------------
 (4) _yeet                                                 5     5      0     325
                                              3 COMMON     5     5      0
                          _writechar
 ---------------------------------------------------------------------------------
 (5) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _writecmd                                             1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (6) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _dispcmd
       _writecmd
         _delay
       _yeet
         _writechar
           _delay
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _display
       _dispcmd
         _writecmd
           _delay
         _yeet
           _writechar
             _delay
     _read_byte
       _delay_temp
     _reset
       _delay_temp
     _write_byte
       _delay_temp
   _init_temp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      12        0.0%
ABS                  0      0      62       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 15 15:34:38 2019

                      pc 0002                       l50 0335                       l54 047F  
                     l47 03E6                       l72 0441                       l64 04F0  
                     l58 04B5                       l82 07D2                       _TX 005C  
                     _TZ 005D             ___awdiv@sign 0076                       _ge 005A  
                     _wd 0052                       fsr 0004                      l121 0369  
                    l117 0359                      l151 0689                      l170 03CD  
                    l421 05F4                      l173 0357                      l165 040C  
                    l159 0689                      l176 0346                      l434 058D  
                    l540 0534                      l550 047B              dispcmd@F865 00A0  
                    _RA0 0028                      _RA2 002A                      _RA3 002B  
                    _RA4 002C                      _RA5 002D                      u620 03CD  
                    u700 0656                      u621 03CC                      u701 0655  
                    u630 040C                      u710 065D                      u631 040B  
                    u711 065C                      u720 0664                      u640 05FB  
                    u800 04F0                      u625 03C9                      u721 0663  
                    u641 05FA                      u801 04EF                      u730 066B  
                    u650 0601                      u810 042E                      u731 066A  
                    u651 0600                      u811 042D                      u740 0675  
                    u660 0615                      u820 0440                      u661 0614  
                    u821 043F                      u910 05E6                      u830 0593  
                    u670 0629                      u750 0363                      u911 05E5  
                    u831 0592                      u671 0628                      u751 0362  
                    u920 05EB                      u840 059E                      u680 063D  
                    u760 0369                      u921 05EA                      u905 05DA  
                    u841 059D                      u681 063C                      u761 0368  
                    u850 05AF                      u930 053A                      u690 0650  
                    u770 04A2                      u851 05AE                      u931 0539  
                    u691 064F                      u771 04A1                      u940 0545  
                    u780 04B5                      u941 0544                      u781 04B4  
                    u870 05C1                      u950 0550                      u790 04D0  
                    u871 05C0                      u951 054F                      u791 04CF  
                    u865 05B3                      u890 05D2                      u970 0562  
                    u891 05D1                      u971 0561                      u980 056C  
                    u885 05C2                      u981 056B                      u965 0554  
                    _THV 005E                      u895 05CE                      u985 0568  
                    u995 0573                      _TLV 005F                      _shi 005B  
                    _num 003E                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$HS 0000              dispcmd@line 0078  
           __CFG_LVP$OFF 0000              display@F870 0055                     l1110 0334  
                   l1200 034F                     l1210 033E                     l1202 0354  
                   l1106 032F                     l1212 0343                     l1204 0337  
                   l1220 03FA                     l1300 04BB                     l1108 0333  
                   l1206 033B                     l1222 0400                     l1214 03E8  
                   l1230 0601                     l1310 04C8                     l1302 04C0  
                   l1400 05A7                     l1208 033D                     l1224 0404  
                   l1216 03EA                     l1240 0622                     l1232 0607  
                   l1320 04D3                     l1312 04C9                     l1304 04C3  
                   l1410 05BD                     l1402 05A9                     l1218 03EF  
                   l1250 0643                     l1242 0629                     l1234 060E  
                   l1226 05F5                     l1330 04E9                     l1322 04DD  
                   l1314 04CA                     l1306 04C6                     l1420 05E0  
                   l1412 05C1                     l1404 05AF                     l1500 0452  
                   l1260 0664                     l1252 064A                     l1244 062F  
                   l1236 0615                     l1228 05FB                     l1332 04EB  
                   l1324 04E0                     l1316 04CB                     l1308 04C7  
                   l1414 05D2                     l1406 05B2                     l1422 05E6  
                   l1430 0535                     l1510 0471                     l1502 0456  
                   l1190 03BA                     l1262 066B                     l1254 0650  
                   l1246 0636                     l1238 061B                     l1270 0363  
                   l1350 041B                     l1342 0412                     l1334 040D  
                   l1326 04E1                     l1318 04D0                     l1424 05EB  
                   l1416 05D8                     l1408 05B9                     l1440 0545  
                   l1432 0536                     l1504 045A                     l1512 0477  
                   l1192 03C0                     l1184 03B8                     l1264 0682  
                   l1256 0656                     l1248 063D                     l1272 03CE  
                   l1360 0420                     l1352 041C                     l1344 0414  
                   l1336 040E                     l1280 0485                     l1328 04E2  
                   l1520 069E                     l1426 05F0                     l1418 05D9  
                   l1450 055E                     l1442 054A                     l1434 053A  
                   l1506 0464                     l1194 0348                     l1258 065D  
                   l1274 03CF                     l1266 0359                     l1370 0427  
                   l1362 0423                     l1354 041D                     l1346 0417  
                   l1290 04A6                     l1282 048F                     l1530 06B1  
                   l1452 0562                     l1444 0550                     l1460 057F  
                   l1436 053F                     l1508 046A                     l1196 034C  
                   l1276 03D9                     l1268 035D                     l1380 043B  
                   l1372 0428                     l1364 0424                     l1356 041E  
                   l1348 041A                     l1284 049C                     l1292 04B0  
                   l1532 06BE                     l1516 068A                     l1390 0593  
                   l1462 0584                     l1454 056C                     l1446 0553  
                   l1438 0541                     l1470 04F3                     l1198 034E  
                   l1382 0440                     l1374 042E                     l1366 0425  
                   l1358 041F                     l1286 04A2                     l1278 047C  
                   l1294 04B7                     l1550 0747                     l1542 070D  
                   l1534 06E3                     l1526 06A4                     l1518 068D  
                   l1392 0598                     l1464 0589                     l1456 0572  
                   l1448 055A                     l1480 050B                     l1472 04F9  
                   l1376 042F                     l1368 0426                     l1288 04A5  
                   l1560 0763                     l1552 074B                     l1544 0739  
                   l1536 06E6                     l1528 06A9                     l1394 059A  
                   l1386 058E                     l1458 0579                     l1482 051C  
                   l1474 04FC                     l1490 0530                     l1378 0439  
                   l1570 07D1                     l1562 076B                     l1554 0753  
                   l1546 073B                     l1538 0700                     l1396 059E  
                   l1388 058F                     l1484 0522                     l1476 0503  
                   l1468 04F1                     l1564 077E                     l1556 0757  
                   l1548 073F                     l1572 036A                     l1398 05A3  
                   l1486 0523                     l1478 0507                     l1494 0442  
                   l1566 079E                     l1558 075F                     l1574 036F  
                   l1488 052A                     l1496 0448                     l1568 07BE  
                   l1576 0374                     l1498 044B                     u1000 057F  
                   u1001 057E                     u1010 0584                     u1011 0583  
                   u1020 04F9                     u1021 04F8                     u1110 045A  
                   u1111 0459                     u1040 050B                     u1120 0464  
                   u1200 074B                     u1041 050A                     u1121 0463  
                   u1105 044C                     u1201 074A                     u1210 0757  
                   u1035 04FD                     u1211 0756                     u1060 051C  
                   u1140 0477                     u1220 0763                     u1061 051B  
                   u1141 0476                     u1125 0460                     u1221 0762  
                   u1150 06BE                     u1055 050C                     u1135 046B  
                   u1151 06BD                     u1080 0530                     u1081 052F  
                   u1065 0518                     u1090 0448                     u1075 0524  
                   u1091 0447                     u1155 06BA                     u1165 06EB  
                   u1190 073F                     u1191 073E                     u1175 06F6  
                   u1185 0703                     _main 036A                     _yeet 03E7  
                   btemp 007E            write_byte@val 0077                     start 0000  
           dispcmd@error 0024                    ?_main 0070          __end_of___awdiv 05F5  
          __CFG_WDTE$OFF 0000          __end_of___awmod 058E                    ?_yeet 0070  
        ___awdiv@divisor 0070          __end_of___lwdiv 0535          __end_of___lwmod 047C  
        ___awdiv@counter 0075                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088            __CFG_PWRTE$ON 0000          __end_of_dispcmd 068A  
        __end_of_display 03E7                    _delay 03B8                    _table 0048  
                  _reset 047C           write_byte@temp 0076           __CFG_BOREN$OFF 0000  
                  pclath 000A                    yeet@i 0074                    yeet@p 0076  
                  status 0003                    wtemp0 007E          __initialization 07D3  
           __end_of_main 037D             __end_of_yeet 040D                   ??_main 007E  
                 ??_yeet 0073                   ?_delay 0070                   _ADCON1 009F  
                 ?_reset 0070         ___awdiv@dividend 0072                   _TRISA0 0428  
       __end_of_get_temp 07D3                   _baifen 0058                ??___awdiv 0074  
              ??___awmod 0074                ??___lwdiv 007A                ??___lwmod 0074  
                 delay@i 0070         ___awdiv@quotient 0077          ___awmod@divisor 0070  
                 _shifen 0059                   _wanfen 0056          ___awmod@counter 0075  
              ??_dispcmd 0020                ??_display 007B         __end_of_writecmd 0347  
__end_of__initialization 07FC           dispcmd@linetxt 007A           __pcstackCOMMON 0070  
           __pidataBANK0 03A4             __pidataBANK1 0390            __end_of_delay 03CE  
          __end_of_reset 04B6                  ??_delay 0070                  ??_reset 0074  
             __pbssBANK0 0052       __size_of_init_temp 0007       __size_of_read_byte 0035  
             _delay_temp 0358               __pmaintext 036A                ?_get_temp 0070  
     __size_of_writechar 0011                  ___awdiv 058E                  ___awmod 0535  
                ___lwdiv 04F1                  ___lwmod 0442           display@tempstr 007C  
                __ptext1 032F                  __ptext2 068A                  __ptext3 04B6  
                __ptext4 047C                  __ptext5 040D                  __ptext6 0358  
                __ptext7 03CE                  __ptext8 05F5                  __ptext9 03E7  
              ?_writecmd 0070                  _dispcmd 05F5                  _display 03CE  
      __end_of_init_temp 0336         ___awmod@dividend 0072        __end_of_read_byte 0442  
                _qianfen 0057               ??_get_temp 0038     end_of_initialization 07FC  
            ?_delay_temp 0070               ??_writecmd 0072        __end_of_writechar 0358  
             _write_byte 04B6      start_initialization 07D3      __size_of_delay_temp 0012  
          reset@presence 0075               init_fetch0 037D              __pdataBANK0 003E  
            __pdataBANK1 00A0               read_byte@i 0076               read_byte@j 0054  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_get_temp 0149  
       ___lwdiv@dividend 0078                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lwdiv 0076                 ?___lwmod 0070              ?_write_byte 0070  
               ?_dispcmd 0078                 ?_display 0070        __size_of_writecmd 0011  
       ___lwdiv@quotient 007B           __size_of_delay 0016                _init_temp 032F  
              _read_byte 040D           __size_of_reset 003A             ??_delay_temp 0071  
              get_temp@i 003C              write_byte@i 0078       __end_of_delay_temp 036A  
             ?_init_temp 0070                _writechar 0347               ?_read_byte 0070  
    __size_of_write_byte 003B         __size_of___awdiv 0067         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003A         __size_of_dispcmd 0095  
       __size_of_display 0019          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
               __ptext10 0347                 __ptext11 0336                 __ptext12 03B8  
               __ptext13 0442                 __ptext14 04F1                 __ptext15 0535  
               __ptext16 058E               ?_writechar 0070                 _get_temp 068A  
          __size_of_main 0013            __size_of_yeet 0026                yeet@array 0077  
             writechar@x 0072                 _writecmd 0336              delay_temp@x 0072  
            delay_temp@y 0070              delay_temp@z 0073           read_byte@value 0075  
               init_ram0 0381              ??_init_temp 0070              ??_read_byte 0074  
       ___lwmod@dividend 0072                writecmd@x 0072             ??_write_byte 0074  
        ___lwmod@divisor 0070          ___lwmod@counter 0075              ??_writechar 0072  
     __end_of_write_byte 04F1  
