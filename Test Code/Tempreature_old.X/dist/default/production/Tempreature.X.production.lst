

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 15 17:23:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247                           
   248                           	psect	idataBANK0
   249  0341                     __pidataBANK0:	
   250                           
   251                           ;initializer for _num
   252  0341  3430               	retlw	48
   253  0342  3431               	retlw	49
   254  0343  3432               	retlw	50
   255  0344  3433               	retlw	51
   256  0345  3434               	retlw	52
   257  0346  3435               	retlw	53
   258  0347  3436               	retlw	54
   259  0348  3437               	retlw	55
   260  0349  3438               	retlw	56
   261  034A  3439               	retlw	57
   262                           
   263                           ;initializer for _table
   264  034B  34C0               	retlw	192
   265  034C  34F9               	retlw	249
   266  034D  34A4               	retlw	164
   267  034E  34B0               	retlw	176
   268  034F  3499               	retlw	153
   269  0350  3492               	retlw	146
   270  0351  3482               	retlw	130
   271  0352  34F8               	retlw	248
   272  0353  3480               	retlw	128
   273  0354  3490               	retlw	144
   274                           
   275                           	psect	idataBANK1
   276  032D                     __pidataBANK1:	
   277                           
   278                           ;initializer for dispcmd@F865
   279  032D  344C               	retlw	76
   280  032E  3449               	retlw	73
   281  032F  344E               	retlw	78
   282  0330  3445               	retlw	69
   283  0331  3420               	retlw	32
   284  0332  3444               	retlw	68
   285  0333  344F               	retlw	79
   286  0334  3445               	retlw	69
   287  0335  3453               	retlw	83
   288  0336  3420               	retlw	32
   289  0337  344E               	retlw	78
   290  0338  344F               	retlw	79
   291  0339  3454               	retlw	84
   292  033A  3420               	retlw	32
   293  033B  3445               	retlw	69
   294  033C  3458               	retlw	88
   295  033D  3449               	retlw	73
   296  033E  3453               	retlw	83
   297  033F  3454               	retlw	84
   298  0340  3400               	retlw	0
   299  0008                     _PORTD	set	8
   300  0030                     _RB0	set	48
   301  002A                     _RA2	set	42
   302  002B                     _RA3	set	43
   303  002C                     _RA4	set	44
   304  002D                     _RA5	set	45
   305  0088                     _TRISD	set	136
   306  0085                     _TRISA	set	133
   307  009F                     _ADCON1	set	159
   308  0430                     _TRISB0	set	1072
   309                           
   310                           ; #config settings
   311  0000                     
   312                           	psect	cinit
   313  07D4                     start_initialization:	
   314  07D4                     __initialization:	
   315                           
   316                           ; Initialize objects allocated to BANK1
   317  07D4  1383               	bcf	3,7	;select IRP bank0
   318  07D5  30B4               	movlw	low (__pdataBANK1+20)
   319  07D6  00FD               	movwf	btemp+-1
   320  07D7  3003               	movlw	high __pidataBANK1
   321  07D8  00FE               	movwf	btemp
   322  07D9  302D               	movlw	low __pidataBANK1
   323  07DA  00FF               	movwf	btemp+1
   324  07DB  30A0               	movlw	low __pdataBANK1
   325  07DC  0084               	movwf	4
   326  07DD  120A  118A  231E  120A  118A  	fcall	init_ram0
   327                           
   328                           ; Initialize objects allocated to BANK0
   329  07E2  3056               	movlw	low (__pdataBANK0+20)
   330  07E3  00FD               	movwf	btemp+-1
   331  07E4  3003               	movlw	high __pidataBANK0
   332  07E5  00FE               	movwf	btemp
   333  07E6  3041               	movlw	low __pidataBANK0
   334  07E7  00FF               	movwf	btemp+1
   335  07E8  3042               	movlw	low __pdataBANK0
   336  07E9  0084               	movwf	4
   337  07EA  120A  118A  231E  120A  118A  	fcall	init_ram0
   338                           
   339                           ; Clear objects allocated to BANK0
   340  07EF  01D6               	clrf	__pbssBANK0& (0+127)
   341  07F0  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   342  07F1  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   343  07F2  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   344  07F3  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   345  07F4  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   346  07F5  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   347  07F6  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   348  07F7  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   349  07F8  01DF               	clrf	(__pbssBANK0+9)& (0+127)
   350  07F9  01E0               	clrf	(__pbssBANK0+10)& (0+127)
   351  07FA  01E1               	clrf	(__pbssBANK0+11)& (0+127)
   352  07FB  01E2               	clrf	(__pbssBANK0+12)& (0+127)
   353  07FC                     end_of_initialization:	
   354                           ;End of C runtime variable initialization code
   355                           
   356  07FC                     __end_of__initialization:	
   357  07FC  0183               	clrf	3
   358  07FD  120A  118A  2AD8   	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssBANK0
   361  0056                     __pbssBANK0:	
   362  0056                     _wd:	
   363  0056                     	ds	2
   364  0058                     read_byte@j:	
   365  0058                     	ds	1
   366  0059                     _wanfen:	
   367  0059                     	ds	1
   368  005A                     _qianfen:	
   369  005A                     	ds	1
   370  005B                     _baifen:	
   371  005B                     	ds	1
   372  005C                     _shifen:	
   373  005C                     	ds	1
   374  005D                     _ge:	
   375  005D                     	ds	1
   376  005E                     _shi:	
   377  005E                     	ds	1
   378  005F                     _TX:	
   379  005F                     	ds	1
   380  0060                     _TZ:	
   381  0060                     	ds	1
   382  0061                     _THV:	
   383  0061                     	ds	1
   384  0062                     _TLV:	
   385  0062                     	ds	1
   386                           
   387                           	psect	dataBANK0
   388  0042                     __pdataBANK0:	
   389  0042                     _num:	
   390  0042                     	ds	10
   391  004C                     _table:	
   392  004C                     	ds	10
   393                           
   394                           	psect	dataBANK1
   395  00A0                     __pdataBANK1:	
   396  00A0                     dispcmd@F865:	
   397  00A0                     	ds	20
   398                           
   399                           	psect	inittext
   400  031A                     init_fetch0:	
   401                           ;	Called with low address in FSR and high address in W
   402                           
   403  031A  087E               	movf	btemp,w
   404  031B  008A               	movwf	10
   405  031C  087F               	movf	btemp+1,w
   406  031D  0082               	movwf	2
   407  031E                     init_ram0:	
   408                           ;Called with:
   409                           ;	high address of idata address in btemp 
   410                           ;	low address of idata address in btemp+1 
   411                           ;	low address of data in FSR
   412                           ;	high address + 1 of data in btemp-1
   413                           
   414  031E  120A  118A  231A  120A  118A  	fcall	init_fetch0
   415  0323  0080               	movwf	0
   416  0324  0A84               	incf	4,f
   417  0325  0804               	movf	4,w
   418  0326  067D               	xorwf	btemp+-1,w
   419  0327  1903               	btfsc	3,2
   420  0328  3400               	retlw	0
   421  0329  0AFF               	incf	btemp+1,f
   422  032A  1903               	btfsc	3,2
   423  032B  0AFE               	incf	btemp,f
   424  032C  2B1E               	goto	init_ram0
   425                           
   426                           	psect	cstackCOMMON
   427  0070                     __pcstackCOMMON:	
   428  0070                     ?_writecmd_4line:	
   429  0070                     ?_writechar:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_delay:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_delay:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_lcd_init:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_init_4line:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_init_4line:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_delay_temp:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_display:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_write_byte:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_read_byte:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_get_temp:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_reset:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?___awdiv:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0070                     ?___awmod:	
   472                           ; 2 bytes @ 0x0
   473                           
   474  0070                     ?___lwmod:	
   475                           ; 2 bytes @ 0x0
   476                           
   477  0070                     delay_temp@y:	
   478                           ; 2 bytes @ 0x0
   479                           
   480  0070                     delay@i:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ___awdiv@divisor:	
   484                           ; 2 bytes @ 0x0
   485                           
   486  0070                     ___awmod@divisor:	
   487                           ; 2 bytes @ 0x0
   488                           
   489  0070                     ___lwmod@divisor:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 2 bytes @ 0x0
   494  0070                     	ds	1
   495  0071                     ??_delay_temp:	
   496                           
   497                           ; 1 bytes @ 0x1
   498  0071                     	ds	1
   499  0072                     ??_writecmd_4line:	
   500  0072                     ??_writechar:	
   501                           ; 1 bytes @ 0x2
   502                           
   503  0072                     writechar@x:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0072                     writecmd_4line@x:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     delay_temp@x:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     ___awdiv@dividend:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0072                     ___awmod@dividend:	
   516                           ; 2 bytes @ 0x2
   517                           
   518  0072                     ___lwmod@dividend:	
   519                           ; 2 bytes @ 0x2
   520                           
   521                           
   522                           ; 2 bytes @ 0x2
   523  0072                     	ds	1
   524  0073                     ?_yeet:	
   525  0073                     ??_lcd_init:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     delay_temp@z:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     yeet@array:	
   532                           ; 1 bytes @ 0x3
   533                           
   534                           
   535                           ; 2 bytes @ 0x3
   536  0073                     	ds	1
   537  0074                     ??_reset:	
   538  0074                     ??_write_byte:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0074                     ??_read_byte:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  0074                     ??___awdiv:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0074                     ??___awmod:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0074                     ??___lwmod:	
   551                           ; 1 bytes @ 0x4
   552                           
   553                           
   554                           ; 1 bytes @ 0x4
   555  0074                     	ds	1
   556  0075                     ??_yeet:	
   557  0075                     reset@presence:	
   558                           ; 1 bytes @ 0x5
   559                           
   560  0075                     read_byte@value:	
   561                           ; 1 bytes @ 0x5
   562                           
   563  0075                     ___awdiv@counter:	
   564                           ; 1 bytes @ 0x5
   565                           
   566  0075                     ___awmod@counter:	
   567                           ; 1 bytes @ 0x5
   568                           
   569  0075                     ___lwmod@counter:	
   570                           ; 1 bytes @ 0x5
   571                           
   572                           
   573                           ; 1 bytes @ 0x5
   574  0075                     	ds	1
   575  0076                     ?___lwdiv:	
   576  0076                     write_byte@temp:	
   577                           ; 2 bytes @ 0x6
   578                           
   579  0076                     read_byte@i:	
   580                           ; 1 bytes @ 0x6
   581                           
   582  0076                     ___awdiv@sign:	
   583                           ; 1 bytes @ 0x6
   584                           
   585  0076                     ___awmod@sign:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     ___lwdiv@divisor:	
   589                           ; 1 bytes @ 0x6
   590                           
   591                           
   592                           ; 2 bytes @ 0x6
   593  0076                     	ds	1
   594  0077                     write_byte@val:	
   595  0077                     yeet@p:	
   596                           ; 1 bytes @ 0x7
   597                           
   598  0077                     ___awdiv@quotient:	
   599                           ; 2 bytes @ 0x7
   600                           
   601                           
   602                           ; 2 bytes @ 0x7
   603  0077                     	ds	1
   604  0078                     write_byte@i:	
   605  0078                     ___lwdiv@dividend:	
   606                           ; 1 bytes @ 0x8
   607                           
   608                           
   609                           ; 2 bytes @ 0x8
   610  0078                     	ds	1
   611  0079                     yeet@i:	
   612                           
   613                           ; 2 bytes @ 0x9
   614  0079                     	ds	1
   615  007A                     ??___lwdiv:	
   616                           
   617                           ; 1 bytes @ 0xA
   618  007A                     	ds	1
   619  007B                     ??_display:	
   620  007B                     ___lwdiv@quotient:	
   621                           ; 1 bytes @ 0xB
   622                           
   623                           
   624                           ; 2 bytes @ 0xB
   625  007B                     	ds	2
   626  007D                     display@tempstr:	
   627  007D                     ___lwdiv@counter:	
   628                           ; 1 bytes @ 0xD
   629                           
   630                           
   631                           ; 1 bytes @ 0xD
   632  007D                     	ds	1
   633  007E                     ??_main:	
   634                           
   635                           	psect	cstackBANK0
   636  0020                     __pcstackBANK0:	
   637                           ; 1 bytes @ 0xE
   638                           
   639  0020                     ?_dispcmd:	
   640  0020                     dispcmd@line:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0020                     	ds	2
   646  0022                     dispcmd@linetxt:	
   647                           
   648                           ; 2 bytes @ 0x2
   649  0022                     	ds	2
   650  0024                     ??_dispcmd:	
   651                           
   652                           ; 1 bytes @ 0x4
   653  0024                     	ds	4
   654  0028                     dispcmd@error:	
   655                           
   656                           ; 20 bytes @ 0x8
   657  0028                     	ds	20
   658  003C                     ??_get_temp:	
   659                           
   660                           ; 1 bytes @ 0x1C
   661  003C                     	ds	4
   662  0040                     get_temp@i:	
   663                           
   664                           ; 2 bytes @ 0x20
   665  0040                     	ds	2
   666                           
   667                           	psect	maintext
   668  02D8                     __pmaintext:	
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 206 in file "tempmain.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : B00/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels required when called:    6
   694 ;; This function calls:
   695 ;;		_display
   696 ;;		_get_temp
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _main
   704  02D8                     _main:	
   705  02D8                     l160:	
   706                           ;incstack = 0
   707                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   708                           ;tempmain.c: 209:    while(1)
   709                           
   710  02D8                     l1583:	
   711                           
   712                           ;tempmain.c: 210:      {;tempmain.c: 211:        get_temp();
   713  02D8  120A  118A  268B  120A  118A  	fcall	_get_temp
   714                           
   715                           ;tempmain.c: 212:        display();
   716  02DD  120A  118A  2533  120A  118A  	fcall	_display
   717  02E2  2AD8               	goto	l160
   718  02E3  120A  118A  2800   	ljmp	start
   719  02E6                     __end_of_main:	
   720                           
   721                           	psect	text1
   722  068B                     __ptext1:	
   723 ;; *************** function _get_temp *****************
   724 ;; Defined at:
   725 ;;		line 169 in file "tempmain.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  i               2   32[BANK0 ] int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       2       0       0       0
   741 ;;      Temps:          0       4       0       0       0
   742 ;;      Totals:         0       6       0       0       0
   743 ;;Total ram usage:        6 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    5
   746 ;; This function calls:
   747 ;;		___awdiv
   748 ;;		___awmod
   749 ;;		___lwdiv
   750 ;;		___lwmod
   751 ;;		_display
   752 ;;		_read_byte
   753 ;;		_reset
   754 ;;		_write_byte
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _get_temp
   762  068B                     _get_temp:	
   763  068B                     l1527:	
   764                           ;incstack = 0
   765                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   766                           
   767                           
   768                           ;tempmain.c: 171: int i;;tempmain.c: 172: TRISB0 =1;
   769  068B  1683               	bsf	3,5	;RP0=1, select bank1
   770  068C  1303               	bcf	3,6	;RP1=0, select bank1
   771  068D  1406               	bsf	6,0	;volatile
   772  068E                     l1529:	
   773                           
   774                           ;tempmain.c: 173: reset();
   775  068E  120A  118A  2421  120A  118A  	fcall	_reset
   776                           
   777                           ;tempmain.c: 174: write_byte(0XCC);
   778  0693  30CC               	movlw	204
   779  0694  120A  118A  245B  120A  118A  	fcall	_write_byte
   780                           
   781                           ;tempmain.c: 175: write_byte(0X44);
   782  0699  3044               	movlw	68
   783  069A  120A  118A  245B  120A  118A  	fcall	_write_byte
   784  069F                     l1531:	
   785                           
   786                           ;tempmain.c: 176: for(i=20;i>0;i--)
   787  069F  3014               	movlw	20
   788  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   789  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   790  06A2  00C0               	movwf	get_temp@i
   791  06A3  3000               	movlw	0
   792  06A4  00C1               	movwf	get_temp@i+1
   793  06A5                     l1537:	
   794                           
   795                           ;tempmain.c: 177:     {;tempmain.c: 179:         display();
   796  06A5  120A  118A  2533  120A  118A  	fcall	_display
   797  06AA                     l1539:	
   798                           
   799                           ;tempmain.c: 180:     }
   800  06AA  30FF               	movlw	255
   801  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   802  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   803  06AD  07C0               	addwf	get_temp@i,f
   804  06AE  1803               	skipnc
   805  06AF  0AC1               	incf	get_temp@i+1,f
   806  06B0  30FF               	movlw	255
   807  06B1  07C1               	addwf	get_temp@i+1,f
   808  06B2                     l1541:	
   809  06B2  0841               	movf	get_temp@i+1,w
   810  06B3  3A80               	xorlw	128
   811  06B4  00FF               	movwf	btemp+1
   812  06B5  3080               	movlw	128
   813  06B6  027F               	subwf	btemp+1,w
   814  06B7  1D03               	skipz
   815  06B8  2EBB               	goto	u1155
   816  06B9  3001               	movlw	1
   817  06BA  0240               	subwf	get_temp@i,w
   818  06BB                     u1155:	
   819  06BB  1803               	skipnc
   820  06BC  2EBE               	goto	u1151
   821  06BD  2EBF               	goto	u1150
   822  06BE                     u1151:	
   823  06BE  2EA5               	goto	l1537
   824  06BF                     u1150:	
   825  06BF                     l1543:	
   826                           
   827                           ;tempmain.c: 181: reset();
   828  06BF  120A  118A  2421  120A  118A  	fcall	_reset
   829                           
   830                           ;tempmain.c: 182: write_byte(0XCC);
   831  06C4  30CC               	movlw	204
   832  06C5  120A  118A  245B  120A  118A  	fcall	_write_byte
   833                           
   834                           ;tempmain.c: 183: write_byte(0XBE);
   835  06CA  30BE               	movlw	190
   836  06CB  120A  118A  245B  120A  118A  	fcall	_write_byte
   837                           
   838                           ;tempmain.c: 184: TLV=read_byte();
   839  06D0  120A  118A  23B2  120A  118A  	fcall	_read_byte
   840  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   841  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   842  06D7  00BC               	movwf	??_get_temp
   843  06D8  083C               	movf	??_get_temp,w
   844  06D9  00E2               	movwf	_TLV
   845                           
   846                           ;tempmain.c: 185: THV=read_byte();
   847  06DA  120A  118A  23B2  120A  118A  	fcall	_read_byte
   848  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   849  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   850  06E1  00BC               	movwf	??_get_temp
   851  06E2  083C               	movf	??_get_temp,w
   852  06E3  00E1               	movwf	_THV
   853  06E4                     l1545:	
   854                           
   855                           ;tempmain.c: 186: TRISB0 =1;
   856  06E4  1683               	bsf	3,5	;RP0=1, select bank1
   857  06E5  1303               	bcf	3,6	;RP1=0, select bank1
   858  06E6  1406               	bsf	6,0	;volatile
   859  06E7                     l1547:	
   860                           
   861                           ;tempmain.c: 187: TZ=(TLV>>4)|(THV<<4)&0X3f;
   862  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   863  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   864  06E9  0861               	movf	_THV,w
   865  06EA  00BC               	movwf	??_get_temp
   866  06EB  3004               	movlw	4
   867  06EC                     u1165:	
   868  06EC  1003               	clrc
   869  06ED  0DBC               	rlf	??_get_temp,f
   870  06EE  3EFF               	addlw	-1
   871  06EF  1D03               	skipz
   872  06F0  2EEC               	goto	u1165
   873  06F1  303F               	movlw	63
   874  06F2  053C               	andwf	??_get_temp,w
   875  06F3  00BD               	movwf	??_get_temp+1
   876  06F4  0862               	movf	_TLV,w
   877  06F5  00BE               	movwf	??_get_temp+2
   878  06F6  3004               	movlw	4
   879  06F7                     u1175:	
   880  06F7  1003               	clrc
   881  06F8  0CBE               	rrf	??_get_temp+2,f
   882  06F9  3EFF               	addlw	-1
   883  06FA  1D03               	skipz
   884  06FB  2EF7               	goto	u1175
   885  06FC  083E               	movf	??_get_temp+2,w
   886  06FD  043D               	iorwf	??_get_temp+1,w
   887  06FE  00BF               	movwf	??_get_temp+3
   888  06FF  083F               	movf	??_get_temp+3,w
   889  0700  00E0               	movwf	_TZ
   890  0701                     l1549:	
   891                           
   892                           ;tempmain.c: 188: TX=TLV<<4;
   893  0701  0862               	movf	_TLV,w
   894  0702  00BC               	movwf	??_get_temp
   895  0703  3003               	movlw	3
   896  0704                     u1185:	
   897  0704  1003               	clrc
   898  0705  0DBC               	rlf	??_get_temp,f
   899  0706  3EFF               	addlw	-1
   900  0707  1D03               	skipz
   901  0708  2F04               	goto	u1185
   902  0709  1003               	clrc
   903  070A  0D3C               	rlf	??_get_temp,w
   904  070B  00BD               	movwf	??_get_temp+1
   905  070C  083D               	movf	??_get_temp+1,w
   906  070D  00DF               	movwf	_TX
   907  070E                     l1553:	
   908                           
   909                           ;tempmain.c: 190: ge=TZ%10;
   910  070E  300A               	movlw	10
   911  070F  00F0               	movwf	___awmod@divisor
   912  0710  3000               	movlw	0
   913  0711  00F1               	movwf	___awmod@divisor+1
   914  0712  0860               	movf	_TZ,w
   915  0713  00BC               	movwf	??_get_temp
   916  0714  01BD               	clrf	??_get_temp+1
   917  0715  083C               	movf	??_get_temp,w
   918  0716  00F2               	movwf	___awmod@dividend
   919  0717  083D               	movf	??_get_temp+1,w
   920  0718  00F3               	movwf	___awmod@dividend+1
   921  0719  120A  118A  24DA  120A  118A  	fcall	___awmod
   922  071E  0870               	movf	?___awmod,w
   923  071F  1283               	bcf	3,5	;RP0=0, select bank0
   924  0720  1303               	bcf	3,6	;RP1=0, select bank0
   925  0721  00BE               	movwf	??_get_temp+2
   926  0722  083E               	movf	??_get_temp+2,w
   927  0723  00DD               	movwf	_ge
   928                           
   929                           ;tempmain.c: 191: shi=TZ/10;
   930  0724  300A               	movlw	10
   931  0725  00F0               	movwf	___awdiv@divisor
   932  0726  3000               	movlw	0
   933  0727  00F1               	movwf	___awdiv@divisor+1
   934  0728  0860               	movf	_TZ,w
   935  0729  00BC               	movwf	??_get_temp
   936  072A  01BD               	clrf	??_get_temp+1
   937  072B  083C               	movf	??_get_temp,w
   938  072C  00F2               	movwf	___awdiv@dividend
   939  072D  083D               	movf	??_get_temp+1,w
   940  072E  00F3               	movwf	___awdiv@dividend+1
   941  072F  120A  118A  2599  120A  118A  	fcall	___awdiv
   942  0734  0870               	movf	?___awdiv,w
   943  0735  1283               	bcf	3,5	;RP0=0, select bank0
   944  0736  1303               	bcf	3,6	;RP1=0, select bank0
   945  0737  00BE               	movwf	??_get_temp+2
   946  0738  083E               	movf	??_get_temp+2,w
   947  0739  00DE               	movwf	_shi
   948  073A                     l1555:	
   949                           
   950                           ;tempmain.c: 192: wd=0;
   951  073A  01D6               	clrf	_wd
   952  073B  01D7               	clrf	_wd+1
   953  073C                     l1557:	
   954                           
   955                           ;tempmain.c: 193: if (TX & 0x80) wd=wd+5000;
   956  073C  1FDF               	btfss	_TX,7
   957  073D  2F3F               	goto	u1191
   958  073E  2F40               	goto	u1190
   959  073F                     u1191:	
   960  073F  2F48               	goto	l1561
   961  0740                     u1190:	
   962  0740                     l1559:	
   963  0740  0856               	movf	_wd,w
   964  0741  3E88               	addlw	136
   965  0742  00D6               	movwf	_wd
   966  0743  0857               	movf	_wd+1,w
   967  0744  1803               	skipnc
   968  0745  3E01               	addlw	1
   969  0746  3E13               	addlw	19
   970  0747  00D7               	movwf	_wd+1
   971  0748                     l1561:	
   972                           
   973                           ;tempmain.c: 194: if (TX & 0x40) wd=wd+2500;
   974  0748  1F5F               	btfss	_TX,6
   975  0749  2F4B               	goto	u1201
   976  074A  2F4C               	goto	u1200
   977  074B                     u1201:	
   978  074B  2F54               	goto	l1565
   979  074C                     u1200:	
   980  074C                     l1563:	
   981  074C  0856               	movf	_wd,w
   982  074D  3EC4               	addlw	196
   983  074E  00D6               	movwf	_wd
   984  074F  0857               	movf	_wd+1,w
   985  0750  1803               	skipnc
   986  0751  3E01               	addlw	1
   987  0752  3E09               	addlw	9
   988  0753  00D7               	movwf	_wd+1
   989  0754                     l1565:	
   990                           
   991                           ;tempmain.c: 195: if (TX & 0x20) wd=wd+1250;
   992  0754  1EDF               	btfss	_TX,5
   993  0755  2F57               	goto	u1211
   994  0756  2F58               	goto	u1210
   995  0757                     u1211:	
   996  0757  2F60               	goto	l1569
   997  0758                     u1210:	
   998  0758                     l1567:	
   999  0758  0856               	movf	_wd,w
  1000  0759  3EE2               	addlw	226
  1001  075A  00D6               	movwf	_wd
  1002  075B  0857               	movf	_wd+1,w
  1003  075C  1803               	skipnc
  1004  075D  3E01               	addlw	1
  1005  075E  3E04               	addlw	4
  1006  075F  00D7               	movwf	_wd+1
  1007  0760                     l1569:	
  1008                           
  1009                           ;tempmain.c: 196: if (TX & 0x10) wd=wd+625;
  1010  0760  1E5F               	btfss	_TX,4
  1011  0761  2F63               	goto	u1221
  1012  0762  2F64               	goto	u1220
  1013  0763                     u1221:	
  1014  0763  2F6C               	goto	l1573
  1015  0764                     u1220:	
  1016  0764                     l1571:	
  1017  0764  0856               	movf	_wd,w
  1018  0765  3E71               	addlw	113
  1019  0766  00D6               	movwf	_wd
  1020  0767  0857               	movf	_wd+1,w
  1021  0768  1803               	skipnc
  1022  0769  3E01               	addlw	1
  1023  076A  3E02               	addlw	2
  1024  076B  00D7               	movwf	_wd+1
  1025  076C                     l1573:	
  1026                           
  1027                           ;tempmain.c: 197: shifen=wd/1000;
  1028  076C  30E8               	movlw	232
  1029  076D  00F6               	movwf	___lwdiv@divisor
  1030  076E  3003               	movlw	3
  1031  076F  00F7               	movwf	___lwdiv@divisor+1
  1032  0770  0857               	movf	_wd+1,w
  1033  0771  00F9               	movwf	___lwdiv@dividend+1
  1034  0772  0856               	movf	_wd,w
  1035  0773  00F8               	movwf	___lwdiv@dividend
  1036  0774  120A  118A  2496  120A  118A  	fcall	___lwdiv
  1037  0779  0876               	movf	?___lwdiv,w
  1038  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1039  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1040  077C  00BC               	movwf	??_get_temp
  1041  077D  083C               	movf	??_get_temp,w
  1042  077E  00DC               	movwf	_shifen
  1043  077F                     l1575:	
  1044                           
  1045                           ;tempmain.c: 198: baifen=(wd%1000)/100;
  1046  077F  3064               	movlw	100
  1047  0780  00F6               	movwf	___lwdiv@divisor
  1048  0781  3000               	movlw	0
  1049  0782  00F7               	movwf	___lwdiv@divisor+1
  1050  0783  0857               	movf	_wd+1,w
  1051  0784  00F3               	movwf	___lwmod@dividend+1
  1052  0785  0856               	movf	_wd,w
  1053  0786  00F2               	movwf	___lwmod@dividend
  1054  0787  30E8               	movlw	232
  1055  0788  00F0               	movwf	___lwmod@divisor
  1056  0789  3003               	movlw	3
  1057  078A  00F1               	movwf	___lwmod@divisor+1
  1058  078B  120A  118A  23E7  120A  118A  	fcall	___lwmod
  1059  0790  0871               	movf	?___lwmod+1,w
  1060  0791  00F9               	movwf	___lwdiv@dividend+1
  1061  0792  0870               	movf	?___lwmod,w
  1062  0793  00F8               	movwf	___lwdiv@dividend
  1063  0794  120A  118A  2496  120A  118A  	fcall	___lwdiv
  1064  0799  0876               	movf	?___lwdiv,w
  1065  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1066  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1067  079C  00BC               	movwf	??_get_temp
  1068  079D  083C               	movf	??_get_temp,w
  1069  079E  00DB               	movwf	_baifen
  1070  079F                     l1577:	
  1071                           
  1072                           ;tempmain.c: 199: qianfen=(wd%100)/10;
  1073  079F  300A               	movlw	10
  1074  07A0  00F6               	movwf	___lwdiv@divisor
  1075  07A1  3000               	movlw	0
  1076  07A2  00F7               	movwf	___lwdiv@divisor+1
  1077  07A3  0857               	movf	_wd+1,w
  1078  07A4  00F3               	movwf	___lwmod@dividend+1
  1079  07A5  0856               	movf	_wd,w
  1080  07A6  00F2               	movwf	___lwmod@dividend
  1081  07A7  3064               	movlw	100
  1082  07A8  00F0               	movwf	___lwmod@divisor
  1083  07A9  3000               	movlw	0
  1084  07AA  00F1               	movwf	___lwmod@divisor+1
  1085  07AB  120A  118A  23E7  120A  118A  	fcall	___lwmod
  1086  07B0  0871               	movf	?___lwmod+1,w
  1087  07B1  00F9               	movwf	___lwdiv@dividend+1
  1088  07B2  0870               	movf	?___lwmod,w
  1089  07B3  00F8               	movwf	___lwdiv@dividend
  1090  07B4  120A  118A  2496  120A  118A  	fcall	___lwdiv
  1091  07B9  0876               	movf	?___lwdiv,w
  1092  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1093  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1094  07BC  00BC               	movwf	??_get_temp
  1095  07BD  083C               	movf	??_get_temp,w
  1096  07BE  00DA               	movwf	_qianfen
  1097  07BF                     l1579:	
  1098                           
  1099                           ;tempmain.c: 200: wanfen=wd%10;
  1100  07BF  300A               	movlw	10
  1101  07C0  00F0               	movwf	___lwmod@divisor
  1102  07C1  3000               	movlw	0
  1103  07C2  00F1               	movwf	___lwmod@divisor+1
  1104  07C3  0857               	movf	_wd+1,w
  1105  07C4  00F3               	movwf	___lwmod@dividend+1
  1106  07C5  0856               	movf	_wd,w
  1107  07C6  00F2               	movwf	___lwmod@dividend
  1108  07C7  120A  118A  23E7  120A  118A  	fcall	___lwmod
  1109  07CC  0870               	movf	?___lwmod,w
  1110  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1111  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1112  07CF  00BC               	movwf	??_get_temp
  1113  07D0  083C               	movf	??_get_temp,w
  1114  07D1  00D9               	movwf	_wanfen
  1115  07D2                     l1581:	
  1116                           
  1117                           ;tempmain.c: 201: __nop();
  1118  07D2  0000               	nop
  1119  07D3                     l155:	
  1120  07D3  0008               	return
  1121  07D4                     __end_of_get_temp:	
  1122                           
  1123                           	psect	text2
  1124  045B                     __ptext2:	
  1125 ;; *************** function _write_byte *****************
  1126 ;; Defined at:
  1127 ;;		line 115 in file "tempmain.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  val             1    wreg     unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  val             1    7[COMMON] unsigned char 
  1132 ;;  i               1    8[COMMON] unsigned char 
  1133 ;;  temp            1    6[COMMON] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       0       0       0       0
  1144 ;;      Locals:         3       0       0       0       0
  1145 ;;      Temps:          2       0       0       0       0
  1146 ;;      Totals:         5       0       0       0       0
  1147 ;;Total ram usage:        5 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    1
  1150 ;; This function calls:
  1151 ;;		_delay_temp
  1152 ;; This function is called by:
  1153 ;;		_get_temp
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _write_byte
  1159  045B                     _write_byte:	
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1163                           ;write_byte@val stored from wreg
  1164  045B  00F7               	movwf	write_byte@val
  1165  045C                     l1305:	
  1166                           
  1167                           ;tempmain.c: 115: void write_byte(unsigned char val);tempmain.c: 116: {;tempmain.c: 117:
      +                            unsigned char i;;tempmain.c: 118:  unsigned char temp;;tempmain.c: 119:  for(i=8;i>0;i
      +                          --)
  1168  045C  3008               	movlw	8
  1169  045D  00F4               	movwf	??_write_byte
  1170  045E  0874               	movf	??_write_byte,w
  1171  045F  00F8               	movwf	write_byte@i
  1172  0460                     l1311:	
  1173                           
  1174                           ;tempmain.c: 120:  {;tempmain.c: 121:    temp=val&0x01;
  1175  0460  0877               	movf	write_byte@val,w
  1176  0461  3901               	andlw	1
  1177  0462  00F4               	movwf	??_write_byte
  1178  0463  0874               	movf	??_write_byte,w
  1179  0464  00F6               	movwf	write_byte@temp
  1180  0465                     l1313:	
  1181                           
  1182                           ;tempmain.c: 122:    RB0 = 0; TRISB0 = 0;
  1183  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0467  1006               	bcf	6,0	;volatile
  1186  0468                     l1315:	
  1187  0468  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0469  1303               	bcf	3,6	;RP1=0, select bank1
  1189  046A  1006               	bcf	6,0	;volatile
  1190  046B                     l1317:	
  1191                           
  1192                           ;tempmain.c: 123:    __nop();
  1193  046B  0000               	nop
  1194  046C                     l1319:	
  1195                           
  1196                           ;tempmain.c: 124:    __nop();
  1197  046C  0000               	nop
  1198  046D                     l1321:	
  1199                           
  1200                           ;tempmain.c: 125:    __nop();
  1201  046D  0000               	nop
  1202  046E                     l1323:	
  1203                           
  1204                           ;tempmain.c: 126:    __nop();
  1205  046E  0000               	nop
  1206  046F                     l1325:	
  1207                           
  1208                           ;tempmain.c: 127:    __nop();
  1209  046F  0000               	nop
  1210  0470                     l1327:	
  1211                           
  1212                           ;tempmain.c: 128:    if(temp==1) TRISB0 =1;
  1213  0470  0376               	decf	write_byte@temp,w
  1214  0471  1D03               	btfss	3,2
  1215  0472  2C74               	goto	u791
  1216  0473  2C75               	goto	u790
  1217  0474                     u791:	
  1218  0474  2C78               	goto	l1331
  1219  0475                     u790:	
  1220  0475                     l1329:	
  1221  0475  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0476  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0477  1406               	bsf	6,0	;volatile
  1224  0478                     l1331:	
  1225                           
  1226                           ;tempmain.c: 129:    delay_temp(2,7);
  1227  0478  3007               	movlw	7
  1228  0479  00F4               	movwf	??_write_byte
  1229  047A  0874               	movf	??_write_byte,w
  1230  047B  00F0               	movwf	delay_temp@y
  1231  047C  3002               	movlw	2
  1232  047D  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1233  0482                     l1333:	
  1234                           
  1235                           ;tempmain.c: 130:    TRISB0 =1;
  1236  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0484  1406               	bsf	6,0	;volatile
  1239  0485                     l1335:	
  1240                           
  1241                           ;tempmain.c: 131:    __nop();
  1242  0485  0000               	nop
  1243  0486                     l1337:	
  1244                           
  1245                           ;tempmain.c: 132:    __nop();
  1246  0486  0000               	nop
  1247  0487                     l1339:	
  1248                           
  1249                           ;tempmain.c: 133:    val=val>>1;
  1250  0487  0877               	movf	write_byte@val,w
  1251  0488  00F4               	movwf	??_write_byte
  1252  0489  1003               	clrc
  1253  048A  0C74               	rrf	??_write_byte,w
  1254  048B  00F5               	movwf	??_write_byte+1
  1255  048C  0875               	movf	??_write_byte+1,w
  1256  048D  00F7               	movwf	write_byte@val
  1257  048E                     l1341:	
  1258                           
  1259                           ;tempmain.c: 134:   }
  1260  048E  3001               	movlw	1
  1261  048F  02F8               	subwf	write_byte@i,f
  1262  0490                     l1343:	
  1263  0490  0878               	movf	write_byte@i,w
  1264  0491  1D03               	btfss	3,2
  1265  0492  2C94               	goto	u801
  1266  0493  2C95               	goto	u800
  1267  0494                     u801:	
  1268  0494  2C60               	goto	l1311
  1269  0495                     u800:	
  1270  0495                     l137:	
  1271  0495  0008               	return
  1272  0496                     __end_of_write_byte:	
  1273                           
  1274                           	psect	text3
  1275  0421                     __ptext3:	
  1276 ;; *************** function _reset *****************
  1277 ;; Defined at:
  1278 ;;		line 98 in file "tempmain.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  presence        1    5[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2  125[None  ] int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          1       0       0       0       0
  1295 ;;      Totals:         2       0       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    1
  1299 ;; This function calls:
  1300 ;;		_delay_temp
  1301 ;; This function is called by:
  1302 ;;		_get_temp
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function _reset
  1308  0421                     _reset:	
  1309  0421                     l1289:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  1312                           
  1313                           
  1314                           ;tempmain.c: 100:   char presence=1;
  1315  0421  01F5               	clrf	reset@presence
  1316  0422  0AF5               	incf	reset@presence,f
  1317                           
  1318                           ;tempmain.c: 101:   while(presence)
  1319  0423  2C55               	goto	l1303
  1320  0424                     l127:	
  1321                           
  1322                           ;tempmain.c: 102:   {;tempmain.c: 103:     RB0 = 0; TRISB0 = 0 ;
  1323  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0426  1006               	bcf	6,0	;volatile
  1326  0427  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0428  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0429  1006               	bcf	6,0	;volatile
  1329  042A                     l1291:	
  1330                           
  1331                           ;tempmain.c: 104:     delay_temp(2,70);
  1332  042A  3046               	movlw	70
  1333  042B  00F4               	movwf	??_reset
  1334  042C  0874               	movf	??_reset,w
  1335  042D  00F0               	movwf	delay_temp@y
  1336  042E  3002               	movlw	2
  1337  042F  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1338  0434                     l1293:	
  1339                           
  1340                           ;tempmain.c: 105:     TRISB0 =1;
  1341  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0436  1406               	bsf	6,0	;volatile
  1344                           
  1345                           ;tempmain.c: 106:     delay_temp(2,8);
  1346  0437  3008               	movlw	8
  1347  0438  00F4               	movwf	??_reset
  1348  0439  0874               	movf	??_reset,w
  1349  043A  00F0               	movwf	delay_temp@y
  1350  043B  3002               	movlw	2
  1351  043C  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1352  0441                     l1295:	
  1353                           
  1354                           ;tempmain.c: 107:     if(RB0==1) presence=1;
  1355  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0443  1C06               	btfss	6,0	;volatile
  1358  0444  2C46               	goto	u771
  1359  0445  2C47               	goto	u770
  1360  0446                     u771:	
  1361  0446  2C4A               	goto	l1299
  1362  0447                     u770:	
  1363  0447                     l1297:	
  1364  0447  01F5               	clrf	reset@presence
  1365  0448  0AF5               	incf	reset@presence,f
  1366  0449  2C4B               	goto	l1301
  1367  044A                     l1299:	
  1368  044A  01F5               	clrf	reset@presence
  1369  044B                     l1301:	
  1370                           
  1371                           ;tempmain.c: 109:     delay_temp(2,60);
  1372  044B  303C               	movlw	60
  1373  044C  00F4               	movwf	??_reset
  1374  044D  0874               	movf	??_reset,w
  1375  044E  00F0               	movwf	delay_temp@y
  1376  044F  3002               	movlw	2
  1377  0450  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1378  0455                     l1303:	
  1379                           
  1380                           ;tempmain.c: 101:   while(presence)
  1381  0455  0875               	movf	reset@presence,w
  1382  0456  1D03               	btfss	3,2
  1383  0457  2C59               	goto	u781
  1384  0458  2C5A               	goto	u780
  1385  0459                     u781:	
  1386  0459  2C24               	goto	l127
  1387  045A                     u780:	
  1388  045A                     l131:	
  1389  045A  0008               	return
  1390  045B                     __end_of_reset:	
  1391                           
  1392                           	psect	text4
  1393  03B2                     __ptext4:	
  1394 ;; *************** function _read_byte *****************
  1395 ;; Defined at:
  1396 ;;		line 139 in file "tempmain.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  i               1    6[COMMON] unsigned char 
  1401 ;;  value           1    5[COMMON] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      unsigned char 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         2       0       0       0       0
  1413 ;;      Temps:          1       0       0       0       0
  1414 ;;      Totals:         3       0       0       0       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    1
  1418 ;; This function calls:
  1419 ;;		_delay_temp
  1420 ;; This function is called by:
  1421 ;;		_get_temp
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _read_byte
  1427  03B2                     _read_byte:	
  1428  03B2                     l1345:	
  1429                           ;incstack = 0
  1430                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  1431                           
  1432                           
  1433                           ;tempmain.c: 141:  unsigned char i;;tempmain.c: 142:  unsigned char value=0;
  1434  03B2  01F5               	clrf	read_byte@value
  1435  03B3                     l1347:	
  1436                           
  1437                           ;tempmain.c: 143:  static char j;;tempmain.c: 144:  for(i=8;i>0;i--)
  1438  03B3  3008               	movlw	8
  1439  03B4  00F4               	movwf	??_read_byte
  1440  03B5  0874               	movf	??_read_byte,w
  1441  03B6  00F6               	movwf	read_byte@i
  1442  03B7                     l1353:	
  1443                           
  1444                           ;tempmain.c: 145:  {;tempmain.c: 146:    value>>=1;
  1445  03B7  1003               	clrc
  1446  03B8  0CF5               	rrf	read_byte@value,f
  1447  03B9                     l1355:	
  1448                           
  1449                           ;tempmain.c: 147:    RB0 = 0; TRISB0 = 0;
  1450  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1451  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1452  03BB  1006               	bcf	6,0	;volatile
  1453  03BC                     l1357:	
  1454  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1455  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1456  03BE  1006               	bcf	6,0	;volatile
  1457  03BF                     l1359:	
  1458                           
  1459                           ;tempmain.c: 148:    __nop();
  1460  03BF  0000               	nop
  1461  03C0                     l1361:	
  1462                           
  1463                           ;tempmain.c: 149:    __nop();
  1464  03C0  0000               	nop
  1465  03C1                     l1363:	
  1466                           
  1467                           ;tempmain.c: 150:    __nop();
  1468  03C1  0000               	nop
  1469  03C2                     l1365:	
  1470                           
  1471                           ;tempmain.c: 151:    __nop();
  1472  03C2  0000               	nop
  1473  03C3                     l1367:	
  1474                           
  1475                           ;tempmain.c: 152:    __nop();
  1476  03C3  0000               	nop
  1477  03C4                     l1369:	
  1478                           
  1479                           ;tempmain.c: 153:    __nop();
  1480  03C4  0000               	nop
  1481  03C5                     l1371:	
  1482                           
  1483                           ;tempmain.c: 154:    TRISB0 =1;
  1484  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1485  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1486  03C7  1406               	bsf	6,0	;volatile
  1487  03C8                     l1373:	
  1488                           
  1489                           ;tempmain.c: 155:    __nop();
  1490  03C8  0000               	nop
  1491  03C9                     l1375:	
  1492                           
  1493                           ;tempmain.c: 156:    __nop();
  1494  03C9  0000               	nop
  1495  03CA                     l1377:	
  1496                           
  1497                           ;tempmain.c: 157:    __nop();
  1498  03CA  0000               	nop
  1499  03CB                     l1379:	
  1500                           
  1501                           ;tempmain.c: 158:    __nop();
  1502  03CB  0000               	nop
  1503  03CC                     l1381:	
  1504                           
  1505                           ;tempmain.c: 159:    __nop();
  1506  03CC  0000               	nop
  1507  03CD                     l1383:	
  1508                           
  1509                           ;tempmain.c: 161:    if(RB0 == 1) value|=0x80;
  1510  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1511  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1512  03CF  1C06               	btfss	6,0	;volatile
  1513  03D0  2BD2               	goto	u811
  1514  03D1  2BD3               	goto	u810
  1515  03D2                     u811:	
  1516  03D2  2BD4               	goto	l1387
  1517  03D3                     u810:	
  1518  03D3                     l1385:	
  1519  03D3  17F5               	bsf	read_byte@value,7
  1520  03D4                     l1387:	
  1521                           
  1522                           ;tempmain.c: 162:    delay_temp(2,7);
  1523  03D4  3007               	movlw	7
  1524  03D5  00F4               	movwf	??_read_byte
  1525  03D6  0874               	movf	??_read_byte,w
  1526  03D7  00F0               	movwf	delay_temp@y
  1527  03D8  3002               	movlw	2
  1528  03D9  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1529  03DE                     l1389:	
  1530                           
  1531                           ;tempmain.c: 163:   }
  1532  03DE  3001               	movlw	1
  1533  03DF  02F6               	subwf	read_byte@i,f
  1534  03E0                     l1391:	
  1535  03E0  0876               	movf	read_byte@i,w
  1536  03E1  1D03               	btfss	3,2
  1537  03E2  2BE4               	goto	u821
  1538  03E3  2BE5               	goto	u820
  1539  03E4                     u821:	
  1540  03E4  2BB7               	goto	l1353
  1541  03E5                     u820:	
  1542  03E5                     l1393:	
  1543                           
  1544                           ;tempmain.c: 164:   return(value);
  1545  03E5  0875               	movf	read_byte@value,w
  1546  03E6                     l145:	
  1547  03E6  0008               	return
  1548  03E7                     __end_of_read_byte:	
  1549                           
  1550                           	psect	text5
  1551  0533                     __ptext5:	
  1552 ;; *************** function _display *****************
  1553 ;; Defined at:
  1554 ;;		line 67 in file "tempmain.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  tempstr         1   13[COMMON] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0
  1570 ;;      Temps:          2       0       0       0       0
  1571 ;;      Totals:         3       0       0       0       0
  1572 ;;Total ram usage:        3 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    4
  1575 ;; This function calls:
  1576 ;;		_delay_temp
  1577 ;;		_dispcmd
  1578 ;;		_init_4line
  1579 ;;		_lcd_init
  1580 ;;		_writechar
  1581 ;; This function is called by:
  1582 ;;		_get_temp
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _display
  1589  0533                     _display:	
  1590  0533                     l1271:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1593                           
  1594                           
  1595                           ;tempmain.c: 69:     init_4line();
  1596  0533  120A  118A  22D1  120A  118A  	fcall	_init_4line
  1597  0538                     l1273:	
  1598                           
  1599                           ;tempmain.c: 70:     lcd_init();
  1600  0538  120A  118A  236B  120A  118A  	fcall	_lcd_init
  1601  053D                     l1275:	
  1602                           
  1603                           ;tempmain.c: 73:     {;tempmain.c: 74:     char tempstr = num[shi];
  1604  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1605  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1606  053F  085E               	movf	_shi,w
  1607  0540  3E42               	addlw	(low (_num| 0))& (0+255)
  1608  0541  0084               	movwf	4
  1609  0542  1383               	bcf	3,7	;select IRP bank0
  1610  0543  0800               	movf	0,w
  1611  0544  00FB               	movwf	??_display
  1612  0545  087B               	movf	??_display,w
  1613  0546  00FD               	movwf	display@tempstr
  1614  0547                     l1277:	
  1615                           
  1616                           ;tempmain.c: 75:     writechar(tempstr);
  1617  0547  087D               	movf	display@tempstr,w
  1618  0548  120A  118A  22F7  120A  118A  	fcall	_writechar
  1619  054D                     l1279:	
  1620                           
  1621                           ;tempmain.c: 77:     delay_temp(10,70);
  1622  054D  3046               	movlw	70
  1623  054E  00FB               	movwf	??_display
  1624  054F  087B               	movf	??_display,w
  1625  0550  00F0               	movwf	delay_temp@y
  1626  0551  300A               	movlw	10
  1627  0552  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1628  0557                     l1281:	
  1629                           
  1630                           ;tempmain.c: 79:     dispcmd(2, num[ge]);
  1631  0557  3002               	movlw	2
  1632  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1634  055A  00A0               	movwf	dispcmd@line
  1635  055B  3000               	movlw	0
  1636  055C  00A1               	movwf	dispcmd@line+1
  1637  055D  085D               	movf	_ge,w
  1638  055E  3E42               	addlw	(low (_num| 0))& (0+255)
  1639  055F  0084               	movwf	4
  1640  0560  1383               	bcf	3,7	;select IRP bank0
  1641  0561  0800               	movf	0,w
  1642  0562  00FB               	movwf	??_display
  1643  0563  01FC               	clrf	??_display+1
  1644  0564  087B               	movf	??_display,w
  1645  0565  00A2               	movwf	dispcmd@linetxt
  1646  0566  087C               	movf	??_display+1,w
  1647  0567  00A3               	movwf	dispcmd@linetxt+1
  1648  0568  120A  118A  2600  120A  118A  	fcall	_dispcmd
  1649  056D                     l1283:	
  1650                           
  1651                           ;tempmain.c: 80:     delay_temp(10,70);
  1652  056D  3046               	movlw	70
  1653  056E  00FB               	movwf	??_display
  1654  056F  087B               	movf	??_display,w
  1655  0570  00F0               	movwf	delay_temp@y
  1656  0571  300A               	movlw	10
  1657  0572  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1658  0577                     l1285:	
  1659                           
  1660                           ;tempmain.c: 82:     dispcmd(3, num[shifen]);
  1661  0577  3003               	movlw	3
  1662  0578  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0579  1303               	bcf	3,6	;RP1=0, select bank0
  1664  057A  00A0               	movwf	dispcmd@line
  1665  057B  3000               	movlw	0
  1666  057C  00A1               	movwf	dispcmd@line+1
  1667  057D  085C               	movf	_shifen,w
  1668  057E  3E42               	addlw	(low (_num| 0))& (0+255)
  1669  057F  0084               	movwf	4
  1670  0580  1383               	bcf	3,7	;select IRP bank0
  1671  0581  0800               	movf	0,w
  1672  0582  00FB               	movwf	??_display
  1673  0583  01FC               	clrf	??_display+1
  1674  0584  087B               	movf	??_display,w
  1675  0585  00A2               	movwf	dispcmd@linetxt
  1676  0586  087C               	movf	??_display+1,w
  1677  0587  00A3               	movwf	dispcmd@linetxt+1
  1678  0588  120A  118A  2600  120A  118A  	fcall	_dispcmd
  1679  058D                     l1287:	
  1680                           
  1681                           ;tempmain.c: 83:     delay_temp(10,70);
  1682  058D  3046               	movlw	70
  1683  058E  00FB               	movwf	??_display
  1684  058F  087B               	movf	??_display,w
  1685  0590  00F0               	movwf	delay_temp@y
  1686  0591  300A               	movlw	10
  1687  0592  120A  118A  2308  120A  118A  	fcall	_delay_temp
  1688  0597  2D3D               	goto	l1275
  1689  0598  0008               	return
  1690  0599                     __end_of_display:	
  1691                           
  1692                           	psect	text6
  1693  036B                     __ptext6:	
  1694 ;; *************** function _lcd_init *****************
  1695 ;; Defined at:
  1696 ;;		line 83 in file "lcd.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    2
  1717 ;; This function calls:
  1718 ;;		_writecmd_4line
  1719 ;; This function is called by:
  1720 ;;		_display
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _lcd_init
  1726  036B                     _lcd_init:	
  1727  036B                     l1255:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1730                           
  1731                           
  1732                           ;lcd.c: 85: {
  1733  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1734  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1735  036D  1505               	bsf	5,2	;volatile
  1736  036E                     l1257:	
  1737                           
  1738                           ;lcd.c: 86:     ADCON1=0X07;
  1739  036E  300E               	movlw	14
  1740  036F  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1741                           
  1742                           ;lcd.c: 87:     TRISA=0X00;
  1743  0374  3001               	movlw	1
  1744  0375  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1745                           
  1746                           ;lcd.c: 88:     TRISD=0X00;
  1747  037A  3038               	movlw	56
  1748  037B  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1749  0380                     l58:	
  1750  0380  0008               	return
  1751  0381                     __end_of_lcd_init:	
  1752                           
  1753                           	psect	text7
  1754  02D1                     __ptext7:	
  1755 ;; *************** function _init_4line *****************
  1756 ;; Defined at:
  1757 ;;		line 93 in file "lcd.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_display
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _init_4line
  1786  02D1                     _init_4line:	
  1787  02D1                     l1259:	
  1788                           ;incstack = 0
  1789                           ; Regs used in _init_4line: [wreg+status,2]
  1790                           
  1791  02D1  3007               	movlw	7
  1792  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1793  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1794  02D4  009F               	movwf	31	;volatile
  1795  02D5                     l1261:	
  1796  02D5  0185               	clrf	5	;volatile
  1797  02D6                     l1263:	
  1798  02D6  0188               	clrf	8	;volatile
  1799  02D7                     l61:	
  1800  02D7  0008               	return
  1801  02D8                     __end_of_init_4line:	
  1802                           
  1803                           	psect	text8
  1804  0600                     __ptext8:	
  1805 ;; *************** function _dispcmd *****************
  1806 ;; Defined at:
  1807 ;;		line 16 in file "lcd.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  line            2    0[BANK0 ] int 
  1810 ;;  linetxt         2    2[BANK0 ] PTR unsigned char 
  1811 ;;		 -> RAM(512), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  error          20    8[BANK0 ] unsigned char [20]
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       4       0       0       0
  1824 ;;      Locals:         0      20       0       0       0
  1825 ;;      Temps:          0       4       0       0       0
  1826 ;;      Totals:         0      28       0       0       0
  1827 ;;Total ram usage:       28 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		_writecmd_4line
  1832 ;;		_yeet
  1833 ;; This function is called by:
  1834 ;;		_display
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _dispcmd
  1840  0600                     _dispcmd:	
  1841  0600                     l1215:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _dispcmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1844                           
  1845                           
  1846                           ;lcd.c: 17:         writecmd_4line(0x88);
  1847  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0602  0820               	movf	dispcmd@line,w
  1850  0603  0421               	iorwf	dispcmd@line+1,w
  1851  0604  1903               	btfsc	3,2
  1852  0605  2E07               	goto	u641
  1853  0606  2E08               	goto	u640
  1854  0607                     u641:	
  1855  0607  2E0E               	goto	l1219
  1856  0608                     u640:	
  1857  0608                     l1217:	
  1858  0608  0320               	decf	dispcmd@line,w
  1859  0609  0421               	iorwf	dispcmd@line+1,w
  1860  060A  1D03               	btfss	3,2
  1861  060B  2E0D               	goto	u651
  1862  060C  2E0E               	goto	u650
  1863  060D                     u651:	
  1864  060D  2E20               	goto	l1223
  1865  060E                     u650:	
  1866  060E                     l1219:	
  1867                           
  1868                           ;lcd.c: 18:         yeet(linetxt);
  1869  060E  3080               	movlw	128
  1870  060F  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1871  0614                     l1221:	
  1872                           
  1873                           ;lcd.c: 19:     }
  1874  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0616  0822               	movf	dispcmd@linetxt,w
  1877  0617  00F3               	movwf	yeet@array
  1878  0618  0823               	movf	dispcmd@linetxt+1,w
  1879  0619  00F4               	movwf	yeet@array+1
  1880  061A  120A  118A  2381  120A  118A  	fcall	_yeet
  1881                           
  1882                           ;lcd.c: 20:     else if (line == 4){
  1883  061F  2E8A               	goto	l38
  1884  0620                     l1223:	
  1885  0620  3002               	movlw	2
  1886  0621  0620               	xorwf	dispcmd@line,w
  1887  0622  0421               	iorwf	dispcmd@line+1,w
  1888  0623  1D03               	btfss	3,2
  1889  0624  2E26               	goto	u661
  1890  0625  2E27               	goto	u660
  1891  0626                     u661:	
  1892  0626  2E2E               	goto	l1229
  1893  0627                     u660:	
  1894  0627                     l1225:	
  1895                           
  1896                           ;lcd.c: 22:         yeet(linetxt);
  1897  0627  3090               	movlw	144
  1898  0628  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1899  062D  2E14               	goto	l1221
  1900  062E                     l1229:	
  1901  062E  3003               	movlw	3
  1902  062F  0620               	xorwf	dispcmd@line,w
  1903  0630  0421               	iorwf	dispcmd@line+1,w
  1904  0631  1D03               	btfss	3,2
  1905  0632  2E34               	goto	u671
  1906  0633  2E35               	goto	u670
  1907  0634                     u671:	
  1908  0634  2E3C               	goto	l1235
  1909  0635                     u670:	
  1910  0635                     l1231:	
  1911                           
  1912                           ;lcd.c: 26:         char error[] = "LINE DOES NOT EXIST";
  1913  0635  3088               	movlw	136
  1914  0636  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1915  063B  2E14               	goto	l1221
  1916  063C                     l1235:	
  1917  063C  3004               	movlw	4
  1918  063D  0620               	xorwf	dispcmd@line,w
  1919  063E  0421               	iorwf	dispcmd@line+1,w
  1920  063F  1D03               	btfss	3,2
  1921  0640  2E42               	goto	u681
  1922  0641  2E43               	goto	u680
  1923  0642                     u681:	
  1924  0642  2E4A               	goto	l1241
  1925  0643                     u680:	
  1926  0643                     l1237:	
  1927                           
  1928                           ;lcd.c: 30: 
  1929  0643  3098               	movlw	152
  1930  0644  120A  118A  22E6  120A  118A  	fcall	_writecmd_4line
  1931  0649  2E14               	goto	l1221
  1932  064A                     l1241:	
  1933  064A  0820               	movf	dispcmd@line,w
  1934  064B  0421               	iorwf	dispcmd@line+1,w
  1935  064C  1903               	btfsc	3,2
  1936  064D  2E4F               	goto	u691
  1937  064E  2E50               	goto	u690
  1938  064F                     u691:	
  1939  064F  2E8A               	goto	l30
  1940  0650                     u690:	
  1941  0650                     l1243:	
  1942  0650  0320               	decf	dispcmd@line,w
  1943  0651  0421               	iorwf	dispcmd@line+1,w
  1944  0652  1903               	btfsc	3,2
  1945  0653  2E55               	goto	u701
  1946  0654  2E56               	goto	u700
  1947  0655                     u701:	
  1948  0655  2E8A               	goto	l30
  1949  0656                     u700:	
  1950  0656                     l1245:	
  1951  0656  3002               	movlw	2
  1952  0657  0620               	xorwf	dispcmd@line,w
  1953  0658  0421               	iorwf	dispcmd@line+1,w
  1954  0659  1903               	btfsc	3,2
  1955  065A  2E5C               	goto	u711
  1956  065B  2E5D               	goto	u710
  1957  065C                     u711:	
  1958  065C  2E8A               	goto	l30
  1959  065D                     u710:	
  1960  065D                     l1247:	
  1961  065D  3003               	movlw	3
  1962  065E  0620               	xorwf	dispcmd@line,w
  1963  065F  0421               	iorwf	dispcmd@line+1,w
  1964  0660  1903               	btfsc	3,2
  1965  0661  2E63               	goto	u721
  1966  0662  2E64               	goto	u720
  1967  0663                     u721:	
  1968  0663  2E8A               	goto	l30
  1969  0664                     u720:	
  1970  0664                     l1249:	
  1971  0664  3004               	movlw	4
  1972  0665  0620               	xorwf	dispcmd@line,w
  1973  0666  0421               	iorwf	dispcmd@line+1,w
  1974  0667  1903               	btfsc	3,2
  1975  0668  2E6A               	goto	u731
  1976  0669  2E6B               	goto	u730
  1977  066A                     u731:	
  1978  066A  2E8A               	goto	l30
  1979  066B                     u730:	
  1980  066B                     l1251:	
  1981                           
  1982                           ;lcd.c: 35:         writechar(array[i]);
  1983  066B  3028               	movlw	dispcmd@error& (0+255)
  1984  066C  0084               	movwf	4
  1985  066D  30A0               	movlw	low dispcmd@F865
  1986  066E  00A4               	movwf	??_dispcmd
  1987  066F  0804               	movf	4,w
  1988  0670  00A5               	movwf	??_dispcmd+1
  1989  0671  3014               	movlw	20
  1990  0672  00A6               	movwf	??_dispcmd+2
  1991  0673                     u740:	
  1992  0673  0824               	movf	??_dispcmd,w
  1993  0674  0084               	movwf	4
  1994  0675  1383               	bcf	3,7	;select IRP bank1
  1995  0676  0800               	movf	0,w
  1996  0677  00A7               	movwf	??_dispcmd+3
  1997  0678  0AA4               	incf	??_dispcmd,f
  1998  0679  0825               	movf	??_dispcmd+1,w
  1999  067A  0084               	movwf	4
  2000  067B  0827               	movf	??_dispcmd+3,w
  2001  067C  0080               	movwf	0
  2002  067D  0AA5               	incf	??_dispcmd+1,f
  2003  067E  0BA6               	decfsz	??_dispcmd+2,f
  2004  067F  2E73               	goto	u740
  2005  0680                     l1253:	
  2006                           
  2007                           ;lcd.c: 36:         i++;
  2008  0680  3028               	movlw	(low (dispcmd@error| 0))& (0+255)
  2009  0681  00F3               	movwf	yeet@array
  2010  0682  3000               	movlw	0
  2011  0683  00F4               	movwf	yeet@array+1
  2012  0684  120A  118A  2381  120A  118A  	fcall	_yeet
  2013  0689  2E8A               	goto	l38
  2014  068A                     l30:	
  2015  068A                     l38:	
  2016  068A  0008               	return
  2017  068B                     __end_of_dispcmd:	
  2018                           
  2019                           	psect	text9
  2020  0381                     __ptext9:	
  2021 ;; *************** function _yeet *****************
  2022 ;; Defined at:
  2023 ;;		line 41 in file "lcd.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  array           2    3[COMMON] PTR unsigned char 
  2026 ;;		 -> RAM(512), dispcmd@error(20), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  i               2    9[COMMON] int 
  2029 ;;  p               2    7[COMMON] PTR unsigned char 
  2030 ;;		 -> RAM(512), dispcmd@error(20), 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         2       0       0       0       0
  2041 ;;      Locals:         4       0       0       0       0
  2042 ;;      Temps:          2       0       0       0       0
  2043 ;;      Totals:         8       0       0       0       0
  2044 ;;Total ram usage:        8 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    2
  2047 ;; This function calls:
  2048 ;;		_writechar
  2049 ;; This function is called by:
  2050 ;;		_dispcmd
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _yeet
  2056  0381                     _yeet:	
  2057  0381                     l1203:	
  2058                           ;incstack = 0
  2059                           ; Regs used in _yeet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2060                           
  2061                           
  2062                           ;lcd.c: 42: void delay()
  2063  0381  01F9               	clrf	yeet@i
  2064  0382  01FA               	clrf	yeet@i+1
  2065  0383                     l1205:	
  2066                           
  2067                           ;lcd.c: 43: {
  2068  0383  0873               	movf	yeet@array,w
  2069  0384  00F7               	movwf	yeet@p
  2070  0385  0874               	movf	yeet@array+1,w
  2071  0386  00F8               	movwf	yeet@p+1
  2072  0387  2BA7               	goto	l1213
  2073  0388                     l1207:	
  2074                           
  2075                           ;lcd.c: 44:     int i;
  2076  0388  0879               	movf	yeet@i,w
  2077  0389  0773               	addwf	yeet@array,w
  2078  038A  00F5               	movwf	??_yeet
  2079  038B  087A               	movf	yeet@i+1,w
  2080  038C  1803               	skipnc
  2081  038D  0A7A               	incf	yeet@i+1,w
  2082  038E  0774               	addwf	yeet@array+1,w
  2083  038F  00F6               	movwf	??_yeet+1
  2084  0390  0875               	movf	??_yeet,w
  2085  0391  0084               	movwf	4
  2086  0392  1783               	bsf	3,7
  2087  0393  1C76               	btfss	??_yeet+1,0
  2088  0394  1383               	bcf	3,7
  2089  0395  0800               	movf	0,w
  2090  0396  120A  118A  22F7  120A  118A  	fcall	_writechar
  2091  039B                     l1209:	
  2092                           
  2093                           ;lcd.c: 45: for(i=0;i<5000;i++);
  2094  039B  3001               	movlw	1
  2095  039C  07F9               	addwf	yeet@i,f
  2096  039D  1803               	skipnc
  2097  039E  0AFA               	incf	yeet@i+1,f
  2098  039F  3000               	movlw	0
  2099  03A0  07FA               	addwf	yeet@i+1,f
  2100  03A1                     l1211:	
  2101                           
  2102                           ;lcd.c: 46: }
  2103  03A1  3001               	movlw	1
  2104  03A2  07F7               	addwf	yeet@p,f
  2105  03A3  1803               	skipnc
  2106  03A4  0AF8               	incf	yeet@p+1,f
  2107  03A5  3000               	movlw	0
  2108  03A6  07F8               	addwf	yeet@p+1,f
  2109  03A7                     l1213:	
  2110  03A7  0877               	movf	yeet@p,w
  2111  03A8  0084               	movwf	4
  2112  03A9  1783               	bsf	3,7
  2113  03AA  1C78               	btfss	yeet@p+1,0
  2114  03AB  1383               	bcf	3,7
  2115  03AC  0800               	movf	0,w
  2116  03AD  1D03               	btfss	3,2
  2117  03AE  2BB0               	goto	u631
  2118  03AF  2BB1               	goto	u630
  2119  03B0                     u631:	
  2120  03B0  2B88               	goto	l1207
  2121  03B1                     u630:	
  2122  03B1                     l44:	
  2123  03B1  0008               	return
  2124  03B2                     __end_of_yeet:	
  2125                           
  2126                           	psect	text10
  2127  02F7                     __ptext10:	
  2128 ;; *************** function _writechar *****************
  2129 ;; Defined at:
  2130 ;;		line 59 in file "lcd.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  x               1    wreg     unsigned char 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  x               1    2[COMMON] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         1       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         1       0       0       0       0
  2148 ;;Total ram usage:        1 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		_delay
  2153 ;; This function is called by:
  2154 ;;		_yeet
  2155 ;;		_display
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _writechar
  2161  02F7                     _writechar:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2165                           ;writechar@x stored from wreg
  2166  02F7  00F2               	movwf	writechar@x
  2167  02F8                     l1183:	
  2168                           
  2169                           ;lcd.c: 59: ;lcd.c: 60: ;lcd.c: 61: 
  2170  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2171  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2172  02FA  1685               	bsf	5,5	;volatile
  2173                           
  2174                           ;lcd.c: 62: void writecmd_4line(char x)
  2175  02FB  1205               	bcf	5,4	;volatile
  2176  02FC                     l1185:	
  2177                           
  2178                           ;lcd.c: 63: {
  2179  02FC  0872               	movf	writechar@x,w
  2180  02FD  0088               	movwf	8	;volatile
  2181  02FE                     l1187:	
  2182                           
  2183                           ;lcd.c: 64:     RA5=0;
  2184  02FE  1185               	bcf	5,3	;volatile
  2185  02FF                     l1189:	
  2186                           
  2187                           ;lcd.c: 65:     RA4=0;
  2188  02FF  120A  118A  2355  120A  118A  	fcall	_delay
  2189  0304                     l1191:	
  2190                           
  2191                           ;lcd.c: 66:     PORTD=x;
  2192  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0306  1585               	bsf	5,3	;volatile
  2195  0307                     l52:	
  2196  0307  0008               	return
  2197  0308                     __end_of_writechar:	
  2198                           
  2199                           	psect	text11
  2200  02E6                     __ptext11:	
  2201 ;; *************** function _writecmd_4line *****************
  2202 ;; Defined at:
  2203 ;;		line 71 in file "lcd.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  x               1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  x               1    2[COMMON] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         0       0       0       0       0
  2218 ;;      Locals:         1       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0
  2220 ;;      Totals:         1       0       0       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    1
  2224 ;; This function calls:
  2225 ;;		_delay
  2226 ;; This function is called by:
  2227 ;;		_dispcmd
  2228 ;;		_lcd_init
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _writecmd_4line
  2234  02E6                     _writecmd_4line:	
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _writecmd_4line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2238                           ;writecmd_4line@x stored from wreg
  2239  02E6  00F2               	movwf	writecmd_4line@x
  2240  02E7                     l1193:	
  2241                           
  2242                           ;lcd.c: 71: ;lcd.c: 72: ;lcd.c: 73: 
  2243  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2244  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2245  02E9  1285               	bcf	5,5	;volatile
  2246                           
  2247                           ;lcd.c: 74: void lcd_init()
  2248  02EA  1205               	bcf	5,4	;volatile
  2249  02EB                     l1195:	
  2250                           
  2251                           ;lcd.c: 75: {
  2252  02EB  0872               	movf	writecmd_4line@x,w
  2253  02EC  0088               	movwf	8	;volatile
  2254  02ED                     l1197:	
  2255                           
  2256                           ;lcd.c: 76:     RA2 = 1;
  2257  02ED  1185               	bcf	5,3	;volatile
  2258  02EE                     l1199:	
  2259                           
  2260                           ;lcd.c: 77:     writecmd_4line(0x0e);
  2261  02EE  120A  118A  2355  120A  118A  	fcall	_delay
  2262  02F3                     l1201:	
  2263                           
  2264                           ;lcd.c: 78:     writecmd_4line(0x1);
  2265  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2266  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2267  02F5  1585               	bsf	5,3	;volatile
  2268  02F6                     l55:	
  2269  02F6  0008               	return
  2270  02F7                     __end_of_writecmd_4line:	
  2271                           
  2272                           	psect	text12
  2273  0355                     __ptext12:	
  2274 ;; *************** function _delay *****************
  2275 ;; Defined at:
  2276 ;;		line 51 in file "lcd.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  i               2    0[COMMON] int 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, btemp+1
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         0       0       0       0       0
  2291 ;;      Locals:         2       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0
  2293 ;;      Totals:         2       0       0       0       0
  2294 ;;Total ram usage:        2 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_writechar
  2300 ;;		_writecmd_4line
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _delay
  2306  0355                     _delay:	
  2307  0355                     l1173:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2310                           
  2311                           
  2312                           ;lcd.c: 53:     RA4=0;;lcd.c: 54:     PORTD=x;
  2313  0355  01F0               	clrf	delay@i
  2314  0356  01F1               	clrf	delay@i+1
  2315  0357                     l1179:	
  2316  0357  3001               	movlw	1
  2317  0358  07F0               	addwf	delay@i,f
  2318  0359  1803               	skipnc
  2319  035A  0AF1               	incf	delay@i+1,f
  2320  035B  3000               	movlw	0
  2321  035C  07F1               	addwf	delay@i+1,f
  2322  035D                     l1181:	
  2323  035D  0871               	movf	delay@i+1,w
  2324  035E  3A80               	xorlw	128
  2325  035F  00FF               	movwf	btemp+1
  2326  0360  3093               	movlw	147
  2327  0361  027F               	subwf	btemp+1,w
  2328  0362  1D03               	skipz
  2329  0363  2B66               	goto	u625
  2330  0364  3088               	movlw	136
  2331  0365  0270               	subwf	delay@i,w
  2332  0366                     u625:	
  2333  0366  1C03               	skipc
  2334  0367  2B69               	goto	u621
  2335  0368  2B6A               	goto	u620
  2336  0369                     u621:	
  2337  0369  2B57               	goto	l1179
  2338  036A                     u620:	
  2339  036A                     l49:	
  2340  036A  0008               	return
  2341  036B                     __end_of_delay:	
  2342                           
  2343                           	psect	text13
  2344  0308                     __ptext13:	
  2345 ;; *************** function _delay_temp *****************
  2346 ;; Defined at:
  2347 ;;		line 47 in file "tempmain.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  x               1    wreg     unsigned char 
  2350 ;;  y               1    0[COMMON] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  x               1    2[COMMON] unsigned char 
  2353 ;;  z               1    3[COMMON] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         1       0       0       0       0
  2364 ;;      Locals:         2       0       0       0       0
  2365 ;;      Temps:          1       0       0       0       0
  2366 ;;      Totals:         4       0       0       0       0
  2367 ;;Total ram usage:        4 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_display
  2373 ;;		_reset
  2374 ;;		_write_byte
  2375 ;;		_read_byte
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _delay_temp
  2381  0308                     _delay_temp:	
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  2385                           ;delay_temp@x stored from wreg
  2386  0308  00F2               	movwf	delay_temp@x
  2387  0309                     l110:	
  2388                           ;tempmain.c: 47: void delay_temp(char x,char y);tempmain.c: 48: {;tempmain.c: 49:   char
      +                           z;;tempmain.c: 50:   do{
  2389                           
  2390  0309                     l1265:	
  2391                           
  2392                           ;tempmain.c: 51:       z=y;
  2393  0309  0870               	movf	delay_temp@y,w
  2394  030A  00F1               	movwf	??_delay_temp
  2395  030B  0871               	movf	??_delay_temp,w
  2396  030C  00F3               	movwf	delay_temp@z
  2397  030D                     l1267:	
  2398  030D  3001               	movlw	1
  2399  030E  02F3               	subwf	delay_temp@z,f
  2400  030F  1D03               	btfss	3,2
  2401  0310  2B12               	goto	u751
  2402  0311  2B13               	goto	u750
  2403  0312                     u751:	
  2404  0312  2B0D               	goto	l1267
  2405  0313                     u750:	
  2406  0313                     l1269:	
  2407                           
  2408                           ;tempmain.c: 53:      }while(--x);
  2409  0313  3001               	movlw	1
  2410  0314  02F2               	subwf	delay_temp@x,f
  2411  0315  1D03               	btfss	3,2
  2412  0316  2B18               	goto	u761
  2413  0317  2B19               	goto	u760
  2414  0318                     u761:	
  2415  0318  2B09               	goto	l110
  2416  0319                     u760:	
  2417  0319                     l114:	
  2418  0319  0008               	return
  2419  031A                     __end_of_delay_temp:	
  2420                           
  2421                           	psect	text14
  2422  03E7                     __ptext14:	
  2423 ;; *************** function ___lwmod *****************
  2424 ;; Defined at:
  2425 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  divisor         2    0[COMMON] unsigned int 
  2428 ;;  dividend        2    2[COMMON] unsigned int 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  counter         1    5[COMMON] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    0[COMMON] unsigned int 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         4       0       0       0       0
  2441 ;;      Locals:         1       0       0       0       0
  2442 ;;      Temps:          1       0       0       0       0
  2443 ;;      Totals:         6       0       0       0       0
  2444 ;;Total ram usage:        6 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_get_temp
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function ___lwmod
  2455  03E7                     ___lwmod:	
  2456  03E7                     l1505:	
  2457                           ;incstack = 0
  2458                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2459                           
  2460  03E7  0870               	movf	___lwmod@divisor,w
  2461  03E8  0471               	iorwf	___lwmod@divisor+1,w
  2462  03E9  1903               	btfsc	3,2
  2463  03EA  2BEC               	goto	u1091
  2464  03EB  2BED               	goto	u1090
  2465  03EC                     u1091:	
  2466  03EC  2C1C               	goto	l1523
  2467  03ED                     u1090:	
  2468  03ED                     l1507:	
  2469  03ED  01F5               	clrf	___lwmod@counter
  2470  03EE  0AF5               	incf	___lwmod@counter,f
  2471  03EF  2BFB               	goto	l1513
  2472  03F0                     l1509:	
  2473  03F0  3001               	movlw	1
  2474  03F1                     u1105:	
  2475  03F1  1003               	clrc
  2476  03F2  0DF0               	rlf	___lwmod@divisor,f
  2477  03F3  0DF1               	rlf	___lwmod@divisor+1,f
  2478  03F4  3EFF               	addlw	-1
  2479  03F5  1D03               	skipz
  2480  03F6  2BF1               	goto	u1105
  2481  03F7                     l1511:	
  2482  03F7  3001               	movlw	1
  2483  03F8  00F4               	movwf	??___lwmod
  2484  03F9  0874               	movf	??___lwmod,w
  2485  03FA  07F5               	addwf	___lwmod@counter,f
  2486  03FB                     l1513:	
  2487  03FB  1FF1               	btfss	___lwmod@divisor+1,7
  2488  03FC  2BFE               	goto	u1111
  2489  03FD  2BFF               	goto	u1110
  2490  03FE                     u1111:	
  2491  03FE  2BF0               	goto	l1509
  2492  03FF                     u1110:	
  2493  03FF                     l1515:	
  2494  03FF  0871               	movf	___lwmod@divisor+1,w
  2495  0400  0273               	subwf	___lwmod@dividend+1,w
  2496  0401  1D03               	skipz
  2497  0402  2C05               	goto	u1125
  2498  0403  0870               	movf	___lwmod@divisor,w
  2499  0404  0272               	subwf	___lwmod@dividend,w
  2500  0405                     u1125:	
  2501  0405  1C03               	skipc
  2502  0406  2C08               	goto	u1121
  2503  0407  2C09               	goto	u1120
  2504  0408                     u1121:	
  2505  0408  2C0F               	goto	l1519
  2506  0409                     u1120:	
  2507  0409                     l1517:	
  2508  0409  0870               	movf	___lwmod@divisor,w
  2509  040A  02F2               	subwf	___lwmod@dividend,f
  2510  040B  0871               	movf	___lwmod@divisor+1,w
  2511  040C  1C03               	skipc
  2512  040D  03F3               	decf	___lwmod@dividend+1,f
  2513  040E  02F3               	subwf	___lwmod@dividend+1,f
  2514  040F                     l1519:	
  2515  040F  3001               	movlw	1
  2516  0410                     u1135:	
  2517  0410  1003               	clrc
  2518  0411  0CF1               	rrf	___lwmod@divisor+1,f
  2519  0412  0CF0               	rrf	___lwmod@divisor,f
  2520  0413  3EFF               	addlw	-1
  2521  0414  1D03               	skipz
  2522  0415  2C10               	goto	u1135
  2523  0416                     l1521:	
  2524  0416  3001               	movlw	1
  2525  0417  02F5               	subwf	___lwmod@counter,f
  2526  0418  1D03               	btfss	3,2
  2527  0419  2C1B               	goto	u1141
  2528  041A  2C1C               	goto	u1140
  2529  041B                     u1141:	
  2530  041B  2BFF               	goto	l1515
  2531  041C                     u1140:	
  2532  041C                     l1523:	
  2533  041C  0873               	movf	___lwmod@dividend+1,w
  2534  041D  00F1               	movwf	?___lwmod+1
  2535  041E  0872               	movf	___lwmod@dividend,w
  2536  041F  00F0               	movwf	?___lwmod
  2537  0420                     l531:	
  2538  0420  0008               	return
  2539  0421                     __end_of___lwmod:	
  2540                           
  2541                           	psect	text15
  2542  0496                     __ptext15:	
  2543 ;; *************** function ___lwdiv *****************
  2544 ;; Defined at:
  2545 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  divisor         2    6[COMMON] unsigned int 
  2548 ;;  dividend        2    8[COMMON] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  quotient        2   11[COMMON] unsigned int 
  2551 ;;  counter         1   13[COMMON] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    6[COMMON] unsigned int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         4       0       0       0       0
  2562 ;;      Locals:         3       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0
  2564 ;;      Totals:         8       0       0       0       0
  2565 ;;Total ram usage:        8 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_get_temp
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function ___lwdiv
  2576  0496                     ___lwdiv:	
  2577  0496                     l1479:	
  2578                           ;incstack = 0
  2579                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2580                           
  2581  0496  01FB               	clrf	___lwdiv@quotient
  2582  0497  01FC               	clrf	___lwdiv@quotient+1
  2583  0498                     l1481:	
  2584  0498  0876               	movf	___lwdiv@divisor,w
  2585  0499  0477               	iorwf	___lwdiv@divisor+1,w
  2586  049A  1903               	btfsc	3,2
  2587  049B  2C9D               	goto	u1021
  2588  049C  2C9E               	goto	u1020
  2589  049D                     u1021:	
  2590  049D  2CD5               	goto	l1501
  2591  049E                     u1020:	
  2592  049E                     l1483:	
  2593  049E  01FD               	clrf	___lwdiv@counter
  2594  049F  0AFD               	incf	___lwdiv@counter,f
  2595  04A0  2CAC               	goto	l1489
  2596  04A1                     l1485:	
  2597  04A1  3001               	movlw	1
  2598  04A2                     u1035:	
  2599  04A2  1003               	clrc
  2600  04A3  0DF6               	rlf	___lwdiv@divisor,f
  2601  04A4  0DF7               	rlf	___lwdiv@divisor+1,f
  2602  04A5  3EFF               	addlw	-1
  2603  04A6  1D03               	skipz
  2604  04A7  2CA2               	goto	u1035
  2605  04A8                     l1487:	
  2606  04A8  3001               	movlw	1
  2607  04A9  00FA               	movwf	??___lwdiv
  2608  04AA  087A               	movf	??___lwdiv,w
  2609  04AB  07FD               	addwf	___lwdiv@counter,f
  2610  04AC                     l1489:	
  2611  04AC  1FF7               	btfss	___lwdiv@divisor+1,7
  2612  04AD  2CAF               	goto	u1041
  2613  04AE  2CB0               	goto	u1040
  2614  04AF                     u1041:	
  2615  04AF  2CA1               	goto	l1485
  2616  04B0                     u1040:	
  2617  04B0                     l1491:	
  2618  04B0  3001               	movlw	1
  2619  04B1                     u1055:	
  2620  04B1  1003               	clrc
  2621  04B2  0DFB               	rlf	___lwdiv@quotient,f
  2622  04B3  0DFC               	rlf	___lwdiv@quotient+1,f
  2623  04B4  3EFF               	addlw	-1
  2624  04B5  1D03               	skipz
  2625  04B6  2CB1               	goto	u1055
  2626  04B7  0877               	movf	___lwdiv@divisor+1,w
  2627  04B8  0279               	subwf	___lwdiv@dividend+1,w
  2628  04B9  1D03               	skipz
  2629  04BA  2CBD               	goto	u1065
  2630  04BB  0876               	movf	___lwdiv@divisor,w
  2631  04BC  0278               	subwf	___lwdiv@dividend,w
  2632  04BD                     u1065:	
  2633  04BD  1C03               	skipc
  2634  04BE  2CC0               	goto	u1061
  2635  04BF  2CC1               	goto	u1060
  2636  04C0                     u1061:	
  2637  04C0  2CC8               	goto	l1497
  2638  04C1                     u1060:	
  2639  04C1                     l1493:	
  2640  04C1  0876               	movf	___lwdiv@divisor,w
  2641  04C2  02F8               	subwf	___lwdiv@dividend,f
  2642  04C3  0877               	movf	___lwdiv@divisor+1,w
  2643  04C4  1C03               	skipc
  2644  04C5  03F9               	decf	___lwdiv@dividend+1,f
  2645  04C6  02F9               	subwf	___lwdiv@dividend+1,f
  2646  04C7                     l1495:	
  2647  04C7  147B               	bsf	___lwdiv@quotient,0
  2648  04C8                     l1497:	
  2649  04C8  3001               	movlw	1
  2650  04C9                     u1075:	
  2651  04C9  1003               	clrc
  2652  04CA  0CF7               	rrf	___lwdiv@divisor+1,f
  2653  04CB  0CF6               	rrf	___lwdiv@divisor,f
  2654  04CC  3EFF               	addlw	-1
  2655  04CD  1D03               	skipz
  2656  04CE  2CC9               	goto	u1075
  2657  04CF                     l1499:	
  2658  04CF  3001               	movlw	1
  2659  04D0  02FD               	subwf	___lwdiv@counter,f
  2660  04D1  1D03               	btfss	3,2
  2661  04D2  2CD4               	goto	u1081
  2662  04D3  2CD5               	goto	u1080
  2663  04D4                     u1081:	
  2664  04D4  2CB0               	goto	l1491
  2665  04D5                     u1080:	
  2666  04D5                     l1501:	
  2667  04D5  087C               	movf	___lwdiv@quotient+1,w
  2668  04D6  00F7               	movwf	?___lwdiv+1
  2669  04D7  087B               	movf	___lwdiv@quotient,w
  2670  04D8  00F6               	movwf	?___lwdiv
  2671  04D9                     l521:	
  2672  04D9  0008               	return
  2673  04DA                     __end_of___lwdiv:	
  2674                           
  2675                           	psect	text16
  2676  04DA                     __ptext16:	
  2677 ;; *************** function ___awmod *****************
  2678 ;; Defined at:
  2679 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  divisor         2    0[COMMON] int 
  2682 ;;  dividend        2    2[COMMON] int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  sign            1    6[COMMON] unsigned char 
  2685 ;;  counter         1    5[COMMON] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    0[COMMON] int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         4       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0
  2697 ;;      Temps:          1       0       0       0       0
  2698 ;;      Totals:         7       0       0       0       0
  2699 ;;Total ram usage:        7 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_get_temp
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function ___awmod
  2710  04DA                     ___awmod:	
  2711  04DA                     l1441:	
  2712                           ;incstack = 0
  2713                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2714                           
  2715  04DA  01F6               	clrf	___awmod@sign
  2716  04DB                     l1443:	
  2717  04DB  1FF3               	btfss	___awmod@dividend+1,7
  2718  04DC  2CDE               	goto	u931
  2719  04DD  2CDF               	goto	u930
  2720  04DE                     u931:	
  2721  04DE  2CE6               	goto	l1449
  2722  04DF                     u930:	
  2723  04DF                     l1445:	
  2724  04DF  09F2               	comf	___awmod@dividend,f
  2725  04E0  09F3               	comf	___awmod@dividend+1,f
  2726  04E1  0AF2               	incf	___awmod@dividend,f
  2727  04E2  1903               	skipnz
  2728  04E3  0AF3               	incf	___awmod@dividend+1,f
  2729  04E4                     l1447:	
  2730  04E4  01F6               	clrf	___awmod@sign
  2731  04E5  0AF6               	incf	___awmod@sign,f
  2732  04E6                     l1449:	
  2733  04E6  1FF1               	btfss	___awmod@divisor+1,7
  2734  04E7  2CE9               	goto	u941
  2735  04E8  2CEA               	goto	u940
  2736  04E9                     u941:	
  2737  04E9  2CEF               	goto	l1453
  2738  04EA                     u940:	
  2739  04EA                     l1451:	
  2740  04EA  09F0               	comf	___awmod@divisor,f
  2741  04EB  09F1               	comf	___awmod@divisor+1,f
  2742  04EC  0AF0               	incf	___awmod@divisor,f
  2743  04ED  1903               	skipnz
  2744  04EE  0AF1               	incf	___awmod@divisor+1,f
  2745  04EF                     l1453:	
  2746  04EF  0870               	movf	___awmod@divisor,w
  2747  04F0  0471               	iorwf	___awmod@divisor+1,w
  2748  04F1  1903               	btfsc	3,2
  2749  04F2  2CF4               	goto	u951
  2750  04F3  2CF5               	goto	u950
  2751  04F4                     u951:	
  2752  04F4  2D24               	goto	l1471
  2753  04F5                     u950:	
  2754  04F5                     l1455:	
  2755  04F5  01F5               	clrf	___awmod@counter
  2756  04F6  0AF5               	incf	___awmod@counter,f
  2757  04F7  2D03               	goto	l1461
  2758  04F8                     l1457:	
  2759  04F8  3001               	movlw	1
  2760  04F9                     u965:	
  2761  04F9  1003               	clrc
  2762  04FA  0DF0               	rlf	___awmod@divisor,f
  2763  04FB  0DF1               	rlf	___awmod@divisor+1,f
  2764  04FC  3EFF               	addlw	-1
  2765  04FD  1D03               	skipz
  2766  04FE  2CF9               	goto	u965
  2767  04FF                     l1459:	
  2768  04FF  3001               	movlw	1
  2769  0500  00F4               	movwf	??___awmod
  2770  0501  0874               	movf	??___awmod,w
  2771  0502  07F5               	addwf	___awmod@counter,f
  2772  0503                     l1461:	
  2773  0503  1FF1               	btfss	___awmod@divisor+1,7
  2774  0504  2D06               	goto	u971
  2775  0505  2D07               	goto	u970
  2776  0506                     u971:	
  2777  0506  2CF8               	goto	l1457
  2778  0507                     u970:	
  2779  0507                     l1463:	
  2780  0507  0871               	movf	___awmod@divisor+1,w
  2781  0508  0273               	subwf	___awmod@dividend+1,w
  2782  0509  1D03               	skipz
  2783  050A  2D0D               	goto	u985
  2784  050B  0870               	movf	___awmod@divisor,w
  2785  050C  0272               	subwf	___awmod@dividend,w
  2786  050D                     u985:	
  2787  050D  1C03               	skipc
  2788  050E  2D10               	goto	u981
  2789  050F  2D11               	goto	u980
  2790  0510                     u981:	
  2791  0510  2D17               	goto	l1467
  2792  0511                     u980:	
  2793  0511                     l1465:	
  2794  0511  0870               	movf	___awmod@divisor,w
  2795  0512  02F2               	subwf	___awmod@dividend,f
  2796  0513  0871               	movf	___awmod@divisor+1,w
  2797  0514  1C03               	skipc
  2798  0515  03F3               	decf	___awmod@dividend+1,f
  2799  0516  02F3               	subwf	___awmod@dividend+1,f
  2800  0517                     l1467:	
  2801  0517  3001               	movlw	1
  2802  0518                     u995:	
  2803  0518  1003               	clrc
  2804  0519  0CF1               	rrf	___awmod@divisor+1,f
  2805  051A  0CF0               	rrf	___awmod@divisor,f
  2806  051B  3EFF               	addlw	-1
  2807  051C  1D03               	skipz
  2808  051D  2D18               	goto	u995
  2809  051E                     l1469:	
  2810  051E  3001               	movlw	1
  2811  051F  02F5               	subwf	___awmod@counter,f
  2812  0520  1D03               	btfss	3,2
  2813  0521  2D23               	goto	u1001
  2814  0522  2D24               	goto	u1000
  2815  0523                     u1001:	
  2816  0523  2D07               	goto	l1463
  2817  0524                     u1000:	
  2818  0524                     l1471:	
  2819  0524  0876               	movf	___awmod@sign,w
  2820  0525  1903               	btfsc	3,2
  2821  0526  2D28               	goto	u1011
  2822  0527  2D29               	goto	u1010
  2823  0528                     u1011:	
  2824  0528  2D2E               	goto	l1475
  2825  0529                     u1010:	
  2826  0529                     l1473:	
  2827  0529  09F2               	comf	___awmod@dividend,f
  2828  052A  09F3               	comf	___awmod@dividend+1,f
  2829  052B  0AF2               	incf	___awmod@dividend,f
  2830  052C  1903               	skipnz
  2831  052D  0AF3               	incf	___awmod@dividend+1,f
  2832  052E                     l1475:	
  2833  052E  0873               	movf	___awmod@dividend+1,w
  2834  052F  00F1               	movwf	?___awmod+1
  2835  0530  0872               	movf	___awmod@dividend,w
  2836  0531  00F0               	movwf	?___awmod
  2837  0532                     l415:	
  2838  0532  0008               	return
  2839  0533                     __end_of___awmod:	
  2840                           
  2841                           	psect	text17
  2842  0599                     __ptext17:	
  2843 ;; *************** function ___awdiv *****************
  2844 ;; Defined at:
  2845 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  divisor         2    0[COMMON] int 
  2848 ;;  dividend        2    2[COMMON] int 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  quotient        2    7[COMMON] int 
  2851 ;;  sign            1    6[COMMON] unsigned char 
  2852 ;;  counter         1    5[COMMON] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2    0[COMMON] int 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         4       0       0       0       0
  2863 ;;      Locals:         4       0       0       0       0
  2864 ;;      Temps:          1       0       0       0       0
  2865 ;;      Totals:         9       0       0       0       0
  2866 ;;Total ram usage:        9 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_get_temp
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function ___awdiv
  2877  0599                     ___awdiv:	
  2878  0599                     l1397:	
  2879                           ;incstack = 0
  2880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2881                           
  2882  0599  01F6               	clrf	___awdiv@sign
  2883  059A                     l1399:	
  2884  059A  1FF1               	btfss	___awdiv@divisor+1,7
  2885  059B  2D9D               	goto	u831
  2886  059C  2D9E               	goto	u830
  2887  059D                     u831:	
  2888  059D  2DA5               	goto	l1405
  2889  059E                     u830:	
  2890  059E                     l1401:	
  2891  059E  09F0               	comf	___awdiv@divisor,f
  2892  059F  09F1               	comf	___awdiv@divisor+1,f
  2893  05A0  0AF0               	incf	___awdiv@divisor,f
  2894  05A1  1903               	skipnz
  2895  05A2  0AF1               	incf	___awdiv@divisor+1,f
  2896  05A3                     l1403:	
  2897  05A3  01F6               	clrf	___awdiv@sign
  2898  05A4  0AF6               	incf	___awdiv@sign,f
  2899  05A5                     l1405:	
  2900  05A5  1FF3               	btfss	___awdiv@dividend+1,7
  2901  05A6  2DA8               	goto	u841
  2902  05A7  2DA9               	goto	u840
  2903  05A8                     u841:	
  2904  05A8  2DB2               	goto	l1411
  2905  05A9                     u840:	
  2906  05A9                     l1407:	
  2907  05A9  09F2               	comf	___awdiv@dividend,f
  2908  05AA  09F3               	comf	___awdiv@dividend+1,f
  2909  05AB  0AF2               	incf	___awdiv@dividend,f
  2910  05AC  1903               	skipnz
  2911  05AD  0AF3               	incf	___awdiv@dividend+1,f
  2912  05AE                     l1409:	
  2913  05AE  3001               	movlw	1
  2914  05AF  00F4               	movwf	??___awdiv
  2915  05B0  0874               	movf	??___awdiv,w
  2916  05B1  06F6               	xorwf	___awdiv@sign,f
  2917  05B2                     l1411:	
  2918  05B2  01F7               	clrf	___awdiv@quotient
  2919  05B3  01F8               	clrf	___awdiv@quotient+1
  2920  05B4                     l1413:	
  2921  05B4  0870               	movf	___awdiv@divisor,w
  2922  05B5  0471               	iorwf	___awdiv@divisor+1,w
  2923  05B6  1903               	btfsc	3,2
  2924  05B7  2DB9               	goto	u851
  2925  05B8  2DBA               	goto	u850
  2926  05B9                     u851:	
  2927  05B9  2DF1               	goto	l1433
  2928  05BA                     u850:	
  2929  05BA                     l1415:	
  2930  05BA  01F5               	clrf	___awdiv@counter
  2931  05BB  0AF5               	incf	___awdiv@counter,f
  2932  05BC  2DC8               	goto	l1421
  2933  05BD                     l1417:	
  2934  05BD  3001               	movlw	1
  2935  05BE                     u865:	
  2936  05BE  1003               	clrc
  2937  05BF  0DF0               	rlf	___awdiv@divisor,f
  2938  05C0  0DF1               	rlf	___awdiv@divisor+1,f
  2939  05C1  3EFF               	addlw	-1
  2940  05C2  1D03               	skipz
  2941  05C3  2DBE               	goto	u865
  2942  05C4                     l1419:	
  2943  05C4  3001               	movlw	1
  2944  05C5  00F4               	movwf	??___awdiv
  2945  05C6  0874               	movf	??___awdiv,w
  2946  05C7  07F5               	addwf	___awdiv@counter,f
  2947  05C8                     l1421:	
  2948  05C8  1FF1               	btfss	___awdiv@divisor+1,7
  2949  05C9  2DCB               	goto	u871
  2950  05CA  2DCC               	goto	u870
  2951  05CB                     u871:	
  2952  05CB  2DBD               	goto	l1417
  2953  05CC                     u870:	
  2954  05CC                     l1423:	
  2955  05CC  3001               	movlw	1
  2956  05CD                     u885:	
  2957  05CD  1003               	clrc
  2958  05CE  0DF7               	rlf	___awdiv@quotient,f
  2959  05CF  0DF8               	rlf	___awdiv@quotient+1,f
  2960  05D0  3EFF               	addlw	-1
  2961  05D1  1D03               	skipz
  2962  05D2  2DCD               	goto	u885
  2963  05D3  0871               	movf	___awdiv@divisor+1,w
  2964  05D4  0273               	subwf	___awdiv@dividend+1,w
  2965  05D5  1D03               	skipz
  2966  05D6  2DD9               	goto	u895
  2967  05D7  0870               	movf	___awdiv@divisor,w
  2968  05D8  0272               	subwf	___awdiv@dividend,w
  2969  05D9                     u895:	
  2970  05D9  1C03               	skipc
  2971  05DA  2DDC               	goto	u891
  2972  05DB  2DDD               	goto	u890
  2973  05DC                     u891:	
  2974  05DC  2DE4               	goto	l1429
  2975  05DD                     u890:	
  2976  05DD                     l1425:	
  2977  05DD  0870               	movf	___awdiv@divisor,w
  2978  05DE  02F2               	subwf	___awdiv@dividend,f
  2979  05DF  0871               	movf	___awdiv@divisor+1,w
  2980  05E0  1C03               	skipc
  2981  05E1  03F3               	decf	___awdiv@dividend+1,f
  2982  05E2  02F3               	subwf	___awdiv@dividend+1,f
  2983  05E3                     l1427:	
  2984  05E3  1477               	bsf	___awdiv@quotient,0
  2985  05E4                     l1429:	
  2986  05E4  3001               	movlw	1
  2987  05E5                     u905:	
  2988  05E5  1003               	clrc
  2989  05E6  0CF1               	rrf	___awdiv@divisor+1,f
  2990  05E7  0CF0               	rrf	___awdiv@divisor,f
  2991  05E8  3EFF               	addlw	-1
  2992  05E9  1D03               	skipz
  2993  05EA  2DE5               	goto	u905
  2994  05EB                     l1431:	
  2995  05EB  3001               	movlw	1
  2996  05EC  02F5               	subwf	___awdiv@counter,f
  2997  05ED  1D03               	btfss	3,2
  2998  05EE  2DF0               	goto	u911
  2999  05EF  2DF1               	goto	u910
  3000  05F0                     u911:	
  3001  05F0  2DCC               	goto	l1423
  3002  05F1                     u910:	
  3003  05F1                     l1433:	
  3004  05F1  0876               	movf	___awdiv@sign,w
  3005  05F2  1903               	btfsc	3,2
  3006  05F3  2DF5               	goto	u921
  3007  05F4  2DF6               	goto	u920
  3008  05F5                     u921:	
  3009  05F5  2DFB               	goto	l1437
  3010  05F6                     u920:	
  3011  05F6                     l1435:	
  3012  05F6  09F7               	comf	___awdiv@quotient,f
  3013  05F7  09F8               	comf	___awdiv@quotient+1,f
  3014  05F8  0AF7               	incf	___awdiv@quotient,f
  3015  05F9  1903               	skipnz
  3016  05FA  0AF8               	incf	___awdiv@quotient+1,f
  3017  05FB                     l1437:	
  3018  05FB  0878               	movf	___awdiv@quotient+1,w
  3019  05FC  00F1               	movwf	?___awdiv+1
  3020  05FD  0877               	movf	___awdiv@quotient,w
  3021  05FE  00F0               	movwf	?___awdiv
  3022  05FF                     l402:	
  3023  05FF  0008               	return
  3024  0600                     __end_of___awdiv:	
  3025  007E                     btemp	set	126	;btemp
  3026  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      67
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    yeet@array	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), dispcmd@error(BANK0[20]), 

    yeet@p	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), dispcmd@error(BANK0[20]), 

    dispcmd@linetxt	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_display
    _get_temp->___lwdiv
    _get_temp->_display
    _write_byte->_delay_temp
    _reset->_delay_temp
    _read_byte->_delay_temp
    _lcd_init->_writecmd_4line
    _dispcmd->_yeet
    _yeet->_writechar
    _writechar->_delay
    _writecmd_4line->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_get_temp
    _display->_dispcmd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8572
                            _display
                           _get_temp
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    6493
                                             28 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                            _display
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     789
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset                                                2     2      0     700
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     746
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _display                                              3     3      0    2079
                                             11 COMMON     3     3      0
                         _delay_temp
                            _dispcmd
                         _init_4line
                           _lcd_init
                          _writechar
 ---------------------------------------------------------------------------------
 (3) _lcd_init                                             0     0      0      68
                     _writecmd_4line
 ---------------------------------------------------------------------------------
 (3) _init_4line                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dispcmd                                             28    24      4    1245
                                              0 BANK0     28    24      4
                     _writecmd_4line
                               _yeet
 ---------------------------------------------------------------------------------
 (4) _yeet                                                 8     6      2     540
                                              3 COMMON     8     6      2
                          _writechar
 ---------------------------------------------------------------------------------
 (3) _writechar                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _writecmd_4line                                       1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     675
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _delay_temp
     _dispcmd
       _writecmd_4line
         _delay
       _yeet
         _writechar
           _delay
     _init_4line
     _lcd_init
       _writecmd_4line
         _delay
     _writechar
       _delay
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _display
       _delay_temp
       _dispcmd
         _writecmd_4line
           _delay
         _yeet
           _writechar
             _delay
       _init_4line
       _lcd_init
         _writecmd_4line
           _delay
       _writechar
         _delay
     _read_byte
       _delay_temp
     _reset
       _delay_temp
     _write_byte
       _delay_temp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      65      12        0.0%
ABS                  0      0      65       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 15 17:23:19 2019

                      pc 0002                       l30 068A                       l52 0307  
                     l44 03B1                       l61 02D7                       l38 068A  
                     l55 02F6                       l49 036A                       l58 0380  
                     _TX 005F                       _TZ 0060             ___awdiv@sign 0076  
                     _ge 005D                       _wd 0056                       fsr 0004  
                    l110 0309                      l114 0319                      l131 045A  
                    l127 0424                      l160 02D8                      l145 03E6  
                    l137 0495                      l402 05FF                      l155 07D3  
                    l415 0532                      l521 04D9                      l531 0420  
            dispcmd@F865 00A0                      _RA2 002A                      _RB0 0030  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
                    u620 036A                      u700 0656                      u621 0369  
                    u701 0655                      u630 03B1                      u710 065D  
                    u631 03B0                      u711 065C                      u720 0664  
                    u640 0608                      u800 0495                      u625 0366  
                    u721 0663                      u641 0607                      u801 0494  
                    u730 066B                      u650 060E                      u810 03D3  
                    u731 066A                      u651 060D                      u811 03D2  
                    u740 0673                      u660 0627                      u820 03E5  
                    u661 0626                      u821 03E4                      u910 05F1  
                    u830 059E                      u750 0313                      u670 0635  
                    u911 05F0                      u831 059D                      u751 0312  
                    u671 0634                      u920 05F6                      u840 05A9  
                    u760 0319                      u680 0643                      u921 05F5  
                    u905 05E5                      u841 05A8                      u761 0318  
                    u681 0642                      u850 05BA                      u930 04DF  
                    u690 0650                      u770 0447                      u851 05B9  
                    u931 04DE                      u691 064F                      u771 0446  
                    u940 04EA                      u780 045A                      u941 04E9  
                    u781 0459                      u870 05CC                      u950 04F5  
                    u790 0475                      u871 05CB                      u951 04F4  
                    u791 0474                      u865 05BE                      u890 05DD  
                    u970 0507                      u891 05DC                      u971 0506  
                    u980 0511                      u885 05CD                      u981 0510  
                    u965 04F9                      _THV 0061                      u895 05D9  
                    u985 050D                      u995 0518                      _TLV 0062  
                    _shi 005E                      _num 0042                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             __CFG_FOSC$HS 0000  
            dispcmd@line 0020             __CFG_LVP$OFF 0000                     l1201 02F3  
                   l1211 03A1                     l1203 0381                     l1213 03A7  
                   l1205 0383                     l1221 0614                     l1301 044B  
                   l1207 0388                     l1231 0635                     l1223 0620  
                   l1215 0600                     l1303 0455                     l1311 0460  
                   l1401 059E                     l1209 039B                     l1241 064A  
                   l1225 0627                     l1217 0608                     l1321 046D  
                   l1313 0465                     l1305 045C                     l1411 05B2  
                   l1403 05A3                     l1251 066B                     l1243 0650  
                   l1235 063C                     l1219 060E                     l1331 0478  
                   l1323 046E                     l1315 0468                     l1421 05C8  
                   l1413 05B4                     l1405 05A5                     l1501 04D5  
                   l1181 035D                     l1173 0355                     l1253 0680  
                   l1245 0656                     l1237 0643                     l1229 062E  
                   l1261 02D5                     l1341 048E                     l1333 0482  
                   l1325 046F                     l1317 046B                     l1431 05EB  
                   l1423 05CC                     l1415 05BA                     l1407 05A9  
                   l1511 03F7                     l1191 0304                     l1183 02F8  
                   l1247 065D                     l1263 02D6                     l1255 036B  
                   l1271 0533                     l1343 0490                     l1335 0485  
                   l1327 0470                     l1319 046C                     l1425 05DD  
                   l1417 05BD                     l1433 05F1                     l1409 05AE  
                   l1441 04DA                     l1521 0416                     l1513 03FB  
                   l1505 03E7                     l1265 0309                     l1193 02E7  
                   l1185 02FC                     l1249 0664                     l1257 036E  
                   l1281 0557                     l1273 0538                     l1361 03C0  
                   l1353 03B7                     l1345 03B2                     l1337 0486  
                   l1329 0475                     l1435 05F6                     l1427 05E3  
                   l1419 05C4                     l1451 04EA                     l1443 04DB  
                   l1515 03FF                     l1507 03ED                     l1523 041C  
                   l1267 030D                     l1179 0357                     l1195 02EB  
                   l1187 02FE                     l1259 02D1                     l1283 056D  
                   l1275 053D                     l1371 03C5                     l1363 03C1  
                   l1355 03B9                     l1347 03B3                     l1291 042A  
                   l1339 0487                     l1531 069F                     l1437 05FB  
                   l1429 05E4                     l1461 0503                     l1453 04EF  
                   l1445 04DF                     l1517 0409                     l1509 03F0  
                   l1269 0313                     l1197 02ED                     l1189 02FF  
                   l1285 0577                     l1277 0547                     l1381 03CC  
                   l1373 03C8                     l1365 03C2                     l1357 03BC  
                   l1293 0434                     l1541 06B2                     l1463 0507  
                   l1455 04F5                     l1471 0524                     l1447 04E4  
                   l1519 040F                     l1199 02EE                     l1287 058D  
                   l1279 054D                     l1391 03E0                     l1383 03CD  
                   l1375 03C9                     l1367 03C3                     l1359 03BF  
                   l1295 0441                     l1543 06BF                     l1527 068B  
                   l1473 0529                     l1465 0511                     l1457 04F8  
                   l1449 04E6                     l1481 0498                     l1393 03E5  
                   l1385 03D3                     l1377 03CA                     l1369 03C4  
                   l1297 0447                     l1289 0421                     l1561 0748  
                   l1553 070E                     l1545 06E4                     l1537 06A5  
                   l1529 068E                     l1475 052E                     l1467 0517  
                   l1459 04FF                     l1491 04B0                     l1483 049E  
                   l1387 03D4                     l1379 03CB                     l1299 044A  
                   l1571 0764                     l1563 074C                     l1555 073A  
                   l1547 06E7                     l1539 06AA                     l1397 0599  
                   l1469 051E                     l1493 04C1                     l1485 04A1  
                   l1389 03DE                     l1581 07D2                     l1573 076C  
                   l1565 0754                     l1557 073C                     l1549 0701  
                   l1399 059A                     l1495 04C7                     l1487 04A8  
                   l1479 0496                     l1575 077F                     l1567 0758  
                   l1559 0740                     l1583 02D8                     l1497 04C8  
                   l1489 04AC                     l1577 079F                     l1569 0760  
                   l1499 04CF                     l1579 07BF                     u1000 0524  
                   u1001 0523                     u1010 0529                     u1011 0528  
                   u1020 049E                     u1021 049D                     u1110 03FF  
                   u1111 03FE                     u1040 04B0                     u1120 0409  
                   u1200 074C                     u1041 04AF                     u1121 0408  
                   u1105 03F1                     u1201 074B                     u1210 0758  
                   u1035 04A2                     u1211 0757                     u1060 04C1  
                   u1140 041C                     u1220 0764                     u1061 04C0  
                   u1141 041B                     u1125 0405                     u1221 0763  
                   u1150 06BF                     u1055 04B1                     u1135 0410  
                   u1151 06BE                     u1080 04D5                     u1081 04D4  
                   u1065 04BD                     u1090 03ED                     u1075 04C9  
                   u1091 03EC                     u1155 06BB                     u1165 06EC  
                   u1190 0740                     u1191 073F                     u1175 06F7  
                   u1185 0704                     _main 02D8                     _yeet 0381  
                   btemp 007E            write_byte@val 0077                     start 0000  
           dispcmd@error 0028                    ?_main 0070          __end_of___awdiv 0600  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0533                    ?_yeet 0073  
        ___awdiv@divisor 0070          __end_of___lwdiv 04DA          __end_of___lwmod 0421  
        ___awdiv@counter 0075                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088            __CFG_PWRTE$ON 0000          __end_of_dispcmd 068B  
        __end_of_display 0599                    _delay 0355                    _table 004C  
                  _reset 0421           write_byte@temp 0076           __CFG_BOREN$OFF 0000  
                  pclath 000A                    yeet@i 0079                    yeet@p 0077  
                  status 0003                    wtemp0 007E          __initialization 07D4  
           __end_of_main 02E6             __end_of_yeet 03B2                   ??_main 007E  
                 ??_yeet 0075         ??_writecmd_4line 0072                   ?_delay 0070  
                 _ADCON1 009F                   ?_reset 0070         ___awdiv@dividend 0072  
                 _TRISB0 0430         __end_of_lcd_init 0381         __end_of_get_temp 07D4  
                 _baifen 005B                ??___awdiv 0074                ??___awmod 0074  
              ??___lwdiv 007A                ??___lwmod 0074                   delay@i 0070  
       ___awdiv@quotient 0077          ___awmod@divisor 0070                   _shifen 005C  
                 _wanfen 0059          ___awmod@counter 0075          writecmd_4line@x 0072  
              ??_dispcmd 0024                ??_display 007B  __end_of__initialization 07FC  
         dispcmd@linetxt 0022           __pcstackCOMMON 0070             __pidataBANK0 0341  
           __pidataBANK1 032D            __end_of_delay 036B            __end_of_reset 045B  
                ??_delay 0070                  ??_reset 0074               __pbssBANK0 0056  
     __size_of_read_byte 0035               _delay_temp 0308               __pmaintext 02D8  
              ?_lcd_init 0070                ?_get_temp 0070       __size_of_writechar 0011  
             _init_4line 02D1                  ___awdiv 0599                  ___awmod 04DA  
                ___lwdiv 0496                  ___lwmod 03E7           display@tempstr 007D  
                __ptext1 068B                  __ptext2 045B                  __ptext3 0421  
                __ptext4 03B2                  __ptext5 0533                  __ptext6 036B  
                __ptext7 02D1                  __ptext8 0600                  __ptext9 0381  
                _dispcmd 0600                  _display 0533         ___awmod@dividend 0072  
      __end_of_read_byte 03E7                  _qianfen 005A               ??_lcd_init 0073  
             ??_get_temp 003C     end_of_initialization 07FC              ?_delay_temp 0070  
      __end_of_writechar 0308              ?_init_4line 0070               _write_byte 045B  
    start_initialization 07D4      __size_of_delay_temp 0012  __size_of_writecmd_4line 0011  
          reset@presence 0075               init_fetch0 031A              __pdataBANK0 0042  
            __pdataBANK1 00A0               read_byte@i 0076               read_byte@j 0058  
              ___latbits 0002            __pcstackBANK0 0020      __size_of_init_4line 0007  
      __size_of_lcd_init 0016        __size_of_get_temp 0149         ___lwdiv@dividend 0078  
               ?___awdiv 0070                 ?___awmod 0070                 ?___lwdiv 0076  
               ?___lwmod 0070              ?_write_byte 0070                 ?_dispcmd 0020  
               ?_display 0070         ___lwdiv@quotient 007B           __size_of_delay 0016  
              _read_byte 03B2           __size_of_reset 003A             ??_delay_temp 0071  
              get_temp@i 0040              write_byte@i 0078       __end_of_delay_temp 031A  
              _writechar 02F7               ?_read_byte 0070           _writecmd_4line 02E6  
    __size_of_write_byte 003B             ??_init_4line 0070         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003A  
       __size_of_dispcmd 008B         __size_of_display 0066          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 02F7                 __ptext11 02E6  
               __ptext12 0355                 __ptext13 0308                 __ptext14 03E7  
               __ptext15 0496                 __ptext16 04DA                 __ptext17 0599  
     __end_of_init_4line 02D8               ?_writechar 0070                 _lcd_init 036B  
               _get_temp 068B   __end_of_writecmd_4line 02F7            __size_of_main 000E  
          __size_of_yeet 0031                yeet@array 0073               writechar@x 0072  
            delay_temp@x 0072              delay_temp@y 0070              delay_temp@z 0073  
         read_byte@value 0075                 init_ram0 031E              ??_read_byte 0074  
        ?_writecmd_4line 0070         ___lwmod@dividend 0072             ??_write_byte 0074  
        ___lwmod@divisor 0070          ___lwmod@counter 0075              ??_writechar 0072  
     __end_of_write_byte 0496  
